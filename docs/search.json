[
  {
    "objectID": "posts/ch05-resampling-methods/index.html",
    "href": "posts/ch05-resampling-methods/index.html",
    "title": "Chapter 5: Resampling Methods",
    "section": "",
    "text": "Figure 1: Cross Validation\n\n\n\n\n\n\n\n\nFigure 2: K-fold Cross Validation\n\n\n\n\n\n\n\n\nFigure 3: Cross Validation the wrong and right way\n\n\n\n\n\n\n\n\nFigure 4: K-fold Cross Validation\n\n\n\n\n\n\n\n\nFigure 5: More on the Bootstrap\n\n\n\n\n\n\n\n\nFigure 6: Lab: Cross Validation\n\n\n\n\n\n\n\n\nFigure 7: Lab: Bootstrap"
  },
  {
    "objectID": "posts/ch05-resampling-methods/index.html#summary-of-resampling-methods",
    "href": "posts/ch05-resampling-methods/index.html#summary-of-resampling-methods",
    "title": "Chapter 5: Resampling Methods",
    "section": "Summary of Resampling Methods",
    "text": "Summary of Resampling Methods\nIn this chapter we focus on resampling methods, specifically focusing on cross-validation and the bootstrap.\nCentral Theme: Resampling methods offer robust techniques to estimate the performance of statistical learning methods and quantify uncertainty associated with estimations. This is achieved by repeatedly drawing samples from the training data and refitting models on these samples.\nKey Concepts and Methods\n\nValidation Set Approach: This approach involves splitting the dataset into a training set and a validation set. The model is trained on the training set, and its performance (e.g., using MSE for regression problems) is evaluated on the validation set.\n\n\nDrawbacks:\n\nHigh variability in test error estimates depending on the random split.\nReduced sample size for training as only the training set is used.\nExample: Using the Auto dataset, the sources demonstrate that a quadratic fit performs better than a linear fit for predicting ‘mpg’ based on ‘horsepower’.\n\n\n\nCross-Validation: addresses the limitations of the validation set approach. It involves dividing the data into ‘K’ folds and iteratively using one fold for validation and the rest for training. This provides more stable performance estimates.\n\nLeave-One-Out Cross-Validation (LOOCV): A special case where K equals the number of observations. Each observation is held out once for validation.\n\nBenefits: Less bias in test error estimates.\nDrawbacks: High variance due to high correlation between the training sets.\n\nk-Fold Cross-Validation: A more general approach where K is typically 5 or 10, balancing bias and variance.\n\nExample: Using the Auto dataset, k-fold cross-validation confirms the superiority of the quadratic fit over the linear fit.\n\n\nThe Bootstrap: is used to quantify uncertainty in an estimator. It involves generating multiple ‘bootstrap’ datasets by sampling with replacement from the original data. The statistic of interest is calculated for each bootstrap dataset, creating a distribution from which standard errors and confidence intervals can be derived.\n\nExample: Simulating investment returns for assets X and Y, the sources illustrate how the bootstrap can be used to estimate the standard error of the optimal investment allocation (α).\n\nBootstrap Applications:\n\nEstimating Standard Errors: The bootstrap provides an alternative way to calculate standard errors for complex estimators where analytical formulas may not be available.\nConfidence Intervals: Approximate confidence intervals can be derived from the distribution of bootstrap estimates.\nPrediction Error Estimation: While the bootstrap is mainly used for standard error and confidence interval calculations, it’s not ideal for directly estimating prediction error due to the overlap in training data between bootstrap samples."
  },
  {
    "objectID": "posts/ch05-resampling-methods/index.html#important-considerations",
    "href": "posts/ch05-resampling-methods/index.html#important-considerations",
    "title": "Chapter 5: Resampling Methods",
    "section": "Important Considerations",
    "text": "Important Considerations\n\nCross-validation for classification: When dealing with classification problems, the metric used for evaluating performance is typically the misclassification rate instead of MSE.\nChoosing K: The choice of K in k-fold cross-validation involves a bias-variance trade-off. K = 5 or K = 10 generally provides a good balance.\nPre-validation: This technique is specifically designed for comparing adaptively derived predictors with fixed predictors by creating a ‘fairer’ version of the adaptive predictor that hasn’t ‘seen’ the response variable.\nBootstrap Sampling: The way bootstrap samples are generated needs careful consideration depending on the data structure. For instance, in time series data, blocks of consecutive observations are sampled instead of individual observations to preserve the temporal correlation."
  },
  {
    "objectID": "posts/ch05-resampling-methods/index.html#illustrative-quotes",
    "href": "posts/ch05-resampling-methods/index.html#illustrative-quotes",
    "title": "Chapter 5: Resampling Methods",
    "section": "Illustrative Quotes",
    "text": "Illustrative Quotes\n\n“The bootstrap is a flexible and powerful statistical tool that can be used to quantify the uncertainty associated with a given estimator or statistical learning method.”\n\n\n“LOOCV sometimes useful, but typically doesn’t shake up the data enough. The estimates from each fold are highly correlated and hence their average can have high variance.”\n\n\n“In cross-validation, each of the K validation folds is distinct from the other K − 1 folds used for training: there is no overlap. This is crucial for its success.”\n\nConclusion: Resampling methods are indispensable tools for data scientists. Cross-validation and the bootstrap empower us to evaluate model performance, estimate uncertainties, and ultimately make more informed decisions based on our statistical learning models.\n\n\n\nChapter Slides\n\n\n\n\n\nChapter"
  },
  {
    "objectID": "posts/ch11-survival-analysis-and-censored-data/index.html",
    "href": "posts/ch11-survival-analysis-and-censored-data/index.html",
    "title": "Chapter 11: Survival Analysis",
    "section": "",
    "text": "Figure 1: Opening Remarks\n\n\n\n\n\n\n\n\nFigure 2: Examples and Framework"
  },
  {
    "objectID": "posts/ch11-survival-analysis-and-censored-data/index.html#premises",
    "href": "posts/ch11-survival-analysis-and-censored-data/index.html#premises",
    "title": "Chapter 11: Survival Analysis",
    "section": "Premises:",
    "text": "Premises:\n\nStatistical learning is not a series of black boxes - we need to understand the way the cogs of models come together.\nWhile it is important to know what job is performed by each cog, it is not necessary to have the skills to construct the machine inside the box!\nThe readers are interested in applying the methods to real-world problems."
  },
  {
    "objectID": "posts/ch04-classification/index.html",
    "href": "posts/ch04-classification/index.html",
    "title": "Chapter 4: Classification",
    "section": "",
    "text": "Figure 1: Introduction to Classification Problems\n\n\n\n\n\n\n\n\nFigure 2: Logistic Regression\n\n\n\n\n\n\n\n\nFigure 3: Multivariate Logistic Regression\n\n\n\n\n\n\n\n\nFigure 4: Logistic Regression Case Control Sampling and Multiclass\n\n\n\n\n\n\n\n\nFigure 5: Discriminant Analysis\n\n\n\n\n\n\n\n\nFigure 6: Gaussian Discriminant Analysis (One Variable)\n\n\n\n\n\n\n\n\nFigure 7: Gaussian Discriminant Analysis (Many Variables)\n\n\n\n\n\n\n\n\nFigure 8: Generalized Linear Models\n\n\n\n\n\n\n\n\nFigure 9: Quadratic Discriminant Analysis and Naive Bayes\n\n\n\n\n\n\n\n\nFigure 10: R Lab: Logistic Regression\n\n\n\n\n\n\n\n\nFigure 11: R Lab: Linear Discriminant Analysis\n\n\n\n\n\n\n\n\nFigure 12: R Lab: Nearest Neighbor Classification\n\n\n\n\n\n\n\n\n\n\n\n\n\nThe chapter is 65 pages long and covers the following topics:\n\nClassification\n\nAn Overview of Classification\nWhy Not Linear Regression?\nLogistic Regression\n\nThe Logistic Model\nEstimating the Regression Coefficients\nMaking Predictions\nMultiple Logistic Regression\nMultinomial Logistic Regression\n\nGenerative Models for Classification\n\nLinear Discriminant Analysis\nQuadratic Discriminant Analysis\nNaive Bayes\n\nA Comparison of Classification Methods\n\nAn Analytical Comparison\nAn Empirical Comparison\n\nGeneralized Linear Models\n\nLinear Regression on the Bikeshare Data\nPoisson Regression on the Bikeshare Data\nGeneralized Linear Models in Greater Generality\n\nLab: Logistic Regression, LDA, QDA, and KNN\n\n\n\n\n\n\n\n\nTL;DR - Statistical Learning in a Nutshell\n\n\n\n\n\n\nStatistical Learning in a nutshell\n\n\nStatistical learning is a set of tools for understanding data and building models that can be used for prediction or inference. The fundamental goal is to learn a function (f) that captures the relationship between input variables (predictors) and an output variable (response). This learned function can then be used to make predictions for new observations or for inference i.e. to understand the underlying relationship between the variables.\n\n\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Duis sagittis posuere ligula sit amet lacinia. Duis dignissim pellentesque magna, rhoncus congue sapien finibus mollis. Ut eu sem laoreet, vehicula ipsum in, convallis erat. Vestibulum magna sem, blandit pulvinar augue sit amet, auctor malesuada sapien. Nullam faucibus leo eget eros hendrerit, non laoreet ipsum lacinia. Curabitur cursus diam elit, non tempus ante volutpat a. Quisque hendrerit blandit purus non fringilla. Integer sit amet elit viverra ante dapibus semper. Vestibulum viverra rutrum enim, at luctus enim posuere eu. Orci varius natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus.\nNunc ac dignissim magna. Vestibulum vitae egestas elit. Proin feugiat leo quis ante condimentum, eu ornare mauris feugiat. Pellentesque habitant morbi tristique senectus et netus et malesuada fames ac turpis egestas. Mauris cursus laoreet ex, dignissim bibendum est posuere iaculis. Suspendisse et maximus elit. In fringilla gravida ornare. Aenean id lectus pulvinar, sagittis felis nec, rutrum risus. Nam vel neque eu arcu blandit fringilla et in quam. Aliquam luctus est sit amet vestibulum eleifend. Phasellus elementum sagittis molestie. Proin tempor lorem arcu, at condimentum purus volutpat eu. Fusce et pellentesque ligula. Pellentesque id tellus at erat luctus fringilla. Suspendisse potenti.\nEtiam maximus accumsan gravida. Maecenas at nunc dignissim, euismod enim ac, bibendum ipsum. Maecenas vehicula velit in nisl aliquet ultricies. Nam eget massa interdum, maximus arcu vel, pretium erat. Maecenas sit amet tempor purus, vitae aliquet nunc. Vivamus cursus urna velit, eleifend dictum magna laoreet ut. Duis eu erat mollis, blandit magna id, tincidunt ipsum. Integer massa nibh, commodo eu ex vel, venenatis efficitur ligula. Integer convallis lacus elit, maximus eleifend lacus ornare ac. Vestibulum scelerisque viverra urna id lacinia. Vestibulum ante ipsum primis in faucibus orci luctus et ultrices posuere cubilia curae; Aenean eget enim at diam bibendum tincidunt eu non purus. Nullam id magna ultrices, sodales metus viverra, tempus turpis.\nDuis ornare ex ac iaculis pretium. Maecenas sagittis odio id erat pharetra, sit amet consectetur quam sollicitudin. Vivamus pharetra quam purus, nec sagittis risus pretium at. Nullam feugiat, turpis ac accumsan interdum, sem tellus blandit neque, id vulputate diam quam semper nisl. Donec sit amet enim at neque porttitor aliquet. Phasellus facilisis nulla eget placerat eleifend. Vestibulum non egestas eros, eget lobortis ipsum. Nulla rutrum massa eget enim aliquam, id porttitor erat luctus. Nunc sagittis quis eros eu sagittis. Pellentesque dictum, erat at pellentesque sollicitudin, justo augue pulvinar metus, quis rutrum est mi nec felis. Vestibulum efficitur mi lorem, at elementum purus tincidunt a. Aliquam finibus enim magna, vitae pellentesque erat faucibus at. Nulla mauris tellus, imperdiet id lobortis et, dignissim condimentum ipsum. Morbi nulla orci, varius at aliquet sed, facilisis id tortor. Donec ut urna nisi.\nAenean placerat luctus tortor vitae molestie. Nulla at aliquet nulla. Sed efficitur tellus orci, sed fringilla lectus laoreet eget. Vivamus maximus quam sit amet arcu dignissim, sed accumsan massa ullamcorper. Sed iaculis tincidunt feugiat. Nulla in est at nunc ultricies dictum ut vitae nunc. Aenean convallis vel diam at malesuada. Suspendisse arcu libero, vehicula tempus ultrices a, placerat sit amet tortor. Sed dictum id nulla commodo mattis. Aliquam mollis, nunc eu tristique faucibus, purus lacus tincidunt nulla, ac pretium lorem nunc ut enim. Curabitur eget mattis nisl, vitae sodales augue. Nam felis massa, bibendum sit amet nulla vel, vulputate rutrum lacus. Aenean convallis odio pharetra nulla mattis consequat.\n\n\n\nReuseCC SA BY-NC-NDCitationBibTeX citation:@online{bochman2025,\n  author = {Bochman, Oren},\n  title = {Chapter 4: {Classification}},\n  date = {2025-01-21},\n  url = {https://orenbochman.github.io/notes-islr/posts/ch04-classification/},\n  langid = {en}\n}\nFor attribution, please cite this work as:\nBochman, Oren. 2025. “Chapter 4: Classification.” January\n21, 2025. https://orenbochman.github.io/notes-islr/posts/ch04-classification/."
  },
  {
    "objectID": "posts/ch13-multiple-testing/Ch13-multiple-lab.html",
    "href": "posts/ch13-multiple-testing/Ch13-multiple-lab.html",
    "title": "Chapter 13: Multiple Testing Lab",
    "section": "",
    "text": "We include our usual imports seen in earlier labs.\n\nimport numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport statsmodels.api as sm\nfrom ISLP import load_data\n\nWe also collect the new imports needed for this lab.\n\nfrom scipy.stats import \\\n    (ttest_1samp,\n     ttest_rel,\n     ttest_ind,\n     t as t_dbn)\nfrom statsmodels.stats.multicomp import \\\n     pairwise_tukeyhsd\nfrom statsmodels.stats.multitest import \\\n     multipletests as mult_test\n\n\n\nWe begin by performing some one-sample t-tests.\nFirst we create 100 variables, each consisting of 10 observations. The first 50 variables have mean 0.5 and variance 1, while the others have mean 0 and variance 1.\n\nrng = np.random.default_rng(12)\nX = rng.standard_normal((10, 100))\ntrue_mean = np.array([0.5]*50 + [0]*50)\nX += true_mean[None,:]\n\nTo begin, we use ttest_1samp() from the scipy.stats module to test H_{0}: \\mu_1=0, the null hypothesis that the first variable has mean zero.\n\nresult = ttest_1samp(X[:,0], 0)\nresult.pvalue\n\n0.9307442156164141\n\n\nThe p-value comes out to 0.931, which is not low enough to reject the null hypothesis at level \\alpha=0.05. In this case, \\mu_1=0.5, so the null hypothesis is false. Therefore, we have made a Type II error by failing to reject the null hypothesis when the null hypothesis is false.\nWe now test H_{0,j}: \\mu_j=0 for j=1,\\ldots,100. We compute the 100 p-values, and then construct a vector recording whether the jth p-value is less than or equal to 0.05, in which case we reject H_{0j}, or greater than 0.05, in which case we do not reject H_{0j}, for j=1,\\ldots,100.\n\np_values = np.empty(100)\nfor i in range(100):\n   p_values[i] = ttest_1samp(X[:,i], 0).pvalue\ndecision = pd.cut(p_values,\n                  [0, 0.05, 1],\n                  labels=['Reject H0',\n                          'Do not reject H0'])\ntruth = pd.Categorical(true_mean == 0,\n                       categories=[True, False],\n                       ordered=True)\n\nSince this is a simulated data set, we can create a 2 \\times 2 table similar to Table~.\n\npd.crosstab(decision,\n            truth,\n     rownames=['Decision'],\n     colnames=['H0'])\n\n\n\n\n\n\n\nH0\nTrue\nFalse\n\n\nDecision\n\n\n\n\n\n\nReject H0\n5\n15\n\n\nDo not reject H0\n45\n35\n\n\n\n\n\n\n\nTherefore, at level \\alpha=0.05, we reject 15 of the 50 false null hypotheses, and we incorrectly reject 5 of the true null hypotheses. Using the notation from Section~, we have V=5, S=15, U=45 and W=35. We have set \\alpha=0.05, which means that we expect to reject around 5% of the true null hypotheses. This is in line with the 2 \\times 2 table above, which indicates that we rejected V=5 of the 50 true null hypotheses.\nIn the simulation above, for the false null hypotheses, the ratio of the mean to the standard deviation was only 0.5/1 = 0.5. This amounts to quite a weak signal, and it resulted in a high number of Type II errors. Let’s instead simulate data with a stronger signal, so that the ratio of the mean to the standard deviation for the false null hypotheses equals 1. We make only 10 Type II errors.\n\ntrue_mean = np.array([1]*50 + [0]*50)\nX = rng.standard_normal((10, 100))\nX += true_mean[None,:]\nfor i in range(100):\n   p_values[i] = ttest_1samp(X[:,i], 0).pvalue\ndecision = pd.cut(p_values,\n                  [0, 0.05, 1],\n                  labels=['Reject H0',\n                          'Do not reject H0'])\ntruth = pd.Categorical(true_mean == 0,\n                       categories=[True, False],\n                       ordered=True)\npd.crosstab(decision,\n            truth,\n            rownames=['Decision'],\n            colnames=['H0'])\n\n\n\n\n\n\n\nH0\nTrue\nFalse\n\n\nDecision\n\n\n\n\n\n\nReject H0\n2\n40\n\n\nDo not reject H0\n48\n10\n\n\n\n\n\n\n\n\n\n\nRecall from that if the null hypothesis is true for each of m independent hypothesis tests, then the FWER is equal to 1-(1-\\alpha)^m. We can use this expression to compute the FWER for m=1,\\ldots, 500 and \\alpha=0.05, 0.01, and 0.001. We plot the FWER for these values of \\alpha in order to reproduce Figure~.\n\nm = np.linspace(1, 501)\nfig, ax = plt.subplots()\n[ax.plot(m,\n         1 - (1 - alpha)**m,\n         label=r'$\\alpha=%s$' % str(alpha))\n         for alpha in [0.05, 0.01, 0.001]]\nax.set_xscale('log')\nax.set_xlabel('Number of Hypotheses')\nax.set_ylabel('Family-Wise Error Rate')\nax.legend()\nax.axhline(0.05, c='k', ls='--');\n\n\n\n\n\n\n\n\nAs discussed previously, even for moderate values of m such as 50, the FWER exceeds 0.05 unless \\alpha is set to a very low value, such as 0.001. Of course, the problem with setting \\alpha to such a low value is that we are likely to make a number of Type II errors: in other words, our power is very low.\nWe now conduct a one-sample t-test for each of the first five managers in the\nFund dataset, in order to test the null hypothesis that the jth fund manager’s mean return equals zero, H_{0,j}: \\mu_j=0.\n\nFund = load_data('Fund')\nfund_mini = Fund.iloc[:,:5]\nfund_mini_pvals = np.empty(5)\nfor i in range(5):\n    fund_mini_pvals[i] = ttest_1samp(fund_mini.iloc[:,i], 0).pvalue\nfund_mini_pvals\n\narray([0.00620236, 0.91827115, 0.01160098, 0.6005396 , 0.75578151])\n\n\nThe p-values are low for Managers One and Three, and high for the other three managers. However, we cannot simply reject H_{0,1} and H_{0,3}, since this would fail to account for the multiple testing that we have performed. Instead, we will conduct Bonferroni’s method and Holm’s method to control the FWER.\nTo do this, we use the multipletests() function from the statsmodels module (abbreviated to mult_test()). Given the p-values, for methods like Holm and Bonferroni the function outputs adjusted p-values, which can be thought of as a new set of p-values that have been corrected for multiple testing. If the adjusted p-value for a given hypothesis is less than or equal to \\alpha, then that hypothesis can be rejected while maintaining a FWER of no more than \\alpha. In other words, for such methods, the adjusted p-values resulting from the multipletests() function can simply be compared to the desired FWER in order to determine whether or not to reject each hypothesis. We will later see that we can use the same function to control FDR as well.\nThe mult_test() function takes p-values and a method argument, as well as an optional alpha argument. It returns the decisions (reject below) as well as the adjusted p-values (bonf).\n\nreject, bonf = mult_test(fund_mini_pvals, method = \"bonferroni\")[:2]\nreject\n\narray([ True, False, False, False, False])\n\n\nThe p-values bonf are simply the fund_mini_pvalues multiplied by 5 and truncated to be less than or equal to 1.\n\nbonf, np.minimum(fund_mini_pvals * 5, 1)\n\n(array([0.03101178, 1.        , 0.05800491, 1.        , 1.        ]),\n array([0.03101178, 1.        , 0.05800491, 1.        , 1.        ]))\n\n\nTherefore, using Bonferroni’s method, we are able to reject the null hypothesis only for Manager One while controlling FWER at 0.05.\nBy contrast, using Holm’s method, the adjusted p-values indicate that we can reject the null hypotheses for Managers One and Three at a FWER of 0.05.\n\nmult_test(fund_mini_pvals, method = \"holm\", alpha=0.05)[:2]\n\n(array([ True, False,  True, False, False]),\n array([0.03101178, 1.        , 0.04640393, 1.        , 1.        ]))\n\n\nAs discussed previously, Manager One seems to perform particularly well, whereas Manager Two has poor performance.\n\nfund_mini.mean()\n\nManager1    3.0\nManager2   -0.1\nManager3    2.8\nManager4    0.5\nManager5    0.3\ndtype: float64\n\n\nIs there evidence of a meaningful difference in performance between these two managers? We can check this by performing a paired t-test using the ttest_rel() function from scipy.stats:\n\nttest_rel(fund_mini['Manager1'],\n          fund_mini['Manager2']).pvalue\n\n0.038391072368079586\n\n\nThe test results in a p-value of 0.038, suggesting a statistically significant difference.\nHowever, we decided to perform this test only after examining the data and noting that Managers One and Two had the highest and lowest mean performances. In a sense, this means that we have implicitly performed {5 \\choose 2} = 5(5-1)/2=10 hypothesis tests, rather than just one, as discussed in Section~. Hence, we use the pairwise_tukeyhsd() function from statsmodels.stats.multicomp to apply Tukey’s method in order to adjust for multiple testing. This function takes as input a fitted ANOVA regression model, which is essentially just a linear regression in which all of the predictors are qualitative. In this case, the response consists of the monthly excess returns achieved by each manager, and the predictor indicates the manager to which each return corresponds.\n\nreturns = np.hstack([fund_mini.iloc[:,i] for i in range(5)])\nmanagers = np.hstack([[i+1]*50 for i in range(5)])\ntukey = pairwise_tukeyhsd(returns, managers)\nprint(tukey.summary())\n\nMultiple Comparison of Means - Tukey HSD, FWER=0.05\n===================================================\ngroup1 group2 meandiff p-adj   lower  upper  reject\n---------------------------------------------------\n     1      2     -3.1 0.1862 -6.9865 0.7865  False\n     1      3     -0.2 0.9999 -4.0865 3.6865  False\n     1      4     -2.5 0.3948 -6.3865 1.3865  False\n     1      5     -2.7 0.3152 -6.5865 1.1865  False\n     2      3      2.9 0.2453 -0.9865 6.7865  False\n     2      4      0.6 0.9932 -3.2865 4.4865  False\n     2      5      0.4 0.9986 -3.4865 4.2865  False\n     3      4     -2.3  0.482 -6.1865 1.5865  False\n     3      5     -2.5 0.3948 -6.3865 1.3865  False\n     4      5     -0.2 0.9999 -4.0865 3.6865  False\n---------------------------------------------------\n\n\nThe pairwise_tukeyhsd() function provides confidence intervals for the difference between each pair of managers (lower and upper), as well as a p-value. All of these quantities have been adjusted for multiple testing. Notice that the p-value for the difference between Managers One and Two has increased from 0.038 to 0.186, so there is no longer clear evidence of a difference between the managers’ performances. We can plot the confidence intervals for the pairwise comparisons using the plot_simultaneous() method of tukey. Any pair of intervals that don’t overlap indicates a significant difference at the nominal level of 0.05. In this case, no differences are considered significant as reported in the table above.\n\nfig, ax = plt.subplots(figsize=(8,8))\ntukey.plot_simultaneous(ax=ax);\n\n\n\n\n\n\n\n\n\n\n\nNow we perform hypothesis tests for all 2,000 fund managers in the Fund dataset. We perform a one-sample t-test of H_{0,j}: \\mu_j=0, which states that the jth fund manager’s mean return is zero.\n\nfund_pvalues = np.empty(2000)\nfor i, manager in enumerate(Fund.columns):\n    fund_pvalues[i] = ttest_1samp(Fund[manager], 0).pvalue\n\nThere are far too many managers to consider trying to control the FWER. Instead, we focus on controlling the FDR: that is, the expected fraction of rejected null hypotheses that are actually false positives. The multipletests() function (abbreviated mult_test()) can be used to carry out the Benjamini–Hochberg procedure.\n\nfund_qvalues = mult_test(fund_pvalues, method = \"fdr_bh\")[1]\nfund_qvalues[:10]\n\narray([0.08988921, 0.991491  , 0.12211561, 0.92342997, 0.95603587,\n       0.07513802, 0.0767015 , 0.07513802, 0.07513802, 0.07513802])\n\n\nThe q-values output by the Benjamini–Hochberg procedure can be interpreted as the smallest FDR threshold at which we would reject a particular null hypothesis. For instance, a q-value of 0.1 indicates that we can reject the corresponding null hypothesis at an FDR of 10% or greater, but that we cannot reject the null hypothesis at an FDR below 10%.\nIf we control the FDR at 10%, then for how many of the fund managers can we reject H_{0,j}: \\mu_j=0?\n\n(fund_qvalues &lt;= 0.1).sum()\n\n146\n\n\nWe find that 146 of the 2,000 fund managers have a q-value below 0.1; therefore, we are able to conclude that 146 of the fund managers beat the market at an FDR of 10%. Only about 15 (10% of 146) of these fund managers are likely to be false discoveries.\nBy contrast, if we had instead used Bonferroni’s method to control the FWER at level \\alpha=0.1, then we would have failed to reject any null hypotheses!\n\n(fund_pvalues &lt;= 0.1 / 2000).sum()\n\n0\n\n\nFigure~ displays the ordered p-values, p_{(1)} \\leq p_{(2)} \\leq \\cdots \\leq p_{(2000)}, for the Fund dataset, as well as the threshold for rejection by the Benjamini–Hochberg procedure. Recall that the Benjamini–Hochberg procedure identifies the largest p-value such that p_{(j)}&lt;qj/m, and rejects all hypotheses for which the p-value is less than or equal to p_{(j)}. In the code below, we implement the Benjamini–Hochberg procedure ourselves, in order to illustrate how it works. We first order the p-values. We then identify all p-values that satisfy p_{(j)}&lt;qj/m (sorted_set_). Finally, selected_ is a boolean array indicating which p-values are less than or equal to the largest p-value in sorted_[sorted_set_]. Therefore, selected_ indexes the p-values rejected by the Benjamini–Hochberg procedure.\n\nsorted_ = np.sort(fund_pvalues)\nm = fund_pvalues.shape[0]\nq = 0.1\nsorted_set_ = np.where(sorted_ &lt; q * np.linspace(1, m, m) / m)[0]\nif sorted_set_.shape[0] &gt; 0:\n    selected_ = fund_pvalues &lt; sorted_[sorted_set_].max()\n    sorted_set_ = np.arange(sorted_set_.max())\nelse:\n    selected_ = []\n    sorted_set_ = []\n\nWe now reproduce the middle panel of Figure~.\n\nfig, ax = plt.subplots()\nax.scatter(np.arange(0, sorted_.shape[0]) + 1,\n           sorted_, s=10)\nax.set_yscale('log')\nax.set_xscale('log')\nax.set_ylabel('P-Value')\nax.set_xlabel('Index')\nax.scatter(sorted_set_+1, sorted_[sorted_set_], c='r', s=20)\nax.axline((0, 0), (1,q/m), c='k', ls='--', linewidth=3);\n\n\n\n\n\n\n\n\n\n\n\nHere, we implement the re-sampling approach to hypothesis testing using the Khan dataset, which we investigated in Section~. First, we merge the training and testing data, which results in observations on 83 patients for 2,308 genes.\n\nKhan = load_data('Khan')      \nD = pd.concat([Khan['xtrain'], Khan['xtest']])\nD['Y'] = pd.concat([Khan['ytrain'], Khan['ytest']])\nD['Y'].value_counts()\n\nY\n2    29\n4    25\n3    18\n1    11\nName: count, dtype: int64\n\n\nThere are four classes of cancer. For each gene, we compare the mean expression in the second class (rhabdomyosarcoma) to the mean expression in the fourth class (Burkitt’s lymphoma). Performing a standard two-sample t-test\nusing ttest_ind() from scipy.stats on the 11th gene produces a test-statistic of -2.09 and an associated p-value of 0.0412, suggesting modest evidence of a difference in mean expression levels between the two cancer types.\n\nD2 = D[lambda df:df['Y'] == 2]\nD4 = D[lambda df:df['Y'] == 4]\ngene_11 = 'G0011'\nobservedT, pvalue = ttest_ind(D2[gene_11],\n                              D4[gene_11],\n                              equal_var=True)\nobservedT, pvalue\n\n(-2.0936330736768185, 0.04118643782678394)\n\n\nHowever, this p-value relies on the assumption that under the null hypothesis of no difference between the two groups, the test statistic follows a t-distribution with 29+25-2=52 degrees of freedom. Instead of using this theoretical null distribution, we can randomly split the 54 patients into two groups of 29 and 25, and compute a new test statistic. Under the null hypothesis of no difference between the groups, this new test statistic should have the same distribution as our original one. Repeating this process 10,000 times allows us to approximate the null distribution of the test statistic. We compute the fraction of the time that our observed test statistic exceeds the test statistics obtained via re-sampling.\n\nB = 10000\nTnull = np.empty(B)\nD_ = np.hstack([D2[gene_11], D4[gene_11]])\nn_ = D2[gene_11].shape[0]\nD_null = D_.copy()\nfor b in range(B):\n    rng.shuffle(D_null)\n    ttest_ = ttest_ind(D_null[:n_],\n                       D_null[n_:],\n                       equal_var=True)\n    Tnull[b] = ttest_.statistic\n(np.abs(Tnull) &lt; np.abs(observedT)).mean()\n\n0.9602\n\n\nThis fraction, 0.0398, is our re-sampling-based p-value. It is almost identical to the p-value of 0.0412 obtained using the theoretical null distribution. We can plot a histogram of the re-sampling-based test statistics in order to reproduce Figure~.\n\nfig, ax = plt.subplots(figsize=(8,8))\nax.hist(Tnull,\n        bins=100,\n        density=True,\n        facecolor='y',\n        label='Null')\nxval = np.linspace(-4.2, 4.2, 1001)\nax.plot(xval,\n        t_dbn.pdf(xval, D_.shape[0]-2),\n        c='r')\nax.axvline(observedT,\n           c='b',\n           label='Observed')\nax.legend()\nax.set_xlabel(\"Null Distribution of Test Statistic\");\n\n\n\n\n\n\n\n\nThe re-sampling-based null distribution is almost identical to the theoretical null distribution, which is displayed in red.\nFinally, we implement the plug-in re-sampling FDR approach outlined in Algorithm~. Depending on the speed of your computer, calculating the FDR for all 2,308 genes in the Khan dataset may take a while. Hence, we will illustrate the approach on a random subset of 100 genes. For each gene, we first compute the observed test statistic, and then produce 10,000 re-sampled test statistics. This may take a few minutes to run. If you are in a rush, then you could set B equal to a smaller value (e.g. B=500).\n\nm, B = 100, 10000\nidx = rng.choice(Khan['xtest'].columns, m, replace=False)\nT_vals = np.empty(m)\nTnull_vals = np.empty((m, B))\n\nfor j in range(m):\n    col = idx[j]\n    T_vals[j] = ttest_ind(D2[col],\n                          D4[col],\n                          equal_var=True).statistic\n    D_ = np.hstack([D2[col], D4[col]])\n    D_null = D_.copy()\n    for b in range(B):\n        rng.shuffle(D_null)\n        ttest_ = ttest_ind(D_null[:n_],\n                           D_null[n_:],\n                           equal_var=True)\n        Tnull_vals[j,b] = ttest_.statistic\n\nNext, we compute the number of rejected null hypotheses R, the estimated number of false positives \\widehat{V}, and the estimated FDR, for a range of threshold values c in Algorithm~. The threshold values are chosen using the absolute values of the test statistics from the 100 genes.\n\ncutoffs = np.sort(np.abs(T_vals))\nFDRs, Rs, Vs = np.empty((3, m))\nfor j in range(m):\n   R = np.sum(np.abs(T_vals) &gt;= cutoffs[j])\n   V = np.sum(np.abs(Tnull_vals) &gt;= cutoffs[j]) / B\n   Rs[j] = R\n   Vs[j] = V\n   FDRs[j] = V / R\n\nNow, for any given FDR, we can find the genes that will be rejected. For example, with FDR controlled at 0.1, we reject 15 of the 100 null hypotheses. On average, we would expect about one or two of these genes (i.e. 10% of 15) to be false discoveries. At an FDR of 0.2, we can reject the null hypothesis for 28 genes, of which we expect around six to be false discoveries.\nThe variable idx stores which genes were included in our 100 randomly-selected genes. Let’s look at the genes whose estimated FDR is less than 0.1.\n\nsorted(idx[np.abs(T_vals) &gt;= cutoffs[FDRs &lt; 0.1].min()])\n\n['G0097',\n 'G0129',\n 'G0182',\n 'G0714',\n 'G0812',\n 'G0941',\n 'G0982',\n 'G1020',\n 'G1022',\n 'G1090',\n 'G1320',\n 'G1634',\n 'G1697',\n 'G1853',\n 'G1854',\n 'G1994',\n 'G2017',\n 'G2115',\n 'G2193']\n\n\nAt an FDR threshold of 0.2, more genes are selected, at the cost of having a higher expected proportion of false discoveries.\n\nsorted(idx[np.abs(T_vals) &gt;= cutoffs[FDRs &lt; 0.2].min()])\n\n['G0097',\n 'G0129',\n 'G0158',\n 'G0182',\n 'G0242',\n 'G0552',\n 'G0679',\n 'G0714',\n 'G0751',\n 'G0812',\n 'G0908',\n 'G0941',\n 'G0982',\n 'G1020',\n 'G1022',\n 'G1090',\n 'G1240',\n 'G1244',\n 'G1320',\n 'G1381',\n 'G1514',\n 'G1634',\n 'G1697',\n 'G1768',\n 'G1853',\n 'G1854',\n 'G1907',\n 'G1994',\n 'G2017',\n 'G2115',\n 'G2193']\n\n\nThe next line generates Figure~, which is similar to Figure~, except that it is based on only a subset of the genes.\n\nfig, ax = plt.subplots()\nax.plot(Rs, FDRs, 'b', linewidth=3)\nax.set_xlabel(\"Number of Rejections\")\nax.set_ylabel(\"False Discovery Rate\");"
  },
  {
    "objectID": "posts/ch13-multiple-testing/Ch13-multiple-lab.html#review-of-hypothesis-tests",
    "href": "posts/ch13-multiple-testing/Ch13-multiple-lab.html#review-of-hypothesis-tests",
    "title": "Chapter 13: Multiple Testing Lab",
    "section": "",
    "text": "We begin by performing some one-sample t-tests.\nFirst we create 100 variables, each consisting of 10 observations. The first 50 variables have mean 0.5 and variance 1, while the others have mean 0 and variance 1.\n\nrng = np.random.default_rng(12)\nX = rng.standard_normal((10, 100))\ntrue_mean = np.array([0.5]*50 + [0]*50)\nX += true_mean[None,:]\n\nTo begin, we use ttest_1samp() from the scipy.stats module to test H_{0}: \\mu_1=0, the null hypothesis that the first variable has mean zero.\n\nresult = ttest_1samp(X[:,0], 0)\nresult.pvalue\n\n0.9307442156164141\n\n\nThe p-value comes out to 0.931, which is not low enough to reject the null hypothesis at level \\alpha=0.05. In this case, \\mu_1=0.5, so the null hypothesis is false. Therefore, we have made a Type II error by failing to reject the null hypothesis when the null hypothesis is false.\nWe now test H_{0,j}: \\mu_j=0 for j=1,\\ldots,100. We compute the 100 p-values, and then construct a vector recording whether the jth p-value is less than or equal to 0.05, in which case we reject H_{0j}, or greater than 0.05, in which case we do not reject H_{0j}, for j=1,\\ldots,100.\n\np_values = np.empty(100)\nfor i in range(100):\n   p_values[i] = ttest_1samp(X[:,i], 0).pvalue\ndecision = pd.cut(p_values,\n                  [0, 0.05, 1],\n                  labels=['Reject H0',\n                          'Do not reject H0'])\ntruth = pd.Categorical(true_mean == 0,\n                       categories=[True, False],\n                       ordered=True)\n\nSince this is a simulated data set, we can create a 2 \\times 2 table similar to Table~.\n\npd.crosstab(decision,\n            truth,\n     rownames=['Decision'],\n     colnames=['H0'])\n\n\n\n\n\n\n\nH0\nTrue\nFalse\n\n\nDecision\n\n\n\n\n\n\nReject H0\n5\n15\n\n\nDo not reject H0\n45\n35\n\n\n\n\n\n\n\nTherefore, at level \\alpha=0.05, we reject 15 of the 50 false null hypotheses, and we incorrectly reject 5 of the true null hypotheses. Using the notation from Section~, we have V=5, S=15, U=45 and W=35. We have set \\alpha=0.05, which means that we expect to reject around 5% of the true null hypotheses. This is in line with the 2 \\times 2 table above, which indicates that we rejected V=5 of the 50 true null hypotheses.\nIn the simulation above, for the false null hypotheses, the ratio of the mean to the standard deviation was only 0.5/1 = 0.5. This amounts to quite a weak signal, and it resulted in a high number of Type II errors. Let’s instead simulate data with a stronger signal, so that the ratio of the mean to the standard deviation for the false null hypotheses equals 1. We make only 10 Type II errors.\n\ntrue_mean = np.array([1]*50 + [0]*50)\nX = rng.standard_normal((10, 100))\nX += true_mean[None,:]\nfor i in range(100):\n   p_values[i] = ttest_1samp(X[:,i], 0).pvalue\ndecision = pd.cut(p_values,\n                  [0, 0.05, 1],\n                  labels=['Reject H0',\n                          'Do not reject H0'])\ntruth = pd.Categorical(true_mean == 0,\n                       categories=[True, False],\n                       ordered=True)\npd.crosstab(decision,\n            truth,\n            rownames=['Decision'],\n            colnames=['H0'])\n\n\n\n\n\n\n\nH0\nTrue\nFalse\n\n\nDecision\n\n\n\n\n\n\nReject H0\n2\n40\n\n\nDo not reject H0\n48\n10"
  },
  {
    "objectID": "posts/ch13-multiple-testing/Ch13-multiple-lab.html#family-wise-error-rate",
    "href": "posts/ch13-multiple-testing/Ch13-multiple-lab.html#family-wise-error-rate",
    "title": "Chapter 13: Multiple Testing Lab",
    "section": "",
    "text": "Recall from that if the null hypothesis is true for each of m independent hypothesis tests, then the FWER is equal to 1-(1-\\alpha)^m. We can use this expression to compute the FWER for m=1,\\ldots, 500 and \\alpha=0.05, 0.01, and 0.001. We plot the FWER for these values of \\alpha in order to reproduce Figure~.\n\nm = np.linspace(1, 501)\nfig, ax = plt.subplots()\n[ax.plot(m,\n         1 - (1 - alpha)**m,\n         label=r'$\\alpha=%s$' % str(alpha))\n         for alpha in [0.05, 0.01, 0.001]]\nax.set_xscale('log')\nax.set_xlabel('Number of Hypotheses')\nax.set_ylabel('Family-Wise Error Rate')\nax.legend()\nax.axhline(0.05, c='k', ls='--');\n\n\n\n\n\n\n\n\nAs discussed previously, even for moderate values of m such as 50, the FWER exceeds 0.05 unless \\alpha is set to a very low value, such as 0.001. Of course, the problem with setting \\alpha to such a low value is that we are likely to make a number of Type II errors: in other words, our power is very low.\nWe now conduct a one-sample t-test for each of the first five managers in the\nFund dataset, in order to test the null hypothesis that the jth fund manager’s mean return equals zero, H_{0,j}: \\mu_j=0.\n\nFund = load_data('Fund')\nfund_mini = Fund.iloc[:,:5]\nfund_mini_pvals = np.empty(5)\nfor i in range(5):\n    fund_mini_pvals[i] = ttest_1samp(fund_mini.iloc[:,i], 0).pvalue\nfund_mini_pvals\n\narray([0.00620236, 0.91827115, 0.01160098, 0.6005396 , 0.75578151])\n\n\nThe p-values are low for Managers One and Three, and high for the other three managers. However, we cannot simply reject H_{0,1} and H_{0,3}, since this would fail to account for the multiple testing that we have performed. Instead, we will conduct Bonferroni’s method and Holm’s method to control the FWER.\nTo do this, we use the multipletests() function from the statsmodels module (abbreviated to mult_test()). Given the p-values, for methods like Holm and Bonferroni the function outputs adjusted p-values, which can be thought of as a new set of p-values that have been corrected for multiple testing. If the adjusted p-value for a given hypothesis is less than or equal to \\alpha, then that hypothesis can be rejected while maintaining a FWER of no more than \\alpha. In other words, for such methods, the adjusted p-values resulting from the multipletests() function can simply be compared to the desired FWER in order to determine whether or not to reject each hypothesis. We will later see that we can use the same function to control FDR as well.\nThe mult_test() function takes p-values and a method argument, as well as an optional alpha argument. It returns the decisions (reject below) as well as the adjusted p-values (bonf).\n\nreject, bonf = mult_test(fund_mini_pvals, method = \"bonferroni\")[:2]\nreject\n\narray([ True, False, False, False, False])\n\n\nThe p-values bonf are simply the fund_mini_pvalues multiplied by 5 and truncated to be less than or equal to 1.\n\nbonf, np.minimum(fund_mini_pvals * 5, 1)\n\n(array([0.03101178, 1.        , 0.05800491, 1.        , 1.        ]),\n array([0.03101178, 1.        , 0.05800491, 1.        , 1.        ]))\n\n\nTherefore, using Bonferroni’s method, we are able to reject the null hypothesis only for Manager One while controlling FWER at 0.05.\nBy contrast, using Holm’s method, the adjusted p-values indicate that we can reject the null hypotheses for Managers One and Three at a FWER of 0.05.\n\nmult_test(fund_mini_pvals, method = \"holm\", alpha=0.05)[:2]\n\n(array([ True, False,  True, False, False]),\n array([0.03101178, 1.        , 0.04640393, 1.        , 1.        ]))\n\n\nAs discussed previously, Manager One seems to perform particularly well, whereas Manager Two has poor performance.\n\nfund_mini.mean()\n\nManager1    3.0\nManager2   -0.1\nManager3    2.8\nManager4    0.5\nManager5    0.3\ndtype: float64\n\n\nIs there evidence of a meaningful difference in performance between these two managers? We can check this by performing a paired t-test using the ttest_rel() function from scipy.stats:\n\nttest_rel(fund_mini['Manager1'],\n          fund_mini['Manager2']).pvalue\n\n0.038391072368079586\n\n\nThe test results in a p-value of 0.038, suggesting a statistically significant difference.\nHowever, we decided to perform this test only after examining the data and noting that Managers One and Two had the highest and lowest mean performances. In a sense, this means that we have implicitly performed {5 \\choose 2} = 5(5-1)/2=10 hypothesis tests, rather than just one, as discussed in Section~. Hence, we use the pairwise_tukeyhsd() function from statsmodels.stats.multicomp to apply Tukey’s method in order to adjust for multiple testing. This function takes as input a fitted ANOVA regression model, which is essentially just a linear regression in which all of the predictors are qualitative. In this case, the response consists of the monthly excess returns achieved by each manager, and the predictor indicates the manager to which each return corresponds.\n\nreturns = np.hstack([fund_mini.iloc[:,i] for i in range(5)])\nmanagers = np.hstack([[i+1]*50 for i in range(5)])\ntukey = pairwise_tukeyhsd(returns, managers)\nprint(tukey.summary())\n\nMultiple Comparison of Means - Tukey HSD, FWER=0.05\n===================================================\ngroup1 group2 meandiff p-adj   lower  upper  reject\n---------------------------------------------------\n     1      2     -3.1 0.1862 -6.9865 0.7865  False\n     1      3     -0.2 0.9999 -4.0865 3.6865  False\n     1      4     -2.5 0.3948 -6.3865 1.3865  False\n     1      5     -2.7 0.3152 -6.5865 1.1865  False\n     2      3      2.9 0.2453 -0.9865 6.7865  False\n     2      4      0.6 0.9932 -3.2865 4.4865  False\n     2      5      0.4 0.9986 -3.4865 4.2865  False\n     3      4     -2.3  0.482 -6.1865 1.5865  False\n     3      5     -2.5 0.3948 -6.3865 1.3865  False\n     4      5     -0.2 0.9999 -4.0865 3.6865  False\n---------------------------------------------------\n\n\nThe pairwise_tukeyhsd() function provides confidence intervals for the difference between each pair of managers (lower and upper), as well as a p-value. All of these quantities have been adjusted for multiple testing. Notice that the p-value for the difference between Managers One and Two has increased from 0.038 to 0.186, so there is no longer clear evidence of a difference between the managers’ performances. We can plot the confidence intervals for the pairwise comparisons using the plot_simultaneous() method of tukey. Any pair of intervals that don’t overlap indicates a significant difference at the nominal level of 0.05. In this case, no differences are considered significant as reported in the table above.\n\nfig, ax = plt.subplots(figsize=(8,8))\ntukey.plot_simultaneous(ax=ax);"
  },
  {
    "objectID": "posts/ch13-multiple-testing/Ch13-multiple-lab.html#false-discovery-rate",
    "href": "posts/ch13-multiple-testing/Ch13-multiple-lab.html#false-discovery-rate",
    "title": "Chapter 13: Multiple Testing Lab",
    "section": "",
    "text": "Now we perform hypothesis tests for all 2,000 fund managers in the Fund dataset. We perform a one-sample t-test of H_{0,j}: \\mu_j=0, which states that the jth fund manager’s mean return is zero.\n\nfund_pvalues = np.empty(2000)\nfor i, manager in enumerate(Fund.columns):\n    fund_pvalues[i] = ttest_1samp(Fund[manager], 0).pvalue\n\nThere are far too many managers to consider trying to control the FWER. Instead, we focus on controlling the FDR: that is, the expected fraction of rejected null hypotheses that are actually false positives. The multipletests() function (abbreviated mult_test()) can be used to carry out the Benjamini–Hochberg procedure.\n\nfund_qvalues = mult_test(fund_pvalues, method = \"fdr_bh\")[1]\nfund_qvalues[:10]\n\narray([0.08988921, 0.991491  , 0.12211561, 0.92342997, 0.95603587,\n       0.07513802, 0.0767015 , 0.07513802, 0.07513802, 0.07513802])\n\n\nThe q-values output by the Benjamini–Hochberg procedure can be interpreted as the smallest FDR threshold at which we would reject a particular null hypothesis. For instance, a q-value of 0.1 indicates that we can reject the corresponding null hypothesis at an FDR of 10% or greater, but that we cannot reject the null hypothesis at an FDR below 10%.\nIf we control the FDR at 10%, then for how many of the fund managers can we reject H_{0,j}: \\mu_j=0?\n\n(fund_qvalues &lt;= 0.1).sum()\n\n146\n\n\nWe find that 146 of the 2,000 fund managers have a q-value below 0.1; therefore, we are able to conclude that 146 of the fund managers beat the market at an FDR of 10%. Only about 15 (10% of 146) of these fund managers are likely to be false discoveries.\nBy contrast, if we had instead used Bonferroni’s method to control the FWER at level \\alpha=0.1, then we would have failed to reject any null hypotheses!\n\n(fund_pvalues &lt;= 0.1 / 2000).sum()\n\n0\n\n\nFigure~ displays the ordered p-values, p_{(1)} \\leq p_{(2)} \\leq \\cdots \\leq p_{(2000)}, for the Fund dataset, as well as the threshold for rejection by the Benjamini–Hochberg procedure. Recall that the Benjamini–Hochberg procedure identifies the largest p-value such that p_{(j)}&lt;qj/m, and rejects all hypotheses for which the p-value is less than or equal to p_{(j)}. In the code below, we implement the Benjamini–Hochberg procedure ourselves, in order to illustrate how it works. We first order the p-values. We then identify all p-values that satisfy p_{(j)}&lt;qj/m (sorted_set_). Finally, selected_ is a boolean array indicating which p-values are less than or equal to the largest p-value in sorted_[sorted_set_]. Therefore, selected_ indexes the p-values rejected by the Benjamini–Hochberg procedure.\n\nsorted_ = np.sort(fund_pvalues)\nm = fund_pvalues.shape[0]\nq = 0.1\nsorted_set_ = np.where(sorted_ &lt; q * np.linspace(1, m, m) / m)[0]\nif sorted_set_.shape[0] &gt; 0:\n    selected_ = fund_pvalues &lt; sorted_[sorted_set_].max()\n    sorted_set_ = np.arange(sorted_set_.max())\nelse:\n    selected_ = []\n    sorted_set_ = []\n\nWe now reproduce the middle panel of Figure~.\n\nfig, ax = plt.subplots()\nax.scatter(np.arange(0, sorted_.shape[0]) + 1,\n           sorted_, s=10)\nax.set_yscale('log')\nax.set_xscale('log')\nax.set_ylabel('P-Value')\nax.set_xlabel('Index')\nax.scatter(sorted_set_+1, sorted_[sorted_set_], c='r', s=20)\nax.axline((0, 0), (1,q/m), c='k', ls='--', linewidth=3);"
  },
  {
    "objectID": "posts/ch13-multiple-testing/Ch13-multiple-lab.html#a-re-sampling-approach",
    "href": "posts/ch13-multiple-testing/Ch13-multiple-lab.html#a-re-sampling-approach",
    "title": "Chapter 13: Multiple Testing Lab",
    "section": "",
    "text": "Here, we implement the re-sampling approach to hypothesis testing using the Khan dataset, which we investigated in Section~. First, we merge the training and testing data, which results in observations on 83 patients for 2,308 genes.\n\nKhan = load_data('Khan')      \nD = pd.concat([Khan['xtrain'], Khan['xtest']])\nD['Y'] = pd.concat([Khan['ytrain'], Khan['ytest']])\nD['Y'].value_counts()\n\nY\n2    29\n4    25\n3    18\n1    11\nName: count, dtype: int64\n\n\nThere are four classes of cancer. For each gene, we compare the mean expression in the second class (rhabdomyosarcoma) to the mean expression in the fourth class (Burkitt’s lymphoma). Performing a standard two-sample t-test\nusing ttest_ind() from scipy.stats on the 11th gene produces a test-statistic of -2.09 and an associated p-value of 0.0412, suggesting modest evidence of a difference in mean expression levels between the two cancer types.\n\nD2 = D[lambda df:df['Y'] == 2]\nD4 = D[lambda df:df['Y'] == 4]\ngene_11 = 'G0011'\nobservedT, pvalue = ttest_ind(D2[gene_11],\n                              D4[gene_11],\n                              equal_var=True)\nobservedT, pvalue\n\n(-2.0936330736768185, 0.04118643782678394)\n\n\nHowever, this p-value relies on the assumption that under the null hypothesis of no difference between the two groups, the test statistic follows a t-distribution with 29+25-2=52 degrees of freedom. Instead of using this theoretical null distribution, we can randomly split the 54 patients into two groups of 29 and 25, and compute a new test statistic. Under the null hypothesis of no difference between the groups, this new test statistic should have the same distribution as our original one. Repeating this process 10,000 times allows us to approximate the null distribution of the test statistic. We compute the fraction of the time that our observed test statistic exceeds the test statistics obtained via re-sampling.\n\nB = 10000\nTnull = np.empty(B)\nD_ = np.hstack([D2[gene_11], D4[gene_11]])\nn_ = D2[gene_11].shape[0]\nD_null = D_.copy()\nfor b in range(B):\n    rng.shuffle(D_null)\n    ttest_ = ttest_ind(D_null[:n_],\n                       D_null[n_:],\n                       equal_var=True)\n    Tnull[b] = ttest_.statistic\n(np.abs(Tnull) &lt; np.abs(observedT)).mean()\n\n0.9602\n\n\nThis fraction, 0.0398, is our re-sampling-based p-value. It is almost identical to the p-value of 0.0412 obtained using the theoretical null distribution. We can plot a histogram of the re-sampling-based test statistics in order to reproduce Figure~.\n\nfig, ax = plt.subplots(figsize=(8,8))\nax.hist(Tnull,\n        bins=100,\n        density=True,\n        facecolor='y',\n        label='Null')\nxval = np.linspace(-4.2, 4.2, 1001)\nax.plot(xval,\n        t_dbn.pdf(xval, D_.shape[0]-2),\n        c='r')\nax.axvline(observedT,\n           c='b',\n           label='Observed')\nax.legend()\nax.set_xlabel(\"Null Distribution of Test Statistic\");\n\n\n\n\n\n\n\n\nThe re-sampling-based null distribution is almost identical to the theoretical null distribution, which is displayed in red.\nFinally, we implement the plug-in re-sampling FDR approach outlined in Algorithm~. Depending on the speed of your computer, calculating the FDR for all 2,308 genes in the Khan dataset may take a while. Hence, we will illustrate the approach on a random subset of 100 genes. For each gene, we first compute the observed test statistic, and then produce 10,000 re-sampled test statistics. This may take a few minutes to run. If you are in a rush, then you could set B equal to a smaller value (e.g. B=500).\n\nm, B = 100, 10000\nidx = rng.choice(Khan['xtest'].columns, m, replace=False)\nT_vals = np.empty(m)\nTnull_vals = np.empty((m, B))\n\nfor j in range(m):\n    col = idx[j]\n    T_vals[j] = ttest_ind(D2[col],\n                          D4[col],\n                          equal_var=True).statistic\n    D_ = np.hstack([D2[col], D4[col]])\n    D_null = D_.copy()\n    for b in range(B):\n        rng.shuffle(D_null)\n        ttest_ = ttest_ind(D_null[:n_],\n                           D_null[n_:],\n                           equal_var=True)\n        Tnull_vals[j,b] = ttest_.statistic\n\nNext, we compute the number of rejected null hypotheses R, the estimated number of false positives \\widehat{V}, and the estimated FDR, for a range of threshold values c in Algorithm~. The threshold values are chosen using the absolute values of the test statistics from the 100 genes.\n\ncutoffs = np.sort(np.abs(T_vals))\nFDRs, Rs, Vs = np.empty((3, m))\nfor j in range(m):\n   R = np.sum(np.abs(T_vals) &gt;= cutoffs[j])\n   V = np.sum(np.abs(Tnull_vals) &gt;= cutoffs[j]) / B\n   Rs[j] = R\n   Vs[j] = V\n   FDRs[j] = V / R\n\nNow, for any given FDR, we can find the genes that will be rejected. For example, with FDR controlled at 0.1, we reject 15 of the 100 null hypotheses. On average, we would expect about one or two of these genes (i.e. 10% of 15) to be false discoveries. At an FDR of 0.2, we can reject the null hypothesis for 28 genes, of which we expect around six to be false discoveries.\nThe variable idx stores which genes were included in our 100 randomly-selected genes. Let’s look at the genes whose estimated FDR is less than 0.1.\n\nsorted(idx[np.abs(T_vals) &gt;= cutoffs[FDRs &lt; 0.1].min()])\n\n['G0097',\n 'G0129',\n 'G0182',\n 'G0714',\n 'G0812',\n 'G0941',\n 'G0982',\n 'G1020',\n 'G1022',\n 'G1090',\n 'G1320',\n 'G1634',\n 'G1697',\n 'G1853',\n 'G1854',\n 'G1994',\n 'G2017',\n 'G2115',\n 'G2193']\n\n\nAt an FDR threshold of 0.2, more genes are selected, at the cost of having a higher expected proportion of false discoveries.\n\nsorted(idx[np.abs(T_vals) &gt;= cutoffs[FDRs &lt; 0.2].min()])\n\n['G0097',\n 'G0129',\n 'G0158',\n 'G0182',\n 'G0242',\n 'G0552',\n 'G0679',\n 'G0714',\n 'G0751',\n 'G0812',\n 'G0908',\n 'G0941',\n 'G0982',\n 'G1020',\n 'G1022',\n 'G1090',\n 'G1240',\n 'G1244',\n 'G1320',\n 'G1381',\n 'G1514',\n 'G1634',\n 'G1697',\n 'G1768',\n 'G1853',\n 'G1854',\n 'G1907',\n 'G1994',\n 'G2017',\n 'G2115',\n 'G2193']\n\n\nThe next line generates Figure~, which is similar to Figure~, except that it is based on only a subset of the genes.\n\nfig, ax = plt.subplots()\nax.plot(Rs, FDRs, 'b', linewidth=3)\nax.set_xlabel(\"Number of Rejections\")\nax.set_ylabel(\"False Discovery Rate\");"
  },
  {
    "objectID": "posts/ch09-svm/Ch09-svm-lab.html",
    "href": "posts/ch09-svm/Ch09-svm-lab.html",
    "title": "Chapter 9: Support Vector Machines Lab",
    "section": "",
    "text": "In this lab, we use the sklearn.svm library to demonstrate the support vector classifier and the support vector machine.\nWe import some of our usual libraries.\n\nimport numpy as np\nfrom matplotlib.pyplot import subplots, cm\nimport sklearn.model_selection as skm\nfrom ISLP import load_data, confusion_table\n\nWe also collect the new imports needed for this lab.\n\nfrom sklearn.svm import SVC\nfrom ISLP.svm import plot as plot_svm\nfrom sklearn.metrics import RocCurveDisplay\n\nWe will use the function RocCurveDisplay.from_estimator() to produce several ROC plots, using a shorthand roc_curve.\n\nroc_curve = RocCurveDisplay.from_estimator # shorthand\n\n\n\nWe now use the SupportVectorClassifier() function (abbreviated SVC()) from sklearn to fit the support vector classifier for a given value of the parameter C. The C argument allows us to specify the cost of a violation to the margin. When the cost argument is small, then the margins will be wide and many support vectors will be on the margin or will violate the margin. When the C argument is large, then the margins will be narrow and there will be few support vectors on the margin or violating the margin.\nHere we demonstrate the use of SVC() on a two-dimensional example, so that we can plot the resulting decision boundary. We begin by generating the observations, which belong to two classes, and checking whether the classes are linearly separable.\n\nrng = np.random.default_rng(1)\nX = rng.standard_normal((50, 2))\ny = np.array([-1]*25+[1]*25)\nX[y==1] += 1\nfig, ax = subplots(figsize=(8,8))\nax.scatter(X[:,0],\n           X[:,1],\n           c=y,\n           cmap=cm.coolwarm);\n\n\n\n\n\n\n\n\nThey are not. We now fit the classifier.\n\nsvm_linear = SVC(C=10, kernel='linear')\nsvm_linear.fit(X, y)\n\nSVC(C=10, kernel='linear')In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.  SVC?Documentation for SVCiFittedSVC(C=10, kernel='linear') \n\n\nThe support vector classifier with two features can be visualized by plotting values of its decision function. We have included a function for this in the ISLP package (inspired by a similar example in the sklearn docs).\n\nfig, ax = subplots(figsize=(8,8))\nplot_svm(X,\n         y,\n         svm_linear,\n         ax=ax)\n\n\n\n\n\n\n\n\nThe decision boundary between the two classes is linear (because we used the argument kernel='linear'). The support vectors are marked with + and the remaining observations are plotted as circles.\nWhat if we instead used a smaller value of the cost parameter?\n\nsvm_linear_small = SVC(C=0.1, kernel='linear')\nsvm_linear_small.fit(X, y)\nfig, ax = subplots(figsize=(8,8))\nplot_svm(X,\n         y,\n         svm_linear_small,\n         ax=ax)\n\nSVC(C=0.1, kernel='linear')In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.  SVC?Documentation for SVCiFittedSVC(C=0.1, kernel='linear') \n\n\n\n\n\n\n\n\n\nWith a smaller value of the cost parameter, we obtain a larger number of support vectors, because the margin is now wider. For linear kernels, we can extract the coefficients of the linear decision boundary as follows:\n\nsvm_linear.coef_\n\narray([[1.17303943, 0.77348227]])\n\n\nSince the support vector machine is an estimator in sklearn, we can use the usual machinery to tune it.\n\nkfold = skm.KFold(5, \n                  random_state=0,\n                  shuffle=True)\ngrid = skm.GridSearchCV(svm_linear,\n                        {'C':[0.001,0.01,0.1,1,5,10,100]},\n                        refit=True,\n                        cv=kfold,\n                        scoring='accuracy')\ngrid.fit(X, y)\ngrid.best_params_\n\nGridSearchCV(cv=KFold(n_splits=5, random_state=0, shuffle=True),\n             estimator=SVC(C=10, kernel='linear'),\n             param_grid={'C': [0.001, 0.01, 0.1, 1, 5, 10, 100]},\n             scoring='accuracy')In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.  GridSearchCV?Documentation for GridSearchCViFittedGridSearchCV(cv=KFold(n_splits=5, random_state=0, shuffle=True),\n             estimator=SVC(C=10, kernel='linear'),\n             param_grid={'C': [0.001, 0.01, 0.1, 1, 5, 10, 100]},\n             scoring='accuracy') best_estimator_: SVCSVC(C=1, kernel='linear')  SVC?Documentation for SVCSVC(C=1, kernel='linear') \n\n\n{'C': 1}\n\n\nWe can easily access the cross-validation errors for each of these models in grid.cv_results_. This prints out a lot of detail, so we extract the accuracy results only.\n\ngrid.cv_results_[('mean_test_score')]\n\narray([0.46, 0.46, 0.72, 0.74, 0.74, 0.74, 0.74])\n\n\nWe see that C=1 results in the highest cross-validation accuracy of 0.74, though the accuracy is the same for several values of C. The classifier grid.best_estimator_ can be used to predict the class label on a set of test observations. Let’s generate a test data set.\n\nX_test = rng.standard_normal((20, 2))\ny_test = np.array([-1]*10+[1]*10)\nX_test[y_test==1] += 1\n\nNow we predict the class labels of these test observations. Here we use the best model selected by cross-validation in order to make the predictions.\n\nbest_ = grid.best_estimator_\ny_test_hat = best_.predict(X_test)\nconfusion_table(y_test_hat, y_test)\n\n\n\n\n\n\n\nTruth\n-1\n1\n\n\nPredicted\n\n\n\n\n\n\n-1\n8\n4\n\n\n1\n2\n6\n\n\n\n\n\n\n\nThus, with this value of C, 70% of the test observations are correctly classified. What if we had instead used C=0.001?\n\nsvm_ = SVC(C=0.001,\n           kernel='linear').fit(X, y)\ny_test_hat = svm_.predict(X_test)\nconfusion_table(y_test_hat, y_test)\n\n\n\n\n\n\n\nTruth\n-1\n1\n\n\nPredicted\n\n\n\n\n\n\n-1\n2\n0\n\n\n1\n8\n10\n\n\n\n\n\n\n\nIn this case 60% of test observations are correctly classified.\nWe now consider a situation in which the two classes are linearly separable. Then we can find an optimal separating hyperplane using the SVC() estimator. We first further separate the two classes in our simulated data so that they are linearly separable:\n\nX[y==1] += 1.9;\nfig, ax = subplots(figsize=(8,8))\nax.scatter(X[:,0], X[:,1], c=y, cmap=cm.coolwarm);\n\n\n\n\n\n\n\n\nNow the observations are just barely linearly separable.\n\nsvm_ = SVC(C=1e5, kernel='linear').fit(X, y)\ny_hat = svm_.predict(X)\nconfusion_table(y_hat, y)\n\n\n\n\n\n\n\nTruth\n-1\n1\n\n\nPredicted\n\n\n\n\n\n\n-1\n25\n0\n\n\n1\n0\n25\n\n\n\n\n\n\n\nWe fit the support vector classifier and plot the resulting hyperplane, using a very large value of C so that no observations are misclassified.\n\nfig, ax = subplots(figsize=(8,8))\nplot_svm(X,\n         y,\n         svm_,\n         ax=ax)\n\n\n\n\n\n\n\n\nIndeed no training errors were made and only three support vectors were used. In fact, the large value of C also means that these three support points are on the margin, and define it. One may wonder how good the classifier could be on test data that depends on only three data points! We now try a smaller value of C.\n\nsvm_ = SVC(C=0.1, kernel='linear').fit(X, y)\ny_hat = svm_.predict(X)\nconfusion_table(y_hat, y)\n\n\n\n\n\n\n\nTruth\n-1\n1\n\n\nPredicted\n\n\n\n\n\n\n-1\n25\n0\n\n\n1\n0\n25\n\n\n\n\n\n\n\nUsing C=0.1, we again do not misclassify any training observations, but we also obtain a much wider margin and make use of twelve support vectors. These jointly define the orientation of the decision boundary, and since there are more of them, it is more stable. It seems possible that this model will perform better on test data than the model with C=1e5 (and indeed, a simple experiment with a large test set would bear this out).\n\nfig, ax = subplots(figsize=(8,8))\nplot_svm(X,\n         y,\n         svm_,\n         ax=ax)\n\n\n\n\n\n\n\n\n\n\n\nIn order to fit an SVM using a non-linear kernel, we once again use the SVC() estimator. However, now we use a different value of the parameter kernel. To fit an SVM with a polynomial kernel we use kernel=\"poly\", and to fit an SVM with a radial kernel we use kernel=\"rbf\". In the former case we also use the degree argument to specify a degree for the polynomial kernel (this is d in ()), and in the latter case we use gamma to specify a value of \\gamma for the radial basis kernel ().\nWe first generate some data with a non-linear class boundary, as follows:\n\nX = rng.standard_normal((200, 2))\nX[:100] += 2\nX[100:150] -= 2\ny = np.array([1]*150+[2]*50)\n\nPlotting the data makes it clear that the class boundary is indeed non-linear.\n\nfig, ax = subplots(figsize=(8,8))\nax.scatter(X[:,0],\n           X[:,1],\n           c=y,\n           cmap=cm.coolwarm);\n\n\n\n\n\n\n\n\nThe data is randomly split into training and testing groups. We then fit the training data using the SVC() estimator with a radial kernel and \\gamma=1:\n\n(X_train, \n X_test,\n y_train,\n y_test) = skm.train_test_split(X,\n                                y,\n                                test_size=0.5,\n                                random_state=0)\nsvm_rbf = SVC(kernel=\"rbf\", gamma=1, C=1)\nsvm_rbf.fit(X_train, y_train)\n\nSVC(C=1, gamma=1)In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.  SVC?Documentation for SVCiFittedSVC(C=1, gamma=1) \n\n\nThe plot shows that the resulting SVM has a decidedly non-linear boundary.\n\nfig, ax = subplots(figsize=(8,8))\nplot_svm(X_train,\n         y_train,\n         svm_rbf,\n         ax=ax)\n\n\n\n\n\n\n\n\nWe can see from the figure that there are a fair number of training errors in this SVM fit. If we increase the value of C, we can reduce the number of training errors. However, this comes at the price of a more irregular decision boundary that seems to be at risk of overfitting the data.\n\nsvm_rbf = SVC(kernel=\"rbf\", gamma=1, C=1e5)\nsvm_rbf.fit(X_train, y_train)\nfig, ax = subplots(figsize=(8,8))\nplot_svm(X_train,\n         y_train,\n         svm_rbf,\n         ax=ax)\n\nSVC(C=100000.0, gamma=1)In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.  SVC?Documentation for SVCiFittedSVC(C=100000.0, gamma=1) \n\n\n\n\n\n\n\n\n\nWe can perform cross-validation using skm.GridSearchCV() to select the best choice of \\gamma and C for an SVM with a radial kernel:\n\nkfold = skm.KFold(5, \n                  random_state=0,\n                  shuffle=True)\ngrid = skm.GridSearchCV(svm_rbf,\n                        {'C':[0.1,1,10,100,1000],\n                         'gamma':[0.5,1,2,3,4]},\n                        refit=True,\n                        cv=kfold,\n                        scoring='accuracy');\ngrid.fit(X_train, y_train)\ngrid.best_params_\n\nGridSearchCV(cv=KFold(n_splits=5, random_state=0, shuffle=True),\n             estimator=SVC(C=100000.0, gamma=1),\n             param_grid={'C': [0.1, 1, 10, 100, 1000],\n                         'gamma': [0.5, 1, 2, 3, 4]},\n             scoring='accuracy')In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.  GridSearchCV?Documentation for GridSearchCViFittedGridSearchCV(cv=KFold(n_splits=5, random_state=0, shuffle=True),\n             estimator=SVC(C=100000.0, gamma=1),\n             param_grid={'C': [0.1, 1, 10, 100, 1000],\n                         'gamma': [0.5, 1, 2, 3, 4]},\n             scoring='accuracy') best_estimator_: SVCSVC(C=1, gamma=0.5)  SVC?Documentation for SVCSVC(C=1, gamma=0.5) \n\n\n{'C': 1, 'gamma': 0.5}\n\n\nThe best choice of parameters under five-fold CV is achieved at C=1 and gamma=0.5, though several other values also achieve the same value.\n\nbest_svm = grid.best_estimator_\nfig, ax = subplots(figsize=(8,8))\nplot_svm(X_train,\n         y_train,\n         best_svm,\n         ax=ax)\n\ny_hat_test = best_svm.predict(X_test)\nconfusion_table(y_hat_test, y_test)\n\n\n\n\n\n\n\nTruth\n1\n2\n\n\nPredicted\n\n\n\n\n\n\n1\n69\n6\n\n\n2\n6\n19\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nWith these parameters, 12% of test observations are misclassified by this SVM.\n\n\n\nSVMs and support vector classifiers output class labels for each observation. However, it is also possible to obtain fitted values for each observation, which are the numerical scores used to obtain the class labels. For instance, in the case of a support vector classifier, the fitted value for an observation X= (X_1, X_2, \\ldots,\nX_p)^T takes the form \\hat{\\beta}_0 + \\hat{\\beta}_1 X_1 +\n\\hat{\\beta}_2 X_2 + \\ldots + \\hat{\\beta}_p X_p. For an SVM with a non-linear kernel, the equation that yields the fitted value is given in (). The sign of the fitted value determines on which side of the decision boundary the observation lies. Therefore, the relationship between the fitted value and the class prediction for a given observation is simple: if the fitted value exceeds zero then the observation is assigned to one class, and if it is less than zero then it is assigned to the other. By changing this threshold from zero to some positive value, we skew the classifications in favor of one class versus the other. By considering a range of these thresholds, positive and negative, we produce the ingredients for a ROC plot. We can access these values by calling the decision_function() method of a fitted SVM estimator.\nThe function ROCCurveDisplay.from_estimator() (which we have abbreviated to roc_curve()) will produce a plot of a ROC curve. It takes a fitted estimator as its first argument, followed by a model matrix X and labels y. The argument name is used in the legend, while color is used for the color of the line. Results are plotted on our axis object ax.\n\nfig, ax = subplots(figsize=(8,8))\nroc_curve(best_svm,\n          X_train,\n          y_train,\n          name='Training',\n          color='r',\n          ax=ax);\n\n\n\n\n\n\n\n\nIn this example, the SVM appears to provide accurate predictions. By increasing \\gamma we can produce a more flexible fit and generate further improvements in accuracy.\n\nsvm_flex = SVC(kernel=\"rbf\", \n              gamma=50,\n              C=1)\nsvm_flex.fit(X_train, y_train)\nfig, ax = subplots(figsize=(8,8))\nroc_curve(svm_flex,\n          X_train,\n          y_train,\n          name='Training $\\gamma=50$',\n          color='r',\n          ax=ax);\n\n\n\n\n\n\n\n\nHowever, these ROC curves are all on the training data. We are really more interested in the level of prediction accuracy on the test data. When we compute the ROC curves on the test data, the model with \\gamma=0.5 appears to provide the most accurate results.\n\nroc_curve(svm_flex,\n          X_test,\n          y_test,\n          name='Test $\\gamma=50$',\n          color='b',\n          ax=ax)\nfig;\n\nLet’s look at our tuned SVM.\n\nfig, ax = subplots(figsize=(8,8))\nfor (X_, y_, c, name) in zip(\n     (X_train, X_test),\n     (y_train, y_test),\n     ('r', 'b'),\n     ('CV tuned on training',\n      'CV tuned on test')):\n    roc_curve(best_svm,\n              X_,\n              y_,\n              name=name,\n              ax=ax,\n              color=c)\n\n\n\n\n\n\n\n\n\n\n\nIf the response is a factor containing more than two levels, then the SVC() function will perform multi-class classification using either the one-versus-one approach (when decision_function_shape=='ovo') or one-versus-rest {One-versus-rest is also known as one-versus-all.} (when decision_function_shape=='ovr'). We explore that setting briefly here by generating a third class of observations.\n\nrng = np.random.default_rng(123)\nX = np.vstack([X, rng.standard_normal((50, 2))])\ny = np.hstack([y, [0]*50])\nX[y==0,1] += 2\nfig, ax = subplots(figsize=(8,8))\nax.scatter(X[:,0], X[:,1], c=y, cmap=cm.coolwarm);\n\n\n\n\n\n\n\n\nWe now fit an SVM to the data:\n\nsvm_rbf_3 = SVC(kernel=\"rbf\",\n                C=10,\n                gamma=1,\n                decision_function_shape='ovo');\nsvm_rbf_3.fit(X, y)\nfig, ax = subplots(figsize=(8,8))\nplot_svm(X,\n         y,\n         svm_rbf_3,\n         scatter_cmap=cm.tab10,\n         ax=ax)\n\nSVC(C=10, decision_function_shape='ovo', gamma=1)In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.  SVC?Documentation for SVCiFittedSVC(C=10, decision_function_shape='ovo', gamma=1) \n\n\n\n\n\n\n\n\n\nThe sklearn.svm library can also be used to perform support vector regression with a numerical response using the estimator SupportVectorRegression().\n\n\n\nWe now examine the Khan data set, which consists of a number of tissue samples corresponding to four distinct types of small round blue cell tumors. For each tissue sample, gene expression measurements are available. The data set consists of training data, xtrain and ytrain, and testing data, xtest and ytest.\nWe examine the dimension of the data:\n\nKhan = load_data('Khan')\nKhan['xtrain'].shape, Khan['xtest'].shape\n\n((63, 2308), (20, 2308))\n\n\nThis data set consists of expression measurements for 2,308 genes. The training and test sets consist of 63 and 20 observations, respectively.\nWe will use a support vector approach to predict cancer subtype using gene expression measurements. In this data set, there is a very large number of features relative to the number of observations. This suggests that we should use a linear kernel, because the additional flexibility that will result from using a polynomial or radial kernel is unnecessary.\n\nkhan_linear = SVC(kernel='linear', C=10)\nkhan_linear.fit(Khan['xtrain'], Khan['ytrain'])\nconfusion_table(khan_linear.predict(Khan['xtrain']),\n                Khan['ytrain'])\n\nSVC(C=10, kernel='linear')In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.  SVC?Documentation for SVCiFittedSVC(C=10, kernel='linear') \n\n\n\n\n\n\n\n\nTruth\n1\n2\n3\n4\n\n\nPredicted\n\n\n\n\n\n\n\n\n1\n8\n0\n0\n0\n\n\n2\n0\n23\n0\n0\n\n\n3\n0\n0\n12\n0\n\n\n4\n0\n0\n0\n20\n\n\n\n\n\n\n\nWe see that there are no training errors. In fact, this is not surprising, because the large number of variables relative to the number of observations implies that it is easy to find hyperplanes that fully separate the classes. We are more interested in the support vector classifier’s performance on the test observations.\n\nconfusion_table(khan_linear.predict(Khan['xtest']),\n                Khan['ytest'])\n\n\n\n\n\n\n\nTruth\n1\n2\n3\n4\n\n\nPredicted\n\n\n\n\n\n\n\n\n1\n3\n0\n0\n0\n\n\n2\n0\n6\n2\n0\n\n\n3\n0\n0\n4\n0\n\n\n4\n0\n0\n0\n5\n\n\n\n\n\n\n\nWe see that using C=10 yields two test set errors on these data."
  },
  {
    "objectID": "posts/ch09-svm/Ch09-svm-lab.html#support-vector-classifier",
    "href": "posts/ch09-svm/Ch09-svm-lab.html#support-vector-classifier",
    "title": "Chapter 9: Support Vector Machines Lab",
    "section": "",
    "text": "We now use the SupportVectorClassifier() function (abbreviated SVC()) from sklearn to fit the support vector classifier for a given value of the parameter C. The C argument allows us to specify the cost of a violation to the margin. When the cost argument is small, then the margins will be wide and many support vectors will be on the margin or will violate the margin. When the C argument is large, then the margins will be narrow and there will be few support vectors on the margin or violating the margin.\nHere we demonstrate the use of SVC() on a two-dimensional example, so that we can plot the resulting decision boundary. We begin by generating the observations, which belong to two classes, and checking whether the classes are linearly separable.\n\nrng = np.random.default_rng(1)\nX = rng.standard_normal((50, 2))\ny = np.array([-1]*25+[1]*25)\nX[y==1] += 1\nfig, ax = subplots(figsize=(8,8))\nax.scatter(X[:,0],\n           X[:,1],\n           c=y,\n           cmap=cm.coolwarm);\n\n\n\n\n\n\n\n\nThey are not. We now fit the classifier.\n\nsvm_linear = SVC(C=10, kernel='linear')\nsvm_linear.fit(X, y)\n\nSVC(C=10, kernel='linear')In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.  SVC?Documentation for SVCiFittedSVC(C=10, kernel='linear') \n\n\nThe support vector classifier with two features can be visualized by plotting values of its decision function. We have included a function for this in the ISLP package (inspired by a similar example in the sklearn docs).\n\nfig, ax = subplots(figsize=(8,8))\nplot_svm(X,\n         y,\n         svm_linear,\n         ax=ax)\n\n\n\n\n\n\n\n\nThe decision boundary between the two classes is linear (because we used the argument kernel='linear'). The support vectors are marked with + and the remaining observations are plotted as circles.\nWhat if we instead used a smaller value of the cost parameter?\n\nsvm_linear_small = SVC(C=0.1, kernel='linear')\nsvm_linear_small.fit(X, y)\nfig, ax = subplots(figsize=(8,8))\nplot_svm(X,\n         y,\n         svm_linear_small,\n         ax=ax)\n\nSVC(C=0.1, kernel='linear')In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.  SVC?Documentation for SVCiFittedSVC(C=0.1, kernel='linear') \n\n\n\n\n\n\n\n\n\nWith a smaller value of the cost parameter, we obtain a larger number of support vectors, because the margin is now wider. For linear kernels, we can extract the coefficients of the linear decision boundary as follows:\n\nsvm_linear.coef_\n\narray([[1.17303943, 0.77348227]])\n\n\nSince the support vector machine is an estimator in sklearn, we can use the usual machinery to tune it.\n\nkfold = skm.KFold(5, \n                  random_state=0,\n                  shuffle=True)\ngrid = skm.GridSearchCV(svm_linear,\n                        {'C':[0.001,0.01,0.1,1,5,10,100]},\n                        refit=True,\n                        cv=kfold,\n                        scoring='accuracy')\ngrid.fit(X, y)\ngrid.best_params_\n\nGridSearchCV(cv=KFold(n_splits=5, random_state=0, shuffle=True),\n             estimator=SVC(C=10, kernel='linear'),\n             param_grid={'C': [0.001, 0.01, 0.1, 1, 5, 10, 100]},\n             scoring='accuracy')In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.  GridSearchCV?Documentation for GridSearchCViFittedGridSearchCV(cv=KFold(n_splits=5, random_state=0, shuffle=True),\n             estimator=SVC(C=10, kernel='linear'),\n             param_grid={'C': [0.001, 0.01, 0.1, 1, 5, 10, 100]},\n             scoring='accuracy') best_estimator_: SVCSVC(C=1, kernel='linear')  SVC?Documentation for SVCSVC(C=1, kernel='linear') \n\n\n{'C': 1}\n\n\nWe can easily access the cross-validation errors for each of these models in grid.cv_results_. This prints out a lot of detail, so we extract the accuracy results only.\n\ngrid.cv_results_[('mean_test_score')]\n\narray([0.46, 0.46, 0.72, 0.74, 0.74, 0.74, 0.74])\n\n\nWe see that C=1 results in the highest cross-validation accuracy of 0.74, though the accuracy is the same for several values of C. The classifier grid.best_estimator_ can be used to predict the class label on a set of test observations. Let’s generate a test data set.\n\nX_test = rng.standard_normal((20, 2))\ny_test = np.array([-1]*10+[1]*10)\nX_test[y_test==1] += 1\n\nNow we predict the class labels of these test observations. Here we use the best model selected by cross-validation in order to make the predictions.\n\nbest_ = grid.best_estimator_\ny_test_hat = best_.predict(X_test)\nconfusion_table(y_test_hat, y_test)\n\n\n\n\n\n\n\nTruth\n-1\n1\n\n\nPredicted\n\n\n\n\n\n\n-1\n8\n4\n\n\n1\n2\n6\n\n\n\n\n\n\n\nThus, with this value of C, 70% of the test observations are correctly classified. What if we had instead used C=0.001?\n\nsvm_ = SVC(C=0.001,\n           kernel='linear').fit(X, y)\ny_test_hat = svm_.predict(X_test)\nconfusion_table(y_test_hat, y_test)\n\n\n\n\n\n\n\nTruth\n-1\n1\n\n\nPredicted\n\n\n\n\n\n\n-1\n2\n0\n\n\n1\n8\n10\n\n\n\n\n\n\n\nIn this case 60% of test observations are correctly classified.\nWe now consider a situation in which the two classes are linearly separable. Then we can find an optimal separating hyperplane using the SVC() estimator. We first further separate the two classes in our simulated data so that they are linearly separable:\n\nX[y==1] += 1.9;\nfig, ax = subplots(figsize=(8,8))\nax.scatter(X[:,0], X[:,1], c=y, cmap=cm.coolwarm);\n\n\n\n\n\n\n\n\nNow the observations are just barely linearly separable.\n\nsvm_ = SVC(C=1e5, kernel='linear').fit(X, y)\ny_hat = svm_.predict(X)\nconfusion_table(y_hat, y)\n\n\n\n\n\n\n\nTruth\n-1\n1\n\n\nPredicted\n\n\n\n\n\n\n-1\n25\n0\n\n\n1\n0\n25\n\n\n\n\n\n\n\nWe fit the support vector classifier and plot the resulting hyperplane, using a very large value of C so that no observations are misclassified.\n\nfig, ax = subplots(figsize=(8,8))\nplot_svm(X,\n         y,\n         svm_,\n         ax=ax)\n\n\n\n\n\n\n\n\nIndeed no training errors were made and only three support vectors were used. In fact, the large value of C also means that these three support points are on the margin, and define it. One may wonder how good the classifier could be on test data that depends on only three data points! We now try a smaller value of C.\n\nsvm_ = SVC(C=0.1, kernel='linear').fit(X, y)\ny_hat = svm_.predict(X)\nconfusion_table(y_hat, y)\n\n\n\n\n\n\n\nTruth\n-1\n1\n\n\nPredicted\n\n\n\n\n\n\n-1\n25\n0\n\n\n1\n0\n25\n\n\n\n\n\n\n\nUsing C=0.1, we again do not misclassify any training observations, but we also obtain a much wider margin and make use of twelve support vectors. These jointly define the orientation of the decision boundary, and since there are more of them, it is more stable. It seems possible that this model will perform better on test data than the model with C=1e5 (and indeed, a simple experiment with a large test set would bear this out).\n\nfig, ax = subplots(figsize=(8,8))\nplot_svm(X,\n         y,\n         svm_,\n         ax=ax)"
  },
  {
    "objectID": "posts/ch09-svm/Ch09-svm-lab.html#support-vector-machine",
    "href": "posts/ch09-svm/Ch09-svm-lab.html#support-vector-machine",
    "title": "Chapter 9: Support Vector Machines Lab",
    "section": "",
    "text": "In order to fit an SVM using a non-linear kernel, we once again use the SVC() estimator. However, now we use a different value of the parameter kernel. To fit an SVM with a polynomial kernel we use kernel=\"poly\", and to fit an SVM with a radial kernel we use kernel=\"rbf\". In the former case we also use the degree argument to specify a degree for the polynomial kernel (this is d in ()), and in the latter case we use gamma to specify a value of \\gamma for the radial basis kernel ().\nWe first generate some data with a non-linear class boundary, as follows:\n\nX = rng.standard_normal((200, 2))\nX[:100] += 2\nX[100:150] -= 2\ny = np.array([1]*150+[2]*50)\n\nPlotting the data makes it clear that the class boundary is indeed non-linear.\n\nfig, ax = subplots(figsize=(8,8))\nax.scatter(X[:,0],\n           X[:,1],\n           c=y,\n           cmap=cm.coolwarm);\n\n\n\n\n\n\n\n\nThe data is randomly split into training and testing groups. We then fit the training data using the SVC() estimator with a radial kernel and \\gamma=1:\n\n(X_train, \n X_test,\n y_train,\n y_test) = skm.train_test_split(X,\n                                y,\n                                test_size=0.5,\n                                random_state=0)\nsvm_rbf = SVC(kernel=\"rbf\", gamma=1, C=1)\nsvm_rbf.fit(X_train, y_train)\n\nSVC(C=1, gamma=1)In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.  SVC?Documentation for SVCiFittedSVC(C=1, gamma=1) \n\n\nThe plot shows that the resulting SVM has a decidedly non-linear boundary.\n\nfig, ax = subplots(figsize=(8,8))\nplot_svm(X_train,\n         y_train,\n         svm_rbf,\n         ax=ax)\n\n\n\n\n\n\n\n\nWe can see from the figure that there are a fair number of training errors in this SVM fit. If we increase the value of C, we can reduce the number of training errors. However, this comes at the price of a more irregular decision boundary that seems to be at risk of overfitting the data.\n\nsvm_rbf = SVC(kernel=\"rbf\", gamma=1, C=1e5)\nsvm_rbf.fit(X_train, y_train)\nfig, ax = subplots(figsize=(8,8))\nplot_svm(X_train,\n         y_train,\n         svm_rbf,\n         ax=ax)\n\nSVC(C=100000.0, gamma=1)In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.  SVC?Documentation for SVCiFittedSVC(C=100000.0, gamma=1) \n\n\n\n\n\n\n\n\n\nWe can perform cross-validation using skm.GridSearchCV() to select the best choice of \\gamma and C for an SVM with a radial kernel:\n\nkfold = skm.KFold(5, \n                  random_state=0,\n                  shuffle=True)\ngrid = skm.GridSearchCV(svm_rbf,\n                        {'C':[0.1,1,10,100,1000],\n                         'gamma':[0.5,1,2,3,4]},\n                        refit=True,\n                        cv=kfold,\n                        scoring='accuracy');\ngrid.fit(X_train, y_train)\ngrid.best_params_\n\nGridSearchCV(cv=KFold(n_splits=5, random_state=0, shuffle=True),\n             estimator=SVC(C=100000.0, gamma=1),\n             param_grid={'C': [0.1, 1, 10, 100, 1000],\n                         'gamma': [0.5, 1, 2, 3, 4]},\n             scoring='accuracy')In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.  GridSearchCV?Documentation for GridSearchCViFittedGridSearchCV(cv=KFold(n_splits=5, random_state=0, shuffle=True),\n             estimator=SVC(C=100000.0, gamma=1),\n             param_grid={'C': [0.1, 1, 10, 100, 1000],\n                         'gamma': [0.5, 1, 2, 3, 4]},\n             scoring='accuracy') best_estimator_: SVCSVC(C=1, gamma=0.5)  SVC?Documentation for SVCSVC(C=1, gamma=0.5) \n\n\n{'C': 1, 'gamma': 0.5}\n\n\nThe best choice of parameters under five-fold CV is achieved at C=1 and gamma=0.5, though several other values also achieve the same value.\n\nbest_svm = grid.best_estimator_\nfig, ax = subplots(figsize=(8,8))\nplot_svm(X_train,\n         y_train,\n         best_svm,\n         ax=ax)\n\ny_hat_test = best_svm.predict(X_test)\nconfusion_table(y_hat_test, y_test)\n\n\n\n\n\n\n\nTruth\n1\n2\n\n\nPredicted\n\n\n\n\n\n\n1\n69\n6\n\n\n2\n6\n19\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nWith these parameters, 12% of test observations are misclassified by this SVM."
  },
  {
    "objectID": "posts/ch09-svm/Ch09-svm-lab.html#roc-curves",
    "href": "posts/ch09-svm/Ch09-svm-lab.html#roc-curves",
    "title": "Chapter 9: Support Vector Machines Lab",
    "section": "",
    "text": "SVMs and support vector classifiers output class labels for each observation. However, it is also possible to obtain fitted values for each observation, which are the numerical scores used to obtain the class labels. For instance, in the case of a support vector classifier, the fitted value for an observation X= (X_1, X_2, \\ldots,\nX_p)^T takes the form \\hat{\\beta}_0 + \\hat{\\beta}_1 X_1 +\n\\hat{\\beta}_2 X_2 + \\ldots + \\hat{\\beta}_p X_p. For an SVM with a non-linear kernel, the equation that yields the fitted value is given in (). The sign of the fitted value determines on which side of the decision boundary the observation lies. Therefore, the relationship between the fitted value and the class prediction for a given observation is simple: if the fitted value exceeds zero then the observation is assigned to one class, and if it is less than zero then it is assigned to the other. By changing this threshold from zero to some positive value, we skew the classifications in favor of one class versus the other. By considering a range of these thresholds, positive and negative, we produce the ingredients for a ROC plot. We can access these values by calling the decision_function() method of a fitted SVM estimator.\nThe function ROCCurveDisplay.from_estimator() (which we have abbreviated to roc_curve()) will produce a plot of a ROC curve. It takes a fitted estimator as its first argument, followed by a model matrix X and labels y. The argument name is used in the legend, while color is used for the color of the line. Results are plotted on our axis object ax.\n\nfig, ax = subplots(figsize=(8,8))\nroc_curve(best_svm,\n          X_train,\n          y_train,\n          name='Training',\n          color='r',\n          ax=ax);\n\n\n\n\n\n\n\n\nIn this example, the SVM appears to provide accurate predictions. By increasing \\gamma we can produce a more flexible fit and generate further improvements in accuracy.\n\nsvm_flex = SVC(kernel=\"rbf\", \n              gamma=50,\n              C=1)\nsvm_flex.fit(X_train, y_train)\nfig, ax = subplots(figsize=(8,8))\nroc_curve(svm_flex,\n          X_train,\n          y_train,\n          name='Training $\\gamma=50$',\n          color='r',\n          ax=ax);\n\n\n\n\n\n\n\n\nHowever, these ROC curves are all on the training data. We are really more interested in the level of prediction accuracy on the test data. When we compute the ROC curves on the test data, the model with \\gamma=0.5 appears to provide the most accurate results.\n\nroc_curve(svm_flex,\n          X_test,\n          y_test,\n          name='Test $\\gamma=50$',\n          color='b',\n          ax=ax)\nfig;\n\nLet’s look at our tuned SVM.\n\nfig, ax = subplots(figsize=(8,8))\nfor (X_, y_, c, name) in zip(\n     (X_train, X_test),\n     (y_train, y_test),\n     ('r', 'b'),\n     ('CV tuned on training',\n      'CV tuned on test')):\n    roc_curve(best_svm,\n              X_,\n              y_,\n              name=name,\n              ax=ax,\n              color=c)"
  },
  {
    "objectID": "posts/ch09-svm/Ch09-svm-lab.html#svm-with-multiple-classes",
    "href": "posts/ch09-svm/Ch09-svm-lab.html#svm-with-multiple-classes",
    "title": "Chapter 9: Support Vector Machines Lab",
    "section": "",
    "text": "If the response is a factor containing more than two levels, then the SVC() function will perform multi-class classification using either the one-versus-one approach (when decision_function_shape=='ovo') or one-versus-rest {One-versus-rest is also known as one-versus-all.} (when decision_function_shape=='ovr'). We explore that setting briefly here by generating a third class of observations.\n\nrng = np.random.default_rng(123)\nX = np.vstack([X, rng.standard_normal((50, 2))])\ny = np.hstack([y, [0]*50])\nX[y==0,1] += 2\nfig, ax = subplots(figsize=(8,8))\nax.scatter(X[:,0], X[:,1], c=y, cmap=cm.coolwarm);\n\n\n\n\n\n\n\n\nWe now fit an SVM to the data:\n\nsvm_rbf_3 = SVC(kernel=\"rbf\",\n                C=10,\n                gamma=1,\n                decision_function_shape='ovo');\nsvm_rbf_3.fit(X, y)\nfig, ax = subplots(figsize=(8,8))\nplot_svm(X,\n         y,\n         svm_rbf_3,\n         scatter_cmap=cm.tab10,\n         ax=ax)\n\nSVC(C=10, decision_function_shape='ovo', gamma=1)In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.  SVC?Documentation for SVCiFittedSVC(C=10, decision_function_shape='ovo', gamma=1) \n\n\n\n\n\n\n\n\n\nThe sklearn.svm library can also be used to perform support vector regression with a numerical response using the estimator SupportVectorRegression()."
  },
  {
    "objectID": "posts/ch09-svm/Ch09-svm-lab.html#application-to-gene-expression-data",
    "href": "posts/ch09-svm/Ch09-svm-lab.html#application-to-gene-expression-data",
    "title": "Chapter 9: Support Vector Machines Lab",
    "section": "",
    "text": "We now examine the Khan data set, which consists of a number of tissue samples corresponding to four distinct types of small round blue cell tumors. For each tissue sample, gene expression measurements are available. The data set consists of training data, xtrain and ytrain, and testing data, xtest and ytest.\nWe examine the dimension of the data:\n\nKhan = load_data('Khan')\nKhan['xtrain'].shape, Khan['xtest'].shape\n\n((63, 2308), (20, 2308))\n\n\nThis data set consists of expression measurements for 2,308 genes. The training and test sets consist of 63 and 20 observations, respectively.\nWe will use a support vector approach to predict cancer subtype using gene expression measurements. In this data set, there is a very large number of features relative to the number of observations. This suggests that we should use a linear kernel, because the additional flexibility that will result from using a polynomial or radial kernel is unnecessary.\n\nkhan_linear = SVC(kernel='linear', C=10)\nkhan_linear.fit(Khan['xtrain'], Khan['ytrain'])\nconfusion_table(khan_linear.predict(Khan['xtrain']),\n                Khan['ytrain'])\n\nSVC(C=10, kernel='linear')In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.  SVC?Documentation for SVCiFittedSVC(C=10, kernel='linear') \n\n\n\n\n\n\n\n\nTruth\n1\n2\n3\n4\n\n\nPredicted\n\n\n\n\n\n\n\n\n1\n8\n0\n0\n0\n\n\n2\n0\n23\n0\n0\n\n\n3\n0\n0\n12\n0\n\n\n4\n0\n0\n0\n20\n\n\n\n\n\n\n\nWe see that there are no training errors. In fact, this is not surprising, because the large number of variables relative to the number of observations implies that it is easy to find hyperplanes that fully separate the classes. We are more interested in the support vector classifier’s performance on the test observations.\n\nconfusion_table(khan_linear.predict(Khan['xtest']),\n                Khan['ytest'])\n\n\n\n\n\n\n\nTruth\n1\n2\n3\n4\n\n\nPredicted\n\n\n\n\n\n\n\n\n1\n3\n0\n0\n0\n\n\n2\n0\n6\n2\n0\n\n\n3\n0\n0\n4\n0\n\n\n4\n0\n0\n0\n5\n\n\n\n\n\n\n\nWe see that using C=10 yields two test set errors on these data."
  },
  {
    "objectID": "posts/ch06-model-selection-and-regularization/index.html",
    "href": "posts/ch06-model-selection-and-regularization/index.html",
    "title": "Chapter 6: Linear Model Selection and Regularization",
    "section": "",
    "text": "Figure 1: Opening Remarks\n\n\n\n\n\n\n\n\nFigure 2: Examples and Framework"
  },
  {
    "objectID": "posts/ch06-model-selection-and-regularization/index.html#premises",
    "href": "posts/ch06-model-selection-and-regularization/index.html#premises",
    "title": "Chapter 6: Linear Model Selection and Regularization",
    "section": "Premises:",
    "text": "Premises:\n\nStatistical learning is not a series of black boxes - we need to understand the way the cogs of models come together.\nWhile it is important to know what job is performed by each cog, it is not necessary to have the skills to construct the machine inside the box!\nThe readers are interested in applying the methods to real-world problems."
  },
  {
    "objectID": "posts/ch02-statistical-learning/index.html",
    "href": "posts/ch02-statistical-learning/index.html",
    "title": "Chapter 2: Statistical Learning",
    "section": "",
    "text": "Figure 1: Introduction to Regression Models\n\n\n\n\n\n\n\n\nFigure 2: Dimensionality and Structured Models\n\n\n\n\n\n\n\n\nFigure 3: Introduction to Regression Models\n\n\n\n\n\n\n\n\nFigure 4: Classification\n\n\n\n\n\n\n\n\nFigure 5: Lab: Introduction to R\nThe chapter is 53 pages long and covers the following topics:"
  },
  {
    "objectID": "posts/ch02-statistical-learning/index.html#key-terms-in-statistical-learning-and-machine-learning",
    "href": "posts/ch02-statistical-learning/index.html#key-terms-in-statistical-learning-and-machine-learning",
    "title": "Chapter 2: Statistical Learning",
    "section": "Key Terms in Statistical Learning and Machine Learning",
    "text": "Key Terms in Statistical Learning and Machine Learning\n\nStatistical Learning\n\nA set of tools for understanding data and building models that can be used for prediction or inference.\n\nInput Variables\n\nPredictors or features, denoted by X, used to predict the output variable.\n\nOutput Variable\n\nThe response or dependent variable, denoted by Y, being predicted.\n\nError Term\n\nRepresents the random variation in the output variable not explained by the input variables. Denoted by ε.\n\nPrediction\n\nUsing a statistical learning model to accurately predict the output variable for new observations based on their input values.\n\nInference\n\nUnderstanding the relationship between input and output variables, identifying important predictors, and quantifying their effects.\n\nParametric Methods\n\nModel-based approaches that assume a specific functional form for f and estimate its parameters using training data. Examples include linear regression and logistic regression.\n\nNon-parametric Methods\n\nFlexible approaches that do not pre-specify a functional form for f and estimate it directly from the data. Examples include K-nearest neighbors and splines.\n\nOverfitting\n\nOccurs when a model is too flexible and fits the training data too closely, leading to poor generalization to new data.\n\nBias\n\nError resulting from incorrect assumptions about the true functional form of f.\n\nVariance\n\nThe amount by which the estimated function f̂ changes when trained on different training datasets.\n\nBias-Variance Trade-off\n\nThe balance between model bias and variance, where more flexible models have higher variance but lower bias, and vice versa.\n\nCross-validation\n\nA technique for evaluating a model’s performance by splitting the data into multiple folds and using each fold for training and testing, providing a more robust estimate of test error.\n\nBayes Classifier\n\nA theoretical classifier that assigns each observation to the class with the highest conditional probability given its predictor values, achieving the lowest possible test error rate (Bayes error rate).\n\nK-nearest Neighbors (KNN)\n\nA non-parametric classification method that finds the K nearest neighbors to a test observation in the training data and estimates the conditional probability for each class based on the proportion of neighbors belonging to that class."
  },
  {
    "objectID": "posts/ch02-statistical-learning/index.html#chapter-summary",
    "href": "posts/ch02-statistical-learning/index.html#chapter-summary",
    "title": "Chapter 2: Statistical Learning",
    "section": "Chapter summary",
    "text": "Chapter summary\n\nWhat is Statistical Learning?\n\nStatistical learning uses data to learn about relationships between input variables (predictors) and an output variable (response). This relationship can be expressed as:\n\nY = f(X) + ε\n\nwhere:\n\nY is the response variable.\nX represents the predictors (X_1, X_2,..., X_p).\nf(X) is the unknown function capturing the systematic relationship between X and Y.\nε is a random error term with a mean of zero, independent of X.\n\nStatistical learning aims to estimate the function f(X) from observed data, enabling:\n\nPrediction: Using the estimated function (f̂) to predict Y for new values of X:\n\n\nŶ = f̂(X)\n\n\nThe accuracy of prediction is influenced by reducible error (due to imperfections in estimating f) and irreducible error (due to the inherent randomness represented by ε).\nInference: Understanding the relationship between predictors and response. This involves determining which predictors are most important, quantifying the strength of the relationship, and exploring the nature of the association.\n\n\nEstimating f(X)\n\nThere are two main approaches to estimating the function f(X):\n\nParametric Methods: Assume a specific functional form for f(X), like a linear model: \nf(X) = β_0 + β_1X_1 + β_2X_2 + ... + β_pX_p\n\nThis simplifies the problem to estimating the model’s parameters (βs). However, parametric methods may be inaccurate if the assumed form doesn’t match the true relationship.\nNon-Parametric Methods: Don’t assume a specific form for f(X), allowing for more flexibility. They try to fit the data as closely as possible while maintaining smoothness. Examples include thin-plate splines. These methods require careful tuning to prevent overfitting, where the model fits the training data perfectly but performs poorly on new data.\n\n\nAssessing Model Accuracy The choice of a suitable statistical learning method and its flexibility depends on the bias-variance trade-off:\n\nBias: Measures how much the estimated function (f̂) deviates from the true function (f) on average. Inflexible methods tend to have higher bias.\nVariance: Quantifies the sensitivity of f̂ to changes in the training data. More flexible methods typically exhibit higher variance.\nThe goal is to find the balance between bias and variance that minimizes the expected test error.\n\nSupervised vs. Unsupervised Learning\n\nSupervised Learning: Uses labeled data, where the response variable (Y) is known for each observation. Examples include regression and classification problems.\nUnsupervised Learning: Deals with unlabeled data, where the response variable is unknown. Techniques like clustering aim to identify groups or patterns in the data.\n\nClassification\n\nClassification problems involve predicting a qualitative (categorical) response variable. One common metric to assess the performance of classifiers is the error rate, which measures the proportion of incorrect predictions.\n\nBayes Classifier: A theoretical classifier that assigns each observation to the most likely class based on its predictors. It achieves the lowest possible error rate (Bayes error rate). However, the Bayes classifier is typically unattainable in practice, as it requires knowing the true conditional distribution of Y given X.\nK-Nearest Neighbors (KNN): A non-parametric classification method that estimates the conditional probability for each class by considering the closest K training observations to a test point. KNN requires selecting an appropriate value for K, balancing flexibility and overfitting.\n\n\nPython for Statistical Learning\n\nThe chapter introduces basic Python commands and data manipulation techniques using libraries like NumPy and Pandas. It covers:\n\nImporting libraries, defining arrays and matrices, computing basic statistics, and generating random data.\nCreating various plots (scatter plots, contour plots, heatmaps) using Matplotlib.\nSubsetting and indexing data frames, handling missing values, using for loops and lambdas for data manipulation.\n\nThese tools provide a foundation for applying statistical learning methods in practice."
  },
  {
    "objectID": "posts/ch02-statistical-learning/index.html#statistical-learning---test-your-understanding",
    "href": "posts/ch02-statistical-learning/index.html#statistical-learning---test-your-understanding",
    "title": "Chapter 2: Statistical Learning",
    "section": "Statistical Learning - Test Your Understanding!",
    "text": "Statistical Learning - Test Your Understanding!\n\nWhat is the fundamental goal of statistical learning?\nDifferentiate between the input and output variables in a statistical learning model.\nWhat is the role of the error term in the general form of the statistical learning model?\nExplain the difference between prediction and inference in the context of statistical learning.\nDescribe the two main steps involved in parametric methods for estimating f.\nWhat is a key advantage and a key disadvantage of non-parametric methods compared to parametric methods?\nHow does the concept of overfitting relate to the choice of flexibility in a statistical learning method?\nExplain the bias-variance trade-off and its impact on model selection.\nWhat is the Bayes classifier and why is it considered a gold standard in classification problems?\nHow does the K-nearest neighbors (KNN) classifier work?\n\n\nAnswer Key\n\nThe fundamental goal of statistical learning is to use a set of data to learn a function (f) that captures the relationship between input variables (predictors) and an output variable (response). This learned function can then be used for prediction or inference.\nInput variables, also known as predictors or features, are the variables used to predict the output variable. They are denoted by X. The output variable, also known as the response, is the variable being predicted, denoted by Y.\nThe error term (ε) represents the random variation in the output variable that cannot be explained by the input variables. It accounts for the inherent uncertainty and noise in the data.\nPrediction focuses on accurately predicting the output variable (Y) for new observations based on their input values (X), often treating the model as a black box. Inference aims to understand the relationship between the input variables and the output variable, focusing on identifying important predictors and their effects on the response.\nFirst, parametric methods assume a specific functional form for f, such as linear. Second, they estimate the parameters of the assumed function using the training data. For example, in a linear model, the parameters are the coefficients.\nNon-parametric methods are more flexible and can capture complex relationships in the data without pre-specifying a functional form for f. However, this flexibility can lead to overfitting, where the model fits the training data too closely and performs poorly on new data.\nOverfitting occurs when a model is too flexible and captures noise in the training data instead of the underlying signal. This results in high training accuracy but poor generalization to new data. Choosing an appropriate level of flexibility helps avoid overfitting.\nThe bias-variance trade-off refers to the balance between model bias (error from wrong assumptions about f) and variance (sensitivity to fluctuations in the training data). More flexible models have higher variance but lower bias, while less flexible models have lower variance but higher bias. Finding the optimal balance minimizes test error.\nThe Bayes classifier assigns each observation to the class with the highest conditional probability given its predictor values. It achieves the lowest possible test error rate (Bayes error rate) but is unattainable in practice because the true conditional probability distribution is unknown.\nThe KNN classifier finds the K nearest neighbors to a test observation in the training data based on a distance metric. It then estimates the conditional probability for each class based on the proportion of neighbors belonging to that class and classifies the test observation to the class with the highest estimated probability."
  },
  {
    "objectID": "posts/ch02-statistical-learning/index.html#essay-questions",
    "href": "posts/ch02-statistical-learning/index.html#essay-questions",
    "title": "Chapter 2: Statistical Learning",
    "section": "Essay Questions",
    "text": "Essay Questions\n\nDiscuss the differences between supervised and unsupervised learning, providing real-world examples of each.\nSupervised learning is the problem setting in which we have labels on the data. The label are not so much can be a category, a number.\nOur model will be shooting an arrow at a know target so it is easier to evaluate the model. This type of problems are broken into regression, classification, survival analysis, and time series analysis, and when learning from exprerience it becomes reinforcement learning.\nIn unsupervised learning we don’t have labels. Although we don’t have a target, this data is much easier to collect as labeling the data requires a significant effort and is often error prone. Typical problems are clustering, dimensionality reduction, and association rule learning. However many problems in natural language processing are unsupervised.\nAnother point is that the distinction isn’t so clear today we have semi-supervised learning where we have a small amount of labeled data and a large amount of unlabeled data. For example, LLM are pretrained on unsupervised data and then fine-tuned on supervised data.\nExplain the concepts of reducible and irreducible error in statistical learning. How do these errors relate to the concept of the Bayes error rate?\nCompare and contrast parametric and non-parametric methods for estimating f. What are the advantages and disadvantages of each approach? Provide specific examples of methods from each category.\nDescribe the concept of cross-validation. Why is it important, and how can it be used to improve model selection and assessment?\nDiscuss the challenges and considerations in choosing an appropriate level of flexibility for a statistical learning method. How does the bias-variance trade-off guide this decision? Explain the consequences of choosing a model that is too flexible or not flexible enough."
  },
  {
    "objectID": "posts/ch02-statistical-learning/index.html#slides-and-chapter",
    "href": "posts/ch02-statistical-learning/index.html#slides-and-chapter",
    "title": "Chapter 2: Statistical Learning",
    "section": "Slides and Chapter",
    "text": "Slides and Chapter\n\n\n\nChapter Slides\n\n\n\n\n\nChapter"
  },
  {
    "objectID": "posts/ch03-linear-regression/index.html",
    "href": "posts/ch03-linear-regression/index.html",
    "title": "Chapter 3: Linear Regression",
    "section": "",
    "text": "The lab for this chapter is at lab The chapter is 64 pages long and covers the following topics:"
  },
  {
    "objectID": "posts/ch03-linear-regression/index.html#linear-regression-summary",
    "href": "posts/ch03-linear-regression/index.html#linear-regression-summary",
    "title": "Chapter 3: Linear Regression",
    "section": "Linear Regression Summary",
    "text": "Linear Regression Summary\n\nSimple Linear Regression: Modeling the relationship between a single predictor variable and a response variable using a straight line.\nMultiple Linear Regression: Extending simple linear regression to accommodate multiple predictor variables.\nModel Assessment: Evaluating the accuracy and fit of linear regression models using metrics like RSE, R^2, F-statistic, and p-values.\nModel Interpretation: Understanding the practical meaning of estimated coefficients and their significance in the context of the data.\nQualitative Predictors: Incorporating categorical variables into regression models using dummy variables.\nInteractions: Modeling complex relationships by including interaction terms between predictors.\nPolynomial Regression: Capturing non-linear relationships using polynomial terms of predictor variables.\nModel Diagnostics: Identifying and addressing potential issues like non-linearity, heteroscedasticity, outliers, high leverage points, and collinearity."
  },
  {
    "objectID": "posts/ch03-linear-regression/index.html#simple-linear-regression",
    "href": "posts/ch03-linear-regression/index.html#simple-linear-regression",
    "title": "Chapter 3: Linear Regression",
    "section": "Simple Linear Regression:",
    "text": "Simple Linear Regression:\n\nModel: The relationship between response (Y) and predictor (X) is represented as \nY = β_0 + β_1 X + \\epsilon\n\nwhere\n\nβ_0 is the intercept,\nβ_1 is the slope, and\n\\epsilon is the error term.\n\nLeast Squares Estimation: The coefficients β_0 and β_1 are estimated by minimizing the Residual Sum of Squares (RSS), which quantifies the difference between observed and predicted values.\nAssessing Accuracy: The standard errors of the coefficients help construct confidence intervals and perform hypothesis tests to assess the significance of the relationship between X and Y.\nR^2: This statistic quantifies the proportion of variability in the response explained by the model, indicating how well the model fits the data."
  },
  {
    "objectID": "posts/ch03-linear-regression/index.html#multiple-linear-regression",
    "href": "posts/ch03-linear-regression/index.html#multiple-linear-regression",
    "title": "Chapter 3: Linear Regression",
    "section": "Multiple Linear Regression:",
    "text": "Multiple Linear Regression:\n\nModel: The model extends to multiple predictors: \nY = β_0 + β_1 X_1 + β_2 X_2 + \\ldots + β_p X_p + \\epsilon\n\nInterpretation: Each coefficient β_j represents the average change in Y for a one-unit increase in X_j, holding all other predictors constant.\nF-statistic: This statistic tests the overall significance of the model, determining whether at least one predictor is useful in predicting the response.\nVariable Selection: Techniques like Mallow’s Cp, AIC, BIC, and adjusted R^2 are employed to choose the best subset of predictors for the model."
  },
  {
    "objectID": "posts/ch03-linear-regression/index.html#qualitative-predictors",
    "href": "posts/ch03-linear-regression/index.html#qualitative-predictors",
    "title": "Chapter 3: Linear Regression",
    "section": "Qualitative Predictors:",
    "text": "Qualitative Predictors:\n\nDummy Variables: Categorical variables are incorporated by creating dummy variables, which take on values of 0 or 1 to represent different categories.\nBaseline Category: One category is chosen as the baseline, and its coefficient represents the average response for that category. Other dummy variable coefficients represent differences from the baseline."
  },
  {
    "objectID": "posts/ch03-linear-regression/index.html#interactions",
    "href": "posts/ch03-linear-regression/index.html#interactions",
    "title": "Chapter 3: Linear Regression",
    "section": "Interactions:",
    "text": "Interactions:\n\nInteraction Terms: Including interaction terms like X_1 X_2 in the model allows the relationship between one predictor and the response to vary depending on the value of another predictor.\nSynergy Effect: Interactions can capture synergistic effects where the combined impact of two predictors is greater than the sum of their individual impacts."
  },
  {
    "objectID": "posts/ch03-linear-regression/index.html#polynomial-regression",
    "href": "posts/ch03-linear-regression/index.html#polynomial-regression",
    "title": "Chapter 3: Linear Regression",
    "section": "Polynomial Regression:",
    "text": "Polynomial Regression:\n\nNon-linear Relationships: Polynomial terms like X^2 are used to model non-linear relationships between predictors and the response.\nOverfitting: Higher-degree polynomials can lead to overfitting, where the model fits the training data too closely but generalizes poorly to new data."
  },
  {
    "objectID": "posts/ch03-linear-regression/index.html#model-diagnostics",
    "href": "posts/ch03-linear-regression/index.html#model-diagnostics",
    "title": "Chapter 3: Linear Regression",
    "section": "Model Diagnostics:",
    "text": "Model Diagnostics:\n\nResidual Plots: Visualizing residuals against fitted values helps assess linearity, homoscedasticity, and the presence of outliers.\nHigh Leverage Points: Observations with extreme predictor values can have a disproportionate impact on the model and should be investigated.\nCollinearity: High correlation among predictors can lead to unstable coefficient estimates and inflated standard errors. VIF (Variance Inflation Factor) helps detect collinearity."
  },
  {
    "objectID": "posts/ch03-linear-regression/index.html#key-quotes",
    "href": "posts/ch03-linear-regression/index.html#key-quotes",
    "title": "Chapter 3: Linear Regression",
    "section": "Key Quotes:",
    "text": "Key Quotes:\n\n“The least squares approach chooses \\hat{\\beta}_0 and \\hat{\\beta}_1 to minimize the RSS.”\n\n\n“We interpret β_j as the average effect on Y of a one unit increase in X_j , holding all other predictors fixed.”\n\n\n“The woes of (interpreting) regression coefficients: … a regression coefficient β_j estimates the expected change in Y per unit change in X_j , with all other predictors held fixed. But predictors usually change together!”\n\n\n“A 95% confidence interval is defined as a range of values such that with 95% probability, the range will contain the true unknown value of the parameter.”\n\n\n“There will always be one fewer dummy variable than the number of levels. The level with no dummy variable — African American in this example — is known as the baseline.”\n\n\n“When levels of either TV or radio are low, then the true sales are lower than predicted by the linear model. But when advertising is split between the two media, then the model tends to underestimate sales.”\n\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Duis sagittis posuere ligula sit amet lacinia. Duis dignissim pellentesque magna, rhoncus congue sapien finibus mollis. Ut eu sem laoreet, vehicula ipsum in, convallis erat. Vestibulum magna sem, blandit pulvinar augue sit amet, auctor malesuada sapien. Nullam faucibus leo eget eros hendrerit, non laoreet ipsum lacinia. Curabitur cursus diam elit, non tempus ante volutpat a. Quisque hendrerit blandit purus non fringilla. Integer sit amet elit viverra ante dapibus semper. Vestibulum viverra rutrum enim, at luctus enim posuere eu. Orci varius natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus.\nNunc ac dignissim magna. Vestibulum vitae egestas elit. Proin feugiat leo quis ante condimentum, eu ornare mauris feugiat. Pellentesque habitant morbi tristique senectus et netus et malesuada fames ac turpis egestas. Mauris cursus laoreet ex, dignissim bibendum est posuere iaculis. Suspendisse et maximus elit. In fringilla gravida ornare. Aenean id lectus pulvinar, sagittis felis nec, rutrum risus. Nam vel neque eu arcu blandit fringilla et in quam. Aliquam luctus est sit amet vestibulum eleifend. Phasellus elementum sagittis molestie. Proin tempor lorem arcu, at condimentum purus volutpat eu. Fusce et pellentesque ligula. Pellentesque id tellus at erat luctus fringilla. Suspendisse potenti.\nEtiam maximus accumsan gravida. Maecenas at nunc dignissim, euismod enim ac, bibendum ipsum. Maecenas vehicula velit in nisl aliquet ultricies. Nam eget massa interdum, maximus arcu vel, pretium erat. Maecenas sit amet tempor purus, vitae aliquet nunc. Vivamus cursus urna velit, eleifend dictum magna laoreet ut. Duis eu erat mollis, blandit magna id, tincidunt ipsum. Integer massa nibh, commodo eu ex vel, venenatis efficitur ligula. Integer convallis lacus elit, maximus eleifend lacus ornare ac. Vestibulum scelerisque viverra urna id lacinia. Vestibulum ante ipsum primis in faucibus orci luctus et ultrices posuere cubilia curae; Aenean eget enim at diam bibendum tincidunt eu non purus. Nullam id magna ultrices, sodales metus viverra, tempus turpis.\nDuis ornare ex ac iaculis pretium. Maecenas sagittis odio id erat pharetra, sit amet consectetur quam sollicitudin. Vivamus pharetra quam purus, nec sagittis risus pretium at. Nullam feugiat, turpis ac accumsan interdum, sem tellus blandit neque, id vulputate diam quam semper nisl. Donec sit amet enim at neque porttitor aliquet. Phasellus facilisis nulla eget placerat eleifend. Vestibulum non egestas eros, eget lobortis ipsum. Nulla rutrum massa eget enim aliquam, id porttitor erat luctus. Nunc sagittis quis eros eu sagittis. Pellentesque dictum, erat at pellentesque sollicitudin, justo augue pulvinar metus, quis rutrum est mi nec felis. Vestibulum efficitur mi lorem, at elementum purus tincidunt a. Aliquam finibus enim magna, vitae pellentesque erat faucibus at. Nulla mauris tellus, imperdiet id lobortis et, dignissim condimentum ipsum. Morbi nulla orci, varius at aliquet sed, facilisis id tortor. Donec ut urna nisi.\nAenean placerat luctus tortor vitae molestie. Nulla at aliquet nulla. Sed efficitur tellus orci, sed fringilla lectus laoreet eget. Vivamus maximus quam sit amet arcu dignissim, sed accumsan massa ullamcorper. Sed iaculis tincidunt feugiat. Nulla in est at nunc ultricies dictum ut vitae nunc. Aenean convallis vel diam at malesuada. Suspendisse arcu libero, vehicula tempus ultrices a, placerat sit amet tortor. Sed dictum id nulla commodo mattis. Aliquam mollis, nunc eu tristique faucibus, purus lacus tincidunt nulla, ac pretium lorem nunc ut enim. Curabitur eget mattis nisl, vitae sodales augue. Nam felis massa, bibendum sit amet nulla vel, vulputate rutrum lacus. Aenean convallis odio pharetra nulla mattis consequat."
  },
  {
    "objectID": "posts/ch10-deep-learning/index.html",
    "href": "posts/ch10-deep-learning/index.html",
    "title": "Chapter 10: Deep Learning",
    "section": "",
    "text": "Figure 1: Opening Remarks\n\n\n\n\n\n\n\n\nFigure 2: Examples and Framework\n\n\n\n\n\n\nReuseCC SA BY-NC-NDCitationBibTeX citation:@online{bochman2025,\n  author = {Bochman, Oren},\n  title = {Chapter 10: {Deep} {Learning}},\n  date = {2025-01-21},\n  url = {https://orenbochman.github.io/notes-islr/posts/ch10-deep-learning/},\n  langid = {en}\n}\nFor attribution, please cite this work as:\nBochman, Oren. 2025. “Chapter 10: Deep Learning.” January\n21, 2025. https://orenbochman.github.io/notes-islr/posts/ch10-deep-learning/."
  },
  {
    "objectID": "posts/welcome/index.html",
    "href": "posts/welcome/index.html",
    "title": "Welcome To My Blog",
    "section": "",
    "text": "This is the first post in a Quarto blog. Welcome!\n\nSince this post doesn’t specify an explicit image, the first image in the post will be used in the listing page of posts.\n\n\n\nReuseCC SA BY-NC-NDCitationBibTeX citation:@online{o'malley2025,\n  author = {O’Malley, Tristan},\n  title = {Welcome {To} {My} {Blog}},\n  date = {2025-01-16},\n  url = {https://orenbochman.github.io/notes-islr/posts/welcome/},\n  langid = {en}\n}\nFor attribution, please cite this work as:\nO’Malley, Tristan. 2025. “Welcome To My Blog.” January 16,\n2025. https://orenbochman.github.io/notes-islr/posts/welcome/."
  },
  {
    "objectID": "posts/ch12-unsupervised-learning/index.html",
    "href": "posts/ch12-unsupervised-learning/index.html",
    "title": "Chapter 12: Unsupervised Learning",
    "section": "",
    "text": "Figure 1: Opening Remarks\n\n\n\n\n\n\n\n\nFigure 2: Examples and Framework"
  },
  {
    "objectID": "posts/ch12-unsupervised-learning/index.html#premises",
    "href": "posts/ch12-unsupervised-learning/index.html#premises",
    "title": "Chapter 12: Unsupervised Learning",
    "section": "Premises:",
    "text": "Premises:\n\nStatistical learning is not a series of black boxes - we need to understand the way the cogs of models come together.\nWhile it is important to know what job is performed by each cog, it is not necessary to have the skills to construct the machine inside the box!\nThe readers are interested in applying the methods to real-world problems."
  },
  {
    "objectID": "posts/ch08-tree-based-methods/index.html",
    "href": "posts/ch08-tree-based-methods/index.html",
    "title": "Chapter 8: Trees",
    "section": "",
    "text": "Tree based methods Video\n\n\n\n\n\n\nOutline of first video\n\nIntroduction\n\nTree-based methods are supervised learning algorithms that stratify the predictor space to make predictions.\nThey are called decision trees because of their branching structure.\nThe CART (Classification and Regression Trees) algorithm is a popular example of a tree-based method.\nTrees are simple to interpret but may not be as competitive as other methods in terms of prediction accuracy.\nEnsembles of trees, such as bagging, boosting, and random forests, can improve prediction performance.\n\nDecision Trees\n\nExample: Predicting baseball player salary based on years in the league and hits per season.\nProcess:\nThe data is split into regions based on predictor values.\nEach region is assigned a prediction, typically the average response value for observations in that region.\nSplits are chosen to minimize the variation of observations within each region.\nTerminology:\nInternal nodes: Nodes that are further split.\nTerminal nodes (leaves): Nodes that are not further split.\nInterpretation: The tree structure itself represents the model.\n\nTree Growing Algorithm\n\nGreedy approach:\n\nStarts with the full dataset.\nFinds the best split (predictor and split point) to minimize the variation within each resulting region.\nRepeats the process for each resulting region until a stopping criterion is met.\n\nStopping criteria:\n\nPredefined number of nodes.\nMinimum number of observations in a node.\nOther criteria based on model complexity or performance.\n\n\nChallenges and Limitations\n\nOverfitting: Trees can be prone to overfitting the training data, leading to poor generalization performance.\nInstability: Small changes in the training data can lead to large changes in the tree structure.\nLimited flexibility: Trees can struggle to capture complex relationships between predictors and the response.\n\nEnsembles of Trees\n\nBagging: Creates multiple trees using bootstrap samples of the training data and averages their predictions.\nBoosting: Creates a sequence of trees, where each tree focuses on correcting the errors of the previous trees.\nRandom forests: Creates multiple trees using random subsets of predictors at each split.\n\nConclusion\n\nTree-based methods are versatile and interpretable tools for supervised learning.\nEnsembles of trees can significantly improve prediction accuracy.\nFurther research is ongoing to develop more robust and efficient tree-based methods.\n\n\n\n\n\n\n\n\n\n\n\nFigure 1: Tree based methods\n\n\n\n\n\n\n\n\nMore details on Trees\n\n\n\n\n\n\nOutline of second video\n\nThe process of building a tree and making predictions\nThe question of how large should the tree be\nThe cost complexity pruning\nThe summary of the tree growing algorithm\nThe result of cross validation\n\n\n\n\n\n\n\n\n\n\nFigure 2: More details on Trees\n\n\n\n\n\n\n\n\nClassification Trees\n\n\n\n\n\n\nOutline of third video\n\nIntroduction\n\nRegression trees are used when the response is quantitative.\nClassification trees are used when the response is a categorical variable.\nThe technology is very similar, but the loss function and how to measure good performance are different.\n\nClassification Trees\n\nEach observation is classified to the most commonly occurring class in the terminal node.\nThe tree is grown in the same way as for regression trees.\nThe criterion for making the splits is different.\nOne criterion is the classification error rate.\nAnother criterion is the Gini index, which is a measure of variability across the classes.\nThe deviance or cross-entropy is another criterion that is similar to the Gini index.\n\nExample: Heart Data\n\nThe heart data has a binary response called HD.\nThere are 303 patients.\nThere are 13 predictors.\nA tree was grown using cross-validation.\nThe full tree is quite bushy.\nThe pruned tree has a size of 6.\nThe classification performance of the pruned tree is 25%.\n\nComparison of Trees and Linear Models\n\nTrees are not always the best method.\nLinear models are better for some problems.\nTrees are better for other problems.\nAdvantages and Disadvantages of Trees\n\nAdvantages:\n\nSimple to understand.\nCan handle qualitative predictors.\n\nDisadvantages:\n\nDo not predict as well as more state-of-the-art methods.\n\nEnsemble Methods\n\nEnsemble methods combine trees to improve prediction accuracy.\nOne example of an ensemble method is random forests.\n\n\n\n\n\n\n\n\n\n\n\nFigure 3: Classification Trees\n\n\n\n\n\n\n\n\nBagging\n\n\n\n\n\n\nOutline of fourth video\n\nIntroduction\n\nBagging is a method of using trees to improve their prediction error.\nIt involves creating multiple trees and averaging their predictions.\nThe idea was proposed by Leo Breiman.\n\nBagging Process\n\nBootstrap samples are drawn from the training set with replacement.\nA tree is grown on each bootstrap sample.\nThe predictions of all trees are averaged to obtain the final prediction.\n\nAdvantages of Bagging\n\nReduces variance by averaging multiple trees.\nCan be applied to both regression and classification problems.\nNo need to prune trees.\n\nOut-of-Bag Error\n\nA free method for estimating the test error.\nUses observations not included in the bootstrap sample to predict their values.\nProvides an estimate of leave-one-out cross-validation.\n\nRandom Forests\n\nAn extension of bagging that further reduces correlation between trees.\nAt each split, only a random subset of predictors is considered.\nImproves prediction accuracy over bagging.\n\nExample: Heart Data\n\nCompares the performance of bagging and random forests on the heart data.\nShows that random forests can slightly improve prediction accuracy over bagging.\n\nExample: Gene Expression Data\n\nApplies random forests to a high-dimensional gene expression dataset.\nDemonstrates the effectiveness of random forests in classifying cancer types.\nHighlights the importance of pre-screening genes using variance.\n\nConclusion\n\nBagging and random forests are powerful methods for improving tree-based predictions.\nThey are widely used in various applications.\nOut-of-bag error provides a convenient way to estimate test error.\n\n\n\n\n\n\n\n\n\n\n\nFigure 4: Bagging\n\n\n\n\n\n\n\n\nBoosting\n\n\n\n\n\n\nOutline of fifth video\nStatistical Learning: 8.5 Boosting\n\nBoosting\n\nSequential method\nBuilds on previous trees to improve performance\nFits trees to residuals\nShrinks trees to avoid overfitting\nEffective with smaller trees\n\nTuning Parameters\n\nDepth of the tree (d)\n\nd=1: stump (single split)\nLarger d: allows interactions between predictors\n\nNumber of trees (B)\n\nTypically not a critical parameter\n\nShrinkage parameter (lambda)\n\nControls the amount each tree is added to the model\n\n\nVariable Importance\n\nMeasures the total drop in RSS for a given predictor over all splits in the tree\nProvides a qualitative ranking of variable importance\n\nSummary\n\nEnsembles of trees can improve prediction accuracy\nRandom forests and boosting are state-of-the-art techniques for supervised learning\nInterpretation can be more challenging with ensembles\n\n\n\n\n\n\n\n\n\n\n\nFigure 5: Boosting\n\n\n\n\n\n\n\n\nBART - Bayesian Additive Regression Trees\n\n\n\n\n\n\nOutline of sixth video\n\nIntroduction\n\nWhat is BART?\nEnsemble method using decision trees as building blocks\nSimilar to random forests and boosting\n\nBART Algorithm:\n\nNumber of Trees (k): Determines the number of trees in the ensemble.\nNumber of Iterations (b): Controls the number of times each tree is perturbed.\nPerturbations:\n\nAdding branches\nDeleting branches\nChanging predicted values at terminal nodes\n\nPrediction: Averaging predictions from all trees and iterations after a burn-in period.\n\nComparison with Other Methods\n\nBagging and Random Forests: Similar in using random samples to build trees.\nBoosting: Similar in using residuals to guide tree construction.\nDifferences: BART uses perturbations to modify existing trees instead of building new trees from scratch.\nChain Monte Carlo (MCMC) method\n\nExample: Heart Data\n\nCompare BART with boosting and random forest\nBART shows slower training error but competitive test error\nLess prone to overfitting than boosting\nChoosing Parameters\n\nNumber of trees (k)\nNumber of iterations (b)\nBurn-in period (l)\n\nReasonable choices: k = 200, b = 1000, l = 100\n\nAdvantages of BART\n\nWorks well out-of-the-box without much tuning\nProvides uncertainty estimates (quantiles)\n\nConclusion\n\nBART is a powerful ensemble method for regression\nCombines features of random forests and boosting\nProvides a flexible and robust approach to regression problems\n\n\n\n\n\n\n\n\n\n\n\nFigure 6: BART: Bayesian Additive Regression Trees\n\n\n\n\n\n\n\n\nPython lab on Tree-Based Methods\n\n\n\n\n\n\nOutline of seventh video\n\nIntroduction:\n\nOverview of tree-based methods\nFocus on random forest and boosting\nIntroduction of single tree-based method\n\nImports:\n\nImport necessary libraries\n\nDecision Tree Regression\n\nFitting a regression decision tree\nData set: Boston data set\nPre-processing: feature selection\nValidation: split data into training and test sets\nVisualizing the decision tree\nEvaluating accuracy: mean squared error\n\nEnsemble Methods:\n\nBagging and Random Forest\nDifference between bagging and random forest\nFitting a random forest regressor\nEvaluating accuracy\nIncreasing the number of trees\nFeature importance\n\nBoosting:\n\nDifference between boosting and random forest\nFitting a boosting regressor\nEvaluating accuracy\nPlotting training and test error\nTuning parameters\n\nConclusion:\n\nSummary of tree-based methods\nComparison of random forest and boosting\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nFigure 7: Python lab on Tree-Based Methods\n\n\nReuseCC SA BY-NC-NDCitationBibTeX citation:@online{bochman2025,\n  author = {Bochman, Oren},\n  title = {Chapter 8: {Trees}},\n  date = {2025-01-21},\n  url = {https://orenbochman.github.io/notes-islr/posts/ch08-tree-based-methods/},\n  langid = {en}\n}\nFor attribution, please cite this work as:\nBochman, Oren. 2025. “Chapter 8: Trees.” January 21, 2025.\nhttps://orenbochman.github.io/notes-islr/posts/ch08-tree-based-methods/."
  },
  {
    "objectID": "posts/post-with-code/index.html",
    "href": "posts/post-with-code/index.html",
    "title": "Post With Code",
    "section": "",
    "text": "This is a post with executable code.\n\n\n\nReuseCC SA BY-NC-NDCitationBibTeX citation:@online{malloc2025,\n  author = {Malloc, Harlow},\n  title = {Post {With} {Code}},\n  date = {2025-01-19},\n  url = {https://orenbochman.github.io/notes-islr/posts/post-with-code/},\n  langid = {en}\n}\nFor attribution, please cite this work as:\nMalloc, Harlow. 2025. “Post With Code.” January 19, 2025.\nhttps://orenbochman.github.io/notes-islr/posts/post-with-code/."
  },
  {
    "objectID": "posts/ch07-beyond-linearity/Ch07-nonlin-lab.html",
    "href": "posts/ch07-beyond-linearity/Ch07-nonlin-lab.html",
    "title": "Chapter 7 - Non-Linear Modeling Lab",
    "section": "",
    "text": "In this lab, we demonstrate some of the nonlinear models discussed in this chapter. We use the Wage data as a running example, and show that many of the complex non-linear fitting procedures discussed can easily be implemented in Python.\nAs usual, we start with some of our standard imports.\n\nimport numpy as np, pandas as pd\nfrom matplotlib.pyplot import subplots\nimport statsmodels.api as sm\nfrom ISLP import load_data\nfrom ISLP.models import (summarize,\n                         poly,\n                         ModelSpec as MS)\nfrom statsmodels.stats.anova import anova_lm\n\nWe again collect the new imports needed for this lab. Many of these are developed specifically for the ISLP package.\n\nfrom pygam import (s as s_gam,\n                   l as l_gam,\n                   f as f_gam,\n                   LinearGAM,\n                   LogisticGAM)\n\nfrom ISLP.transforms import (BSpline,\n                             NaturalSpline)\nfrom ISLP.models import bs, ns\nfrom ISLP.pygam import (approx_lam,\n                        degrees_of_freedom,\n                        plot as plot_gam,\n                        anova as anova_gam)\n\n\n\nWe start by demonstrating how Figure~ can be reproduced. Let’s begin by loading the data.\n\nWage = load_data('Wage')\ny = Wage['wage']\nage = Wage['age']\n\nThroughout most of this lab, our response is Wage['wage'], which we have stored as y above. As in Section~, we will use the poly() function to create a model matrix that will fit a 4th degree polynomial in age.\n\npoly_age = MS([poly('age', degree=4)]).fit(Wage)\nM = sm.OLS(y, poly_age.transform(Wage)).fit()\nsummarize(M)\n\n\n\n\n\n\n\n\ncoef\nstd err\nt\nP&gt;|t|\n\n\n\n\nintercept\n111.7036\n0.729\n153.283\n0.000\n\n\npoly(age, degree=4)[0]\n447.0679\n39.915\n11.201\n0.000\n\n\npoly(age, degree=4)[1]\n-478.3158\n39.915\n-11.983\n0.000\n\n\npoly(age, degree=4)[2]\n125.5217\n39.915\n3.145\n0.002\n\n\npoly(age, degree=4)[3]\n-77.9112\n39.915\n-1.952\n0.051\n\n\n\n\n\n\n\nThis polynomial is constructed using the function poly(), which creates a special transformer Poly() (using sklearn terminology for feature transformations such as PCA() seen in Section ) which allows for easy evaluation of the polynomial at new data points. Here poly() is referred to as a helper function, and sets up the transformation; Poly() is the actual workhorse that computes the transformation. See also the discussion of transformations on page~.\nIn the code above, the first line executes the fit() method using the dataframe Wage. This recomputes and stores as attributes any parameters needed by Poly() on the training data, and these will be used on all subsequent evaluations of the transform() method. For example, it is used on the second line, as well as in the plotting function developed below.\nWe now create a grid of values for age at which we want predictions.\n\nage_grid = np.linspace(age.min(),\n                       age.max(),\n                       100)\nage_df = pd.DataFrame({'age': age_grid})\n\nFinally, we wish to plot the data and add the fit from the fourth-degree polynomial. As we will make several similar plots below, we first write a function to create all the ingredients and produce the plot. Our function takes in a model specification (here a basis specified by a transform), as well as a grid of age values. The function produces a fitted curve as well as 95% confidence bands. By using an argument for basis we can produce and plot the results with several different transforms, such as the splines we will see shortly.\n\ndef plot_wage_fit(age_df, \n                  basis,\n                  title):\n\n    X = basis.transform(Wage)\n    Xnew = basis.transform(age_df)\n    M = sm.OLS(y, X).fit()\n    preds = M.get_prediction(Xnew)\n    bands = preds.conf_int(alpha=0.05)\n    fig, ax = subplots(figsize=(8,8))\n    ax.scatter(age,\n               y,\n               facecolor='gray',\n               alpha=0.5)\n    for val, ls in zip([preds.predicted_mean,\n                      bands[:,0],\n                      bands[:,1]],\n                     ['b','r--','r--']):\n        ax.plot(age_df.values, val, ls, linewidth=3)\n    ax.set_title(title, fontsize=20)\n    ax.set_xlabel('Age', fontsize=20)\n    ax.set_ylabel('Wage', fontsize=20);\n    return ax\n\nWe include an argument alpha to ax.scatter() to add some transparency to the points. This provides a visual indication of density. Notice the use of the zip() function in the for loop above (see Section~). We have three lines to plot, each with different colors and line types. Here zip() conveniently bundles these together as iterators in the loop. {In Python speak, an “iterator” is an object with a finite number of values, that can be iterated on, as in a loop.}\nWe now plot the fit of the fourth-degree polynomial using this function.\n\nplot_wage_fit(age_df, \n              poly_age,\n              'Degree-4 Polynomial');\n\n\n\n\n\n\n\n\nWith polynomial regression we must decide on the degree of the polynomial to use. Sometimes we just wing it, and decide to use second or third degree polynomials, simply to obtain a nonlinear fit. But we can make such a decision in a more systematic way. One way to do this is through hypothesis tests, which we demonstrate here. We now fit a series of models ranging from linear (degree-one) to degree-five polynomials, and look to determine the simplest model that is sufficient to explain the relationship between wage and age. We use the anova_lm() function, which performs a series of ANOVA tests. An or ANOVA tests the null hypothesis that a model \\mathcal{M}_1 is sufficient to explain the data against the alternative hypothesis that a more complex model \\mathcal{M}_2 is required. The determination is based on an F-test. To perform the test, the models \\mathcal{M}_1 and \\mathcal{M}_2 must be nested: the space spanned by the predictors in \\mathcal{M}_1 must be a subspace of the space spanned by the predictors in \\mathcal{M}_2. In this case, we fit five different polynomial models and sequentially compare the simpler model to the more complex model.\n\nmodels = [MS([poly('age', degree=d)]) \n          for d in range(1, 6)]\nXs = [model.fit_transform(Wage) for model in models]\nanova_lm(*[sm.OLS(y, X_).fit()\n           for X_ in Xs])\n\n\n\n\n\n\n\n\ndf_resid\nssr\ndf_diff\nss_diff\nF\nPr(&gt;F)\n\n\n\n\n0\n2998.0\n5.022216e+06\n0.0\nNaN\nNaN\nNaN\n\n\n1\n2997.0\n4.793430e+06\n1.0\n228786.010128\n143.593107\n2.363850e-32\n\n\n2\n2996.0\n4.777674e+06\n1.0\n15755.693664\n9.888756\n1.679202e-03\n\n\n3\n2995.0\n4.771604e+06\n1.0\n6070.152124\n3.809813\n5.104620e-02\n\n\n4\n2994.0\n4.770322e+06\n1.0\n1282.563017\n0.804976\n3.696820e-01\n\n\n\n\n\n\n\nNotice the * in the anova_lm() line above. This function takes a variable number of non-keyword arguments, in this case fitted models. When these models are provided as a list (as is done here), it must be prefixed by *.\nThe p-value comparing the linear models[0] to the quadratic models[1] is essentially zero, indicating that a linear fit is not sufficient. {Indexing starting at zero is confusing for the polynomial degree example, since models[1] is quadratic rather than linear!} Similarly the p-value comparing the quadratic models[1] to the cubic models[2] is very low (0.0017), so the quadratic fit is also insufficient. The p-value comparing the cubic and degree-four polynomials, models[2] and models[3], is approximately 5%, while the degree-five polynomial models[4] seems unnecessary because its p-value is 0.37. Hence, either a cubic or a quartic polynomial appear to provide a reasonable fit to the data, but lower- or higher-order models are not justified.\nIn this case, instead of using the anova() function, we could have obtained these p-values more succinctly by exploiting the fact that poly() creates orthogonal polynomials.\n\nsummarize(M)\n\n\n\n\n\n\n\n\ncoef\nstd err\nt\nP&gt;|t|\n\n\n\n\nintercept\n111.7036\n0.729\n153.283\n0.000\n\n\npoly(age, degree=4)[0]\n447.0679\n39.915\n11.201\n0.000\n\n\npoly(age, degree=4)[1]\n-478.3158\n39.915\n-11.983\n0.000\n\n\npoly(age, degree=4)[2]\n125.5217\n39.915\n3.145\n0.002\n\n\npoly(age, degree=4)[3]\n-77.9112\n39.915\n-1.952\n0.051\n\n\n\n\n\n\n\nNotice that the p-values are the same, and in fact the square of the t-statistics are equal to the F-statistics from the anova_lm() function; for example:\n\n(-11.983)**2\n\n143.59228900000002\n\n\nHowever, the ANOVA method works whether or not we used orthogonal polynomials, provided the models are nested. For example, we can use anova_lm() to compare the following three models, which all have a linear term in education and a polynomial in age of different degrees:\n\nmodels = [MS(['education', poly('age', degree=d)])\n          for d in range(1, 4)]\nXEs = [model.fit_transform(Wage)\n       for model in models]\nanova_lm(*[sm.OLS(y, X_).fit() for X_ in XEs])\n\n\n\n\n\n\n\n\ndf_resid\nssr\ndf_diff\nss_diff\nF\nPr(&gt;F)\n\n\n\n\n0\n2997.0\n3.902335e+06\n0.0\nNaN\nNaN\nNaN\n\n\n1\n2996.0\n3.759472e+06\n1.0\n142862.701185\n113.991883\n3.838075e-26\n\n\n2\n2995.0\n3.753546e+06\n1.0\n5926.207070\n4.728593\n2.974318e-02\n\n\n\n\n\n\n\nAs an alternative to using hypothesis tests and ANOVA, we could choose the polynomial degree using cross-validation, as discussed in Chapter~.\nNext we consider the task of predicting whether an individual earns more than $250,000 per year. We proceed much as before, except that first we create the appropriate response vector, and then apply the glm() function using the binomial family in order to fit a polynomial logistic regression model.\n\nX = poly_age.transform(Wage)\nhigh_earn = Wage['high_earn'] = y &gt; 250 # shorthand\nglm = sm.GLM(y &gt; 250,\n             X,\n             family=sm.families.Binomial())\nB = glm.fit()\nsummarize(B)\n\n\n\n\n\n\n\n\ncoef\nstd err\nz\nP&gt;|z|\n\n\n\n\nintercept\n-4.3012\n0.345\n-12.457\n0.000\n\n\npoly(age, degree=4)[0]\n71.9642\n26.133\n2.754\n0.006\n\n\npoly(age, degree=4)[1]\n-85.7729\n35.929\n-2.387\n0.017\n\n\npoly(age, degree=4)[2]\n34.1626\n19.697\n1.734\n0.083\n\n\npoly(age, degree=4)[3]\n-47.4008\n24.105\n-1.966\n0.049\n\n\n\n\n\n\n\nOnce again, we make predictions using the get_prediction() method.\n\nnewX = poly_age.transform(age_df)\npreds = B.get_prediction(newX)\nbands = preds.conf_int(alpha=0.05)\n\nWe now plot the estimated relationship.\n\nfig, ax = subplots(figsize=(8,8))\nrng = np.random.default_rng(0)\nax.scatter(age +\n           0.2 * rng.uniform(size=y.shape[0]),\n           np.where(high_earn, 0.198, 0.002),\n           fc='gray',\n           marker='|')\nfor val, ls in zip([preds.predicted_mean,\n                  bands[:,0],\n                  bands[:,1]],\n                 ['b','r--','r--']):\n    ax.plot(age_df.values, val, ls, linewidth=3)\nax.set_title('Degree-4 Polynomial', fontsize=20)\nax.set_xlabel('Age', fontsize=20)\nax.set_ylim([0,0.2])\nax.set_ylabel('P(Wage &gt; 250)', fontsize=20);\n\n\n\n\n\n\n\n\nWe have drawn the age values corresponding to the observations with wage values above 250 as gray marks on the top of the plot, and those with wage values below 250 are shown as gray marks on the bottom of the plot. We added a small amount of noise to jitter the age values a bit so that observations with the same age value do not cover each other up. This type of plot is often called a rug plot.\nIn order to fit a step function, as discussed in Section~, we first use the pd.qcut() function to discretize age based on quantiles. Then we use pd.get_dummies() to create the columns of the model matrix for this categorical variable. Note that this function will include all columns for a given categorical, rather than the usual approach which drops one of the levels.\n\ncut_age = pd.qcut(age, 4)\nsummarize(sm.OLS(y, pd.get_dummies(cut_age)).fit())\n\n\n\n\n\n\n\n\ncoef\nstd err\nt\nP&gt;|t|\n\n\n\n\n(17.999, 33.75]\n94.1584\n1.478\n63.692\n0.0\n\n\n(33.75, 42.0]\n116.6608\n1.470\n79.385\n0.0\n\n\n(42.0, 51.0]\n119.1887\n1.416\n84.147\n0.0\n\n\n(51.0, 80.0]\n116.5717\n1.559\n74.751\n0.0\n\n\n\n\n\n\n\nHere pd.qcut() automatically picked the cutpoints based on the quantiles 25%, 50% and 75%, which results in four regions. We could also have specified our own quantiles directly instead of the argument 4. For cuts not based on quantiles we would use the pd.cut() function. The function pd.qcut() (and pd.cut()) returns an ordered categorical variable. The regression model then creates a set of dummy variables for use in the regression. Since age is the only variable in the model, the value $94,158.40 is the average salary for those under 33.75 years of age, and the other coefficients are the average salary for those in the other age groups. We can produce predictions and plots just as we did in the case of the polynomial fit.\n\n\n\nIn order to fit regression splines, we use transforms from the ISLP package. The actual spline evaluation functions are in the scipy.interpolate package; we have simply wrapped them as transforms similar to Poly() and PCA().\nIn Section~, we saw that regression splines can be fit by constructing an appropriate matrix of basis functions. The BSpline() function generates the entire matrix of basis functions for splines with the specified set of knots. By default, the B-splines produced are cubic. To change the degree, use the argument degree.\n\nbs_ = BSpline(internal_knots=[25,40,60], intercept=True).fit(age)\nbs_age = bs_.transform(age)\nbs_age.shape\n\n(3000, 7)\n\n\nThis results in a seven-column matrix, which is what is expected for a cubic-spline basis with 3 interior knots. We can form this same matrix using the bs() object, which facilitates adding this to a model-matrix builder (as in poly() versus its workhorse Poly()) described in Section~.\nWe now fit a cubic spline model to the Wage data.\n\nbs_age = MS([bs('age', internal_knots=[25,40,60])])\nXbs = bs_age.fit_transform(Wage)\nM = sm.OLS(y, Xbs).fit()\nsummarize(M)\n\n\n\n\n\n\n\n\ncoef\nstd err\nt\nP&gt;|t|\n\n\n\n\nintercept\n60.4937\n9.460\n6.394\n0.000\n\n\nbs(age, internal_knots=[25, 40, 60])[0]\n3.9805\n12.538\n0.317\n0.751\n\n\nbs(age, internal_knots=[25, 40, 60])[1]\n44.6310\n9.626\n4.636\n0.000\n\n\nbs(age, internal_knots=[25, 40, 60])[2]\n62.8388\n10.755\n5.843\n0.000\n\n\nbs(age, internal_knots=[25, 40, 60])[3]\n55.9908\n10.706\n5.230\n0.000\n\n\nbs(age, internal_knots=[25, 40, 60])[4]\n50.6881\n14.402\n3.520\n0.000\n\n\nbs(age, internal_knots=[25, 40, 60])[5]\n16.6061\n19.126\n0.868\n0.385\n\n\n\n\n\n\n\nThe column names are a little cumbersome, and have caused us to truncate the printed summary. They can be set on construction using the name argument as follows.\n\nbs_age = MS([bs('age',\n                internal_knots=[25,40,60],\n                name='bs(age)')])\nXbs = bs_age.fit_transform(Wage)\nM = sm.OLS(y, Xbs).fit()\nsummarize(M)\n\n\n\n\n\n\n\n\ncoef\nstd err\nt\nP&gt;|t|\n\n\n\n\nintercept\n60.4937\n9.460\n6.394\n0.000\n\n\nbs(age)[0]\n3.9805\n12.538\n0.317\n0.751\n\n\nbs(age)[1]\n44.6310\n9.626\n4.636\n0.000\n\n\nbs(age)[2]\n62.8388\n10.755\n5.843\n0.000\n\n\nbs(age)[3]\n55.9908\n10.706\n5.230\n0.000\n\n\nbs(age)[4]\n50.6881\n14.402\n3.520\n0.000\n\n\nbs(age)[5]\n16.6061\n19.126\n0.868\n0.385\n\n\n\n\n\n\n\nNotice that there are 6 spline coefficients rather than 7. This is because, by default, bs() assumes intercept=False, since we typically have an overall intercept in the model. So it generates the spline basis with the given knots, and then discards one of the basis functions to account for the intercept.\nWe could also use the df (degrees of freedom) option to specify the complexity of the spline. We see above that with 3 knots, the spline basis has 6 columns or degrees of freedom. When we specify df=6 rather than the actual knots, bs() will produce a spline with 3 knots chosen at uniform quantiles of the training data. We can see these chosen knots most easily using Bspline() directly:\n\nBSpline(df=6).fit(age).internal_knots_\n\narray([33.75, 42.  , 51.  ])\n\n\nWhen asking for six degrees of freedom, the transform chooses knots at ages 33.75, 42.0, and 51.0, which correspond to the 25th, 50th, and 75th percentiles of age.\nWhen using B-splines we need not limit ourselves to cubic polynomials (i.e. degree=3). For instance, using degree=0 results in piecewise constant functions, as in our example with pd.qcut() above.\n\nbs_age0 = MS([bs('age',\n                 df=3, \n                 degree=0)]).fit(Wage)\nXbs0 = bs_age0.transform(Wage)\nsummarize(sm.OLS(y, Xbs0).fit())\n\n\n\n\n\n\n\n\ncoef\nstd err\nt\nP&gt;|t|\n\n\n\n\nintercept\n94.1584\n1.478\n63.687\n0.0\n\n\nbs(age, df=3, degree=0)[0]\n22.3490\n2.152\n10.388\n0.0\n\n\nbs(age, df=3, degree=0)[1]\n24.8076\n2.044\n12.137\n0.0\n\n\nbs(age, df=3, degree=0)[2]\n22.7814\n2.087\n10.917\n0.0\n\n\n\n\n\n\n\nThis fit should be compared with cell [15] where we use qcut() to create four bins by cutting at the 25%, 50% and 75% quantiles of age. Since we specified df=3 for degree-zero splines here, there will also be knots at the same three quantiles. Although the coefficients appear different, we see that this is a result of the different coding. For example, the first coefficient is identical in both cases, and is the mean response in the first bin. For the second coefficient, we have 94.158 + 22.349 = 116.507 \\approx 116.611, the latter being the mean in the second bin in cell [15]. Here the intercept is coded by a column of ones, so the second, third and fourth coefficients are increments for those bins. Why is the sum not exactly the same? It turns out that the qcut() uses \\leq, while bs() uses &lt; when deciding bin membership.\nIn order to fit a natural spline, we use the NaturalSpline() transform with the corresponding helper ns(). Here we fit a natural spline with five degrees of freedom (excluding the intercept) and plot the results.\n\nns_age = MS([ns('age', df=5)]).fit(Wage)\nM_ns = sm.OLS(y, ns_age.transform(Wage)).fit()\nsummarize(M_ns)\n\n\n\n\n\n\n\n\ncoef\nstd err\nt\nP&gt;|t|\n\n\n\n\nintercept\n60.4752\n4.708\n12.844\n0.000\n\n\nns(age, df=5)[0]\n61.5267\n4.709\n13.065\n0.000\n\n\nns(age, df=5)[1]\n55.6912\n5.717\n9.741\n0.000\n\n\nns(age, df=5)[2]\n46.8184\n4.948\n9.463\n0.000\n\n\nns(age, df=5)[3]\n83.2036\n11.918\n6.982\n0.000\n\n\nns(age, df=5)[4]\n6.8770\n9.484\n0.725\n0.468\n\n\n\n\n\n\n\nWe now plot the natural spline using our plotting function.\n\nplot_wage_fit(age_df,\n              ns_age,\n              'Natural spline, df=5');\n\n\n\n\n\n\n\n\n\n\n\nA smoothing spline is a special case of a GAM with squared-error loss and a single feature. To fit GAMs in Python we will use the pygam package which can be installed via pip install pygam. The estimator LinearGAM() uses squared-error loss. The GAM is specified by associating each column of a model matrix with a particular smoothing operation: s for smoothing spline; l for linear, and f for factor or categorical variables. The argument 0 passed to s below indicates that this smoother will apply to the first column of a feature matrix. Below, we pass it a matrix with a single column: X_age. The argument lam is the penalty parameter \\lambda as discussed in Section~.\n\nX_age = np.asarray(age).reshape((-1,1))\ngam = LinearGAM(s_gam(0, lam=0.6))\ngam.fit(X_age, y)\n\nLinearGAM(callbacks=[Deviance(), Diffs()], fit_intercept=True, \n   max_iter=100, scale=None, terms=s(0) + intercept, tol=0.0001, \n   verbose=False)\n\n\nThe pygam library generally expects a matrix of features so we reshape age to be a matrix (a two-dimensional array) instead of a vector (i.e. a one-dimensional array). The -1 in the call to the reshape() method tells numpy to impute the size of that dimension based on the remaining entries of the shape tuple.\nLet’s investigate how the fit changes with the smoothing parameter lam. The function np.logspace() is similar to np.linspace() but spaces points evenly on the log-scale. Below we vary lam from 10^{-2} to 10^6.\n\nfig, ax = subplots(figsize=(8,8))\nax.scatter(age, y, facecolor='gray', alpha=0.5)\nfor lam in np.logspace(-2, 6, 5):\n    gam = LinearGAM(s_gam(0, lam=lam)).fit(X_age, y)\n    ax.plot(age_grid,\n            gam.predict(age_grid),\n            label='{:.1e}'.format(lam),\n            linewidth=3)\nax.set_xlabel('Age', fontsize=20)\nax.set_ylabel('Wage', fontsize=20);\nax.legend(title='$\\lambda$');\n\n\n\n\n\n\n\n\nThe pygam package can perform a search for an optimal smoothing parameter.\n\ngam_opt = gam.gridsearch(X_age, y)\nax.plot(age_grid,\n        gam_opt.predict(age_grid),\n        label='Grid search',\n        linewidth=4)\nax.legend()\nfig\n\n  0% (0 of 11) |                         | Elapsed Time: 0:00:00 ETA:  --:--:-- 36% (4 of 11) |#########                | Elapsed Time: 0:00:00 ETA:   0:00:00 63% (7 of 11) |###############          | Elapsed Time: 0:00:00 ETA:   0:00:00 90% (10 of 11) |#####################   | Elapsed Time: 0:00:00 ETA:   0:00:00100% (11 of 11) |########################| Elapsed Time: 0:00:00 Time:  0:00:00\n\n\n\n\n\n\n\n\n\nAlternatively, we can fix the degrees of freedom of the smoothing spline using a function included in the ISLP.pygam package. Below we find a value of \\lambda that gives us roughly four degrees of freedom. We note here that these degrees of freedom include the unpenalized intercept and linear term of the smoothing spline, hence there are at least two degrees of freedom.\n\nage_term = gam.terms[0]\nlam_4 = approx_lam(X_age, age_term, 4)\nage_term.lam = lam_4\ndegrees_of_freedom(X_age, age_term)\n\n4.000000100003379\n\n\nLet’s vary the degrees of freedom in a similar plot to above. We choose the degrees of freedom as the desired degrees of freedom plus one to account for the fact that these smoothing splines always have an intercept term. Hence, a value of one for df is just a linear fit.\n\nfig, ax = subplots(figsize=(8,8))\nax.scatter(X_age,\n           y,\n           facecolor='gray',\n           alpha=0.3)\nfor df in [1,3,4,8,15]:\n    lam = approx_lam(X_age, age_term, df+1)\n    age_term.lam = lam\n    gam.fit(X_age, y)\n    ax.plot(age_grid,\n            gam.predict(age_grid),\n            label='{:d}'.format(df),\n            linewidth=4)\nax.set_xlabel('Age', fontsize=20)\nax.set_ylabel('Wage', fontsize=20);\nax.legend(title='Degrees of freedom');\n\n\n\n\n\n\n\n\n\n\nThe strength of generalized additive models lies in their ability to fit multivariate regression models with more flexibility than linear models. We demonstrate two approaches: the first in a more manual fashion using natural splines and piecewise constant functions, and the second using the pygam package and smoothing splines.\nWe now fit a GAM by hand to predict wage using natural spline functions of year and age, treating education as a qualitative predictor, as in (). Since this is just a big linear regression model using an appropriate choice of basis functions, we can simply do this using the sm.OLS() function.\nWe will build the model matrix in a more manual fashion here, since we wish to access the pieces separately when constructing partial dependence plots.\n\nns_age = NaturalSpline(df=4).fit(age)\nns_year = NaturalSpline(df=5).fit(Wage['year'])\nXs = [ns_age.transform(age),\n      ns_year.transform(Wage['year']),\n      pd.get_dummies(Wage['education']).values]\nX_bh = np.hstack(Xs)\ngam_bh = sm.OLS(y, X_bh).fit()\n\nHere the function NaturalSpline() is the workhorse supporting the ns() helper function. We chose to use all columns of the indicator matrix for the categorical variable education, making an intercept redundant. Finally, we stacked the three component matrices horizontally to form the model matrix X_bh.\nWe now show how to construct partial dependence plots for each of the terms in our rudimentary GAM. We can do this by hand, given grids for age and year. We simply predict with new X matrices, fixing all but one of the features at a time.\n\nage_grid = np.linspace(age.min(),\n                       age.max(),\n                       100)\nX_age_bh = X_bh.copy()[:100]\nX_age_bh[:] = X_bh[:].mean(0)[None,:]\nX_age_bh[:,:4] = ns_age.transform(age_grid)\npreds = gam_bh.get_prediction(X_age_bh)\nbounds_age = preds.conf_int(alpha=0.05)\npartial_age = preds.predicted_mean\ncenter = partial_age.mean()\npartial_age -= center\nbounds_age -= center\nfig, ax = subplots(figsize=(8,8))\nax.plot(age_grid, partial_age, 'b', linewidth=3)\nax.plot(age_grid, bounds_age[:,0], 'r--', linewidth=3)\nax.plot(age_grid, bounds_age[:,1], 'r--', linewidth=3)\nax.set_xlabel('Age')\nax.set_ylabel('Effect on wage')\nax.set_title('Partial dependence of age on wage', fontsize=20);\n\n\n\n\n\n\n\n\nLet’s explain in some detail what we did above. The idea is to create a new prediction matrix, where all but the columns belonging to age are constant (and set to their training-data means). The four columns for age are filled in with the natural spline basis evaluated at the 100 values in age_grid.\n\nWe made a grid of length 100 in age, and created a matrix X_age_bh with 100 rows and the same number of columns as X_bh.\nWe replaced every row of this matrix with the column means of the original.\nWe then replace just the first four columns representing age with the natural spline basis computed at the values in age_grid.\n\nThe remaining steps should by now be familiar.\nWe also look at the effect of year on wage; the process is the same.\n\nyear_grid = np.linspace(2003, 2009, 100)\nyear_grid = np.linspace(Wage['year'].min(),\n                        Wage['year'].max(),\n                        100)\nX_year_bh = X_bh.copy()[:100]\nX_year_bh[:] = X_bh[:].mean(0)[None,:]\nX_year_bh[:,4:9] = ns_year.transform(year_grid)\npreds = gam_bh.get_prediction(X_year_bh)\nbounds_year = preds.conf_int(alpha=0.05)\npartial_year = preds.predicted_mean\ncenter = partial_year.mean()\npartial_year -= center\nbounds_year -= center\nfig, ax = subplots(figsize=(8,8))\nax.plot(year_grid, partial_year, 'b', linewidth=3)\nax.plot(year_grid, bounds_year[:,0], 'r--', linewidth=3)\nax.plot(year_grid, bounds_year[:,1], 'r--', linewidth=3)\nax.set_xlabel('Year')\nax.set_ylabel('Effect on wage')\nax.set_title('Partial dependence of year on wage', fontsize=20);\n\n\n\n\n\n\n\n\nWe now fit the model () using smoothing splines rather than natural splines. All of the terms in () are fit simultaneously, taking each other into account to explain the response. The pygam package only works with matrices, so we must convert the categorical series education to its array representation, which can be found with the cat.codes attribute of education. As year only has 7 unique values, we use only seven basis functions for it.\n\ngam_full = LinearGAM(s_gam(0) +\n                     s_gam(1, n_splines=7) +\n                     f_gam(2, lam=0))\nXgam = np.column_stack([age,\n                        Wage['year'],\n                        Wage['education'].cat.codes])\ngam_full = gam_full.fit(Xgam, y)\n\nThe two s_gam() terms result in smoothing spline fits, and use a default value for \\lambda (lam=0.6), which is somewhat arbitrary. For the categorical term education, specified using a f_gam() term, we specify lam=0 to avoid any shrinkage. We produce the partial dependence plot in age to see the effect of these choices.\nThe values for the plot are generated by the pygam package. We provide a plot_gam() function for partial-dependence plots in ISLP.pygam, which makes this job easier than in our last example with natural splines.\n\nfig, ax = subplots(figsize=(8,8))\nplot_gam(gam_full, 0, ax=ax)\nax.set_xlabel('Age')\nax.set_ylabel('Effect on wage')\nax.set_title('Partial dependence of age on wage - default lam=0.6', fontsize=20);\n\n\n\n\n\n\n\n\nWe see that the function is somewhat wiggly. It is more natural to specify the df than a value for lam. We refit a GAM using four degrees of freedom each for age and year. Recall that the addition of one below takes into account the intercept of the smoothing spline.\n\nage_term = gam_full.terms[0]\nage_term.lam = approx_lam(Xgam, age_term, df=4+1)\nyear_term = gam_full.terms[1]\nyear_term.lam = approx_lam(Xgam, year_term, df=4+1)\ngam_full = gam_full.fit(Xgam, y)\n\nNote that updating age_term.lam above updates it in gam_full.terms[0] as well! Likewise for year_term.lam.\nRepeating the plot for age, we see that it is much smoother. We also produce the plot for year.\n\nfig, ax = subplots(figsize=(8,8))\nplot_gam(gam_full,\n         1,\n         ax=ax)\nax.set_xlabel('Year')\nax.set_ylabel('Effect on wage')\nax.set_title('Partial dependence of year on wage', fontsize=20)\n\nText(0.5, 0, 'Year')\n\n\nText(0, 0.5, 'Effect on wage')\n\n\nText(0.5, 1.0, 'Partial dependence of year on wage')\n\n\n\n\n\n\n\n\n\nFinally we plot education, which is categorical. The partial dependence plot is different, and more suitable for the set of fitted constants for each level of this variable.\n\nfig, ax = subplots(figsize=(8, 8))\nax = plot_gam(gam_full, 2)\nax.set_xlabel('Education')\nax.set_ylabel('Effect on wage')\nax.set_title('Partial dependence of wage on education',\n             fontsize=20);\nax.set_xticklabels(Wage['education'].cat.categories, fontsize=8);\n\n\n\n\n\n\n\n\n\n\n\nIn all of our models, the function of year looks rather linear. We can perform a series of ANOVA tests in order to determine which of these three models is best: a GAM that excludes year (\\mathcal{M}_1), a GAM that uses a linear function of year (\\mathcal{M}_2), or a GAM that uses a spline function of year (\\mathcal{M}_3).\n\ngam_0 = LinearGAM(age_term + f_gam(2, lam=0))\ngam_0.fit(Xgam, y)\ngam_linear = LinearGAM(age_term +\n                       l_gam(1, lam=0) +\n                       f_gam(2, lam=0))\ngam_linear.fit(Xgam, y)\n\nLinearGAM(callbacks=[Deviance(), Diffs()], fit_intercept=True, \n   max_iter=100, scale=None, terms=s(0) + f(2) + intercept, \n   tol=0.0001, verbose=False)\n\n\nLinearGAM(callbacks=[Deviance(), Diffs()], fit_intercept=True, \n   max_iter=100, scale=None, terms=s(0) + l(1) + f(2) + intercept, \n   tol=0.0001, verbose=False)\n\n\nNotice our use of age_term in the expressions above. We do this because earlier we set the value for lam in this term to achieve four degrees of freedom.\nTo directly assess the effect of year we run an ANOVA on the three models fit above.\n\nanova_gam(gam_0, gam_linear, gam_full)\n\n\n\n\n\n\n\n\ndeviance\ndf\ndeviance_diff\ndf_diff\nF\npvalue\n\n\n\n\n0\n3.714362e+06\n2991.004005\nNaN\nNaN\nNaN\nNaN\n\n\n1\n3.696746e+06\n2990.005190\n17616.542840\n0.998815\n14.265131\n0.002314\n\n\n2\n3.693143e+06\n2987.007254\n3602.893655\n2.997936\n0.972007\n0.435579\n\n\n\n\n\n\n\nWe find that there is compelling evidence that a GAM with a linear function in year is better than a GAM that does not include year at all (p-value= 0.002). However, there is no evidence that a non-linear function of year is needed (p-value=0.435). In other words, based on the results of this ANOVA, \\mathcal{M}_2 is preferred.\nWe can repeat the same process for age as well. We see there is very clear evidence that a non-linear term is required for age.\n\ngam_0 = LinearGAM(year_term +\n                  f_gam(2, lam=0))\ngam_linear = LinearGAM(l_gam(0, lam=0) +\n                       year_term +\n                       f_gam(2, lam=0))\ngam_0.fit(Xgam, y)\ngam_linear.fit(Xgam, y)\nanova_gam(gam_0, gam_linear, gam_full)\n\nLinearGAM(callbacks=[Deviance(), Diffs()], fit_intercept=True, \n   max_iter=100, scale=None, terms=s(1) + f(2) + intercept, \n   tol=0.0001, verbose=False)\n\n\nLinearGAM(callbacks=[Deviance(), Diffs()], fit_intercept=True, \n   max_iter=100, scale=None, terms=l(0) + s(1) + f(2) + intercept, \n   tol=0.0001, verbose=False)\n\n\n\n\n\n\n\n\n\ndeviance\ndf\ndeviance_diff\ndf_diff\nF\npvalue\n\n\n\n\n0\n3.975443e+06\n2991.000589\nNaN\nNaN\nNaN\nNaN\n\n\n1\n3.850247e+06\n2990.000704\n125196.137317\n0.999884\n101.270106\n1.681120e-07\n\n\n2\n3.693143e+06\n2987.007254\n157103.978302\n2.993450\n42.447812\n5.669414e-07\n\n\n\n\n\n\n\nThere is a (verbose) summary() method for the GAM fit.\n\ngam_full.summary()\n\nLinearGAM                                                                                                 \n=============================================== ==========================================================\nDistribution:                        NormalDist Effective DoF:                                     12.9927\nLink Function:                     IdentityLink Log Likelihood:                                 -24117.907\nNumber of Samples:                         3000 AIC:                                            48263.7995\n                                                AICc:                                             48263.94\n                                                GCV:                                             1246.1129\n                                                Scale:                                           1236.4024\n                                                Pseudo R-Squared:                                   0.2928\n==========================================================================================================\nFeature Function                  Lambda               Rank         EDoF         P &gt; x        Sig. Code   \n================================= ==================== ============ ============ ============ ============\ns(0)                              [465.0491]           20           5.1          1.11e-16     ***         \ns(1)                              [2.1564]             7            4.0          8.10e-03     **          \nf(2)                              [0]                  5            4.0          1.11e-16     ***         \nintercept                                              1            0.0          1.11e-16     ***         \n==========================================================================================================\nSignificance codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nWARNING: Fitting splines and a linear function to a feature introduces a model identifiability problem\n         which can cause p-values to appear significant when they are not.\n\nWARNING: p-values calculated in this manner behave correctly for un-penalized models or models with\n         known smoothing parameters, but when smoothing parameters have been estimated, the p-values\n         are typically lower than they should be, meaning that the tests reject the null too readily.\n\n\n/tmp/ipykernel_53799/3870570873.py:1: UserWarning: KNOWN BUG: p-values computed in this summary are likely much smaller than they should be. \n \nPlease do not make inferences based on these values! \n\nCollaborate on a solution, and stay up to date at: \ngithub.com/dswah/pyGAM/issues/163 \n\n  gam_full.summary()\n\n\nWe can make predictions from gam objects, just like from lm objects, using the predict() method for the class gam. Here we make predictions on the training set.\n\nYhat = gam_full.predict(Xgam)\n\nIn order to fit a logistic regression GAM, we use LogisticGAM() from pygam.\n\ngam_logit = LogisticGAM(age_term + \n                        l_gam(1, lam=0) +\n                        f_gam(2, lam=0))\ngam_logit.fit(Xgam, high_earn)\n\nLogisticGAM(callbacks=[Deviance(), Diffs(), Accuracy()], \n   fit_intercept=True, max_iter=100, \n   terms=s(0) + l(1) + f(2) + intercept, tol=0.0001, verbose=False)\n\n\n\nfig, ax = subplots(figsize=(8, 8))\nax = plot_gam(gam_logit, 2)\nax.set_xlabel('Education')\nax.set_ylabel('Effect on wage')\nax.set_title('Partial dependence of wage on education',\n             fontsize=20);\nax.set_xticklabels(Wage['education'].cat.categories, fontsize=8);\n\n\n\n\n\n\n\n\nThe model seems to be very flat, with especially high error bars for the first category. Let’s look at the data a bit more closely.\n\npd.crosstab(Wage['high_earn'], Wage['education'])\n\n\n\n\n\n\n\neducation\n1. &lt; HS Grad\n2. HS Grad\n3. Some College\n4. College Grad\n5. Advanced Degree\n\n\nhigh_earn\n\n\n\n\n\n\n\n\n\nFalse\n268\n966\n643\n663\n381\n\n\nTrue\n0\n5\n7\n22\n45\n\n\n\n\n\n\n\nWe see that there are no high earners in the first category of education, meaning that the model will have a hard time fitting. We will fit a logistic regression GAM excluding all observations falling into this category. This provides more sensible results.\nTo do so, we could subset the model matrix, though this will not remove the column from Xgam. While we can deduce which column corresponds to this feature, for reproducibility’s sake we reform the model matrix on this smaller subset.\n\nonly_hs = Wage['education'] == '1. &lt; HS Grad'\nWage_ = Wage.loc[~only_hs]\nXgam_ = np.column_stack([Wage_['age'],\n                         Wage_['year'],\n                         Wage_['education'].cat.codes-1])\nhigh_earn_ = Wage_['high_earn']\n\nIn the second-to-last line above, we subtract one from the codes of the category, due to a bug in pygam. It just relabels the education values and hence has no effect on the fit.\nWe now fit the model.\n\ngam_logit_ = LogisticGAM(age_term +\n                         year_term +\n                         f_gam(2, lam=0))\ngam_logit_.fit(Xgam_, high_earn_)\n\nLogisticGAM(callbacks=[Deviance(), Diffs(), Accuracy()], \n   fit_intercept=True, max_iter=100, \n   terms=s(0) + s(1) + f(2) + intercept, tol=0.0001, verbose=False)\n\n\nLet’s look at the effect of education, year and age on high earner status now that we’ve removed those observations.\n\nfig, ax = subplots(figsize=(8, 8))\nax = plot_gam(gam_logit_, 2)\nax.set_xlabel('Education')\nax.set_ylabel('Effect on wage')\nax.set_title('Partial dependence of high earner status on education', fontsize=20);\nax.set_xticklabels(Wage['education'].cat.categories[1:],\n                   fontsize=8);\n\n\n\n\n\n\n\n\n\nfig, ax = subplots(figsize=(8, 8))\nax = plot_gam(gam_logit_, 1)\nax.set_xlabel('Year')\nax.set_ylabel('Effect on wage')\nax.set_title('Partial dependence of high earner status on year',\n             fontsize=20);\n\n\n\n\n\n\n\n\n\nfig, ax = subplots(figsize=(8, 8))\nax = plot_gam(gam_logit_, 0)\nax.set_xlabel('Age')\nax.set_ylabel('Effect on wage')\nax.set_title('Partial dependence of high earner status on age', fontsize=20);\n\n\n\n\n\n\n\n\n\n\n\n\nWe illustrate the use of local regression using the lowess() function from sm.nonparametric. Some implementations of GAMs allow terms to be local regression operators; this is not the case in pygam.\nHere we fit local linear regression models using spans of 0.2 and 0.5; that is, each neighborhood consists of 20% or 50% of the observations. As expected, using a span of 0.5 is smoother than 0.2.\n\nlowess = sm.nonparametric.lowess\nfig, ax = subplots(figsize=(8,8))\nax.scatter(age, y, facecolor='gray', alpha=0.5)\nfor span in [0.2, 0.5]:\n    fitted = lowess(y,\n                    age,\n                    frac=span,\n                    xvals=age_grid)\n    ax.plot(age_grid,\n            fitted,\n            label='{:.1f}'.format(span),\n            linewidth=4)\nax.set_xlabel('Age', fontsize=20)\nax.set_ylabel('Wage', fontsize=20);\nax.legend(title='span', fontsize=15);"
  },
  {
    "objectID": "posts/ch07-beyond-linearity/Ch07-nonlin-lab.html#polynomial-regression-and-step-functions",
    "href": "posts/ch07-beyond-linearity/Ch07-nonlin-lab.html#polynomial-regression-and-step-functions",
    "title": "Chapter 7 - Non-Linear Modeling Lab",
    "section": "",
    "text": "We start by demonstrating how Figure~ can be reproduced. Let’s begin by loading the data.\n\nWage = load_data('Wage')\ny = Wage['wage']\nage = Wage['age']\n\nThroughout most of this lab, our response is Wage['wage'], which we have stored as y above. As in Section~, we will use the poly() function to create a model matrix that will fit a 4th degree polynomial in age.\n\npoly_age = MS([poly('age', degree=4)]).fit(Wage)\nM = sm.OLS(y, poly_age.transform(Wage)).fit()\nsummarize(M)\n\n\n\n\n\n\n\n\ncoef\nstd err\nt\nP&gt;|t|\n\n\n\n\nintercept\n111.7036\n0.729\n153.283\n0.000\n\n\npoly(age, degree=4)[0]\n447.0679\n39.915\n11.201\n0.000\n\n\npoly(age, degree=4)[1]\n-478.3158\n39.915\n-11.983\n0.000\n\n\npoly(age, degree=4)[2]\n125.5217\n39.915\n3.145\n0.002\n\n\npoly(age, degree=4)[3]\n-77.9112\n39.915\n-1.952\n0.051\n\n\n\n\n\n\n\nThis polynomial is constructed using the function poly(), which creates a special transformer Poly() (using sklearn terminology for feature transformations such as PCA() seen in Section ) which allows for easy evaluation of the polynomial at new data points. Here poly() is referred to as a helper function, and sets up the transformation; Poly() is the actual workhorse that computes the transformation. See also the discussion of transformations on page~.\nIn the code above, the first line executes the fit() method using the dataframe Wage. This recomputes and stores as attributes any parameters needed by Poly() on the training data, and these will be used on all subsequent evaluations of the transform() method. For example, it is used on the second line, as well as in the plotting function developed below.\nWe now create a grid of values for age at which we want predictions.\n\nage_grid = np.linspace(age.min(),\n                       age.max(),\n                       100)\nage_df = pd.DataFrame({'age': age_grid})\n\nFinally, we wish to plot the data and add the fit from the fourth-degree polynomial. As we will make several similar plots below, we first write a function to create all the ingredients and produce the plot. Our function takes in a model specification (here a basis specified by a transform), as well as a grid of age values. The function produces a fitted curve as well as 95% confidence bands. By using an argument for basis we can produce and plot the results with several different transforms, such as the splines we will see shortly.\n\ndef plot_wage_fit(age_df, \n                  basis,\n                  title):\n\n    X = basis.transform(Wage)\n    Xnew = basis.transform(age_df)\n    M = sm.OLS(y, X).fit()\n    preds = M.get_prediction(Xnew)\n    bands = preds.conf_int(alpha=0.05)\n    fig, ax = subplots(figsize=(8,8))\n    ax.scatter(age,\n               y,\n               facecolor='gray',\n               alpha=0.5)\n    for val, ls in zip([preds.predicted_mean,\n                      bands[:,0],\n                      bands[:,1]],\n                     ['b','r--','r--']):\n        ax.plot(age_df.values, val, ls, linewidth=3)\n    ax.set_title(title, fontsize=20)\n    ax.set_xlabel('Age', fontsize=20)\n    ax.set_ylabel('Wage', fontsize=20);\n    return ax\n\nWe include an argument alpha to ax.scatter() to add some transparency to the points. This provides a visual indication of density. Notice the use of the zip() function in the for loop above (see Section~). We have three lines to plot, each with different colors and line types. Here zip() conveniently bundles these together as iterators in the loop. {In Python speak, an “iterator” is an object with a finite number of values, that can be iterated on, as in a loop.}\nWe now plot the fit of the fourth-degree polynomial using this function.\n\nplot_wage_fit(age_df, \n              poly_age,\n              'Degree-4 Polynomial');\n\n\n\n\n\n\n\n\nWith polynomial regression we must decide on the degree of the polynomial to use. Sometimes we just wing it, and decide to use second or third degree polynomials, simply to obtain a nonlinear fit. But we can make such a decision in a more systematic way. One way to do this is through hypothesis tests, which we demonstrate here. We now fit a series of models ranging from linear (degree-one) to degree-five polynomials, and look to determine the simplest model that is sufficient to explain the relationship between wage and age. We use the anova_lm() function, which performs a series of ANOVA tests. An or ANOVA tests the null hypothesis that a model \\mathcal{M}_1 is sufficient to explain the data against the alternative hypothesis that a more complex model \\mathcal{M}_2 is required. The determination is based on an F-test. To perform the test, the models \\mathcal{M}_1 and \\mathcal{M}_2 must be nested: the space spanned by the predictors in \\mathcal{M}_1 must be a subspace of the space spanned by the predictors in \\mathcal{M}_2. In this case, we fit five different polynomial models and sequentially compare the simpler model to the more complex model.\n\nmodels = [MS([poly('age', degree=d)]) \n          for d in range(1, 6)]\nXs = [model.fit_transform(Wage) for model in models]\nanova_lm(*[sm.OLS(y, X_).fit()\n           for X_ in Xs])\n\n\n\n\n\n\n\n\ndf_resid\nssr\ndf_diff\nss_diff\nF\nPr(&gt;F)\n\n\n\n\n0\n2998.0\n5.022216e+06\n0.0\nNaN\nNaN\nNaN\n\n\n1\n2997.0\n4.793430e+06\n1.0\n228786.010128\n143.593107\n2.363850e-32\n\n\n2\n2996.0\n4.777674e+06\n1.0\n15755.693664\n9.888756\n1.679202e-03\n\n\n3\n2995.0\n4.771604e+06\n1.0\n6070.152124\n3.809813\n5.104620e-02\n\n\n4\n2994.0\n4.770322e+06\n1.0\n1282.563017\n0.804976\n3.696820e-01\n\n\n\n\n\n\n\nNotice the * in the anova_lm() line above. This function takes a variable number of non-keyword arguments, in this case fitted models. When these models are provided as a list (as is done here), it must be prefixed by *.\nThe p-value comparing the linear models[0] to the quadratic models[1] is essentially zero, indicating that a linear fit is not sufficient. {Indexing starting at zero is confusing for the polynomial degree example, since models[1] is quadratic rather than linear!} Similarly the p-value comparing the quadratic models[1] to the cubic models[2] is very low (0.0017), so the quadratic fit is also insufficient. The p-value comparing the cubic and degree-four polynomials, models[2] and models[3], is approximately 5%, while the degree-five polynomial models[4] seems unnecessary because its p-value is 0.37. Hence, either a cubic or a quartic polynomial appear to provide a reasonable fit to the data, but lower- or higher-order models are not justified.\nIn this case, instead of using the anova() function, we could have obtained these p-values more succinctly by exploiting the fact that poly() creates orthogonal polynomials.\n\nsummarize(M)\n\n\n\n\n\n\n\n\ncoef\nstd err\nt\nP&gt;|t|\n\n\n\n\nintercept\n111.7036\n0.729\n153.283\n0.000\n\n\npoly(age, degree=4)[0]\n447.0679\n39.915\n11.201\n0.000\n\n\npoly(age, degree=4)[1]\n-478.3158\n39.915\n-11.983\n0.000\n\n\npoly(age, degree=4)[2]\n125.5217\n39.915\n3.145\n0.002\n\n\npoly(age, degree=4)[3]\n-77.9112\n39.915\n-1.952\n0.051\n\n\n\n\n\n\n\nNotice that the p-values are the same, and in fact the square of the t-statistics are equal to the F-statistics from the anova_lm() function; for example:\n\n(-11.983)**2\n\n143.59228900000002\n\n\nHowever, the ANOVA method works whether or not we used orthogonal polynomials, provided the models are nested. For example, we can use anova_lm() to compare the following three models, which all have a linear term in education and a polynomial in age of different degrees:\n\nmodels = [MS(['education', poly('age', degree=d)])\n          for d in range(1, 4)]\nXEs = [model.fit_transform(Wage)\n       for model in models]\nanova_lm(*[sm.OLS(y, X_).fit() for X_ in XEs])\n\n\n\n\n\n\n\n\ndf_resid\nssr\ndf_diff\nss_diff\nF\nPr(&gt;F)\n\n\n\n\n0\n2997.0\n3.902335e+06\n0.0\nNaN\nNaN\nNaN\n\n\n1\n2996.0\n3.759472e+06\n1.0\n142862.701185\n113.991883\n3.838075e-26\n\n\n2\n2995.0\n3.753546e+06\n1.0\n5926.207070\n4.728593\n2.974318e-02\n\n\n\n\n\n\n\nAs an alternative to using hypothesis tests and ANOVA, we could choose the polynomial degree using cross-validation, as discussed in Chapter~.\nNext we consider the task of predicting whether an individual earns more than $250,000 per year. We proceed much as before, except that first we create the appropriate response vector, and then apply the glm() function using the binomial family in order to fit a polynomial logistic regression model.\n\nX = poly_age.transform(Wage)\nhigh_earn = Wage['high_earn'] = y &gt; 250 # shorthand\nglm = sm.GLM(y &gt; 250,\n             X,\n             family=sm.families.Binomial())\nB = glm.fit()\nsummarize(B)\n\n\n\n\n\n\n\n\ncoef\nstd err\nz\nP&gt;|z|\n\n\n\n\nintercept\n-4.3012\n0.345\n-12.457\n0.000\n\n\npoly(age, degree=4)[0]\n71.9642\n26.133\n2.754\n0.006\n\n\npoly(age, degree=4)[1]\n-85.7729\n35.929\n-2.387\n0.017\n\n\npoly(age, degree=4)[2]\n34.1626\n19.697\n1.734\n0.083\n\n\npoly(age, degree=4)[3]\n-47.4008\n24.105\n-1.966\n0.049\n\n\n\n\n\n\n\nOnce again, we make predictions using the get_prediction() method.\n\nnewX = poly_age.transform(age_df)\npreds = B.get_prediction(newX)\nbands = preds.conf_int(alpha=0.05)\n\nWe now plot the estimated relationship.\n\nfig, ax = subplots(figsize=(8,8))\nrng = np.random.default_rng(0)\nax.scatter(age +\n           0.2 * rng.uniform(size=y.shape[0]),\n           np.where(high_earn, 0.198, 0.002),\n           fc='gray',\n           marker='|')\nfor val, ls in zip([preds.predicted_mean,\n                  bands[:,0],\n                  bands[:,1]],\n                 ['b','r--','r--']):\n    ax.plot(age_df.values, val, ls, linewidth=3)\nax.set_title('Degree-4 Polynomial', fontsize=20)\nax.set_xlabel('Age', fontsize=20)\nax.set_ylim([0,0.2])\nax.set_ylabel('P(Wage &gt; 250)', fontsize=20);\n\n\n\n\n\n\n\n\nWe have drawn the age values corresponding to the observations with wage values above 250 as gray marks on the top of the plot, and those with wage values below 250 are shown as gray marks on the bottom of the plot. We added a small amount of noise to jitter the age values a bit so that observations with the same age value do not cover each other up. This type of plot is often called a rug plot.\nIn order to fit a step function, as discussed in Section~, we first use the pd.qcut() function to discretize age based on quantiles. Then we use pd.get_dummies() to create the columns of the model matrix for this categorical variable. Note that this function will include all columns for a given categorical, rather than the usual approach which drops one of the levels.\n\ncut_age = pd.qcut(age, 4)\nsummarize(sm.OLS(y, pd.get_dummies(cut_age)).fit())\n\n\n\n\n\n\n\n\ncoef\nstd err\nt\nP&gt;|t|\n\n\n\n\n(17.999, 33.75]\n94.1584\n1.478\n63.692\n0.0\n\n\n(33.75, 42.0]\n116.6608\n1.470\n79.385\n0.0\n\n\n(42.0, 51.0]\n119.1887\n1.416\n84.147\n0.0\n\n\n(51.0, 80.0]\n116.5717\n1.559\n74.751\n0.0\n\n\n\n\n\n\n\nHere pd.qcut() automatically picked the cutpoints based on the quantiles 25%, 50% and 75%, which results in four regions. We could also have specified our own quantiles directly instead of the argument 4. For cuts not based on quantiles we would use the pd.cut() function. The function pd.qcut() (and pd.cut()) returns an ordered categorical variable. The regression model then creates a set of dummy variables for use in the regression. Since age is the only variable in the model, the value $94,158.40 is the average salary for those under 33.75 years of age, and the other coefficients are the average salary for those in the other age groups. We can produce predictions and plots just as we did in the case of the polynomial fit."
  },
  {
    "objectID": "posts/ch07-beyond-linearity/Ch07-nonlin-lab.html#splines",
    "href": "posts/ch07-beyond-linearity/Ch07-nonlin-lab.html#splines",
    "title": "Chapter 7 - Non-Linear Modeling Lab",
    "section": "",
    "text": "In order to fit regression splines, we use transforms from the ISLP package. The actual spline evaluation functions are in the scipy.interpolate package; we have simply wrapped them as transforms similar to Poly() and PCA().\nIn Section~, we saw that regression splines can be fit by constructing an appropriate matrix of basis functions. The BSpline() function generates the entire matrix of basis functions for splines with the specified set of knots. By default, the B-splines produced are cubic. To change the degree, use the argument degree.\n\nbs_ = BSpline(internal_knots=[25,40,60], intercept=True).fit(age)\nbs_age = bs_.transform(age)\nbs_age.shape\n\n(3000, 7)\n\n\nThis results in a seven-column matrix, which is what is expected for a cubic-spline basis with 3 interior knots. We can form this same matrix using the bs() object, which facilitates adding this to a model-matrix builder (as in poly() versus its workhorse Poly()) described in Section~.\nWe now fit a cubic spline model to the Wage data.\n\nbs_age = MS([bs('age', internal_knots=[25,40,60])])\nXbs = bs_age.fit_transform(Wage)\nM = sm.OLS(y, Xbs).fit()\nsummarize(M)\n\n\n\n\n\n\n\n\ncoef\nstd err\nt\nP&gt;|t|\n\n\n\n\nintercept\n60.4937\n9.460\n6.394\n0.000\n\n\nbs(age, internal_knots=[25, 40, 60])[0]\n3.9805\n12.538\n0.317\n0.751\n\n\nbs(age, internal_knots=[25, 40, 60])[1]\n44.6310\n9.626\n4.636\n0.000\n\n\nbs(age, internal_knots=[25, 40, 60])[2]\n62.8388\n10.755\n5.843\n0.000\n\n\nbs(age, internal_knots=[25, 40, 60])[3]\n55.9908\n10.706\n5.230\n0.000\n\n\nbs(age, internal_knots=[25, 40, 60])[4]\n50.6881\n14.402\n3.520\n0.000\n\n\nbs(age, internal_knots=[25, 40, 60])[5]\n16.6061\n19.126\n0.868\n0.385\n\n\n\n\n\n\n\nThe column names are a little cumbersome, and have caused us to truncate the printed summary. They can be set on construction using the name argument as follows.\n\nbs_age = MS([bs('age',\n                internal_knots=[25,40,60],\n                name='bs(age)')])\nXbs = bs_age.fit_transform(Wage)\nM = sm.OLS(y, Xbs).fit()\nsummarize(M)\n\n\n\n\n\n\n\n\ncoef\nstd err\nt\nP&gt;|t|\n\n\n\n\nintercept\n60.4937\n9.460\n6.394\n0.000\n\n\nbs(age)[0]\n3.9805\n12.538\n0.317\n0.751\n\n\nbs(age)[1]\n44.6310\n9.626\n4.636\n0.000\n\n\nbs(age)[2]\n62.8388\n10.755\n5.843\n0.000\n\n\nbs(age)[3]\n55.9908\n10.706\n5.230\n0.000\n\n\nbs(age)[4]\n50.6881\n14.402\n3.520\n0.000\n\n\nbs(age)[5]\n16.6061\n19.126\n0.868\n0.385\n\n\n\n\n\n\n\nNotice that there are 6 spline coefficients rather than 7. This is because, by default, bs() assumes intercept=False, since we typically have an overall intercept in the model. So it generates the spline basis with the given knots, and then discards one of the basis functions to account for the intercept.\nWe could also use the df (degrees of freedom) option to specify the complexity of the spline. We see above that with 3 knots, the spline basis has 6 columns or degrees of freedom. When we specify df=6 rather than the actual knots, bs() will produce a spline with 3 knots chosen at uniform quantiles of the training data. We can see these chosen knots most easily using Bspline() directly:\n\nBSpline(df=6).fit(age).internal_knots_\n\narray([33.75, 42.  , 51.  ])\n\n\nWhen asking for six degrees of freedom, the transform chooses knots at ages 33.75, 42.0, and 51.0, which correspond to the 25th, 50th, and 75th percentiles of age.\nWhen using B-splines we need not limit ourselves to cubic polynomials (i.e. degree=3). For instance, using degree=0 results in piecewise constant functions, as in our example with pd.qcut() above.\n\nbs_age0 = MS([bs('age',\n                 df=3, \n                 degree=0)]).fit(Wage)\nXbs0 = bs_age0.transform(Wage)\nsummarize(sm.OLS(y, Xbs0).fit())\n\n\n\n\n\n\n\n\ncoef\nstd err\nt\nP&gt;|t|\n\n\n\n\nintercept\n94.1584\n1.478\n63.687\n0.0\n\n\nbs(age, df=3, degree=0)[0]\n22.3490\n2.152\n10.388\n0.0\n\n\nbs(age, df=3, degree=0)[1]\n24.8076\n2.044\n12.137\n0.0\n\n\nbs(age, df=3, degree=0)[2]\n22.7814\n2.087\n10.917\n0.0\n\n\n\n\n\n\n\nThis fit should be compared with cell [15] where we use qcut() to create four bins by cutting at the 25%, 50% and 75% quantiles of age. Since we specified df=3 for degree-zero splines here, there will also be knots at the same three quantiles. Although the coefficients appear different, we see that this is a result of the different coding. For example, the first coefficient is identical in both cases, and is the mean response in the first bin. For the second coefficient, we have 94.158 + 22.349 = 116.507 \\approx 116.611, the latter being the mean in the second bin in cell [15]. Here the intercept is coded by a column of ones, so the second, third and fourth coefficients are increments for those bins. Why is the sum not exactly the same? It turns out that the qcut() uses \\leq, while bs() uses &lt; when deciding bin membership.\nIn order to fit a natural spline, we use the NaturalSpline() transform with the corresponding helper ns(). Here we fit a natural spline with five degrees of freedom (excluding the intercept) and plot the results.\n\nns_age = MS([ns('age', df=5)]).fit(Wage)\nM_ns = sm.OLS(y, ns_age.transform(Wage)).fit()\nsummarize(M_ns)\n\n\n\n\n\n\n\n\ncoef\nstd err\nt\nP&gt;|t|\n\n\n\n\nintercept\n60.4752\n4.708\n12.844\n0.000\n\n\nns(age, df=5)[0]\n61.5267\n4.709\n13.065\n0.000\n\n\nns(age, df=5)[1]\n55.6912\n5.717\n9.741\n0.000\n\n\nns(age, df=5)[2]\n46.8184\n4.948\n9.463\n0.000\n\n\nns(age, df=5)[3]\n83.2036\n11.918\n6.982\n0.000\n\n\nns(age, df=5)[4]\n6.8770\n9.484\n0.725\n0.468\n\n\n\n\n\n\n\nWe now plot the natural spline using our plotting function.\n\nplot_wage_fit(age_df,\n              ns_age,\n              'Natural spline, df=5');"
  },
  {
    "objectID": "posts/ch07-beyond-linearity/Ch07-nonlin-lab.html#smoothing-splines-and-gams",
    "href": "posts/ch07-beyond-linearity/Ch07-nonlin-lab.html#smoothing-splines-and-gams",
    "title": "Chapter 7 - Non-Linear Modeling Lab",
    "section": "",
    "text": "A smoothing spline is a special case of a GAM with squared-error loss and a single feature. To fit GAMs in Python we will use the pygam package which can be installed via pip install pygam. The estimator LinearGAM() uses squared-error loss. The GAM is specified by associating each column of a model matrix with a particular smoothing operation: s for smoothing spline; l for linear, and f for factor or categorical variables. The argument 0 passed to s below indicates that this smoother will apply to the first column of a feature matrix. Below, we pass it a matrix with a single column: X_age. The argument lam is the penalty parameter \\lambda as discussed in Section~.\n\nX_age = np.asarray(age).reshape((-1,1))\ngam = LinearGAM(s_gam(0, lam=0.6))\ngam.fit(X_age, y)\n\nLinearGAM(callbacks=[Deviance(), Diffs()], fit_intercept=True, \n   max_iter=100, scale=None, terms=s(0) + intercept, tol=0.0001, \n   verbose=False)\n\n\nThe pygam library generally expects a matrix of features so we reshape age to be a matrix (a two-dimensional array) instead of a vector (i.e. a one-dimensional array). The -1 in the call to the reshape() method tells numpy to impute the size of that dimension based on the remaining entries of the shape tuple.\nLet’s investigate how the fit changes with the smoothing parameter lam. The function np.logspace() is similar to np.linspace() but spaces points evenly on the log-scale. Below we vary lam from 10^{-2} to 10^6.\n\nfig, ax = subplots(figsize=(8,8))\nax.scatter(age, y, facecolor='gray', alpha=0.5)\nfor lam in np.logspace(-2, 6, 5):\n    gam = LinearGAM(s_gam(0, lam=lam)).fit(X_age, y)\n    ax.plot(age_grid,\n            gam.predict(age_grid),\n            label='{:.1e}'.format(lam),\n            linewidth=3)\nax.set_xlabel('Age', fontsize=20)\nax.set_ylabel('Wage', fontsize=20);\nax.legend(title='$\\lambda$');\n\n\n\n\n\n\n\n\nThe pygam package can perform a search for an optimal smoothing parameter.\n\ngam_opt = gam.gridsearch(X_age, y)\nax.plot(age_grid,\n        gam_opt.predict(age_grid),\n        label='Grid search',\n        linewidth=4)\nax.legend()\nfig\n\n  0% (0 of 11) |                         | Elapsed Time: 0:00:00 ETA:  --:--:-- 36% (4 of 11) |#########                | Elapsed Time: 0:00:00 ETA:   0:00:00 63% (7 of 11) |###############          | Elapsed Time: 0:00:00 ETA:   0:00:00 90% (10 of 11) |#####################   | Elapsed Time: 0:00:00 ETA:   0:00:00100% (11 of 11) |########################| Elapsed Time: 0:00:00 Time:  0:00:00\n\n\n\n\n\n\n\n\n\nAlternatively, we can fix the degrees of freedom of the smoothing spline using a function included in the ISLP.pygam package. Below we find a value of \\lambda that gives us roughly four degrees of freedom. We note here that these degrees of freedom include the unpenalized intercept and linear term of the smoothing spline, hence there are at least two degrees of freedom.\n\nage_term = gam.terms[0]\nlam_4 = approx_lam(X_age, age_term, 4)\nage_term.lam = lam_4\ndegrees_of_freedom(X_age, age_term)\n\n4.000000100003379\n\n\nLet’s vary the degrees of freedom in a similar plot to above. We choose the degrees of freedom as the desired degrees of freedom plus one to account for the fact that these smoothing splines always have an intercept term. Hence, a value of one for df is just a linear fit.\n\nfig, ax = subplots(figsize=(8,8))\nax.scatter(X_age,\n           y,\n           facecolor='gray',\n           alpha=0.3)\nfor df in [1,3,4,8,15]:\n    lam = approx_lam(X_age, age_term, df+1)\n    age_term.lam = lam\n    gam.fit(X_age, y)\n    ax.plot(age_grid,\n            gam.predict(age_grid),\n            label='{:d}'.format(df),\n            linewidth=4)\nax.set_xlabel('Age', fontsize=20)\nax.set_ylabel('Wage', fontsize=20);\nax.legend(title='Degrees of freedom');\n\n\n\n\n\n\n\n\n\n\nThe strength of generalized additive models lies in their ability to fit multivariate regression models with more flexibility than linear models. We demonstrate two approaches: the first in a more manual fashion using natural splines and piecewise constant functions, and the second using the pygam package and smoothing splines.\nWe now fit a GAM by hand to predict wage using natural spline functions of year and age, treating education as a qualitative predictor, as in (). Since this is just a big linear regression model using an appropriate choice of basis functions, we can simply do this using the sm.OLS() function.\nWe will build the model matrix in a more manual fashion here, since we wish to access the pieces separately when constructing partial dependence plots.\n\nns_age = NaturalSpline(df=4).fit(age)\nns_year = NaturalSpline(df=5).fit(Wage['year'])\nXs = [ns_age.transform(age),\n      ns_year.transform(Wage['year']),\n      pd.get_dummies(Wage['education']).values]\nX_bh = np.hstack(Xs)\ngam_bh = sm.OLS(y, X_bh).fit()\n\nHere the function NaturalSpline() is the workhorse supporting the ns() helper function. We chose to use all columns of the indicator matrix for the categorical variable education, making an intercept redundant. Finally, we stacked the three component matrices horizontally to form the model matrix X_bh.\nWe now show how to construct partial dependence plots for each of the terms in our rudimentary GAM. We can do this by hand, given grids for age and year. We simply predict with new X matrices, fixing all but one of the features at a time.\n\nage_grid = np.linspace(age.min(),\n                       age.max(),\n                       100)\nX_age_bh = X_bh.copy()[:100]\nX_age_bh[:] = X_bh[:].mean(0)[None,:]\nX_age_bh[:,:4] = ns_age.transform(age_grid)\npreds = gam_bh.get_prediction(X_age_bh)\nbounds_age = preds.conf_int(alpha=0.05)\npartial_age = preds.predicted_mean\ncenter = partial_age.mean()\npartial_age -= center\nbounds_age -= center\nfig, ax = subplots(figsize=(8,8))\nax.plot(age_grid, partial_age, 'b', linewidth=3)\nax.plot(age_grid, bounds_age[:,0], 'r--', linewidth=3)\nax.plot(age_grid, bounds_age[:,1], 'r--', linewidth=3)\nax.set_xlabel('Age')\nax.set_ylabel('Effect on wage')\nax.set_title('Partial dependence of age on wage', fontsize=20);\n\n\n\n\n\n\n\n\nLet’s explain in some detail what we did above. The idea is to create a new prediction matrix, where all but the columns belonging to age are constant (and set to their training-data means). The four columns for age are filled in with the natural spline basis evaluated at the 100 values in age_grid.\n\nWe made a grid of length 100 in age, and created a matrix X_age_bh with 100 rows and the same number of columns as X_bh.\nWe replaced every row of this matrix with the column means of the original.\nWe then replace just the first four columns representing age with the natural spline basis computed at the values in age_grid.\n\nThe remaining steps should by now be familiar.\nWe also look at the effect of year on wage; the process is the same.\n\nyear_grid = np.linspace(2003, 2009, 100)\nyear_grid = np.linspace(Wage['year'].min(),\n                        Wage['year'].max(),\n                        100)\nX_year_bh = X_bh.copy()[:100]\nX_year_bh[:] = X_bh[:].mean(0)[None,:]\nX_year_bh[:,4:9] = ns_year.transform(year_grid)\npreds = gam_bh.get_prediction(X_year_bh)\nbounds_year = preds.conf_int(alpha=0.05)\npartial_year = preds.predicted_mean\ncenter = partial_year.mean()\npartial_year -= center\nbounds_year -= center\nfig, ax = subplots(figsize=(8,8))\nax.plot(year_grid, partial_year, 'b', linewidth=3)\nax.plot(year_grid, bounds_year[:,0], 'r--', linewidth=3)\nax.plot(year_grid, bounds_year[:,1], 'r--', linewidth=3)\nax.set_xlabel('Year')\nax.set_ylabel('Effect on wage')\nax.set_title('Partial dependence of year on wage', fontsize=20);\n\n\n\n\n\n\n\n\nWe now fit the model () using smoothing splines rather than natural splines. All of the terms in () are fit simultaneously, taking each other into account to explain the response. The pygam package only works with matrices, so we must convert the categorical series education to its array representation, which can be found with the cat.codes attribute of education. As year only has 7 unique values, we use only seven basis functions for it.\n\ngam_full = LinearGAM(s_gam(0) +\n                     s_gam(1, n_splines=7) +\n                     f_gam(2, lam=0))\nXgam = np.column_stack([age,\n                        Wage['year'],\n                        Wage['education'].cat.codes])\ngam_full = gam_full.fit(Xgam, y)\n\nThe two s_gam() terms result in smoothing spline fits, and use a default value for \\lambda (lam=0.6), which is somewhat arbitrary. For the categorical term education, specified using a f_gam() term, we specify lam=0 to avoid any shrinkage. We produce the partial dependence plot in age to see the effect of these choices.\nThe values for the plot are generated by the pygam package. We provide a plot_gam() function for partial-dependence plots in ISLP.pygam, which makes this job easier than in our last example with natural splines.\n\nfig, ax = subplots(figsize=(8,8))\nplot_gam(gam_full, 0, ax=ax)\nax.set_xlabel('Age')\nax.set_ylabel('Effect on wage')\nax.set_title('Partial dependence of age on wage - default lam=0.6', fontsize=20);\n\n\n\n\n\n\n\n\nWe see that the function is somewhat wiggly. It is more natural to specify the df than a value for lam. We refit a GAM using four degrees of freedom each for age and year. Recall that the addition of one below takes into account the intercept of the smoothing spline.\n\nage_term = gam_full.terms[0]\nage_term.lam = approx_lam(Xgam, age_term, df=4+1)\nyear_term = gam_full.terms[1]\nyear_term.lam = approx_lam(Xgam, year_term, df=4+1)\ngam_full = gam_full.fit(Xgam, y)\n\nNote that updating age_term.lam above updates it in gam_full.terms[0] as well! Likewise for year_term.lam.\nRepeating the plot for age, we see that it is much smoother. We also produce the plot for year.\n\nfig, ax = subplots(figsize=(8,8))\nplot_gam(gam_full,\n         1,\n         ax=ax)\nax.set_xlabel('Year')\nax.set_ylabel('Effect on wage')\nax.set_title('Partial dependence of year on wage', fontsize=20)\n\nText(0.5, 0, 'Year')\n\n\nText(0, 0.5, 'Effect on wage')\n\n\nText(0.5, 1.0, 'Partial dependence of year on wage')\n\n\n\n\n\n\n\n\n\nFinally we plot education, which is categorical. The partial dependence plot is different, and more suitable for the set of fitted constants for each level of this variable.\n\nfig, ax = subplots(figsize=(8, 8))\nax = plot_gam(gam_full, 2)\nax.set_xlabel('Education')\nax.set_ylabel('Effect on wage')\nax.set_title('Partial dependence of wage on education',\n             fontsize=20);\nax.set_xticklabels(Wage['education'].cat.categories, fontsize=8);\n\n\n\n\n\n\n\n\n\n\n\nIn all of our models, the function of year looks rather linear. We can perform a series of ANOVA tests in order to determine which of these three models is best: a GAM that excludes year (\\mathcal{M}_1), a GAM that uses a linear function of year (\\mathcal{M}_2), or a GAM that uses a spline function of year (\\mathcal{M}_3).\n\ngam_0 = LinearGAM(age_term + f_gam(2, lam=0))\ngam_0.fit(Xgam, y)\ngam_linear = LinearGAM(age_term +\n                       l_gam(1, lam=0) +\n                       f_gam(2, lam=0))\ngam_linear.fit(Xgam, y)\n\nLinearGAM(callbacks=[Deviance(), Diffs()], fit_intercept=True, \n   max_iter=100, scale=None, terms=s(0) + f(2) + intercept, \n   tol=0.0001, verbose=False)\n\n\nLinearGAM(callbacks=[Deviance(), Diffs()], fit_intercept=True, \n   max_iter=100, scale=None, terms=s(0) + l(1) + f(2) + intercept, \n   tol=0.0001, verbose=False)\n\n\nNotice our use of age_term in the expressions above. We do this because earlier we set the value for lam in this term to achieve four degrees of freedom.\nTo directly assess the effect of year we run an ANOVA on the three models fit above.\n\nanova_gam(gam_0, gam_linear, gam_full)\n\n\n\n\n\n\n\n\ndeviance\ndf\ndeviance_diff\ndf_diff\nF\npvalue\n\n\n\n\n0\n3.714362e+06\n2991.004005\nNaN\nNaN\nNaN\nNaN\n\n\n1\n3.696746e+06\n2990.005190\n17616.542840\n0.998815\n14.265131\n0.002314\n\n\n2\n3.693143e+06\n2987.007254\n3602.893655\n2.997936\n0.972007\n0.435579\n\n\n\n\n\n\n\nWe find that there is compelling evidence that a GAM with a linear function in year is better than a GAM that does not include year at all (p-value= 0.002). However, there is no evidence that a non-linear function of year is needed (p-value=0.435). In other words, based on the results of this ANOVA, \\mathcal{M}_2 is preferred.\nWe can repeat the same process for age as well. We see there is very clear evidence that a non-linear term is required for age.\n\ngam_0 = LinearGAM(year_term +\n                  f_gam(2, lam=0))\ngam_linear = LinearGAM(l_gam(0, lam=0) +\n                       year_term +\n                       f_gam(2, lam=0))\ngam_0.fit(Xgam, y)\ngam_linear.fit(Xgam, y)\nanova_gam(gam_0, gam_linear, gam_full)\n\nLinearGAM(callbacks=[Deviance(), Diffs()], fit_intercept=True, \n   max_iter=100, scale=None, terms=s(1) + f(2) + intercept, \n   tol=0.0001, verbose=False)\n\n\nLinearGAM(callbacks=[Deviance(), Diffs()], fit_intercept=True, \n   max_iter=100, scale=None, terms=l(0) + s(1) + f(2) + intercept, \n   tol=0.0001, verbose=False)\n\n\n\n\n\n\n\n\n\ndeviance\ndf\ndeviance_diff\ndf_diff\nF\npvalue\n\n\n\n\n0\n3.975443e+06\n2991.000589\nNaN\nNaN\nNaN\nNaN\n\n\n1\n3.850247e+06\n2990.000704\n125196.137317\n0.999884\n101.270106\n1.681120e-07\n\n\n2\n3.693143e+06\n2987.007254\n157103.978302\n2.993450\n42.447812\n5.669414e-07\n\n\n\n\n\n\n\nThere is a (verbose) summary() method for the GAM fit.\n\ngam_full.summary()\n\nLinearGAM                                                                                                 \n=============================================== ==========================================================\nDistribution:                        NormalDist Effective DoF:                                     12.9927\nLink Function:                     IdentityLink Log Likelihood:                                 -24117.907\nNumber of Samples:                         3000 AIC:                                            48263.7995\n                                                AICc:                                             48263.94\n                                                GCV:                                             1246.1129\n                                                Scale:                                           1236.4024\n                                                Pseudo R-Squared:                                   0.2928\n==========================================================================================================\nFeature Function                  Lambda               Rank         EDoF         P &gt; x        Sig. Code   \n================================= ==================== ============ ============ ============ ============\ns(0)                              [465.0491]           20           5.1          1.11e-16     ***         \ns(1)                              [2.1564]             7            4.0          8.10e-03     **          \nf(2)                              [0]                  5            4.0          1.11e-16     ***         \nintercept                                              1            0.0          1.11e-16     ***         \n==========================================================================================================\nSignificance codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nWARNING: Fitting splines and a linear function to a feature introduces a model identifiability problem\n         which can cause p-values to appear significant when they are not.\n\nWARNING: p-values calculated in this manner behave correctly for un-penalized models or models with\n         known smoothing parameters, but when smoothing parameters have been estimated, the p-values\n         are typically lower than they should be, meaning that the tests reject the null too readily.\n\n\n/tmp/ipykernel_53799/3870570873.py:1: UserWarning: KNOWN BUG: p-values computed in this summary are likely much smaller than they should be. \n \nPlease do not make inferences based on these values! \n\nCollaborate on a solution, and stay up to date at: \ngithub.com/dswah/pyGAM/issues/163 \n\n  gam_full.summary()\n\n\nWe can make predictions from gam objects, just like from lm objects, using the predict() method for the class gam. Here we make predictions on the training set.\n\nYhat = gam_full.predict(Xgam)\n\nIn order to fit a logistic regression GAM, we use LogisticGAM() from pygam.\n\ngam_logit = LogisticGAM(age_term + \n                        l_gam(1, lam=0) +\n                        f_gam(2, lam=0))\ngam_logit.fit(Xgam, high_earn)\n\nLogisticGAM(callbacks=[Deviance(), Diffs(), Accuracy()], \n   fit_intercept=True, max_iter=100, \n   terms=s(0) + l(1) + f(2) + intercept, tol=0.0001, verbose=False)\n\n\n\nfig, ax = subplots(figsize=(8, 8))\nax = plot_gam(gam_logit, 2)\nax.set_xlabel('Education')\nax.set_ylabel('Effect on wage')\nax.set_title('Partial dependence of wage on education',\n             fontsize=20);\nax.set_xticklabels(Wage['education'].cat.categories, fontsize=8);\n\n\n\n\n\n\n\n\nThe model seems to be very flat, with especially high error bars for the first category. Let’s look at the data a bit more closely.\n\npd.crosstab(Wage['high_earn'], Wage['education'])\n\n\n\n\n\n\n\neducation\n1. &lt; HS Grad\n2. HS Grad\n3. Some College\n4. College Grad\n5. Advanced Degree\n\n\nhigh_earn\n\n\n\n\n\n\n\n\n\nFalse\n268\n966\n643\n663\n381\n\n\nTrue\n0\n5\n7\n22\n45\n\n\n\n\n\n\n\nWe see that there are no high earners in the first category of education, meaning that the model will have a hard time fitting. We will fit a logistic regression GAM excluding all observations falling into this category. This provides more sensible results.\nTo do so, we could subset the model matrix, though this will not remove the column from Xgam. While we can deduce which column corresponds to this feature, for reproducibility’s sake we reform the model matrix on this smaller subset.\n\nonly_hs = Wage['education'] == '1. &lt; HS Grad'\nWage_ = Wage.loc[~only_hs]\nXgam_ = np.column_stack([Wage_['age'],\n                         Wage_['year'],\n                         Wage_['education'].cat.codes-1])\nhigh_earn_ = Wage_['high_earn']\n\nIn the second-to-last line above, we subtract one from the codes of the category, due to a bug in pygam. It just relabels the education values and hence has no effect on the fit.\nWe now fit the model.\n\ngam_logit_ = LogisticGAM(age_term +\n                         year_term +\n                         f_gam(2, lam=0))\ngam_logit_.fit(Xgam_, high_earn_)\n\nLogisticGAM(callbacks=[Deviance(), Diffs(), Accuracy()], \n   fit_intercept=True, max_iter=100, \n   terms=s(0) + s(1) + f(2) + intercept, tol=0.0001, verbose=False)\n\n\nLet’s look at the effect of education, year and age on high earner status now that we’ve removed those observations.\n\nfig, ax = subplots(figsize=(8, 8))\nax = plot_gam(gam_logit_, 2)\nax.set_xlabel('Education')\nax.set_ylabel('Effect on wage')\nax.set_title('Partial dependence of high earner status on education', fontsize=20);\nax.set_xticklabels(Wage['education'].cat.categories[1:],\n                   fontsize=8);\n\n\n\n\n\n\n\n\n\nfig, ax = subplots(figsize=(8, 8))\nax = plot_gam(gam_logit_, 1)\nax.set_xlabel('Year')\nax.set_ylabel('Effect on wage')\nax.set_title('Partial dependence of high earner status on year',\n             fontsize=20);\n\n\n\n\n\n\n\n\n\nfig, ax = subplots(figsize=(8, 8))\nax = plot_gam(gam_logit_, 0)\nax.set_xlabel('Age')\nax.set_ylabel('Effect on wage')\nax.set_title('Partial dependence of high earner status on age', fontsize=20);"
  },
  {
    "objectID": "posts/ch07-beyond-linearity/Ch07-nonlin-lab.html#local-regression",
    "href": "posts/ch07-beyond-linearity/Ch07-nonlin-lab.html#local-regression",
    "title": "Chapter 7 - Non-Linear Modeling Lab",
    "section": "",
    "text": "We illustrate the use of local regression using the lowess() function from sm.nonparametric. Some implementations of GAMs allow terms to be local regression operators; this is not the case in pygam.\nHere we fit local linear regression models using spans of 0.2 and 0.5; that is, each neighborhood consists of 20% or 50% of the observations. As expected, using a span of 0.5 is smoother than 0.2.\n\nlowess = sm.nonparametric.lowess\nfig, ax = subplots(figsize=(8,8))\nax.scatter(age, y, facecolor='gray', alpha=0.5)\nfor span in [0.2, 0.5]:\n    fitted = lowess(y,\n                    age,\n                    frac=span,\n                    xvals=age_grid)\n    ax.plot(age_grid,\n            fitted,\n            label='{:.1f}'.format(span),\n            linewidth=4)\nax.set_xlabel('Age', fontsize=20)\nax.set_ylabel('Wage', fontsize=20);\nax.legend(title='span', fontsize=15);"
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "This are some notes on one of my favourite books: An Introduction to Statistical Learning by Gareth James, Daniela Witten, Trevor Hastie and Robert Tibshirani. The book is available for free from the authors’ website. The book is a great introduction to statistical learning and is a good starting point for anyone interested in machine learning. The book is a bit light on the maths but it is a good introduction to the concepts and the authors have a more advanced book called The Elements of Statistical Learning which is more mathematically rigorous.\nAnother reason I like this book is that there are videos by the authors on YouTube which explain the material. Although I first read the book book before the videos came out and I considered it easy to undestand for most topics. However I found that the videos seem to be a bit orthogonal i.e. the seem to give lost of background information, beyond what is going on in the book. This is a good thing as it gives a lot of context to the material.\nTHe authors also make thier slides and figures available for free.\nA little while back this book came out with codes in python. This makes it more relevant for data scientists and machine learning engineers then the original which came out in R. More so there is now a chapter on deep learning which is a big plus. Though I dare say its hard to get the lab to run properly on a local machine.\nTne book covers lots of algorithms as well as many practical aspects of Data Science and Machine Learning. The book is a great starting point for anyone interested in the field."
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "An Introduction to Statistical Learning",
    "section": "",
    "text": "Chapter 13: Multiple Testing Lab\n\n\n\n\n\n\nlab\n\n\npython\n\n\n\n\n\n\n\n\n\nTuesday, January 21, 2025\n\n\nOren Bochman\n\n\n\n\n\n\n\n\n\n\n\n\nChapter 6: Linear Models and Regularization Methods Lab\n\n\n\n\n\n\nlab\n\n\npython\n\n\n\n\n\n\n\n\n\nTuesday, January 21, 2025\n\n\nOren Bochman\n\n\n\n\n\n\n\n\n\n\n\n\nChapter 1: Introduction\n\n\n\n\n\n\nnotes\n\n\nedx\n\n\n\nAbout the book, datasets and notation\n\n\n\n\n\nTuesday, January 21, 2025\n\n\nOren Bochman\n\n\n\n\n\n\n\n\n\n\n\n\nChapter 11: Survival Analysis\n\n\n\n\n\n\nnotes\n\n\nedx\n\n\n\nAbout the book, datasets and notation\n\n\n\n\n\nTuesday, January 21, 2025\n\n\nOren Bochman\n\n\n\n\n\n\n\n\n\n\n\n\nChapter 11: Survival Analysis - Lab\n\n\n\n\n\n\nlab\n\n\npython\n\n\n\n\n\n\n\n\n\nTuesday, January 21, 2025\n\n\nOren Bochman\n\n\n\n\n\n\n\n\n\n\n\n\nChapter 7 - Non-Linear Modeling Lab\n\n\n\n\n\n\nlab\n\n\npython\n\n\n\n\n\n\n\n\n\nTuesday, January 21, 2025\n\n\nOren Bochman\n\n\n\n\n\n\n\n\n\n\n\n\nChapter 12: Unsupervised Learning\n\n\n\n\n\n\nnotes\n\n\nedx\n\n\n\nAbout the book, datasets and notation\n\n\n\n\n\nTuesday, January 21, 2025\n\n\nOren Bochman\n\n\n\n\n\n\n\n\n\n\n\n\nChapter 12: Unsupervised Learning Lab\n\n\n\n\n\n\nlab\n\n\npython\n\n\n\n\n\n\n\n\n\nTuesday, January 21, 2025\n\n\nOren Bochman\n\n\n\n\n\n\n\n\n\n\n\n\nChapter 10: Deep Learning\n\n\n\n\n\n\nnotes\n\n\nedx\n\n\n\nDeep learning is a subfield of machine learning that is concerned with algorithms inspired by the structure and function of the brain called artificial neural networks.\n\n\n\n\n\nTuesday, January 21, 2025\n\n\nOren Bochman\n\n\n\n\n\n\n\n\n\n\n\n\nChapter 10: Deep Learning\n\n\n\n\n\n\nlab\n\n\npython\n\n\n\n\n\n\n\n\n\nTuesday, January 21, 2025\n\n\nOren Bochman\n\n\n\n\n\n\n\n\n\n\n\n\nChapter 9: Support Vector Machines\n\n\n\n\n\n\nnotes\n\n\nedx\n\n\n\nThe support vector machine (SVM), an approach for classification that was developed in the computer science community in the 1990s and that has grown in popularity since then\n\n\n\n\n\nTuesday, January 21, 2025\n\n\nOren Bochman\n\n\n\n\n\n\n\n\n\n\n\n\nChapter 9: Support Vector Machines Lab\n\n\n\n\n\n\nlab\n\n\npython\n\n\n\n\n\n\n\n\n\nTuesday, January 21, 2025\n\n\nOren Bochman\n\n\n\n\n\n\n\n\n\n\n\n\nChapter 8: Tree-Based Methods\n\n\n\n\n\n\nlab\n\n\npython\n\n\n\n\n\n\n\n\n\nTuesday, January 21, 2025\n\n\nOren Bochman\n\n\n\n\n\n\n\n\n\n\n\n\nChapter 8: Trees\n\n\n\n\n\n\nnotes\n\n\nedx\n\n\n\nAbout the book, datasets and notation\n\n\n\n\n\nTuesday, January 21, 2025\n\n\nOren Bochman\n\n\n\n\n\n\n\n\n\n\n\n\nChapter 3: Linear Regression\n\n\n\n\n\n\nnotes\n\n\nedx\n\n\n\nWhen the labels are continuous, we are faced with a regression problem. This chapter introduces the fundamental concepts of linear regression, a powerful statistical technique for modeling the relationship between a predictor variable and a continuous response variable.\n\n\n\n\n\nTuesday, January 21, 2025\n\n\nOren Bochman\n\n\n\n\n\n\n\n\n\n\n\n\nChapter 6: Linear Model Selection and Regularization\n\n\n\n\n\n\nnotes\n\n\nedx\n\n\n\nAlternative fitting procedures can yield better prediction accuracy and model interpretability\n\n\n\n\n\nTuesday, January 21, 2025\n\n\nOren Bochman\n\n\n\n\n\n\n\n\n\n\n\n\nChapter 7: Moving Beyond Linearity\n\n\n\n\n\n\nnotes\n\n\nedx\n\n\n\nAbout the book, datasets and notation\n\n\n\n\n\nTuesday, January 21, 2025\n\n\nOren Bochman\n\n\n\n\n\n\n\n\n\n\n\n\nChapter 5: Resampling Methods\n\n\n\n\n\n\nnotes\n\n\nedx\n\n\n\nResampling methods are an indispensable in the age of big data statistics\n\n\n\n\n\nTuesday, January 21, 2025\n\n\nOren Bochman\n\n\n\n\n\n\n\n\n\n\n\n\nChapter 4: Classification\n\n\n\n\n\n\nnotes\n\n\nedx\n\n\n\nWhen the labels are categorical, we are faced with a classification problem. In this chapter, we discuss the tools and techniques used to solve classification problems.\n\n\n\n\n\nTuesday, January 21, 2025\n\n\nOren Bochman\n\n\n\n\n\n\n\n\n\n\n\n\nChapter 2: Introduction to Python - Lab\n\n\n\n\n\n\nlab\n\n\npython\n\n\n\n\n\n\n\n\n\nTuesday, January 21, 2025\n\n\nOren Bochman\n\n\n\n\n\n\n\n\n\n\n\n\nChapter 2: Statistical Learning\n\n\n\n\n\n\nnotes\n\n\nedx\n\n\n\nWhat is this books about!?\n\n\n\n\n\nTuesday, January 21, 2025\n\n\nOren Bochman\n\n\n\n\n\n\n\n\n\n\n\n\nChapter 4: Classification Lab\n\n\n\n\n\n\nlab\n\n\npython\n\n\n\n\n\n\n\n\n\nTuesday, January 21, 2025\n\n\nOren Bochman\n\n\n\n\n\n\n\n\n\n\n\n\nChapter 3: Linear Regression - Lab\n\n\n\n\n\n\nlab\n\n\npython\n\n\n\n\n\n\n\n\n\nTuesday, January 21, 2025\n\n\nOren Bochman\n\n\n\n\n\n\n\n\n\n\n\n\nChapter 5: Cross-Validation and the Bootstrap Lab\n\n\n\n\n\n\nlab\n\n\npython\n\n\n\n\n\n\n\n\n\nTuesday, January 21, 2025\n\n\nOren Bochman\n\n\n\n\n\n\n\n\n\n\n\n\nChapter 13: Multiple Testing\n\n\n\n\n\nThe incidence of coincidece and risks of multiple testing\n\n\n\n\n\nMonday, January 20, 2025\n\n\nOren Bochman\n\n\n\n\n\n\n\n\n\n\n\n\nPost With Code\n\n\n\n\n\n\nnews\n\n\ncode\n\n\nanalysis\n\n\n\n\n\n\n\n\n\nSunday, January 19, 2025\n\n\nHarlow Malloc\n\n\n\n\n\n\n\n\n\n\n\n\nWelcome To My Blog\n\n\n\n\n\n\nnews\n\n\n\n\n\n\n\n\n\nThursday, January 16, 2025\n\n\nTristan O’Malley\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "posts/ch07-beyond-linearity/index.html",
    "href": "posts/ch07-beyond-linearity/index.html",
    "title": "Chapter 7: Moving Beyond Linearity",
    "section": "",
    "text": "Figure 1: Opening Remarks\n\n\n\n\n\n\n\n\nFigure 2: Examples and Framework\n\n\n\n\n\n\nReuseCC SA BY-NC-NDCitationBibTeX citation:@online{bochman2025,\n  author = {Bochman, Oren},\n  title = {Chapter 7: {Moving} {Beyond} {Linearity}},\n  date = {2025-01-21},\n  url = {https://orenbochman.github.io/notes-islr/posts/ch07-beyond-linearity/},\n  langid = {en}\n}\nFor attribution, please cite this work as:\nBochman, Oren. 2025. “Chapter 7: Moving Beyond Linearity.”\nJanuary 21, 2025. https://orenbochman.github.io/notes-islr/posts/ch07-beyond-linearity/."
  },
  {
    "objectID": "posts/ch01-intro/index.html",
    "href": "posts/ch01-intro/index.html",
    "title": "Chapter 1: Introduction",
    "section": "",
    "text": "Figure 1: Opening Remarks\n\n\n\n\n\n\n\n\nFigure 2: Examples and Framework"
  },
  {
    "objectID": "posts/ch01-intro/index.html#premises",
    "href": "posts/ch01-intro/index.html#premises",
    "title": "Chapter 1: Introduction",
    "section": "Premises:",
    "text": "Premises:\n\nStatistical learning is not a series of black boxes - we need to understand the way the cogs of models come together.\nWhile it is important to know what job is performed by each cog, it is not necessary to have the skills to construct the machine inside the box!\nThe readers are interested in applying the methods to real-world problems."
  },
  {
    "objectID": "posts/ch01-intro/index.html#slides-and-chapter",
    "href": "posts/ch01-intro/index.html#slides-and-chapter",
    "title": "Chapter 1: Introduction",
    "section": "Slides and Chapter",
    "text": "Slides and Chapter\n\n\n\nChapter Slides\n\n\n\n\n\nChapter"
  },
  {
    "objectID": "posts/ch08-tree-based-methods/Ch08-baggboost-lab.html",
    "href": "posts/ch08-tree-based-methods/Ch08-baggboost-lab.html",
    "title": "Chapter 9: Support Vector Machines Lab",
    "section": "",
    "text": "Binder\n\n\nWe import some of our usual libraries at this top level.\n\nimport numpy as np\nimport pandas as pd\nfrom matplotlib.pyplot import subplots\nimport sklearn.model_selection as skm\nfrom ISLP import load_data, confusion_table\nfrom ISLP.models import ModelSpec as MS\n\nWe also collect the new imports needed for this lab.\n\nfrom sklearn.tree import (DecisionTreeClassifier as DTC,\n                          DecisionTreeRegressor as DTR,\n                          plot_tree,\n                          export_text)\nfrom sklearn.metrics import (accuracy_score,\n                             log_loss)\nfrom sklearn.ensemble import \\\n     (RandomForestRegressor as RF,\n      GradientBoostingRegressor as GBR)\nfrom ISLP.bart import BART\n\n\n\nWe first use classification trees to analyze the Carseats data set. In these data, Sales is a continuous variable, and so we begin by recoding it as a binary variable. We use the where() function to create a variable, called High, which takes on a value of Yes if the Sales variable exceeds 8, and takes on a value of No otherwise.\n\nCarseats = load_data('Carseats')\nHigh = np.where(Carseats.Sales &gt; 8,\n                \"Yes\",\n                \"No\")\n\nWe now use DecisionTreeClassifier() to fit a classification tree in order to predict High using all variables but Sales. To do so, we must form a model matrix as we did when fitting regression models.\n\nmodel = MS(Carseats.columns.drop('Sales'), intercept=False)\nD = model.fit_transform(Carseats)\nfeature_names = list(D.columns)\nX = np.asarray(D)\n\nWe have converted D from a data frame to an array X, which is needed in some of the analysis below. We also need the feature_names for annotating our plots later.\nThere are several options needed to specify the classifier, such as max_depth (how deep to grow the tree), min_samples_split (minimum number of observations in a node to be eligible for splitting) and criterion (whether to use Gini or cross-entropy as the split criterion). We also set random_state for reproducibility; ties in the split criterion are broken at random.\n\nclf = DTC(criterion='entropy',\n          max_depth=3,\n          random_state=0)        \nclf.fit(X, High)\n\nDecisionTreeClassifier(criterion='entropy', max_depth=3, random_state=0)In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.  DecisionTreeClassifier?Documentation for DecisionTreeClassifieriFittedDecisionTreeClassifier(criterion='entropy', max_depth=3, random_state=0) \n\n\nIn our discussion of qualitative features in Section~, we noted that for a linear regression model such a feature could be represented by including a matrix of dummy variables (one-hot-encoding) in the model matrix, using the formula notation of statsmodels. As mentioned in Section~, there is a more natural way to handle qualitative features when building a decision tree, that does not require such dummy variables; each split amounts to partitioning the levels into two groups. However, the sklearn implementation of decision trees does not take advantage of this approach; instead it simply treats the one-hot-encoded levels as separate variables.\n\naccuracy_score(High, clf.predict(X))\n\n0.79\n\n\nWith only the default arguments, the training error rate is 21%. For classification trees, we can access the value of the deviance using log_loss(), \\begin{equation*}\n\\begin{split}\n-2 \\sum_m \\sum_k n_{mk} \\log \\hat{p}_{mk},\n\\end{split}\n\\end{equation*} where n_{mk} is the number of observations in the mth terminal node that belong to the kth class.\n\nresid_dev = np.sum(log_loss(High, clf.predict_proba(X)))\nresid_dev\n\n0.4710647062649358\n\n\nThis is closely related to the entropy, defined in (). A small deviance indicates a tree that provides a good fit to the (training) data.\nOne of the most attractive properties of trees is that they can be graphically displayed. Here we use the plot() function to display the tree structure.\n\nax = subplots(figsize=(12,12))[1]\nplot_tree(clf,\n          feature_names=feature_names,\n          ax=ax);\n\n\n\n\n\n\n\n\nThe most important indicator of Sales appears to be ShelveLoc.\nWe can see a text representation of the tree using export_text(), which displays the split criterion (e.g. Price &lt;= 92.5) for each branch. For leaf nodes it shows the overall prediction\n(Yes or No). We can also see the number of observations in that leaf that take on values of Yes and No by specifying show_weights=True.\n\nprint(export_text(clf,\n                  feature_names=feature_names,\n                  show_weights=True))\n\n|--- ShelveLoc[Good] &lt;= 0.50\n|   |--- Price &lt;= 92.50\n|   |   |--- Income &lt;= 57.00\n|   |   |   |--- weights: [7.00, 3.00] class: No\n|   |   |--- Income &gt;  57.00\n|   |   |   |--- weights: [7.00, 29.00] class: Yes\n|   |--- Price &gt;  92.50\n|   |   |--- Advertising &lt;= 13.50\n|   |   |   |--- weights: [183.00, 41.00] class: No\n|   |   |--- Advertising &gt;  13.50\n|   |   |   |--- weights: [20.00, 25.00] class: Yes\n|--- ShelveLoc[Good] &gt;  0.50\n|   |--- Price &lt;= 135.00\n|   |   |--- US[Yes] &lt;= 0.50\n|   |   |   |--- weights: [6.00, 11.00] class: Yes\n|   |   |--- US[Yes] &gt;  0.50\n|   |   |   |--- weights: [2.00, 49.00] class: Yes\n|   |--- Price &gt;  135.00\n|   |   |--- Income &lt;= 46.00\n|   |   |   |--- weights: [6.00, 0.00] class: No\n|   |   |--- Income &gt;  46.00\n|   |   |   |--- weights: [5.00, 6.00] class: Yes\n\n\n\nIn order to properly evaluate the performance of a classification tree on these data, we must estimate the test error rather than simply computing the training error. We split the observations into a training set and a test set, build the tree using the training set, and evaluate its performance on the test data. This pattern is similar to that in Chapter~, with the linear models replaced here by decision trees — the code for validation is almost identical. This approach leads to correct predictions for 68.5% of the locations in the test data set.\n\nvalidation = skm.ShuffleSplit(n_splits=1,\n                              test_size=200,\n                              random_state=0)\nresults = skm.cross_validate(clf,\n                             D,\n                             High,\n                             cv=validation)\nresults['test_score']\n\narray([0.685])\n\n\nNext, we consider whether pruning the tree might lead to improved classification performance. We first split the data into a training and test set. We will use cross-validation to prune the tree on the training set, and then evaluate the performance of the pruned tree on the test set.\n\n(X_train,\n X_test,\n High_train,\n High_test) = skm.train_test_split(X,\n                                   High,\n                                   test_size=0.5,\n                                   random_state=0)\n\nWe first refit the full tree on the training set; here we do not set a max_depth parameter, since we will learn that through cross-validation.\n\nclf = DTC(criterion='entropy', random_state=0)\nclf.fit(X_train, High_train)\naccuracy_score(High_test, clf.predict(X_test))\n\nDecisionTreeClassifier(criterion='entropy', random_state=0)In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.  DecisionTreeClassifier?Documentation for DecisionTreeClassifieriFittedDecisionTreeClassifier(criterion='entropy', random_state=0) \n\n\n0.735\n\n\nNext we use the cost_complexity_pruning_path() method of clf to extract cost-complexity values.\n\nccp_path = clf.cost_complexity_pruning_path(X_train, High_train)\nkfold = skm.KFold(10,\n                  random_state=1,\n                  shuffle=True)\n\nThis yields a set of impurities and \\alpha values from which we can extract an optimal one by cross-validation.\n\ngrid = skm.GridSearchCV(clf,\n                        {'ccp_alpha': ccp_path.ccp_alphas},\n                        refit=True,\n                        cv=kfold,\n                        scoring='accuracy')\ngrid.fit(X_train, High_train)\ngrid.best_score_\n\nGridSearchCV(cv=KFold(n_splits=10, random_state=1, shuffle=True),\n             estimator=DecisionTreeClassifier(criterion='entropy',\n                                              random_state=0),\n             param_grid={'ccp_alpha': array([0.        , 0.01622556, 0.0171946 , 0.0180482 , 0.0180482 ,\n       0.01991688, 0.02012073, 0.02070855, 0.02193427, 0.0219518 ,\n       0.02220877, 0.02274806, 0.02417233, 0.02588672, 0.02714959,\n       0.02735525, 0.02900052, 0.02906078, 0.03209543, 0.04499252,\n       0.06236632, 0.10024835])},\n             scoring='accuracy')In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.  GridSearchCV?Documentation for GridSearchCViFittedGridSearchCV(cv=KFold(n_splits=10, random_state=1, shuffle=True),\n             estimator=DecisionTreeClassifier(criterion='entropy',\n                                              random_state=0),\n             param_grid={'ccp_alpha': array([0.        , 0.01622556, 0.0171946 , 0.0180482 , 0.0180482 ,\n       0.01991688, 0.02012073, 0.02070855, 0.02193427, 0.0219518 ,\n       0.02220877, 0.02274806, 0.02417233, 0.02588672, 0.02714959,\n       0.02735525, 0.02900052, 0.02906078, 0.03209543, 0.04499252,\n       0.06236632, 0.10024835])},\n             scoring='accuracy') best_estimator_: DecisionTreeClassifierDecisionTreeClassifier(ccp_alpha=0.018048202372184057, criterion='entropy',\n                       random_state=0)  DecisionTreeClassifier?Documentation for DecisionTreeClassifierDecisionTreeClassifier(ccp_alpha=0.018048202372184057, criterion='entropy',\n                       random_state=0) \n\n\n0.685\n\n\nLet’s take a look at the pruned true.\n\nax = subplots(figsize=(12, 12))[1]\nbest_ = grid.best_estimator_\nplot_tree(best_,\n          feature_names=feature_names,\n          ax=ax);\n\n\n\n\n\n\n\n\nThis is quite a bushy tree. We could count the leaves, or query best_ instead.\n\nbest_.tree_.n_leaves\n\n30\n\n\nThe tree with 30 terminal nodes results in the lowest cross-validation error rate, with an accuracy of 68.5%. How well does this pruned tree perform on the test data set? Once again, we apply the predict() function.\n\nprint(accuracy_score(High_test,\n                     best_.predict(X_test)))\nconfusion = confusion_table(best_.predict(X_test),\n                            High_test)\nconfusion\n\n0.72\n\n\n\n\n\n\n\n\nTruth\nNo\nYes\n\n\nPredicted\n\n\n\n\n\n\nNo\n94\n32\n\n\nYes\n24\n50\n\n\n\n\n\n\n\nNow 72.0% of the test observations are correctly classified, which is slightly worse than the error for the full tree (with 35 leaves). So cross-validation has not helped us much here; it only pruned off 5 leaves, at a cost of a slightly worse error. These results would change if we were to change the random number seeds above; even though cross-validation gives an unbiased approach to model selection, it does have variance.\n\n\n\nHere we fit a regression tree to the Boston data set. The steps are similar to those for classification trees.\n\nBoston = load_data(\"Boston\")\nmodel = MS(Boston.columns.drop('medv'), intercept=False)\nD = model.fit_transform(Boston)\nfeature_names = list(D.columns)\nX = np.asarray(D)\n\nFirst, we split the data into training and test sets, and fit the tree to the training data. Here we use 30% of the data for the test set.\n\n(X_train,\n X_test,\n y_train,\n y_test) = skm.train_test_split(X,\n                                Boston['medv'],\n                                test_size=0.3,\n                                random_state=0)\n\nHaving formed our training and test data sets, we fit the regression tree.\n\nreg = DTR(max_depth=3)\nreg.fit(X_train, y_train)\nax = subplots(figsize=(12,12))[1]\nplot_tree(reg,\n          feature_names=feature_names,\n          ax=ax);\n\n\n\n\n\n\n\n\nThe variable lstat measures the percentage of individuals with lower socioeconomic status. The tree indicates that lower values of lstat correspond to more expensive houses. The tree predicts a median house price of $12,042 for small-sized homes (rm &lt; 6.8), in suburbs in which residents have low socioeconomic status (lstat  &gt; 14.4) and the crime-rate is moderate (crim &gt; 5.8).\nNow we use the cross-validation function to see whether pruning the tree will improve performance.\n\nccp_path = reg.cost_complexity_pruning_path(X_train, y_train)\nkfold = skm.KFold(5,\n                  shuffle=True,\n                  random_state=10)\ngrid = skm.GridSearchCV(reg,\n                        {'ccp_alpha': ccp_path.ccp_alphas},\n                        refit=True,\n                        cv=kfold,\n                        scoring='neg_mean_squared_error')\nG = grid.fit(X_train, y_train)\n\nIn keeping with the cross-validation results, we use the pruned tree to make predictions on the test set.\n\nbest_ = grid.best_estimator_\nnp.mean((y_test - best_.predict(X_test))**2)\n\n28.06985754975404\n\n\nIn other words, the test set MSE associated with the regression tree is 28.07. The square root of the MSE is therefore around 5.30, indicating that this model leads to test predictions that are within around $5300 of the true median home value for the suburb.\nLet’s plot the best tree to see how interpretable it is.\n\nax = subplots(figsize=(12,12))[1]\nplot_tree(G.best_estimator_,\n          feature_names=feature_names,\n          ax=ax);\n\n\n\n\n\n\n\n\n\n\n\nHere we apply bagging and random forests to the Boston data, using the RandomForestRegressor() from the sklearn.ensemble package. Recall that bagging is simply a special case of a random forest with m=p. Therefore, the RandomForestRegressor() function can be used to perform both bagging and random forests. We start with bagging.\n\nbag_boston = RF(max_features=X_train.shape[1], random_state=0)\nbag_boston.fit(X_train, y_train)\n\nRandomForestRegressor(max_features=12, random_state=0)In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.  RandomForestRegressor?Documentation for RandomForestRegressoriFittedRandomForestRegressor(max_features=12, random_state=0) \n\n\nThe argument max_features indicates that all 12 predictors should be considered for each split of the tree — in other words, that bagging should be done. How well does this bagged model perform on the test set?\n\nax = subplots(figsize=(8,8))[1]\ny_hat_bag = bag_boston.predict(X_test)\nax.scatter(y_hat_bag, y_test)\nnp.mean((y_test - y_hat_bag)**2)\n\n14.634700151315787\n\n\n\n\n\n\n\n\n\nThe test set MSE associated with the bagged regression tree is 14.63, about half that obtained using an optimally-pruned single tree. We could change the number of trees grown from the default of 100 by using the n_estimators argument:\n\nbag_boston = RF(max_features=X_train.shape[1],\n                n_estimators=500,\n                random_state=0).fit(X_train, y_train)\ny_hat_bag = bag_boston.predict(X_test)\nnp.mean((y_test - y_hat_bag)**2)\n\n14.605662565263161\n\n\nThere is not much change. Bagging and random forests cannot overfit by increasing the number of trees, but can underfit if the number is too small.\nGrowing a random forest proceeds in exactly the same way, except that we use a smaller value of the max_features argument. By default, RandomForestRegressor() uses p variables when building a random forest of regression trees (i.e. it defaults to bagging), and RandomForestClassifier() uses \\sqrt{p} variables when building a random forest of classification trees. Here we use max_features=6.\n\nRF_boston = RF(max_features=6,\n               random_state=0).fit(X_train, y_train)\ny_hat_RF = RF_boston.predict(X_test)\nnp.mean((y_test - y_hat_RF)**2)\n\n20.04276446710527\n\n\nThe test set MSE is 20.04; this indicates that random forests did somewhat worse than bagging in this case. Extracting the feature_importances_ values from the fitted model, we can view the importance of each variable.\n\nfeature_imp = pd.DataFrame(\n    {'importance':RF_boston.feature_importances_},\n    index=feature_names)\nfeature_imp.sort_values(by='importance', ascending=False)\n\n\n\n\n\n\n\n\nimportance\n\n\n\n\nlstat\n0.356203\n\n\nrm\n0.332163\n\n\nptratio\n0.067270\n\n\ncrim\n0.055404\n\n\nindus\n0.053851\n\n\ndis\n0.041582\n\n\nnox\n0.035225\n\n\ntax\n0.025355\n\n\nage\n0.021506\n\n\nrad\n0.004784\n\n\nchas\n0.004203\n\n\nzn\n0.002454\n\n\n\n\n\n\n\nThis is a relative measure of the total decrease in node impurity that results from splits over that variable, averaged over all trees (this was plotted in Figure~ for a model fit to the Heart data).\nThe results indicate that across all of the trees considered in the random forest, the wealth level of the community (lstat) and the house size (rm) are by far the two most important variables.\n\n\n\nHere we use GradientBoostingRegressor() from sklearn.ensemble to fit boosted regression trees to the Boston data set. For classification we would use GradientBoostingClassifier(). The argument n_estimators=5000 indicates that we want 5000 trees, and the option max_depth=3 limits the depth of each tree. The argument learning_rate is the \\lambda mentioned earlier in the description of boosting.\n\nboost_boston = GBR(n_estimators=5000,\n                   learning_rate=0.001,\n                   max_depth=3,\n                   random_state=0)\nboost_boston.fit(X_train, y_train)\n\nGradientBoostingRegressor(learning_rate=0.001, n_estimators=5000,\n                          random_state=0)In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.  GradientBoostingRegressor?Documentation for GradientBoostingRegressoriFittedGradientBoostingRegressor(learning_rate=0.001, n_estimators=5000,\n                          random_state=0) \n\n\nWe can see how the training error decreases with the train_score_ attribute. To get an idea of how the test error decreases we can use the staged_predict() method to get the predicted values along the path.\n\ntest_error = np.zeros_like(boost_boston.train_score_)\nfor idx, y_ in enumerate(boost_boston.staged_predict(X_test)):\n   test_error[idx] = np.mean((y_test - y_)**2)\n\nplot_idx = np.arange(boost_boston.train_score_.shape[0])\nax = subplots(figsize=(8,8))[1]\nax.plot(plot_idx,\n        boost_boston.train_score_,\n        'b',\n        label='Training')\nax.plot(plot_idx,\n        test_error,\n        'r',\n        label='Test')\nax.legend();\n\n\n\n\n\n\n\n\nWe now use the boosted model to predict medv on the test set:\n\ny_hat_boost = boost_boston.predict(X_test);\nnp.mean((y_test - y_hat_boost)**2)\n\n14.481405918831591\n\n\nThe test MSE obtained is 14.48, similar to the test MSE for bagging. If we want to, we can perform boosting with a different value of the shrinkage parameter \\lambda in (). The default value is 0.001, but this is easily modified. Here we take \\lambda=0.2.\n\nboost_boston = GBR(n_estimators=5000,\n                   learning_rate=0.2,\n                   max_depth=3,\n                   random_state=0)\nboost_boston.fit(X_train,\n                 y_train)\ny_hat_boost = boost_boston.predict(X_test);\nnp.mean((y_test - y_hat_boost)**2)\n\nGradientBoostingRegressor(learning_rate=0.2, n_estimators=5000, random_state=0)In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.  GradientBoostingRegressor?Documentation for GradientBoostingRegressoriFittedGradientBoostingRegressor(learning_rate=0.2, n_estimators=5000, random_state=0) \n\n\n14.501514553719565\n\n\nIn this case, using \\lambda=0.2 leads to a almost the same test MSE as when using \\lambda=0.001.\n\n\n\nIn this section we demonstrate a Python implementation of BART found in the ISLP.bart package. We fit a model to the Boston housing data set. This BART() estimator is designed for quantitative outcome variables, though other implementations are available for fitting logistic and probit models to categorical outcomes.\n\nbart_boston = BART(random_state=0, burnin=5, ndraw=15)\nbart_boston.fit(X_train, y_train)\n\nBART(burnin=5, ndraw=15, random_state=0)In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org. BARTiFittedBART(burnin=5, ndraw=15, random_state=0) \n\n\nOn this data set, with this split into test and training, we see that the test error of BART is similar to that of random forest.\n\nyhat_test = bart_boston.predict(X_test.astype(np.float32))\nnp.mean((y_test - yhat_test)**2)\n\n22.145009458109225\n\n\nWe can check how many times each variable appeared in the collection of trees. This gives a summary similar to the variable importance plot for boosting and random forests.\n\nvar_inclusion = pd.Series(bart_boston.variable_inclusion_.mean(0),\n                               index=D.columns)\nvar_inclusion\n\ncrim       26.933333\nzn         27.866667\nindus      26.466667\nchas       22.466667\nnox        26.600000\nrm         29.800000\nage        22.733333\ndis        26.466667\nrad        23.666667\ntax        24.133333\nptratio    24.266667\nlstat      31.000000\ndtype: float64"
  },
  {
    "objectID": "posts/ch08-tree-based-methods/Ch08-baggboost-lab.html#fitting-classification-trees",
    "href": "posts/ch08-tree-based-methods/Ch08-baggboost-lab.html#fitting-classification-trees",
    "title": "Chapter 9: Support Vector Machines Lab",
    "section": "",
    "text": "We first use classification trees to analyze the Carseats data set. In these data, Sales is a continuous variable, and so we begin by recoding it as a binary variable. We use the where() function to create a variable, called High, which takes on a value of Yes if the Sales variable exceeds 8, and takes on a value of No otherwise.\n\nCarseats = load_data('Carseats')\nHigh = np.where(Carseats.Sales &gt; 8,\n                \"Yes\",\n                \"No\")\n\nWe now use DecisionTreeClassifier() to fit a classification tree in order to predict High using all variables but Sales. To do so, we must form a model matrix as we did when fitting regression models.\n\nmodel = MS(Carseats.columns.drop('Sales'), intercept=False)\nD = model.fit_transform(Carseats)\nfeature_names = list(D.columns)\nX = np.asarray(D)\n\nWe have converted D from a data frame to an array X, which is needed in some of the analysis below. We also need the feature_names for annotating our plots later.\nThere are several options needed to specify the classifier, such as max_depth (how deep to grow the tree), min_samples_split (minimum number of observations in a node to be eligible for splitting) and criterion (whether to use Gini or cross-entropy as the split criterion). We also set random_state for reproducibility; ties in the split criterion are broken at random.\n\nclf = DTC(criterion='entropy',\n          max_depth=3,\n          random_state=0)        \nclf.fit(X, High)\n\nDecisionTreeClassifier(criterion='entropy', max_depth=3, random_state=0)In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.  DecisionTreeClassifier?Documentation for DecisionTreeClassifieriFittedDecisionTreeClassifier(criterion='entropy', max_depth=3, random_state=0) \n\n\nIn our discussion of qualitative features in Section~, we noted that for a linear regression model such a feature could be represented by including a matrix of dummy variables (one-hot-encoding) in the model matrix, using the formula notation of statsmodels. As mentioned in Section~, there is a more natural way to handle qualitative features when building a decision tree, that does not require such dummy variables; each split amounts to partitioning the levels into two groups. However, the sklearn implementation of decision trees does not take advantage of this approach; instead it simply treats the one-hot-encoded levels as separate variables.\n\naccuracy_score(High, clf.predict(X))\n\n0.79\n\n\nWith only the default arguments, the training error rate is 21%. For classification trees, we can access the value of the deviance using log_loss(), \\begin{equation*}\n\\begin{split}\n-2 \\sum_m \\sum_k n_{mk} \\log \\hat{p}_{mk},\n\\end{split}\n\\end{equation*} where n_{mk} is the number of observations in the mth terminal node that belong to the kth class.\n\nresid_dev = np.sum(log_loss(High, clf.predict_proba(X)))\nresid_dev\n\n0.4710647062649358\n\n\nThis is closely related to the entropy, defined in (). A small deviance indicates a tree that provides a good fit to the (training) data.\nOne of the most attractive properties of trees is that they can be graphically displayed. Here we use the plot() function to display the tree structure.\n\nax = subplots(figsize=(12,12))[1]\nplot_tree(clf,\n          feature_names=feature_names,\n          ax=ax);\n\n\n\n\n\n\n\n\nThe most important indicator of Sales appears to be ShelveLoc.\nWe can see a text representation of the tree using export_text(), which displays the split criterion (e.g. Price &lt;= 92.5) for each branch. For leaf nodes it shows the overall prediction\n(Yes or No). We can also see the number of observations in that leaf that take on values of Yes and No by specifying show_weights=True.\n\nprint(export_text(clf,\n                  feature_names=feature_names,\n                  show_weights=True))\n\n|--- ShelveLoc[Good] &lt;= 0.50\n|   |--- Price &lt;= 92.50\n|   |   |--- Income &lt;= 57.00\n|   |   |   |--- weights: [7.00, 3.00] class: No\n|   |   |--- Income &gt;  57.00\n|   |   |   |--- weights: [7.00, 29.00] class: Yes\n|   |--- Price &gt;  92.50\n|   |   |--- Advertising &lt;= 13.50\n|   |   |   |--- weights: [183.00, 41.00] class: No\n|   |   |--- Advertising &gt;  13.50\n|   |   |   |--- weights: [20.00, 25.00] class: Yes\n|--- ShelveLoc[Good] &gt;  0.50\n|   |--- Price &lt;= 135.00\n|   |   |--- US[Yes] &lt;= 0.50\n|   |   |   |--- weights: [6.00, 11.00] class: Yes\n|   |   |--- US[Yes] &gt;  0.50\n|   |   |   |--- weights: [2.00, 49.00] class: Yes\n|   |--- Price &gt;  135.00\n|   |   |--- Income &lt;= 46.00\n|   |   |   |--- weights: [6.00, 0.00] class: No\n|   |   |--- Income &gt;  46.00\n|   |   |   |--- weights: [5.00, 6.00] class: Yes\n\n\n\nIn order to properly evaluate the performance of a classification tree on these data, we must estimate the test error rather than simply computing the training error. We split the observations into a training set and a test set, build the tree using the training set, and evaluate its performance on the test data. This pattern is similar to that in Chapter~, with the linear models replaced here by decision trees — the code for validation is almost identical. This approach leads to correct predictions for 68.5% of the locations in the test data set.\n\nvalidation = skm.ShuffleSplit(n_splits=1,\n                              test_size=200,\n                              random_state=0)\nresults = skm.cross_validate(clf,\n                             D,\n                             High,\n                             cv=validation)\nresults['test_score']\n\narray([0.685])\n\n\nNext, we consider whether pruning the tree might lead to improved classification performance. We first split the data into a training and test set. We will use cross-validation to prune the tree on the training set, and then evaluate the performance of the pruned tree on the test set.\n\n(X_train,\n X_test,\n High_train,\n High_test) = skm.train_test_split(X,\n                                   High,\n                                   test_size=0.5,\n                                   random_state=0)\n\nWe first refit the full tree on the training set; here we do not set a max_depth parameter, since we will learn that through cross-validation.\n\nclf = DTC(criterion='entropy', random_state=0)\nclf.fit(X_train, High_train)\naccuracy_score(High_test, clf.predict(X_test))\n\nDecisionTreeClassifier(criterion='entropy', random_state=0)In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.  DecisionTreeClassifier?Documentation for DecisionTreeClassifieriFittedDecisionTreeClassifier(criterion='entropy', random_state=0) \n\n\n0.735\n\n\nNext we use the cost_complexity_pruning_path() method of clf to extract cost-complexity values.\n\nccp_path = clf.cost_complexity_pruning_path(X_train, High_train)\nkfold = skm.KFold(10,\n                  random_state=1,\n                  shuffle=True)\n\nThis yields a set of impurities and \\alpha values from which we can extract an optimal one by cross-validation.\n\ngrid = skm.GridSearchCV(clf,\n                        {'ccp_alpha': ccp_path.ccp_alphas},\n                        refit=True,\n                        cv=kfold,\n                        scoring='accuracy')\ngrid.fit(X_train, High_train)\ngrid.best_score_\n\nGridSearchCV(cv=KFold(n_splits=10, random_state=1, shuffle=True),\n             estimator=DecisionTreeClassifier(criterion='entropy',\n                                              random_state=0),\n             param_grid={'ccp_alpha': array([0.        , 0.01622556, 0.0171946 , 0.0180482 , 0.0180482 ,\n       0.01991688, 0.02012073, 0.02070855, 0.02193427, 0.0219518 ,\n       0.02220877, 0.02274806, 0.02417233, 0.02588672, 0.02714959,\n       0.02735525, 0.02900052, 0.02906078, 0.03209543, 0.04499252,\n       0.06236632, 0.10024835])},\n             scoring='accuracy')In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.  GridSearchCV?Documentation for GridSearchCViFittedGridSearchCV(cv=KFold(n_splits=10, random_state=1, shuffle=True),\n             estimator=DecisionTreeClassifier(criterion='entropy',\n                                              random_state=0),\n             param_grid={'ccp_alpha': array([0.        , 0.01622556, 0.0171946 , 0.0180482 , 0.0180482 ,\n       0.01991688, 0.02012073, 0.02070855, 0.02193427, 0.0219518 ,\n       0.02220877, 0.02274806, 0.02417233, 0.02588672, 0.02714959,\n       0.02735525, 0.02900052, 0.02906078, 0.03209543, 0.04499252,\n       0.06236632, 0.10024835])},\n             scoring='accuracy') best_estimator_: DecisionTreeClassifierDecisionTreeClassifier(ccp_alpha=0.018048202372184057, criterion='entropy',\n                       random_state=0)  DecisionTreeClassifier?Documentation for DecisionTreeClassifierDecisionTreeClassifier(ccp_alpha=0.018048202372184057, criterion='entropy',\n                       random_state=0) \n\n\n0.685\n\n\nLet’s take a look at the pruned true.\n\nax = subplots(figsize=(12, 12))[1]\nbest_ = grid.best_estimator_\nplot_tree(best_,\n          feature_names=feature_names,\n          ax=ax);\n\n\n\n\n\n\n\n\nThis is quite a bushy tree. We could count the leaves, or query best_ instead.\n\nbest_.tree_.n_leaves\n\n30\n\n\nThe tree with 30 terminal nodes results in the lowest cross-validation error rate, with an accuracy of 68.5%. How well does this pruned tree perform on the test data set? Once again, we apply the predict() function.\n\nprint(accuracy_score(High_test,\n                     best_.predict(X_test)))\nconfusion = confusion_table(best_.predict(X_test),\n                            High_test)\nconfusion\n\n0.72\n\n\n\n\n\n\n\n\nTruth\nNo\nYes\n\n\nPredicted\n\n\n\n\n\n\nNo\n94\n32\n\n\nYes\n24\n50\n\n\n\n\n\n\n\nNow 72.0% of the test observations are correctly classified, which is slightly worse than the error for the full tree (with 35 leaves). So cross-validation has not helped us much here; it only pruned off 5 leaves, at a cost of a slightly worse error. These results would change if we were to change the random number seeds above; even though cross-validation gives an unbiased approach to model selection, it does have variance."
  },
  {
    "objectID": "posts/ch08-tree-based-methods/Ch08-baggboost-lab.html#fitting-regression-trees",
    "href": "posts/ch08-tree-based-methods/Ch08-baggboost-lab.html#fitting-regression-trees",
    "title": "Chapter 9: Support Vector Machines Lab",
    "section": "",
    "text": "Here we fit a regression tree to the Boston data set. The steps are similar to those for classification trees.\n\nBoston = load_data(\"Boston\")\nmodel = MS(Boston.columns.drop('medv'), intercept=False)\nD = model.fit_transform(Boston)\nfeature_names = list(D.columns)\nX = np.asarray(D)\n\nFirst, we split the data into training and test sets, and fit the tree to the training data. Here we use 30% of the data for the test set.\n\n(X_train,\n X_test,\n y_train,\n y_test) = skm.train_test_split(X,\n                                Boston['medv'],\n                                test_size=0.3,\n                                random_state=0)\n\nHaving formed our training and test data sets, we fit the regression tree.\n\nreg = DTR(max_depth=3)\nreg.fit(X_train, y_train)\nax = subplots(figsize=(12,12))[1]\nplot_tree(reg,\n          feature_names=feature_names,\n          ax=ax);\n\n\n\n\n\n\n\n\nThe variable lstat measures the percentage of individuals with lower socioeconomic status. The tree indicates that lower values of lstat correspond to more expensive houses. The tree predicts a median house price of $12,042 for small-sized homes (rm &lt; 6.8), in suburbs in which residents have low socioeconomic status (lstat  &gt; 14.4) and the crime-rate is moderate (crim &gt; 5.8).\nNow we use the cross-validation function to see whether pruning the tree will improve performance.\n\nccp_path = reg.cost_complexity_pruning_path(X_train, y_train)\nkfold = skm.KFold(5,\n                  shuffle=True,\n                  random_state=10)\ngrid = skm.GridSearchCV(reg,\n                        {'ccp_alpha': ccp_path.ccp_alphas},\n                        refit=True,\n                        cv=kfold,\n                        scoring='neg_mean_squared_error')\nG = grid.fit(X_train, y_train)\n\nIn keeping with the cross-validation results, we use the pruned tree to make predictions on the test set.\n\nbest_ = grid.best_estimator_\nnp.mean((y_test - best_.predict(X_test))**2)\n\n28.06985754975404\n\n\nIn other words, the test set MSE associated with the regression tree is 28.07. The square root of the MSE is therefore around 5.30, indicating that this model leads to test predictions that are within around $5300 of the true median home value for the suburb.\nLet’s plot the best tree to see how interpretable it is.\n\nax = subplots(figsize=(12,12))[1]\nplot_tree(G.best_estimator_,\n          feature_names=feature_names,\n          ax=ax);"
  },
  {
    "objectID": "posts/ch08-tree-based-methods/Ch08-baggboost-lab.html#bagging-and-random-forests",
    "href": "posts/ch08-tree-based-methods/Ch08-baggboost-lab.html#bagging-and-random-forests",
    "title": "Chapter 9: Support Vector Machines Lab",
    "section": "",
    "text": "Here we apply bagging and random forests to the Boston data, using the RandomForestRegressor() from the sklearn.ensemble package. Recall that bagging is simply a special case of a random forest with m=p. Therefore, the RandomForestRegressor() function can be used to perform both bagging and random forests. We start with bagging.\n\nbag_boston = RF(max_features=X_train.shape[1], random_state=0)\nbag_boston.fit(X_train, y_train)\n\nRandomForestRegressor(max_features=12, random_state=0)In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.  RandomForestRegressor?Documentation for RandomForestRegressoriFittedRandomForestRegressor(max_features=12, random_state=0) \n\n\nThe argument max_features indicates that all 12 predictors should be considered for each split of the tree — in other words, that bagging should be done. How well does this bagged model perform on the test set?\n\nax = subplots(figsize=(8,8))[1]\ny_hat_bag = bag_boston.predict(X_test)\nax.scatter(y_hat_bag, y_test)\nnp.mean((y_test - y_hat_bag)**2)\n\n14.634700151315787\n\n\n\n\n\n\n\n\n\nThe test set MSE associated with the bagged regression tree is 14.63, about half that obtained using an optimally-pruned single tree. We could change the number of trees grown from the default of 100 by using the n_estimators argument:\n\nbag_boston = RF(max_features=X_train.shape[1],\n                n_estimators=500,\n                random_state=0).fit(X_train, y_train)\ny_hat_bag = bag_boston.predict(X_test)\nnp.mean((y_test - y_hat_bag)**2)\n\n14.605662565263161\n\n\nThere is not much change. Bagging and random forests cannot overfit by increasing the number of trees, but can underfit if the number is too small.\nGrowing a random forest proceeds in exactly the same way, except that we use a smaller value of the max_features argument. By default, RandomForestRegressor() uses p variables when building a random forest of regression trees (i.e. it defaults to bagging), and RandomForestClassifier() uses \\sqrt{p} variables when building a random forest of classification trees. Here we use max_features=6.\n\nRF_boston = RF(max_features=6,\n               random_state=0).fit(X_train, y_train)\ny_hat_RF = RF_boston.predict(X_test)\nnp.mean((y_test - y_hat_RF)**2)\n\n20.04276446710527\n\n\nThe test set MSE is 20.04; this indicates that random forests did somewhat worse than bagging in this case. Extracting the feature_importances_ values from the fitted model, we can view the importance of each variable.\n\nfeature_imp = pd.DataFrame(\n    {'importance':RF_boston.feature_importances_},\n    index=feature_names)\nfeature_imp.sort_values(by='importance', ascending=False)\n\n\n\n\n\n\n\n\nimportance\n\n\n\n\nlstat\n0.356203\n\n\nrm\n0.332163\n\n\nptratio\n0.067270\n\n\ncrim\n0.055404\n\n\nindus\n0.053851\n\n\ndis\n0.041582\n\n\nnox\n0.035225\n\n\ntax\n0.025355\n\n\nage\n0.021506\n\n\nrad\n0.004784\n\n\nchas\n0.004203\n\n\nzn\n0.002454\n\n\n\n\n\n\n\nThis is a relative measure of the total decrease in node impurity that results from splits over that variable, averaged over all trees (this was plotted in Figure~ for a model fit to the Heart data).\nThe results indicate that across all of the trees considered in the random forest, the wealth level of the community (lstat) and the house size (rm) are by far the two most important variables."
  },
  {
    "objectID": "posts/ch08-tree-based-methods/Ch08-baggboost-lab.html#boosting",
    "href": "posts/ch08-tree-based-methods/Ch08-baggboost-lab.html#boosting",
    "title": "Chapter 9: Support Vector Machines Lab",
    "section": "",
    "text": "Here we use GradientBoostingRegressor() from sklearn.ensemble to fit boosted regression trees to the Boston data set. For classification we would use GradientBoostingClassifier(). The argument n_estimators=5000 indicates that we want 5000 trees, and the option max_depth=3 limits the depth of each tree. The argument learning_rate is the \\lambda mentioned earlier in the description of boosting.\n\nboost_boston = GBR(n_estimators=5000,\n                   learning_rate=0.001,\n                   max_depth=3,\n                   random_state=0)\nboost_boston.fit(X_train, y_train)\n\nGradientBoostingRegressor(learning_rate=0.001, n_estimators=5000,\n                          random_state=0)In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.  GradientBoostingRegressor?Documentation for GradientBoostingRegressoriFittedGradientBoostingRegressor(learning_rate=0.001, n_estimators=5000,\n                          random_state=0) \n\n\nWe can see how the training error decreases with the train_score_ attribute. To get an idea of how the test error decreases we can use the staged_predict() method to get the predicted values along the path.\n\ntest_error = np.zeros_like(boost_boston.train_score_)\nfor idx, y_ in enumerate(boost_boston.staged_predict(X_test)):\n   test_error[idx] = np.mean((y_test - y_)**2)\n\nplot_idx = np.arange(boost_boston.train_score_.shape[0])\nax = subplots(figsize=(8,8))[1]\nax.plot(plot_idx,\n        boost_boston.train_score_,\n        'b',\n        label='Training')\nax.plot(plot_idx,\n        test_error,\n        'r',\n        label='Test')\nax.legend();\n\n\n\n\n\n\n\n\nWe now use the boosted model to predict medv on the test set:\n\ny_hat_boost = boost_boston.predict(X_test);\nnp.mean((y_test - y_hat_boost)**2)\n\n14.481405918831591\n\n\nThe test MSE obtained is 14.48, similar to the test MSE for bagging. If we want to, we can perform boosting with a different value of the shrinkage parameter \\lambda in (). The default value is 0.001, but this is easily modified. Here we take \\lambda=0.2.\n\nboost_boston = GBR(n_estimators=5000,\n                   learning_rate=0.2,\n                   max_depth=3,\n                   random_state=0)\nboost_boston.fit(X_train,\n                 y_train)\ny_hat_boost = boost_boston.predict(X_test);\nnp.mean((y_test - y_hat_boost)**2)\n\nGradientBoostingRegressor(learning_rate=0.2, n_estimators=5000, random_state=0)In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.  GradientBoostingRegressor?Documentation for GradientBoostingRegressoriFittedGradientBoostingRegressor(learning_rate=0.2, n_estimators=5000, random_state=0) \n\n\n14.501514553719565\n\n\nIn this case, using \\lambda=0.2 leads to a almost the same test MSE as when using \\lambda=0.001."
  },
  {
    "objectID": "posts/ch08-tree-based-methods/Ch08-baggboost-lab.html#bayesian-additive-regression-trees",
    "href": "posts/ch08-tree-based-methods/Ch08-baggboost-lab.html#bayesian-additive-regression-trees",
    "title": "Chapter 9: Support Vector Machines Lab",
    "section": "",
    "text": "In this section we demonstrate a Python implementation of BART found in the ISLP.bart package. We fit a model to the Boston housing data set. This BART() estimator is designed for quantitative outcome variables, though other implementations are available for fitting logistic and probit models to categorical outcomes.\n\nbart_boston = BART(random_state=0, burnin=5, ndraw=15)\nbart_boston.fit(X_train, y_train)\n\nBART(burnin=5, ndraw=15, random_state=0)In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org. BARTiFittedBART(burnin=5, ndraw=15, random_state=0) \n\n\nOn this data set, with this split into test and training, we see that the test error of BART is similar to that of random forest.\n\nyhat_test = bart_boston.predict(X_test.astype(np.float32))\nnp.mean((y_test - yhat_test)**2)\n\n22.145009458109225\n\n\nWe can check how many times each variable appeared in the collection of trees. This gives a summary similar to the variable importance plot for boosting and random forests.\n\nvar_inclusion = pd.Series(bart_boston.variable_inclusion_.mean(0),\n                               index=D.columns)\nvar_inclusion\n\ncrim       26.933333\nzn         27.866667\nindus      26.466667\nchas       22.466667\nnox        26.600000\nrm         29.800000\nage        22.733333\ndis        26.466667\nrad        23.666667\ntax        24.133333\nptratio    24.266667\nlstat      31.000000\ndtype: float64"
  },
  {
    "objectID": "posts/ch12-unsupervised-learning/Ch12-unsup-lab.html",
    "href": "posts/ch12-unsupervised-learning/Ch12-unsup-lab.html",
    "title": "Unsupervised Learning",
    "section": "",
    "text": "In this lab we demonstrate PCA and clustering on several datasets. As in other labs, we import some of our libraries at this top level. This makes the code more readable, as scanning the first few lines of the notebook tell us what libraries are used in this notebook.\nimport numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nfrom statsmodels.datasets import get_rdataset\nfrom sklearn.decomposition import PCA\nfrom sklearn.preprocessing import StandardScaler\nfrom ISLP import load_data\nWe also collect the new imports needed for this lab.\nfrom sklearn.cluster import \\\n     (KMeans,\n      AgglomerativeClustering)\nfrom scipy.cluster.hierarchy import \\\n     (dendrogram,\n      cut_tree)\nfrom ISLP.cluster import compute_linkage"
  },
  {
    "objectID": "posts/ch12-unsupervised-learning/Ch12-unsup-lab.html#principal-components-analysis",
    "href": "posts/ch12-unsupervised-learning/Ch12-unsup-lab.html#principal-components-analysis",
    "title": "Unsupervised Learning",
    "section": "Principal Components Analysis",
    "text": "Principal Components Analysis\nIn this lab, we perform PCA on USArrests, a data set in the R computing environment. We retrieve the data using get_rdataset(), which can fetch data from many standard R packages.\nThe rows of the data set contain the 50 states, in alphabetical order.\n\nUSArrests = get_rdataset('USArrests').data\nUSArrests\n\n\n\n\n\n\n\n\nMurder\nAssault\nUrbanPop\nRape\n\n\nrownames\n\n\n\n\n\n\n\n\nAlabama\n13.2\n236\n58\n21.2\n\n\nAlaska\n10.0\n263\n48\n44.5\n\n\nArizona\n8.1\n294\n80\n31.0\n\n\nArkansas\n8.8\n190\n50\n19.5\n\n\nCalifornia\n9.0\n276\n91\n40.6\n\n\nColorado\n7.9\n204\n78\n38.7\n\n\nConnecticut\n3.3\n110\n77\n11.1\n\n\nDelaware\n5.9\n238\n72\n15.8\n\n\nFlorida\n15.4\n335\n80\n31.9\n\n\nGeorgia\n17.4\n211\n60\n25.8\n\n\nHawaii\n5.3\n46\n83\n20.2\n\n\nIdaho\n2.6\n120\n54\n14.2\n\n\nIllinois\n10.4\n249\n83\n24.0\n\n\nIndiana\n7.2\n113\n65\n21.0\n\n\nIowa\n2.2\n56\n57\n11.3\n\n\nKansas\n6.0\n115\n66\n18.0\n\n\nKentucky\n9.7\n109\n52\n16.3\n\n\nLouisiana\n15.4\n249\n66\n22.2\n\n\nMaine\n2.1\n83\n51\n7.8\n\n\nMaryland\n11.3\n300\n67\n27.8\n\n\nMassachusetts\n4.4\n149\n85\n16.3\n\n\nMichigan\n12.1\n255\n74\n35.1\n\n\nMinnesota\n2.7\n72\n66\n14.9\n\n\nMississippi\n16.1\n259\n44\n17.1\n\n\nMissouri\n9.0\n178\n70\n28.2\n\n\nMontana\n6.0\n109\n53\n16.4\n\n\nNebraska\n4.3\n102\n62\n16.5\n\n\nNevada\n12.2\n252\n81\n46.0\n\n\nNew Hampshire\n2.1\n57\n56\n9.5\n\n\nNew Jersey\n7.4\n159\n89\n18.8\n\n\nNew Mexico\n11.4\n285\n70\n32.1\n\n\nNew York\n11.1\n254\n86\n26.1\n\n\nNorth Carolina\n13.0\n337\n45\n16.1\n\n\nNorth Dakota\n0.8\n45\n44\n7.3\n\n\nOhio\n7.3\n120\n75\n21.4\n\n\nOklahoma\n6.6\n151\n68\n20.0\n\n\nOregon\n4.9\n159\n67\n29.3\n\n\nPennsylvania\n6.3\n106\n72\n14.9\n\n\nRhode Island\n3.4\n174\n87\n8.3\n\n\nSouth Carolina\n14.4\n279\n48\n22.5\n\n\nSouth Dakota\n3.8\n86\n45\n12.8\n\n\nTennessee\n13.2\n188\n59\n26.9\n\n\nTexas\n12.7\n201\n80\n25.5\n\n\nUtah\n3.2\n120\n80\n22.9\n\n\nVermont\n2.2\n48\n32\n11.2\n\n\nVirginia\n8.5\n156\n63\n20.7\n\n\nWashington\n4.0\n145\n73\n26.2\n\n\nWest Virginia\n5.7\n81\n39\n9.3\n\n\nWisconsin\n2.6\n53\n66\n10.8\n\n\nWyoming\n6.8\n161\n60\n15.6\n\n\n\n\n\n\n\nThe columns of the data set contain the four variables.\n\nUSArrests.columns\n\nIndex(['Murder', 'Assault', 'UrbanPop', 'Rape'], dtype='object')\n\n\nWe first briefly examine the data. We notice that the variables have vastly different means.\n\nUSArrests.mean()\n\nMurder        7.788\nAssault     170.760\nUrbanPop     65.540\nRape         21.232\ndtype: float64\n\n\nDataframes have several useful methods for computing column-wise summaries. We can also examine the variance of the four variables using the var() method.\n\nUSArrests.var()\n\nMurder        18.970465\nAssault     6945.165714\nUrbanPop     209.518776\nRape          87.729159\ndtype: float64\n\n\nNot surprisingly, the variables also have vastly different variances. The UrbanPop variable measures the percentage of the population in each state living in an urban area, which is not a comparable number to the number of rapes in each state per 100,000 individuals. PCA looks for derived variables that account for most of the variance in the data set. If we do not scale the variables before performing PCA, then the principal components would mostly be driven by the Assault variable, since it has by far the largest variance. So if the variables are measured in different units or vary widely in scale, it is recommended to standardize the variables to have standard deviation one before performing PCA. Typically we set the means to zero as well.\nThis scaling can be done via the StandardScaler() transform imported above. We first fit the scaler, which computes the necessary means and standard deviations and then apply it to our data using the transform method. As before, we combine these steps using the fit_transform() method.\n\nscaler = StandardScaler(with_std=True,\n                        with_mean=True)\nUSArrests_scaled = scaler.fit_transform(USArrests)\n\nHaving scaled the data, we can then perform principal components analysis using the PCA() transform from the sklearn.decomposition package.\n\npcaUS = PCA()\n\n(By default, the PCA() transform centers the variables to have mean zero though it does not scale them.) The transform pcaUS can be used to find the PCA scores returned by fit(). Once the fit method has been called, the pcaUS object also contains a number of useful quantities.\n\npcaUS.fit(USArrests_scaled)\n\nPCA()In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.  PCA?Documentation for PCAiFittedPCA() \n\n\nAfter fitting, the mean_ attribute corresponds to the means of the variables. In this case, since we centered and scaled the data with scaler() the means will all be 0.\n\npcaUS.mean_\n\narray([-7.10542736e-17,  1.38777878e-16, -4.39648318e-16,  8.59312621e-16])\n\n\nThe scores can be computed using the transform() method of pcaUS after it has been fit.\n\nscores = pcaUS.transform(USArrests_scaled)\n\nWe will plot these scores a bit further down. The components_ attribute provides the principal component loadings: each row of pcaUS.components_ contains the corresponding principal component loading vector.\n\npcaUS.components_ \n\narray([[ 0.53589947,  0.58318363,  0.27819087,  0.54343209],\n       [-0.41818087, -0.1879856 ,  0.87280619,  0.16731864],\n       [-0.34123273, -0.26814843, -0.37801579,  0.81777791],\n       [-0.6492278 ,  0.74340748, -0.13387773, -0.08902432]])\n\n\nThe biplot is a common visualization method used with PCA. It is not built in as a standard part of sklearn, though there are python packages that do produce such plots. Here we make a simple biplot manually.\n\ni, j = 0, 1 # which components\nfig, ax = plt.subplots(1, 1, figsize=(8, 8))\nax.scatter(scores[:,0], scores[:,1])\nax.set_xlabel('PC%d' % (i+1))\nax.set_ylabel('PC%d' % (j+1))\nfor k in range(pcaUS.components_.shape[1]):\n    ax.arrow(0, 0, pcaUS.components_[i,k], pcaUS.components_[j,k])\n    ax.text(pcaUS.components_[i,k],\n            pcaUS.components_[j,k],\n            USArrests.columns[k])\n\n\n\n\n\n\n\n\nNotice that this figure is a reflection of Figure~ through the y-axis. Recall that the principal components are only unique up to a sign change, so we can reproduce that figure by flipping the signs of the second set of scores and loadings. We also increase the length of the arrows to emphasize the loadings.\n\nscale_arrow = s_ = 2\nscores[:,1] *= -1\npcaUS.components_[1] *= -1 # flip the y-axis\nfig, ax = plt.subplots(1, 1, figsize=(8, 8))\nax.scatter(scores[:,0], scores[:,1])\nax.set_xlabel('PC%d' % (i+1))\nax.set_ylabel('PC%d' % (j+1))\nfor k in range(pcaUS.components_.shape[1]):\n    ax.arrow(0, 0, s_*pcaUS.components_[i,k], s_*pcaUS.components_[j,k])\n    ax.text(s_*pcaUS.components_[i,k],\n            s_*pcaUS.components_[j,k],\n            USArrests.columns[k])\n\n\n\n\n\n\n\n\nThe standard deviations of the principal component scores are as follows:\n\nscores.std(0, ddof=1)\n\narray([1.5908673 , 1.00496987, 0.6031915 , 0.4206774 ])\n\n\nThe variance of each score can be extracted directly from the pcaUS object via the explained_variance_ attribute.\n\npcaUS.explained_variance_\n\narray([2.53085875, 1.00996444, 0.36383998, 0.17696948])\n\n\nThe proportion of variance explained by each principal component (PVE) is stored as explained_variance_ratio_:\n\npcaUS.explained_variance_ratio_\n\narray([0.62006039, 0.24744129, 0.0891408 , 0.04335752])\n\n\nWe see that the first principal component explains 62.0% of the variance in the data, the next principal component explains 24.7% of the variance, and so forth. We can plot the PVE explained by each component, as well as the cumulative PVE. We first plot the proportion of variance explained.\n\n%%capture\nfig, axes = plt.subplots(1, 2, figsize=(15, 6))\nticks = np.arange(pcaUS.n_components_)+1\nax = axes[0]\nax.plot(ticks,\n        pcaUS.explained_variance_ratio_,\n        marker='o')\nax.set_xlabel('Principal Component');\nax.set_ylabel('Proportion of Variance Explained')\nax.set_ylim([0,1])\nax.set_xticks(ticks)\n\nNotice the use of %%capture, which suppresses the displaying of the partially completed figure.\n\nax = axes[1]\nax.plot(ticks,\n        pcaUS.explained_variance_ratio_.cumsum(),\n        marker='o')\nax.set_xlabel('Principal Component')\nax.set_ylabel('Cumulative Proportion of Variance Explained')\nax.set_ylim([0, 1])\nax.set_xticks(ticks)\nfig\n\n\n\n\n\n\n\n\nThe result is similar to that shown in Figure~. Note that the method cumsum() computes the cumulative sum of the elements of a numeric vector. For instance:\n\na = np.array([1,2,8,-3])\nnp.cumsum(a)\n\narray([ 1,  3, 11,  8])"
  },
  {
    "objectID": "posts/ch12-unsupervised-learning/Ch12-unsup-lab.html#matrix-completion",
    "href": "posts/ch12-unsupervised-learning/Ch12-unsup-lab.html#matrix-completion",
    "title": "Unsupervised Learning",
    "section": "Matrix Completion",
    "text": "Matrix Completion\nWe now re-create the analysis carried out on the USArrests data in Section~.\nWe saw in Section~ that solving the optimization problem~() on a centered data matrix \\bf X is equivalent to computing the first M principal components of the data. We use our scaled and centered USArrests data as \\bf X below. The singular value decomposition (SVD) is a general algorithm for solving ().\n\nX = USArrests_scaled\nU, D, V = np.linalg.svd(X, full_matrices=False)\nU.shape, D.shape, V.shape\n\n((50, 4), (4,), (4, 4))\n\n\nThe np.linalg.svd() function returns three components, U, D and V. The matrix V is equivalent to the loading matrix from principal components (up to an unimportant sign flip). Using the full_matrices=False option ensures that for a tall matrix the shape of U is the same as the shape of X.\n\nV\n\narray([[-0.53589947, -0.58318363, -0.27819087, -0.54343209],\n       [-0.41818087, -0.1879856 ,  0.87280619,  0.16731864],\n       [ 0.34123273,  0.26814843,  0.37801579, -0.81777791],\n       [ 0.6492278 , -0.74340748,  0.13387773,  0.08902432]])\n\n\n\npcaUS.components_\n\narray([[ 0.53589947,  0.58318363,  0.27819087,  0.54343209],\n       [ 0.41818087,  0.1879856 , -0.87280619, -0.16731864],\n       [-0.34123273, -0.26814843, -0.37801579,  0.81777791],\n       [-0.6492278 ,  0.74340748, -0.13387773, -0.08902432]])\n\n\nThe matrix U corresponds to a standardized version of the PCA score matrix (each column standardized to have sum-of-squares one). If we multiply each column of U by the corresponding element of D, we recover the PCA scores exactly (up to a meaningless sign flip).\n\n(U * D[None,:])[:3]\n\narray([[-0.98556588, -1.13339238,  0.44426879,  0.15626714],\n       [-1.95013775, -1.07321326, -2.04000333, -0.43858344],\n       [-1.76316354,  0.74595678, -0.05478082, -0.83465292]])\n\n\n\nscores[:3]\n\narray([[ 0.98556588,  1.13339238, -0.44426879, -0.15626714],\n       [ 1.95013775,  1.07321326,  2.04000333,  0.43858344],\n       [ 1.76316354, -0.74595678,  0.05478082,  0.83465292]])\n\n\nWhile it would be possible to carry out this lab using the PCA() estimator, here we use the np.linalg.svd() function in order to illustrate its use.\nWe now omit 20 entries in the 50\\times 4 data matrix at random. We do so by first selecting 20 rows (states) at random, and then selecting one of the four entries in each row at random. This ensures that every row has at least three observed values.\n\nn_omit = 20\nnp.random.seed(15)\nr_idx = np.random.choice(np.arange(X.shape[0]),\n                         n_omit,\n                         replace=False)\nc_idx = np.random.choice(np.arange(X.shape[1]),\n                         n_omit,\n                         replace=True)\nXna = X.copy()\nXna[r_idx, c_idx] = np.nan\n\nHere the array r_idx contains 20 integers from 0 to 49; this represents the states (rows of X) that are selected to contain missing values. And c_idx contains 20 integers from 0 to 3, representing the features (columns in X) that contain the missing values for each of the selected states.\nWe now write some code to implement Algorithm~. We first write a function that takes in a matrix, and returns an approximation to the matrix using the svd() function. This will be needed in Step 2 of Algorithm~.\n\ndef low_rank(X, M=1):\n    U, D, V = np.linalg.svd(X)\n    L = U[:,:M] * D[None,:M]\n    return L.dot(V[:M])\n\nTo conduct Step 1 of the algorithm, we initialize Xhat — this is \\tilde{\\bf X} in Algorithm~ — by replacing the missing values with the column means of the non-missing entries. These are stored in Xbar below after running np.nanmean() over the row axis. We make a copy so that when we assign values to Xhat below we do not also overwrite the values in Xna.\n\nXhat = Xna.copy()\nXbar = np.nanmean(Xhat, axis=0)\nXhat[r_idx, c_idx] = Xbar[c_idx]\n\nBefore we begin Step 2, we set ourselves up to measure the progress of our iterations:\n\nthresh = 1e-7\nrel_err = 1\ncount = 0\nismiss = np.isnan(Xna)\nmssold = np.mean(Xhat[~ismiss]**2)\nmss0 = np.mean(Xna[~ismiss]**2)\n\nHere ismiss is a logical matrix with the same dimensions as Xna; a given element is True if the corresponding matrix element is missing. The notation ~ismiss negates this boolean vector. This is useful because it allows us to access both the missing and non-missing entries. We store the mean of the squared non-missing elements in mss0. We store the mean squared error of the non-missing elements of the old version of Xhat in mssold (which currently agrees with mss0). We plan to store the mean squared error of the non-missing elements of the current version of Xhat in mss, and will then iterate Step 2 of Algorithm~ until the relative error, defined as (mssold - mss) / mss0, falls below thresh = 1e-7. {Algorithm~ tells us to iterate Step 2 until is no longer decreasing. Determining whether is decreasing requires us only to keep track of mssold - mss. However, in practice, we keep track of (mssold - mss) / mss0 instead: this makes it so that the number of iterations required for Algorithm~ to converge does not depend on whether we multiplied the raw data \\bf X by a constant factor.}\nIn Step 2(a) of Algorithm~, we approximate Xhat using low_rank(); we call this Xapp. In Step 2(b), we use Xapp to update the estimates for elements in Xhat that are missing in Xna. Finally, in Step 2(c), we compute the relative error. These three steps are contained in the following while loop:\n\nwhile rel_err &gt; thresh:\n    count += 1\n    # Step 2(a)\n    Xapp = low_rank(Xhat, M=1)\n    # Step 2(b)\n    Xhat[ismiss] = Xapp[ismiss]\n    # Step 2(c)\n    mss = np.mean(((Xna - Xapp)[~ismiss])**2)\n    rel_err = (mssold - mss) / mss0\n    mssold = mss\n    print(\"Iteration: {0}, MSS:{1:.3f}, Rel.Err {2:.2e}\"\n          .format(count, mss, rel_err))\n\nIteration: 1, MSS:0.395, Rel.Err 5.99e-01\nIteration: 2, MSS:0.382, Rel.Err 1.33e-02\nIteration: 3, MSS:0.381, Rel.Err 1.44e-03\nIteration: 4, MSS:0.381, Rel.Err 1.79e-04\nIteration: 5, MSS:0.381, Rel.Err 2.58e-05\nIteration: 6, MSS:0.381, Rel.Err 4.22e-06\nIteration: 7, MSS:0.381, Rel.Err 7.65e-07\nIteration: 8, MSS:0.381, Rel.Err 1.48e-07\nIteration: 9, MSS:0.381, Rel.Err 2.95e-08\n\n\nWe see that after eight iterations, the relative error has fallen below thresh = 1e-7, and so the algorithm terminates. When this happens, the mean squared error of the non-missing elements equals 0.381.\nFinally, we compute the correlation between the 20 imputed values and the actual values:\n\nnp.corrcoef(Xapp[ismiss], X[ismiss])[0,1]\n\n0.7113567434297361\n\n\nIn this lab, we implemented Algorithm~ ourselves for didactic purposes. However, a reader who wishes to apply matrix completion to their data might look to more specialized Python implementations."
  },
  {
    "objectID": "posts/ch12-unsupervised-learning/Ch12-unsup-lab.html#clustering",
    "href": "posts/ch12-unsupervised-learning/Ch12-unsup-lab.html#clustering",
    "title": "Unsupervised Learning",
    "section": "Clustering",
    "text": "Clustering\n\nK-Means Clustering\nThe estimator sklearn.cluster.KMeans() performs K-means clustering in Python. We begin with a simple simulated example in which there truly are two clusters in the data: the first 25 observations have a mean shift relative to the next 25 observations.\n\nnp.random.seed(0);\nX = np.random.standard_normal((50,2));\nX[:25,0] += 3;\nX[:25,1] -= 4;\n\nWe now perform K-means clustering with K=2.\n\nkmeans = KMeans(n_clusters=2,\n                random_state=2,\n                n_init=20).fit(X)\n\nWe specify random_state to make the results reproducible. The cluster assignments of the 50 observations are contained in kmeans.labels_.\n\nkmeans.labels_\n\narray([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1,\n       0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,\n       1, 1, 1, 1, 1, 1], dtype=int32)\n\n\nThe K-means clustering perfectly separated the observations into two clusters even though we did not supply any group information to KMeans(). We can plot the data, with each observation colored according to its cluster assignment.\n\nfig, ax = plt.subplots(1, 1, figsize=(8,8))\nax.scatter(X[:,0], X[:,1], c=kmeans.labels_)\nax.set_title(\"K-Means Clustering Results with K=2\");\n\n\n\n\n\n\n\n\nHere the observations can be easily plotted because they are two-dimensional. If there were more than two variables then we could instead perform PCA and plot the first two principal component score vectors to represent the clusters.\nIn this example, we knew that there really were two clusters because we generated the data. However, for real data, we do not know the true number of clusters, nor whether they exist in any precise way. We could instead have performed K-means clustering on this example with K=3.\n\nkmeans = KMeans(n_clusters=3,\n                random_state=3,\n                n_init=20).fit(X)\nfig, ax = plt.subplots(figsize=(8,8))\nax.scatter(X[:,0], X[:,1], c=kmeans.labels_)\nax.set_title(\"K-Means Clustering Results with K=3\");\n\n\n\n\n\n\n\n\nWhen K=3, K-means clustering splits up the two clusters. We have used the n_init argument to run the K-means with 20 initial cluster assignments (the default is 10). If a value of n_init greater than one is used, then K-means clustering will be performed using multiple random assignments in Step 1 of Algorithm~, and the KMeans() function will report only the best results. Here we compare using n_init=1 to n_init=20.\n\nkmeans1 = KMeans(n_clusters=3,\n                random_state=3,\n                n_init=1).fit(X)\nkmeans20 = KMeans(n_clusters=3,\n                  random_state=3,\n                  n_init=20).fit(X);\nkmeans1.inertia_, kmeans20.inertia_\n\n(76.85131986999251, 75.06261242745384)\n\n\nNote that kmeans.inertia_ is the total within-cluster sum of squares, which we seek to minimize by performing K-means clustering .\nWe strongly recommend always running K-means clustering with a large value of n_init, such as 20 or 50, since otherwise an undesirable local optimum may be obtained.\nWhen performing K-means clustering, in addition to using multiple initial cluster assignments, it is also important to set a random seed using the random_state argument to KMeans(). This way, the initial cluster assignments in Step 1 can be replicated, and the K-means output will be fully reproducible.\n\n\nHierarchical Clustering\nThe AgglomerativeClustering() class from the sklearn.clustering package implements hierarchical clustering. As its name is long, we use the short hand HClust for hierarchical clustering. Note that this will not change the return type when using this method, so instances will still be of class AgglomerativeClustering. In the following example we use the data from the previous lab to plot the hierarchical clustering dendrogram using complete, single, and average linkage clustering with Euclidean distance as the dissimilarity measure. We begin by clustering observations using complete linkage.\n\nHClust = AgglomerativeClustering\nhc_comp = HClust(distance_threshold=0,\n                 n_clusters=None,\n                 linkage='complete')\nhc_comp.fit(X)\n\nAgglomerativeClustering(distance_threshold=0, linkage='complete',\n                        n_clusters=None)In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.  AgglomerativeClustering?Documentation for AgglomerativeClusteringiFittedAgglomerativeClustering(distance_threshold=0, linkage='complete',\n                        n_clusters=None) \n\n\nThis computes the entire dendrogram. We could just as easily perform hierarchical clustering with average or single linkage instead:\n\nhc_avg = HClust(distance_threshold=0,\n                n_clusters=None,\n                linkage='average');\nhc_avg.fit(X)\nhc_sing = HClust(distance_threshold=0,\n                 n_clusters=None,\n                 linkage='single');\nhc_sing.fit(X);\n\nTo use a precomputed distance matrix, we provide an additional argument metric=\"precomputed\". In the code below, the first four lines computes the 50\\times 50 pairwise-distance matrix.\n\nD = np.zeros((X.shape[0], X.shape[0]));\nfor i in range(X.shape[0]):\n    x_ = np.multiply.outer(np.ones(X.shape[0]), X[i])\n    D[i] = np.sqrt(np.sum((X - x_)**2, 1));\nhc_sing_pre = HClust(distance_threshold=0,\n                     n_clusters=None,\n                     metric='precomputed',\n                     linkage='single')\nhc_sing_pre.fit(D)\n\nAgglomerativeClustering(distance_threshold=0, linkage='single',\n                        metric='precomputed', n_clusters=None)In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.  AgglomerativeClustering?Documentation for AgglomerativeClusteringiFittedAgglomerativeClustering(distance_threshold=0, linkage='single',\n                        metric='precomputed', n_clusters=None) \n\n\nWe use dendrogram() from scipy.cluster.hierarchy to plot the dendrogram. However, dendrogram() expects a so-called linkage-matrix representation of the clustering, which is not provided by AgglomerativeClustering(), but can be computed. The function compute_linkage() in the ISLP.cluster package is provided for this purpose.\nWe can now plot the dendrograms. The numbers at the bottom of the plot identify each observation. The dendrogram() function has a default method to color different branches of the tree that suggests a pre-defined cut of the tree at a particular depth. We prefer to overwrite this default by setting this threshold to be infinite. Since we want this behavior for many dendrograms, we store these values in a dictionary cargs and pass this as keyword arguments using the notation **cargs.\n\ncargs = {'color_threshold':-np.inf,\n         'above_threshold_color':'black'}\nlinkage_comp = compute_linkage(hc_comp)\nfig, ax = plt.subplots(1, 1, figsize=(8, 8))\ndendrogram(linkage_comp,\n           ax=ax,\n           **cargs);\n\n\n\n\n\n\n\n\nWe may want to color branches of the tree above and below a cut-threshold differently. This can be achieved by changing the color_threshold. Let’s cut the tree at a height of 4, coloring links that merge above 4 in black.\n\nfig, ax = plt.subplots(1, 1, figsize=(8, 8))\ndendrogram(linkage_comp,\n           ax=ax,\n           color_threshold=4,\n           above_threshold_color='black');\n\n\n\n\n\n\n\n\nTo determine the cluster labels for each observation associated with a given cut of the dendrogram, we can use the cut_tree() function from scipy.cluster.hierarchy:\n\ncut_tree(linkage_comp, n_clusters=4).T\n\narray([[0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 2, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 2,\n        0, 2, 2, 3, 2, 3, 3, 3, 3, 2, 3, 3, 3, 3, 2, 3, 3, 3, 3, 2, 3, 3,\n        3, 3, 3, 3, 3, 3]])\n\n\nThis can also be achieved by providing an argument n_clusters to HClust(); however each cut would require recomputing the clustering. Similarly, trees may be cut by distance threshold with an argument of distance_threshold to HClust() or height to cut_tree().\n\ncut_tree(linkage_comp, height=5)\n\narray([[0],\n       [0],\n       [0],\n       [0],\n       [0],\n       [0],\n       [0],\n       [0],\n       [0],\n       [0],\n       [1],\n       [0],\n       [0],\n       [0],\n       [0],\n       [0],\n       [0],\n       [0],\n       [0],\n       [0],\n       [0],\n       [1],\n       [0],\n       [1],\n       [1],\n       [2],\n       [1],\n       [2],\n       [2],\n       [2],\n       [2],\n       [1],\n       [2],\n       [2],\n       [2],\n       [2],\n       [1],\n       [2],\n       [2],\n       [2],\n       [2],\n       [1],\n       [2],\n       [2],\n       [2],\n       [2],\n       [2],\n       [2],\n       [2],\n       [2]])\n\n\nTo scale the variables before performing hierarchical clustering of the observations, we use StandardScaler() as in our PCA example:\n\nscaler = StandardScaler()\nX_scale = scaler.fit_transform(X)\nhc_comp_scale = HClust(distance_threshold=0,\n                       n_clusters=None,\n                       linkage='complete').fit(X_scale)\nlinkage_comp_scale = compute_linkage(hc_comp_scale)\nfig, ax = plt.subplots(1, 1, figsize=(8, 8))\ndendrogram(linkage_comp_scale, ax=ax, **cargs)\nax.set_title(\"Hierarchical Clustering with Scaled Features\");\n\n\n\n\n\n\n\n\nCorrelation-based distances between observations can be used for clustering. The correlation between two observations measures the similarity of their feature values. {Suppose each observation has p features, each a single numerical value. We measure the similarity of two such observations by computing the correlation of these p pairs of numbers.} With n observations, the n\\times n correlation matrix can then be used as a similarity (or affinity) matrix, i.e. so that one minus the correlation matrix is the dissimilarity matrix used for clustering.\nNote that using correlation only makes sense for data with at least three features since the absolute correlation between any two observations with measurements on two features is always one. Hence, we will cluster a three-dimensional data set.\n\nX = np.random.standard_normal((30, 3))\ncorD = 1 - np.corrcoef(X)\nhc_cor = HClust(linkage='complete',\n                distance_threshold=0,\n                n_clusters=None,\n                metric='precomputed')\nhc_cor.fit(corD)\nlinkage_cor = compute_linkage(hc_cor)\nfig, ax = plt.subplots(1, 1, figsize=(8, 8))\ndendrogram(linkage_cor, ax=ax, **cargs)\nax.set_title(\"Complete Linkage with Correlation-Based Dissimilarity\");"
  },
  {
    "objectID": "posts/ch12-unsupervised-learning/Ch12-unsup-lab.html#nci60-data-example",
    "href": "posts/ch12-unsupervised-learning/Ch12-unsup-lab.html#nci60-data-example",
    "title": "Unsupervised Learning",
    "section": "NCI60 Data Example",
    "text": "NCI60 Data Example\nUnsupervised techniques are often used in the analysis of genomic data. In particular, PCA and hierarchical clustering are popular tools. We illustrate these techniques on the NCI60 cancer cell line microarray data, which consists of 6830 gene expression measurements on 64 cancer cell lines.\n\nNCI60 = load_data('NCI60')\nnci_labs = NCI60['labels']\nnci_data = NCI60['data']\n\nEach cell line is labeled with a cancer type. We do not make use of the cancer types in performing PCA and clustering, as these are unsupervised techniques. But after performing PCA and clustering, we will check to see the extent to which these cancer types agree with the results of these unsupervised techniques.\nThe data has 64 rows and 6830 columns.\n\nnci_data.shape\n\n(64, 6830)\n\n\nWe begin by examining the cancer types for the cell lines.\n\nnci_labs.value_counts()\n\nlabel      \nRENAL          9\nNSCLC          9\nMELANOMA       8\nBREAST         7\nCOLON          7\nLEUKEMIA       6\nOVARIAN        6\nCNS            5\nPROSTATE       2\nK562A-repro    1\nK562B-repro    1\nMCF7D-repro    1\nMCF7A-repro    1\nUNKNOWN        1\nName: count, dtype: int64\n\n\n\nPCA on the NCI60 Data\nWe first perform PCA on the data after scaling the variables (genes) to have standard deviation one, although here one could reasonably argue that it is better not to scale the genes as they are measured in the same units.\n\nscaler = StandardScaler()\nnci_scaled = scaler.fit_transform(nci_data)\nnci_pca = PCA()\nnci_scores = nci_pca.fit_transform(nci_scaled)\n\nWe now plot the first few principal component score vectors, in order to visualize the data. The observations (cell lines) corresponding to a given cancer type will be plotted in the same color, so that we can see to what extent the observations within a cancer type are similar to each other.\n\ncancer_types = list(np.unique(nci_labs))\nnci_groups = np.array([cancer_types.index(lab)\n                       for lab in nci_labs.values])\nfig, axes = plt.subplots(1, 2, figsize=(15,6))\nax = axes[0]\nax.scatter(nci_scores[:,0],\n           nci_scores[:,1],\n           c=nci_groups,\n           marker='o',\n           s=50)\nax.set_xlabel('PC1'); ax.set_ylabel('PC2')\nax = axes[1]\nax.scatter(nci_scores[:,0],\n           nci_scores[:,2],\n           c=nci_groups,\n           marker='o',\n           s=50)\nax.set_xlabel('PC1'); ax.set_ylabel('PC3');\n\n\n\n\n\n\n\n\nOn the whole, cell lines corresponding to a single cancer type do tend to have similar values on the first few principal component score vectors. This indicates that cell lines from the same cancer type tend to have pretty similar gene expression levels.\nWe can also plot the percent variance explained by the principal components as well as the cumulative percent variance explained. This is similar to the plots we made earlier for the USArrests data.\n\nfig, axes = plt.subplots(1, 2, figsize=(15,6))\nax = axes[0]\nticks = np.arange(nci_pca.n_components_)+1\nax.plot(ticks,\n        nci_pca.explained_variance_ratio_,\n        marker='o')\nax.set_xlabel('Principal Component');\nax.set_ylabel('PVE')\nax = axes[1]\nax.plot(ticks,\n        nci_pca.explained_variance_ratio_.cumsum(),\n        marker='o');\nax.set_xlabel('Principal Component')\nax.set_ylabel('Cumulative PVE');\n\n\n\n\n\n\n\n\nWe see that together, the first seven principal components explain around 40% of the variance in the data. This is not a huge amount of the variance. However, looking at the scree plot, we see that while each of the first seven principal components explain a substantial amount of variance, there is a marked decrease in the variance explained by further principal components. That is, there is an elbow in the plot after approximately the seventh principal component. This suggests that there may be little benefit to examining more than seven or so principal components (though even examining seven principal components may be difficult).\n\n\nClustering the Observations of the NCI60 Data\nWe now perform hierarchical clustering of the cell lines in the NCI60 data using complete, single, and average linkage. Once again, the goal is to find out whether or not the observations cluster into distinct types of cancer. Euclidean distance is used as the dissimilarity measure. We first write a short function to produce the three dendrograms.\n\ndef plot_nci(linkage, ax, cut=-np.inf):\n    cargs = {'above_threshold_color':'black',\n             'color_threshold':cut}\n    hc = HClust(n_clusters=None,\n                distance_threshold=0,\n                linkage=linkage.lower()).fit(nci_scaled)\n    linkage_ = compute_linkage(hc)\n    dendrogram(linkage_,\n               ax=ax,\n               labels=np.asarray(nci_labs),\n               leaf_font_size=10,\n               **cargs)\n    ax.set_title('%s Linkage' % linkage)\n    return hc\n\nLet’s plot our results.\n\nfig, axes = plt.subplots(3, 1, figsize=(15,30))      \nax = axes[0]; hc_comp = plot_nci('Complete', ax)\nax = axes[1]; hc_avg = plot_nci('Average', ax)\nax = axes[2]; hc_sing = plot_nci('Single', ax)\n\n\n\n\n\n\n\n\nWe see that the choice of linkage certainly does affect the results obtained. Typically, single linkage will tend to yield trailing clusters: very large clusters onto which individual observations attach one-by-one. On the other hand, complete and average linkage tend to yield more balanced, attractive clusters. For this reason, complete and average linkage are generally preferred to single linkage. Clearly cell lines within a single cancer type do tend to cluster together, although the clustering is not perfect. We will use complete linkage hierarchical clustering for the analysis that follows.\nWe can cut the dendrogram at the height that will yield a particular number of clusters, say four:\n\nlinkage_comp = compute_linkage(hc_comp)\ncomp_cut = cut_tree(linkage_comp, n_clusters=4).reshape(-1)\npd.crosstab(nci_labs['label'],\n            pd.Series(comp_cut.reshape(-1), name='Complete'))\n\n\n\n\n\n\n\nComplete\n0\n1\n2\n3\n\n\nlabel\n\n\n\n\n\n\n\n\nBREAST\n2\n3\n0\n2\n\n\nCNS\n3\n2\n0\n0\n\n\nCOLON\n2\n0\n0\n5\n\n\nK562A-repro\n0\n0\n1\n0\n\n\nK562B-repro\n0\n0\n1\n0\n\n\nLEUKEMIA\n0\n0\n6\n0\n\n\nMCF7A-repro\n0\n0\n0\n1\n\n\nMCF7D-repro\n0\n0\n0\n1\n\n\nMELANOMA\n8\n0\n0\n0\n\n\nNSCLC\n8\n1\n0\n0\n\n\nOVARIAN\n6\n0\n0\n0\n\n\nPROSTATE\n2\n0\n0\n0\n\n\nRENAL\n8\n1\n0\n0\n\n\nUNKNOWN\n1\n0\n0\n0\n\n\n\n\n\n\n\nThere are some clear patterns. All the leukemia cell lines fall in one cluster, while the breast cancer cell lines are spread out over three different clusters.\nWe can plot a cut on the dendrogram that produces these four clusters:\n\nfig, ax = plt.subplots(figsize=(10,10))\nplot_nci('Complete', ax, cut=140)\nax.axhline(140, c='r', linewidth=4);\n\n\n\n\n\n\n\n\nThe axhline() function draws a horizontal line line on top of any existing set of axes. The argument 140 plots a horizontal line at height 140 on the dendrogram; this is a height that results in four distinct clusters. It is easy to verify that the resulting clusters are the same as the ones we obtained in comp_cut.\nWe claimed earlier in Section~ that K-means clustering and hierarchical clustering with the dendrogram cut to obtain the same number of clusters can yield very different results. How do these NCI60 hierarchical clustering results compare to what we get if we perform K-means clustering with K=4?\n\nnci_kmeans = KMeans(n_clusters=4, \n                    random_state=0,\n                    n_init=20).fit(nci_scaled)\npd.crosstab(pd.Series(comp_cut, name='HClust'),\n            pd.Series(nci_kmeans.labels_, name='K-means'))\n\n\n\n\n\n\n\nK-means\n0\n1\n2\n3\n\n\nHClust\n\n\n\n\n\n\n\n\n0\n1\n20\n10\n9\n\n\n1\n0\n7\n0\n0\n\n\n2\n8\n0\n0\n0\n\n\n3\n0\n0\n9\n0\n\n\n\n\n\n\n\nWe see that the four clusters obtained using hierarchical clustering and K-means clustering are somewhat different. First we note that the labels in the two clusterings are arbitrary. That is, swapping the identifier of the cluster does not change the clustering. We see here Cluster 3 in K-means clustering is identical to cluster 2 in hierarchical clustering. However, the other clusters differ: for instance, cluster 0 in K-means clustering contains a portion of the observations assigned to cluster 0 by hierarchical clustering, as well as all of the observations assigned to cluster 1 by hierarchical clustering.\nRather than performing hierarchical clustering on the entire data matrix, we can also perform hierarchical clustering on the first few principal component score vectors, regarding these first few components as a less noisy version of the data.\n\nhc_pca = HClust(n_clusters=None,\n                distance_threshold=0,\n                linkage='complete'\n                ).fit(nci_scores[:,:5])\nlinkage_pca = compute_linkage(hc_pca)\nfig, ax = plt.subplots(figsize=(8,8))\ndendrogram(linkage_pca,\n           labels=np.asarray(nci_labs),\n           leaf_font_size=10,\n           ax=ax,\n           **cargs)\nax.set_title(\"Hier. Clust. on First Five Score Vectors\")\npca_labels = pd.Series(cut_tree(linkage_pca,\n                                n_clusters=4).reshape(-1),\n                       name='Complete-PCA')\npd.crosstab(nci_labs['label'], pca_labels)\n\n\n\n\n\n\n\nComplete-PCA\n0\n1\n2\n3\n\n\nlabel\n\n\n\n\n\n\n\n\nBREAST\n0\n5\n0\n2\n\n\nCNS\n2\n3\n0\n0\n\n\nCOLON\n7\n0\n0\n0\n\n\nK562A-repro\n0\n0\n1\n0\n\n\nK562B-repro\n0\n0\n1\n0\n\n\nLEUKEMIA\n2\n0\n4\n0\n\n\nMCF7A-repro\n0\n0\n0\n1\n\n\nMCF7D-repro\n0\n0\n0\n1\n\n\nMELANOMA\n1\n7\n0\n0\n\n\nNSCLC\n8\n1\n0\n0\n\n\nOVARIAN\n5\n1\n0\n0\n\n\nPROSTATE\n2\n0\n0\n0\n\n\nRENAL\n7\n2\n0\n0\n\n\nUNKNOWN\n0\n1\n0\n0"
  },
  {
    "objectID": "posts/ch10-deep-learning/Ch10-deeplearning-lab.html",
    "href": "posts/ch10-deep-learning/Ch10-deeplearning-lab.html",
    "title": "Chapter 10: Deep Learning",
    "section": "",
    "text": "In this section we demonstrate how to fit the examples discussed in the text. We use the Python torch package, along with the pytorch_lightning package which provides utilities to simplify fitting and evaluating models. This code can be impressively fast with certain special processors, such as Apple’s new M1 chip. The package is well-structured, flexible, and will feel comfortable to Python users. A good companion is the site pytorch.org/tutorials. Much of our code is adapted from there, as well as the pytorch_lightning documentation. {The precise URLs at the time of writing are https://pytorch.org/tutorials/beginner/basics/intro.html and https://pytorch-lightning.readthedocs.io/en/latest/.}\nWe start with several standard imports that we have seen before.\n\nimport numpy as np, pandas as pd\nfrom matplotlib.pyplot import subplots\nfrom sklearn.linear_model import (\n     LinearRegression,\n     LogisticRegression,\n     Lasso)\nfrom sklearn.preprocessing import StandardScaler\nfrom sklearn.model_selection import KFold\nfrom sklearn.pipeline import Pipeline\nfrom ISLP import load_data\nfrom ISLP.models import ModelSpec as MS\nfrom sklearn.model_selection import (train_test_split, GridSearchCV)\n\n\n\nThere are a number of imports for torch. (These are not included with ISLP, so must be installed separately.) First we import the main library and essential tools used to specify sequentially-structured networks.\n\nimport torch\nfrom torch import nn\nfrom torch.optim import RMSprop\nfrom torch.utils.data import TensorDataset\n\nThere are several other helper packages for torch. For instance, the torchmetrics package has utilities to compute various metrics to evaluate performance when fitting a model. The torchinfo package provides a useful summary of the layers of a model. We use the read_image() function when loading test images in Section~.\nIf you have not already installed the packages torchvision and torchinfo you can install them by running pip install torchinfo torchvision. We can now import from torchinfo.\n\nfrom torchmetrics import (MeanAbsoluteError, R2Score)\nfrom torchinfo import summary\n\nThe package pytorch_lightning is a somewhat higher-level interface to torch that simplifies the specification and fitting of models by reducing the amount of boilerplate code needed (compared to using torch alone).\n\nfrom pytorch_lightning import Trainer\nfrom pytorch_lightning.loggers import CSVLogger\n\nIn order to reproduce results we use seed_everything(). We will also instruct torch to use deterministic algorithms where possible.\n\nfrom pytorch_lightning import seed_everything\nseed_everything(0, workers=True)\ntorch.use_deterministic_algorithms(True, warn_only=True)\n\nSeed set to 0\n\n\n0\n\n\nWe will use several datasets shipped with torchvision for our examples: a pretrained network for image classification, as well as some transforms used for preprocessing.\n\nfrom torchvision.io import read_image\nfrom torchvision.datasets import MNIST, CIFAR100\nfrom torchvision.models import (resnet50,\n                                ResNet50_Weights)\nfrom torchvision.transforms import (Resize,\n                                    Normalize,\n                                    CenterCrop,\n                                    ToTensor)\n\nWe have provided a few utilities in ISLP specifically for this lab. The SimpleDataModule and SimpleModule are simple versions of objects used in pytorch_lightning, the high-level module for fitting torch models. Although more advanced uses such as computing on graphical processing units (GPUs) and parallel data processing are possible in this module, we will not be focusing much on these in this lab. The ErrorTracker handles collections of targets and predictions over each mini-batch in the validation or test stage, allowing computation of the metric over the entire validation or test data set.\n\nfrom ISLP.torch import (SimpleDataModule,\n                        SimpleModule,\n                        ErrorTracker,\n                        rec_num_workers)\n\nIn addition we have included some helper functions to load the IMDb database, as well as a lookup that maps integers to particular keys in the database. We’ve included a slightly modified copy of the preprocessed IMDb data from keras, a separate package for fitting deep learning models. This saves us significant preprocessing and allows us to focus on specifying and fitting the models themselves.\n\nfrom ISLP.torch.imdb import (load_lookup,\n                             load_tensor,\n                             load_sparse,\n                             load_sequential)\n\nFinally, we introduce some utility imports not directly related to torch.\nThe glob() function from the glob module is used to find all files matching wildcard characters, which we will use in our example applying the ResNet50 model to some of our own images. The json module will be used to load a JSON file for looking up classes to identify the labels of the pictures in the ResNet50 example.\n\nfrom glob import glob\nimport json\n\n\n\n\nWe start by fitting the models in Section~ on the Hitters data.\n\nHitters = load_data('Hitters').dropna()\nn = Hitters.shape[0]\n\nWe will fit two linear models (least squares and lasso) and compare their performance to that of a neural network. For this comparison we will use mean absolute error on a validation dataset.\n\n\\begin{equation*}\n\\begin{split}\n\\mbox{MAE}(y,\\hat{y}) = \\frac{1}{n} \\sum_{i=1}^n |y_i-\\hat{y}_i|.\n\\end{split}\n\\end{equation*}\n\nWe set up the model matrix and the response.\n\nmodel = MS(Hitters.columns.drop('Salary'), intercept=False)\nX = model.fit_transform(Hitters).to_numpy()\nY = Hitters['Salary'].to_numpy()\n\nThe to_numpy() method above converts pandas data frames or series to numpy arrays. We do this because we will need to use sklearn to fit the lasso model, and it requires this conversion. We also use a linear regression method from sklearn, rather than the method in Chapter~3 from statsmodels, to facilitate the comparisons.\nWe now split the data into test and training, fixing the random state used by sklearn to do the split.\n\n(X_train, \n X_test,\n Y_train,\n Y_test) = train_test_split(X,\n                            Y,\n                            test_size=1/3,\n                            random_state=1)\n\n\n\nWe fit the linear model and evaluate the test error directly.\n\nhit_lm = LinearRegression().fit(X_train, Y_train)\nYhat_test = hit_lm.predict(X_test)\nnp.abs(Yhat_test - Y_test).mean()\n\n259.7152883314627\n\n\nNext we fit the lasso using sklearn. We are using mean absolute error to select and evaluate a model, rather than mean squared error. The specialized solver we used in Section~ uses only mean squared error. So here, with a bit more work, we create a cross-validation grid and perform the cross-validation directly.\nWe encode a pipeline with two steps: we first normalize the features using a StandardScaler() transform, and then fit the lasso without further normalization.\n\nscaler = StandardScaler(with_mean=True, with_std=True)\nlasso = Lasso(warm_start=True, max_iter=30000)\nstandard_lasso = Pipeline(steps=[('scaler', scaler),\n                                 ('lasso', lasso)])\n\nWe need to create a grid of values for \\lambda. As is common practice, we choose a grid of 100 values of \\lambda, uniform on the log scale from lam_max down to 0.01*lam_max. Here lam_max is the smallest value of \\lambda with an all-zero solution. This value equals the largest absolute inner-product between any predictor and the (centered) response. {The derivation of this result is beyond the scope of this book.}\n\nX_s = scaler.fit_transform(X_train)\nn = X_s.shape[0]\nlam_max = np.fabs(X_s.T.dot(Y_train - Y_train.mean())).max() / n\nparam_grid = {'lasso__alpha': np.exp(np.linspace(0, np.log(0.01), 100))\n             * lam_max}\n\nNote that we had to transform the data first, since the scale of the variables impacts the choice of \\lambda. We now perform cross-validation using this sequence of \\lambda values.\n\ncv = KFold(10,\n           shuffle=True,\n           random_state=1)\ngrid = GridSearchCV(standard_lasso,\n                    param_grid,\n                    cv=cv,\n                    scoring='neg_mean_absolute_error')\ngrid.fit(X_train, Y_train);\n\nWe extract the lasso model with best cross-validated mean absolute error, and evaluate its performance on X_test and Y_test, which were not used in cross-validation.\n\ntrained_lasso = grid.best_estimator_\nYhat_test = trained_lasso.predict(X_test)\nnp.fabs(Yhat_test - Y_test).mean()\n\n235.6754837478029\n\n\nThis is similar to the results we got for the linear model fit by least squares. However, these results can vary a lot for different train/test splits; we encourage the reader to try a different seed in code block 12 and rerun the subsequent code up to this point.\n\n\n\nTo fit the neural network, we first set up a model structure that describes the network. Doing so requires us to define new classes specific to the model we wish to fit. Typically this is done in pytorch by sub-classing a generic representation of a network, which is the approach we take here. Although this example is simple, we will go through the steps in some detail, since it will serve us well for the more complex examples to follow.\n\nclass HittersModel(nn.Module):\n\n    def __init__(self, input_size):\n        super(HittersModel, self).__init__()\n        self.flatten = nn.Flatten()\n        self.sequential = nn.Sequential(\n            nn.Linear(input_size, 50),\n            nn.ReLU(),\n            nn.Dropout(0.4),\n            nn.Linear(50, 1))\n\n    def forward(self, x):\n        x = self.flatten(x)\n        return torch.flatten(self.sequential(x))\n\nThe class statement identifies the code chunk as a declaration for a class HittersModel that inherits from the base class nn.Module. This base class is ubiquitous in torch and represents the mappings in the neural networks.\nIndented beneath the class statement are the methods of this class: in this case __init__ and forward. The __init__ method is called when an instance of the class is created as in the cell below. In the methods, self always refers to an instance of the class. In the __init__ method, we have attached two objects to self as attributes: flatten and sequential. These are used in the forward method to describe the map that this module implements.\nThere is one additional line in the __init__ method, which is a call to super(). This function allows subclasses (i.e. HittersModel) to access methods of the class they inherit from. For example, the class nn.Module has its own __init__ method, which is different from the HittersModel.__init__() method we’ve written above. Using super() allows us to call the method of the base class. For torch models, we will always be making this super() call as it is necessary for the model to be properly interpreted by torch.\nThe object nn.Module has more methods than simply __init__ and forward. These methods are directly accessible to HittersModel instances because of this inheritance. One such method we will see shortly is the eval() method, used to disable dropout for when we want to evaluate the model on test data.\n\nhit_model = HittersModel(X.shape[1])\n\nThe object self.sequential is a composition of four maps. The first maps the 19 features of Hitters to 50 dimensions, introducing 50\\times 19+50 parameters for the weights and intercept of the map (often called the bias). This layer is then mapped to a ReLU layer followed by a 40% dropout layer, and finally a linear map down to 1 dimension, again with a bias. The total number of trainable parameters is therefore 50\\times 19+50+50+1=1051.\nThe package torchinfo provides a summary() function that neatly summarizes this information. We specify the size of the input and see the size of each tensor as it passes through layers of the network.\n\nsummary(hit_model, \n        input_size=X_train.shape,\n        col_names=['input_size',\n                   'output_size',\n                   'num_params'])\n\n/home/oren/work/notes/notes-islr-py/.venv/lib/python3.10/site-packages/torch/nn/modules/linear.py:116: UserWarning: Deterministic behavior was enabled with either `torch.use_deterministic_algorithms(True)` or `at::Context::setDeterministicAlgorithms(true)`, but this operation is not deterministic because it uses CuBLAS and you have CUDA &gt;= 10.2. To enable deterministic behavior in this case, you must set an environment variable before running your PyTorch application: CUBLAS_WORKSPACE_CONFIG=:4096:8 or CUBLAS_WORKSPACE_CONFIG=:16:8. For more information, go to https://docs.nvidia.com/cuda/cublas/index.html#results-reproducibility (Triggered internally at ../aten/src/ATen/Context.cpp:185.)\n  return F.linear(input, self.weight, self.bias)\n\n\n===================================================================================================================\nLayer (type:depth-idx)                   Input Shape               Output Shape              Param #\n===================================================================================================================\nHittersModel                             [175, 19]                 [175]                     --\n├─Flatten: 1-1                           [175, 19]                 [175, 19]                 --\n├─Sequential: 1-2                        [175, 19]                 [175, 1]                  --\n│    └─Linear: 2-1                       [175, 19]                 [175, 50]                 1,000\n│    └─ReLU: 2-2                         [175, 50]                 [175, 50]                 --\n│    └─Dropout: 2-3                      [175, 50]                 [175, 50]                 --\n│    └─Linear: 2-4                       [175, 50]                 [175, 1]                  51\n===================================================================================================================\nTotal params: 1,051\nTrainable params: 1,051\nNon-trainable params: 0\nTotal mult-adds (M): 0.18\n===================================================================================================================\nInput size (MB): 0.01\nForward/backward pass size (MB): 0.07\nParams size (MB): 0.00\nEstimated Total Size (MB): 0.09\n===================================================================================================================\n\n\nWe have truncated the end of the output slightly, here and in subsequent uses.\nWe now need to transform our training data into a form accessible to torch. The basic datatype in torch is a tensor, which is very similar to an ndarray from early chapters. We also note here that torch typically works with 32-bit (single precision) rather than 64-bit (double precision) floating point numbers.\nWe therefore convert our data to np.float32 before forming the tensor. The X and Y tensors are then arranged into a Dataset recognized by torch using TensorDataset().\n\nX_train_t = torch.tensor(X_train.astype(np.float32))\nY_train_t = torch.tensor(Y_train.astype(np.float32))\nhit_train = TensorDataset(X_train_t, Y_train_t)\n\nWe do the same for the test data.\n\nX_test_t = torch.tensor(X_test.astype(np.float32))\nY_test_t = torch.tensor(Y_test.astype(np.float32))\nhit_test = TensorDataset(X_test_t, Y_test_t)\n\nFinally, this dataset is passed to a DataLoader() which ultimately passes data into our network. While this may seem like a lot of overhead, this structure is helpful for more complex tasks where data may live on different machines, or where data must be passed to a GPU.\nWe provide a helper function SimpleDataModule() in ISLP to make this task easier for standard usage. One of its arguments is num_workers, which indicates how many processes we will use for loading the data. For small data like Hitters this will have little effect, but it does provide an advantage for the MNIST and CIFAR100 examples below.\nThe torch package will inspect the process running and determine a maximum number of workers. {This depends on the computing hardware and the number of cores available.} We’ve included a function rec_num_workers() to compute this so we know how many workers might be reasonable (here the max was 16).\n\nmax_num_workers = rec_num_workers()\n\nThe general training setup in pytorch_lightning involves training, validation and test data. These are each represented by different data loaders. During each epoch, we run a training step to learn the model and a validation step to track the error. The test data is typically used at the end of training to evaluate the model.\nIn this case, as we had split only into test and training, we’ll use the test data as validation data with the argument validation=hit_test. The validation argument can be a float between 0 and 1, an integer, or a Dataset. If a float (respectively, integer), it is interpreted as a percentage (respectively number) of the training observations to be used for validation. If it is a Dataset, it is passed directly to a data loader.\n\nhit_dm = SimpleDataModule(hit_train,\n                          hit_test,\n                          batch_size=32,\n                          num_workers=min(4, max_num_workers),\n                          validation=hit_test)\n\nNext we must provide a pytorch_lightning module that controls the steps performed during the training process. We provide methods for our SimpleModule() that simply record the value of the loss function and any additional metrics at the end of each epoch. These operations are controlled by the methods SimpleModule.[training/test/validation]_step(), though we will not be modifying these in our examples.\n\nhit_module = SimpleModule.regression(hit_model,\n                           metrics={'mae':MeanAbsoluteError()})\n\nBy using the SimpleModule.regression() method, we indicate that we will use squared-error loss as in (). We have also asked for mean absolute error to be tracked as well in the metrics that are logged.\nWe log our results via CSVLogger(), which in this case stores the results in a CSV file within a directory logs/hitters. After the fitting is complete, this allows us to load the results as a pd.DataFrame() and visualize them below. There are several ways to log the results within pytorch_lightning, though we will not cover those here in detail.\n\nhit_logger = CSVLogger('logs', name='hitters')\n\nFinally we are ready to train our model and log the results. We use the Trainer() object from pytorch_lightning to do this work. The argument datamodule=hit_dm tells the trainer how training/validation/test logs are produced, while the first argument hit_module specifies the network architecture as well as the training/validation/test steps. The callbacks argument allows for several tasks to be carried out at various points while training a model. Here our ErrorTracker() callback will enable us to compute validation error while training and, finally, the test error. We now fit the model for 50 epochs.\n\nhit_trainer = Trainer(deterministic=False,#True,\n                      max_epochs=50,\n                      log_every_n_steps=5,\n                      logger=hit_logger,\n                      callbacks=[ErrorTracker()])\nhit_trainer.fit(hit_module, datamodule=hit_dm)\n\nGPU available: True (cuda), used: True\nTPU available: False, using: 0 TPU cores\nIPU available: False, using: 0 IPUs\nHPU available: False, using: 0 HPUs\nYou are using a CUDA device ('NVIDIA GeForce RTX 3070 Laptop GPU') that has Tensor Cores. To properly utilize them, you should set `torch.set_float32_matmul_precision('medium' | 'high')` which will trade-off precision for performance. For more details, read https://pytorch.org/docs/stable/generated/torch.set_float32_matmul_precision.html#torch.set_float32_matmul_precision\nLOCAL_RANK: 0 - CUDA_VISIBLE_DEVICES: [0]\n\n  | Name  | Type         | Params\n---------------------------------------\n0 | model | HittersModel | 1.1 K \n1 | loss  | MSELoss      | 0     \n---------------------------------------\n1.1 K     Trainable params\n0         Non-trainable params\n1.1 K     Total params\n0.004     Total estimated model params size (MB)\n\n\nSanity Checking: |          | 0/? [00:00&lt;?, ?it/s]Sanity Checking:   0%|          | 0/2 [00:00&lt;?, ?it/s]Sanity Checking DataLoader 0:   0%|          | 0/2 [00:00&lt;?, ?it/s]Sanity Checking DataLoader 0:  50%|█████     | 1/2 [00:00&lt;00:00, 376.61it/s]Sanity Checking DataLoader 0: 100%|██████████| 2/2 [00:00&lt;00:00, 359.21it/s]                                                                            Training: |          | 0/? [00:00&lt;?, ?it/s]Training:   0%|          | 0/6 [00:00&lt;?, ?it/s]Epoch 0:   0%|          | 0/6 [00:00&lt;?, ?it/s] Epoch 0:  17%|█▋        | 1/6 [00:00&lt;00:00, 15.85it/s]Epoch 0:  17%|█▋        | 1/6 [00:00&lt;00:00, 15.66it/s, v_num=11]Epoch 0:  33%|███▎      | 2/6 [00:00&lt;00:00, 29.30it/s, v_num=11]Epoch 0:  33%|███▎      | 2/6 [00:00&lt;00:00, 29.12it/s, v_num=11]Epoch 0:  50%|█████     | 3/6 [00:00&lt;00:00, 42.33it/s, v_num=11]Epoch 0:  50%|█████     | 3/6 [00:00&lt;00:00, 42.11it/s, v_num=11]Epoch 0:  67%|██████▋   | 4/6 [00:00&lt;00:00, 53.94it/s, v_num=11]Epoch 0:  67%|██████▋   | 4/6 [00:00&lt;00:00, 53.57it/s, v_num=11]Epoch 0:  83%|████████▎ | 5/6 [00:00&lt;00:00, 64.87it/s, v_num=11]Epoch 0:  83%|████████▎ | 5/6 [00:00&lt;00:00, 64.50it/s, v_num=11]Epoch 0: 100%|██████████| 6/6 [00:00&lt;00:00, 69.70it/s, v_num=11]Epoch 0: 100%|██████████| 6/6 [00:00&lt;00:00, 69.04it/s, v_num=11]\nValidation: |          | 0/? [00:00&lt;?, ?it/s]\nValidation:   0%|          | 0/3 [00:00&lt;?, ?it/s]\nValidation DataLoader 0:   0%|          | 0/3 [00:00&lt;?, ?it/s]\nValidation DataLoader 0:  33%|███▎      | 1/3 [00:00&lt;00:00, 494.32it/s]\nValidation DataLoader 0:  67%|██████▋   | 2/3 [00:00&lt;00:00, 447.97it/s]\nValidation DataLoader 0: 100%|██████████| 3/3 [00:00&lt;00:00, 526.04it/s]\n                                                                       Epoch 0: 100%|██████████| 6/6 [00:00&lt;00:00, 58.48it/s, v_num=11]Epoch 0: 100%|██████████| 6/6 [00:00&lt;00:00, 58.05it/s, v_num=11]Epoch 0:   0%|          | 0/6 [00:00&lt;?, ?it/s, v_num=11]        Epoch 1:   0%|          | 0/6 [00:00&lt;?, ?it/s, v_num=11]Epoch 1:  17%|█▋        | 1/6 [00:00&lt;00:00, 144.37it/s, v_num=11]Epoch 1:  17%|█▋        | 1/6 [00:00&lt;00:00, 136.39it/s, v_num=11]Epoch 1:  33%|███▎      | 2/6 [00:00&lt;00:00, 207.18it/s, v_num=11]Epoch 1:  33%|███▎      | 2/6 [00:00&lt;00:00, 195.71it/s, v_num=11]Epoch 1:  50%|█████     | 3/6 [00:00&lt;00:00, 208.25it/s, v_num=11]Epoch 1:  50%|█████     | 3/6 [00:00&lt;00:00, 202.27it/s, v_num=11]Epoch 1:  67%|██████▋   | 4/6 [00:00&lt;00:00, 232.97it/s, v_num=11]Epoch 1:  67%|██████▋   | 4/6 [00:00&lt;00:00, 227.85it/s, v_num=11]Epoch 1:  83%|████████▎ | 5/6 [00:00&lt;00:00, 222.40it/s, v_num=11]Epoch 1:  83%|████████▎ | 5/6 [00:00&lt;00:00, 216.79it/s, v_num=11]Epoch 1: 100%|██████████| 6/6 [00:00&lt;00:00, 230.10it/s, v_num=11]Epoch 1: 100%|██████████| 6/6 [00:00&lt;00:00, 226.51it/s, v_num=11]\nValidation: |          | 0/? [00:00&lt;?, ?it/s]\nValidation:   0%|          | 0/3 [00:00&lt;?, ?it/s]\nValidation DataLoader 0:   0%|          | 0/3 [00:00&lt;?, ?it/s]\nValidation DataLoader 0:  33%|███▎      | 1/3 [00:00&lt;00:00, 637.72it/s]\nValidation DataLoader 0:  67%|██████▋   | 2/3 [00:00&lt;00:00, 419.20it/s]\nValidation DataLoader 0: 100%|██████████| 3/3 [00:00&lt;00:00, 486.60it/s]\n                                                                       Epoch 1: 100%|██████████| 6/6 [00:00&lt;00:00, 151.50it/s, v_num=11]Epoch 1: 100%|██████████| 6/6 [00:00&lt;00:00, 148.29it/s, v_num=11]Epoch 1:   0%|          | 0/6 [00:00&lt;?, ?it/s, v_num=11]         Epoch 2:   0%|          | 0/6 [00:00&lt;?, ?it/s, v_num=11]Epoch 2:  17%|█▋        | 1/6 [00:00&lt;00:00, 168.68it/s, v_num=11]Epoch 2:  17%|█▋        | 1/6 [00:00&lt;00:00, 157.73it/s, v_num=11]Epoch 2:  33%|███▎      | 2/6 [00:00&lt;00:00, 226.82it/s, v_num=11]Epoch 2:  33%|███▎      | 2/6 [00:00&lt;00:00, 218.63it/s, v_num=11]Epoch 2:  50%|█████     | 3/6 [00:00&lt;00:00, 273.16it/s, v_num=11]Epoch 2:  50%|█████     | 3/6 [00:00&lt;00:00, 265.77it/s, v_num=11]Epoch 2:  67%|██████▋   | 4/6 [00:00&lt;00:00, 294.06it/s, v_num=11]Epoch 2:  67%|██████▋   | 4/6 [00:00&lt;00:00, 287.24it/s, v_num=11]Epoch 2:  83%|████████▎ | 5/6 [00:00&lt;00:00, 280.87it/s, v_num=11]Epoch 2:  83%|████████▎ | 5/6 [00:00&lt;00:00, 270.81it/s, v_num=11]Epoch 2: 100%|██████████| 6/6 [00:00&lt;00:00, 281.79it/s, v_num=11]Epoch 2: 100%|██████████| 6/6 [00:00&lt;00:00, 276.82it/s, v_num=11]\nValidation: |          | 0/? [00:00&lt;?, ?it/s]\nValidation:   0%|          | 0/3 [00:00&lt;?, ?it/s]\nValidation DataLoader 0:   0%|          | 0/3 [00:00&lt;?, ?it/s]\nValidation DataLoader 0:  33%|███▎      | 1/3 [00:00&lt;00:00, 552.75it/s]\nValidation DataLoader 0:  67%|██████▋   | 2/3 [00:00&lt;00:00, 454.27it/s]\nValidation DataLoader 0: 100%|██████████| 3/3 [00:00&lt;00:00, 490.83it/s]\n                                                                       Epoch 2: 100%|██████████| 6/6 [00:00&lt;00:00, 164.65it/s, v_num=11]Epoch 2: 100%|██████████| 6/6 [00:00&lt;00:00, 161.28it/s, v_num=11]Epoch 2:   0%|          | 0/6 [00:00&lt;?, ?it/s, v_num=11]         Epoch 3:   0%|          | 0/6 [00:00&lt;?, ?it/s, v_num=11]Epoch 3:  17%|█▋        | 1/6 [00:00&lt;00:00, 194.37it/s, v_num=11]Epoch 3:  17%|█▋        | 1/6 [00:00&lt;00:00, 182.31it/s, v_num=11]Epoch 3:  33%|███▎      | 2/6 [00:00&lt;00:00, 251.69it/s, v_num=11]Epoch 3:  33%|███▎      | 2/6 [00:00&lt;00:00, 242.19it/s, v_num=11]Epoch 3:  50%|█████     | 3/6 [00:00&lt;00:00, 285.75it/s, v_num=11]Epoch 3:  50%|█████     | 3/6 [00:00&lt;00:00, 277.46it/s, v_num=11]Epoch 3:  67%|██████▋   | 4/6 [00:00&lt;00:00, 315.17it/s, v_num=11]Epoch 3:  67%|██████▋   | 4/6 [00:00&lt;00:00, 307.33it/s, v_num=11]Epoch 3:  83%|████████▎ | 5/6 [00:00&lt;00:00, 308.88it/s, v_num=11]Epoch 3:  83%|████████▎ | 5/6 [00:00&lt;00:00, 300.90it/s, v_num=11]Epoch 3: 100%|██████████| 6/6 [00:00&lt;00:00, 304.60it/s, v_num=11]Epoch 3: 100%|██████████| 6/6 [00:00&lt;00:00, 297.16it/s, v_num=11]\nValidation: |          | 0/? [00:00&lt;?, ?it/s]\nValidation:   0%|          | 0/3 [00:00&lt;?, ?it/s]\nValidation DataLoader 0:   0%|          | 0/3 [00:00&lt;?, ?it/s]\nValidation DataLoader 0:  33%|███▎      | 1/3 [00:00&lt;00:00, 581.90it/s]\nValidation DataLoader 0:  67%|██████▋   | 2/3 [00:00&lt;00:00, 606.42it/s]\nValidation DataLoader 0: 100%|██████████| 3/3 [00:00&lt;00:00, 671.30it/s]\n                                                                       Epoch 3: 100%|██████████| 6/6 [00:00&lt;00:00, 188.84it/s, v_num=11]Epoch 3: 100%|██████████| 6/6 [00:00&lt;00:00, 184.66it/s, v_num=11]Epoch 3:   0%|          | 0/6 [00:00&lt;?, ?it/s, v_num=11]         Epoch 4:   0%|          | 0/6 [00:00&lt;?, ?it/s, v_num=11]Epoch 4:  17%|█▋        | 1/6 [00:00&lt;00:00, 143.66it/s, v_num=11]Epoch 4:  17%|█▋        | 1/6 [00:00&lt;00:00, 130.38it/s, v_num=11]Epoch 4:  33%|███▎      | 2/6 [00:00&lt;00:00, 167.49it/s, v_num=11]Epoch 4:  33%|███▎      | 2/6 [00:00&lt;00:00, 159.97it/s, v_num=11]Epoch 4:  50%|█████     | 3/6 [00:00&lt;00:00, 200.84it/s, v_num=11]Epoch 4:  50%|█████     | 3/6 [00:00&lt;00:00, 196.62it/s, v_num=11]Epoch 4:  67%|██████▋   | 4/6 [00:00&lt;00:00, 219.58it/s, v_num=11]Epoch 4:  67%|██████▋   | 4/6 [00:00&lt;00:00, 213.82it/s, v_num=11]Epoch 4:  83%|████████▎ | 5/6 [00:00&lt;00:00, 220.59it/s, v_num=11]Epoch 4:  83%|████████▎ | 5/6 [00:00&lt;00:00, 216.13it/s, v_num=11]Epoch 4: 100%|██████████| 6/6 [00:00&lt;00:00, 231.53it/s, v_num=11]Epoch 4: 100%|██████████| 6/6 [00:00&lt;00:00, 227.99it/s, v_num=11]\nValidation: |          | 0/? [00:00&lt;?, ?it/s]\nValidation:   0%|          | 0/3 [00:00&lt;?, ?it/s]\nValidation DataLoader 0:   0%|          | 0/3 [00:00&lt;?, ?it/s]\nValidation DataLoader 0:  33%|███▎      | 1/3 [00:00&lt;00:00, 743.54it/s]\nValidation DataLoader 0:  67%|██████▋   | 2/3 [00:00&lt;00:00, 535.94it/s]\nValidation DataLoader 0: 100%|██████████| 3/3 [00:00&lt;00:00, 617.75it/s]\n                                                                       Epoch 4: 100%|██████████| 6/6 [00:00&lt;00:00, 160.86it/s, v_num=11]Epoch 4: 100%|██████████| 6/6 [00:00&lt;00:00, 157.88it/s, v_num=11]Epoch 4:   0%|          | 0/6 [00:00&lt;?, ?it/s, v_num=11]         Epoch 5:   0%|          | 0/6 [00:00&lt;?, ?it/s, v_num=11]Epoch 5:  17%|█▋        | 1/6 [00:00&lt;00:00, 119.33it/s, v_num=11]Epoch 5:  17%|█▋        | 1/6 [00:00&lt;00:00, 110.63it/s, v_num=11]Epoch 5:  33%|███▎      | 2/6 [00:00&lt;00:00, 156.54it/s, v_num=11]Epoch 5:  33%|███▎      | 2/6 [00:00&lt;00:00, 149.47it/s, v_num=11]Epoch 5:  50%|█████     | 3/6 [00:00&lt;00:00, 179.43it/s, v_num=11]Epoch 5:  50%|█████     | 3/6 [00:00&lt;00:00, 175.22it/s, v_num=11]Epoch 5:  67%|██████▋   | 4/6 [00:00&lt;00:00, 205.50it/s, v_num=11]Epoch 5:  67%|██████▋   | 4/6 [00:00&lt;00:00, 202.51it/s, v_num=11]Epoch 5:  83%|████████▎ | 5/6 [00:00&lt;00:00, 221.35it/s, v_num=11]Epoch 5:  83%|████████▎ | 5/6 [00:00&lt;00:00, 218.58it/s, v_num=11]Epoch 5: 100%|██████████| 6/6 [00:00&lt;00:00, 236.02it/s, v_num=11]Epoch 5: 100%|██████████| 6/6 [00:00&lt;00:00, 232.75it/s, v_num=11]\nValidation: |          | 0/? [00:00&lt;?, ?it/s]\nValidation:   0%|          | 0/3 [00:00&lt;?, ?it/s]\nValidation DataLoader 0:   0%|          | 0/3 [00:00&lt;?, ?it/s]\nValidation DataLoader 0:  33%|███▎      | 1/3 [00:00&lt;00:00, 641.63it/s]\nValidation DataLoader 0:  67%|██████▋   | 2/3 [00:00&lt;00:00, 487.17it/s]\nValidation DataLoader 0: 100%|██████████| 3/3 [00:00&lt;00:00, 535.03it/s]\n                                                                       Epoch 5: 100%|██████████| 6/6 [00:00&lt;00:00, 155.59it/s, v_num=11]Epoch 5: 100%|██████████| 6/6 [00:00&lt;00:00, 151.04it/s, v_num=11]Epoch 5:   0%|          | 0/6 [00:00&lt;?, ?it/s, v_num=11]         Epoch 6:   0%|          | 0/6 [00:00&lt;?, ?it/s, v_num=11]Epoch 6:  17%|█▋        | 1/6 [00:00&lt;00:00, 125.78it/s, v_num=11]Epoch 6:  17%|█▋        | 1/6 [00:00&lt;00:00, 113.63it/s, v_num=11]Epoch 6:  33%|███▎      | 2/6 [00:00&lt;00:00, 167.37it/s, v_num=11]Epoch 6:  33%|███▎      | 2/6 [00:00&lt;00:00, 159.22it/s, v_num=11]Epoch 6:  50%|█████     | 3/6 [00:00&lt;00:00, 183.48it/s, v_num=11]Epoch 6:  50%|█████     | 3/6 [00:00&lt;00:00, 178.55it/s, v_num=11]Epoch 6:  67%|██████▋   | 4/6 [00:00&lt;00:00, 198.29it/s, v_num=11]Epoch 6:  67%|██████▋   | 4/6 [00:00&lt;00:00, 193.56it/s, v_num=11]Epoch 6:  83%|████████▎ | 5/6 [00:00&lt;00:00, 190.50it/s, v_num=11]Epoch 6:  83%|████████▎ | 5/6 [00:00&lt;00:00, 187.05it/s, v_num=11]Epoch 6: 100%|██████████| 6/6 [00:00&lt;00:00, 205.08it/s, v_num=11]Epoch 6: 100%|██████████| 6/6 [00:00&lt;00:00, 202.07it/s, v_num=11]\nValidation: |          | 0/? [00:00&lt;?, ?it/s]\nValidation:   0%|          | 0/3 [00:00&lt;?, ?it/s]\nValidation DataLoader 0:   0%|          | 0/3 [00:00&lt;?, ?it/s]\nValidation DataLoader 0:  33%|███▎      | 1/3 [00:00&lt;00:00, 617.90it/s]\nValidation DataLoader 0:  67%|██████▋   | 2/3 [00:00&lt;00:00, 494.49it/s]\nValidation DataLoader 0: 100%|██████████| 3/3 [00:00&lt;00:00, 513.38it/s]\n                                                                       Epoch 6: 100%|██████████| 6/6 [00:00&lt;00:00, 140.26it/s, v_num=11]Epoch 6: 100%|██████████| 6/6 [00:00&lt;00:00, 137.53it/s, v_num=11]Epoch 6:   0%|          | 0/6 [00:00&lt;?, ?it/s, v_num=11]         Epoch 7:   0%|          | 0/6 [00:00&lt;?, ?it/s, v_num=11]Epoch 7:  17%|█▋        | 1/6 [00:00&lt;00:00, 130.99it/s, v_num=11]Epoch 7:  17%|█▋        | 1/6 [00:00&lt;00:00, 118.18it/s, v_num=11]Epoch 7:  33%|███▎      | 2/6 [00:00&lt;00:00, 159.83it/s, v_num=11]Epoch 7:  33%|███▎      | 2/6 [00:00&lt;00:00, 153.09it/s, v_num=11]Epoch 7:  50%|█████     | 3/6 [00:00&lt;00:00, 182.37it/s, v_num=11]Epoch 7:  50%|█████     | 3/6 [00:00&lt;00:00, 177.89it/s, v_num=11]Epoch 7:  67%|██████▋   | 4/6 [00:00&lt;00:00, 185.80it/s, v_num=11]Epoch 7:  67%|██████▋   | 4/6 [00:00&lt;00:00, 180.16it/s, v_num=11]Epoch 7:  83%|████████▎ | 5/6 [00:00&lt;00:00, 187.21it/s, v_num=11]Epoch 7:  83%|████████▎ | 5/6 [00:00&lt;00:00, 184.25it/s, v_num=11]Epoch 7: 100%|██████████| 6/6 [00:00&lt;00:00, 198.65it/s, v_num=11]Epoch 7: 100%|██████████| 6/6 [00:00&lt;00:00, 195.71it/s, v_num=11]\nValidation: |          | 0/? [00:00&lt;?, ?it/s]\nValidation:   0%|          | 0/3 [00:00&lt;?, ?it/s]\nValidation DataLoader 0:   0%|          | 0/3 [00:00&lt;?, ?it/s]\nValidation DataLoader 0:  33%|███▎      | 1/3 [00:00&lt;00:00, 609.02it/s]\nValidation DataLoader 0:  67%|██████▋   | 2/3 [00:00&lt;00:00, 505.34it/s]\nValidation DataLoader 0: 100%|██████████| 3/3 [00:00&lt;00:00, 562.89it/s]\n                                                                       Epoch 7: 100%|██████████| 6/6 [00:00&lt;00:00, 138.42it/s, v_num=11]Epoch 7: 100%|██████████| 6/6 [00:00&lt;00:00, 135.57it/s, v_num=11]Epoch 7:   0%|          | 0/6 [00:00&lt;?, ?it/s, v_num=11]         Epoch 8:   0%|          | 0/6 [00:00&lt;?, ?it/s, v_num=11]Epoch 8:  17%|█▋        | 1/6 [00:00&lt;00:00, 115.51it/s, v_num=11]Epoch 8:  17%|█▋        | 1/6 [00:00&lt;00:00, 106.78it/s, v_num=11]Epoch 8:  33%|███▎      | 2/6 [00:00&lt;00:00, 157.09it/s, v_num=11]Epoch 8:  33%|███▎      | 2/6 [00:00&lt;00:00, 151.46it/s, v_num=11]Epoch 8:  50%|█████     | 3/6 [00:00&lt;00:00, 174.73it/s, v_num=11]Epoch 8:  50%|█████     | 3/6 [00:00&lt;00:00, 168.36it/s, v_num=11]Epoch 8:  67%|██████▋   | 4/6 [00:00&lt;00:00, 194.81it/s, v_num=11]Epoch 8:  67%|██████▋   | 4/6 [00:00&lt;00:00, 191.43it/s, v_num=11]Epoch 8:  83%|████████▎ | 5/6 [00:00&lt;00:00, 205.81it/s, v_num=11]Epoch 8:  83%|████████▎ | 5/6 [00:00&lt;00:00, 200.70it/s, v_num=11]Epoch 8: 100%|██████████| 6/6 [00:00&lt;00:00, 221.16it/s, v_num=11]Epoch 8: 100%|██████████| 6/6 [00:00&lt;00:00, 218.48it/s, v_num=11]\nValidation: |          | 0/? [00:00&lt;?, ?it/s]\nValidation:   0%|          | 0/3 [00:00&lt;?, ?it/s]\nValidation DataLoader 0:   0%|          | 0/3 [00:00&lt;?, ?it/s]\nValidation DataLoader 0:  33%|███▎      | 1/3 [00:00&lt;00:00, 689.06it/s]\nValidation DataLoader 0:  67%|██████▋   | 2/3 [00:00&lt;00:00, 519.29it/s]\nValidation DataLoader 0: 100%|██████████| 3/3 [00:00&lt;00:00, 593.93it/s]\n                                                                       Epoch 8: 100%|██████████| 6/6 [00:00&lt;00:00, 158.31it/s, v_num=11]Epoch 8: 100%|██████████| 6/6 [00:00&lt;00:00, 155.44it/s, v_num=11]Epoch 8:   0%|          | 0/6 [00:00&lt;?, ?it/s, v_num=11]         Epoch 9:   0%|          | 0/6 [00:00&lt;?, ?it/s, v_num=11]Epoch 9:  17%|█▋        | 1/6 [00:00&lt;00:00, 130.71it/s, v_num=11]Epoch 9:  17%|█▋        | 1/6 [00:00&lt;00:00, 120.06it/s, v_num=11]Epoch 9:  33%|███▎      | 2/6 [00:00&lt;00:00, 171.23it/s, v_num=11]Epoch 9:  33%|███▎      | 2/6 [00:00&lt;00:00, 166.32it/s, v_num=11]Epoch 9:  50%|█████     | 3/6 [00:00&lt;00:00, 214.64it/s, v_num=11]Epoch 9:  50%|█████     | 3/6 [00:00&lt;00:00, 209.73it/s, v_num=11]Epoch 9:  67%|██████▋   | 4/6 [00:00&lt;00:00, 247.25it/s, v_num=11]Epoch 9:  67%|██████▋   | 4/6 [00:00&lt;00:00, 242.29it/s, v_num=11]Epoch 9:  83%|████████▎ | 5/6 [00:00&lt;00:00, 258.91it/s, v_num=11]Epoch 9:  83%|████████▎ | 5/6 [00:00&lt;00:00, 254.13it/s, v_num=11]Epoch 9: 100%|██████████| 6/6 [00:00&lt;00:00, 277.90it/s, v_num=11]Epoch 9: 100%|██████████| 6/6 [00:00&lt;00:00, 274.33it/s, v_num=11]\nValidation: |          | 0/? [00:00&lt;?, ?it/s]\nValidation:   0%|          | 0/3 [00:00&lt;?, ?it/s]\nValidation DataLoader 0:   0%|          | 0/3 [00:00&lt;?, ?it/s]\nValidation DataLoader 0:  33%|███▎      | 1/3 [00:00&lt;00:00, 391.15it/s]\nValidation DataLoader 0:  67%|██████▋   | 2/3 [00:00&lt;00:00, 430.32it/s]\nValidation DataLoader 0: 100%|██████████| 3/3 [00:00&lt;00:00, 433.19it/s]\n                                                                       Epoch 9: 100%|██████████| 6/6 [00:00&lt;00:00, 157.30it/s, v_num=11]Epoch 9: 100%|██████████| 6/6 [00:00&lt;00:00, 152.34it/s, v_num=11]Epoch 9:   0%|          | 0/6 [00:00&lt;?, ?it/s, v_num=11]         Epoch 10:   0%|          | 0/6 [00:00&lt;?, ?it/s, v_num=11]Epoch 10:  17%|█▋        | 1/6 [00:00&lt;00:00, 143.88it/s, v_num=11]Epoch 10:  17%|█▋        | 1/6 [00:00&lt;00:00, 136.07it/s, v_num=11]Epoch 10:  33%|███▎      | 2/6 [00:00&lt;00:00, 211.50it/s, v_num=11]Epoch 10:  33%|███▎      | 2/6 [00:00&lt;00:00, 204.75it/s, v_num=11]Epoch 10:  50%|█████     | 3/6 [00:00&lt;00:00, 257.72it/s, v_num=11]Epoch 10:  50%|█████     | 3/6 [00:00&lt;00:00, 251.16it/s, v_num=11]Epoch 10:  67%|██████▋   | 4/6 [00:00&lt;00:00, 289.62it/s, v_num=11]Epoch 10:  67%|██████▋   | 4/6 [00:00&lt;00:00, 283.73it/s, v_num=11]Epoch 10:  83%|████████▎ | 5/6 [00:00&lt;00:00, 304.48it/s, v_num=11]Epoch 10:  83%|████████▎ | 5/6 [00:00&lt;00:00, 298.84it/s, v_num=11]Epoch 10: 100%|██████████| 6/6 [00:00&lt;00:00, 309.45it/s, v_num=11]Epoch 10: 100%|██████████| 6/6 [00:00&lt;00:00, 304.30it/s, v_num=11]\nValidation: |          | 0/? [00:00&lt;?, ?it/s]\nValidation:   0%|          | 0/3 [00:00&lt;?, ?it/s]\nValidation DataLoader 0:   0%|          | 0/3 [00:00&lt;?, ?it/s]\nValidation DataLoader 0:  33%|███▎      | 1/3 [00:00&lt;00:00, 420.23it/s]\nValidation DataLoader 0:  67%|██████▋   | 2/3 [00:00&lt;00:00, 375.77it/s]\nValidation DataLoader 0: 100%|██████████| 3/3 [00:00&lt;00:00, 435.46it/s]\n                                                                       Epoch 10: 100%|██████████| 6/6 [00:00&lt;00:00, 173.78it/s, v_num=11]Epoch 10: 100%|██████████| 6/6 [00:00&lt;00:00, 169.62it/s, v_num=11]Epoch 10:   0%|          | 0/6 [00:00&lt;?, ?it/s, v_num=11]         Epoch 11:   0%|          | 0/6 [00:00&lt;?, ?it/s, v_num=11]Epoch 11:  17%|█▋        | 1/6 [00:00&lt;00:00, 152.73it/s, v_num=11]Epoch 11:  17%|█▋        | 1/6 [00:00&lt;00:00, 136.02it/s, v_num=11]Epoch 11:  33%|███▎      | 2/6 [00:00&lt;00:00, 177.31it/s, v_num=11]Epoch 11:  33%|███▎      | 2/6 [00:00&lt;00:00, 166.93it/s, v_num=11]Epoch 11:  50%|█████     | 3/6 [00:00&lt;00:00, 207.16it/s, v_num=11]Epoch 11:  50%|█████     | 3/6 [00:00&lt;00:00, 202.29it/s, v_num=11]Epoch 11:  67%|██████▋   | 4/6 [00:00&lt;00:00, 219.14it/s, v_num=11]Epoch 11:  67%|██████▋   | 4/6 [00:00&lt;00:00, 213.07it/s, v_num=11]Epoch 11:  83%|████████▎ | 5/6 [00:00&lt;00:00, 207.45it/s, v_num=11]Epoch 11:  83%|████████▎ | 5/6 [00:00&lt;00:00, 201.38it/s, v_num=11]Epoch 11: 100%|██████████| 6/6 [00:00&lt;00:00, 212.79it/s, v_num=11]Epoch 11: 100%|██████████| 6/6 [00:00&lt;00:00, 210.30it/s, v_num=11]\nValidation: |          | 0/? [00:00&lt;?, ?it/s]\nValidation:   0%|          | 0/3 [00:00&lt;?, ?it/s]\nValidation DataLoader 0:   0%|          | 0/3 [00:00&lt;?, ?it/s]\nValidation DataLoader 0:  33%|███▎      | 1/3 [00:00&lt;00:00, 638.60it/s]\nValidation DataLoader 0:  67%|██████▋   | 2/3 [00:00&lt;00:00, 538.21it/s]\nValidation DataLoader 0: 100%|██████████| 3/3 [00:00&lt;00:00, 589.00it/s]\n                                                                       Epoch 11: 100%|██████████| 6/6 [00:00&lt;00:00, 147.24it/s, v_num=11]Epoch 11: 100%|██████████| 6/6 [00:00&lt;00:00, 143.84it/s, v_num=11]Epoch 11:   0%|          | 0/6 [00:00&lt;?, ?it/s, v_num=11]         Epoch 12:   0%|          | 0/6 [00:00&lt;?, ?it/s, v_num=11]Epoch 12:  17%|█▋        | 1/6 [00:00&lt;00:00, 124.10it/s, v_num=11]Epoch 12:  17%|█▋        | 1/6 [00:00&lt;00:00, 114.01it/s, v_num=11]Epoch 12:  33%|███▎      | 2/6 [00:00&lt;00:00, 164.22it/s, v_num=11]Epoch 12:  33%|███▎      | 2/6 [00:00&lt;00:00, 159.27it/s, v_num=11]Epoch 12:  50%|█████     | 3/6 [00:00&lt;00:00, 200.69it/s, v_num=11]Epoch 12:  50%|█████     | 3/6 [00:00&lt;00:00, 196.09it/s, v_num=11]Epoch 12:  67%|██████▋   | 4/6 [00:00&lt;00:00, 220.76it/s, v_num=11]Epoch 12:  67%|██████▋   | 4/6 [00:00&lt;00:00, 217.17it/s, v_num=11]Epoch 12:  83%|████████▎ | 5/6 [00:00&lt;00:00, 233.59it/s, v_num=11]Epoch 12:  83%|████████▎ | 5/6 [00:00&lt;00:00, 230.37it/s, v_num=11]Epoch 12: 100%|██████████| 6/6 [00:00&lt;00:00, 251.49it/s, v_num=11]Epoch 12: 100%|██████████| 6/6 [00:00&lt;00:00, 248.32it/s, v_num=11]\nValidation: |          | 0/? [00:00&lt;?, ?it/s]\nValidation:   0%|          | 0/3 [00:00&lt;?, ?it/s]\nValidation DataLoader 0:   0%|          | 0/3 [00:00&lt;?, ?it/s]\nValidation DataLoader 0:  33%|███▎      | 1/3 [00:00&lt;00:00, 571.28it/s]\nValidation DataLoader 0:  67%|██████▋   | 2/3 [00:00&lt;00:00, 498.85it/s]\nValidation DataLoader 0: 100%|██████████| 3/3 [00:00&lt;00:00, 454.98it/s]\n                                                                       Epoch 12: 100%|██████████| 6/6 [00:00&lt;00:00, 158.45it/s, v_num=11]Epoch 12: 100%|██████████| 6/6 [00:00&lt;00:00, 153.75it/s, v_num=11]Epoch 12:   0%|          | 0/6 [00:00&lt;?, ?it/s, v_num=11]         Epoch 13:   0%|          | 0/6 [00:00&lt;?, ?it/s, v_num=11]Epoch 13:  17%|█▋        | 1/6 [00:00&lt;00:00, 130.02it/s, v_num=11]Epoch 13:  17%|█▋        | 1/6 [00:00&lt;00:00, 119.27it/s, v_num=11]Epoch 13:  33%|███▎      | 2/6 [00:00&lt;00:00, 183.67it/s, v_num=11]Epoch 13:  33%|███▎      | 2/6 [00:00&lt;00:00, 178.61it/s, v_num=11]Epoch 13:  50%|█████     | 3/6 [00:00&lt;00:00, 217.31it/s, v_num=11]Epoch 13:  50%|█████     | 3/6 [00:00&lt;00:00, 212.38it/s, v_num=11]Epoch 13:  67%|██████▋   | 4/6 [00:00&lt;00:00, 244.90it/s, v_num=11]Epoch 13:  67%|██████▋   | 4/6 [00:00&lt;00:00, 240.55it/s, v_num=11]Epoch 13:  83%|████████▎ | 5/6 [00:00&lt;00:00, 256.29it/s, v_num=11]Epoch 13:  83%|████████▎ | 5/6 [00:00&lt;00:00, 252.34it/s, v_num=11]Epoch 13: 100%|██████████| 6/6 [00:00&lt;00:00, 269.87it/s, v_num=11]Epoch 13: 100%|██████████| 6/6 [00:00&lt;00:00, 265.90it/s, v_num=11]\nValidation: |          | 0/? [00:00&lt;?, ?it/s]\nValidation:   0%|          | 0/3 [00:00&lt;?, ?it/s]\nValidation DataLoader 0:   0%|          | 0/3 [00:00&lt;?, ?it/s]\nValidation DataLoader 0:  33%|███▎      | 1/3 [00:00&lt;00:00, 569.03it/s]\nValidation DataLoader 0:  67%|██████▋   | 2/3 [00:00&lt;00:00, 396.66it/s]\nValidation DataLoader 0: 100%|██████████| 3/3 [00:00&lt;00:00, 452.95it/s]\n                                                                       Epoch 13: 100%|██████████| 6/6 [00:00&lt;00:00, 165.08it/s, v_num=11]Epoch 13: 100%|██████████| 6/6 [00:00&lt;00:00, 161.96it/s, v_num=11]Epoch 13:   0%|          | 0/6 [00:00&lt;?, ?it/s, v_num=11]         Epoch 14:   0%|          | 0/6 [00:00&lt;?, ?it/s, v_num=11]Epoch 14:  17%|█▋        | 1/6 [00:00&lt;00:00, 183.24it/s, v_num=11]Epoch 14:  17%|█▋        | 1/6 [00:00&lt;00:00, 171.95it/s, v_num=11]Epoch 14:  33%|███▎      | 2/6 [00:00&lt;00:00, 241.45it/s, v_num=11]Epoch 14:  33%|███▎      | 2/6 [00:00&lt;00:00, 230.20it/s, v_num=11]Epoch 14:  50%|█████     | 3/6 [00:00&lt;00:00, 285.48it/s, v_num=11]Epoch 14:  50%|█████     | 3/6 [00:00&lt;00:00, 275.52it/s, v_num=11]Epoch 14:  67%|██████▋   | 4/6 [00:00&lt;00:00, 309.85it/s, v_num=11]Epoch 14:  67%|██████▋   | 4/6 [00:00&lt;00:00, 300.42it/s, v_num=11]Epoch 14:  83%|████████▎ | 5/6 [00:00&lt;00:00, 296.85it/s, v_num=11]Epoch 14:  83%|████████▎ | 5/6 [00:00&lt;00:00, 286.50it/s, v_num=11]Epoch 14: 100%|██████████| 6/6 [00:00&lt;00:00, 288.59it/s, v_num=11]Epoch 14: 100%|██████████| 6/6 [00:00&lt;00:00, 281.84it/s, v_num=11]\nValidation: |          | 0/? [00:00&lt;?, ?it/s]\nValidation:   0%|          | 0/3 [00:00&lt;?, ?it/s]\nValidation DataLoader 0:   0%|          | 0/3 [00:00&lt;?, ?it/s]\nValidation DataLoader 0:  33%|███▎      | 1/3 [00:00&lt;00:00, 547.27it/s]\nValidation DataLoader 0:  67%|██████▋   | 2/3 [00:00&lt;00:00, 507.66it/s]\nValidation DataLoader 0: 100%|██████████| 3/3 [00:00&lt;00:00, 527.47it/s]\n                                                                       Epoch 14: 100%|██████████| 6/6 [00:00&lt;00:00, 172.83it/s, v_num=11]Epoch 14: 100%|██████████| 6/6 [00:00&lt;00:00, 168.22it/s, v_num=11]Epoch 14:   0%|          | 0/6 [00:00&lt;?, ?it/s, v_num=11]         Epoch 15:   0%|          | 0/6 [00:00&lt;?, ?it/s, v_num=11]Epoch 15:  17%|█▋        | 1/6 [00:00&lt;00:00, 132.80it/s, v_num=11]Epoch 15:  17%|█▋        | 1/6 [00:00&lt;00:00, 120.54it/s, v_num=11]Epoch 15:  33%|███▎      | 2/6 [00:00&lt;00:00, 166.20it/s, v_num=11]Epoch 15:  33%|███▎      | 2/6 [00:00&lt;00:00, 159.92it/s, v_num=11]Epoch 15:  50%|█████     | 3/6 [00:00&lt;00:00, 201.01it/s, v_num=11]Epoch 15:  50%|█████     | 3/6 [00:00&lt;00:00, 194.03it/s, v_num=11]Epoch 15:  67%|██████▋   | 4/6 [00:00&lt;00:00, 211.13it/s, v_num=11]Epoch 15:  67%|██████▋   | 4/6 [00:00&lt;00:00, 203.71it/s, v_num=11]Epoch 15:  83%|████████▎ | 5/6 [00:00&lt;00:00, 207.45it/s, v_num=11]Epoch 15:  83%|████████▎ | 5/6 [00:00&lt;00:00, 202.29it/s, v_num=11]Epoch 15: 100%|██████████| 6/6 [00:00&lt;00:00, 212.46it/s, v_num=11]Epoch 15: 100%|██████████| 6/6 [00:00&lt;00:00, 209.18it/s, v_num=11]\nValidation: |          | 0/? [00:00&lt;?, ?it/s]\nValidation:   0%|          | 0/3 [00:00&lt;?, ?it/s]\nValidation DataLoader 0:   0%|          | 0/3 [00:00&lt;?, ?it/s]\nValidation DataLoader 0:  33%|███▎      | 1/3 [00:00&lt;00:00, 630.44it/s]\nValidation DataLoader 0:  67%|██████▋   | 2/3 [00:00&lt;00:00, 554.47it/s]\nValidation DataLoader 0: 100%|██████████| 3/3 [00:00&lt;00:00, 607.25it/s]\n                                                                       Epoch 15: 100%|██████████| 6/6 [00:00&lt;00:00, 147.35it/s, v_num=11]Epoch 15: 100%|██████████| 6/6 [00:00&lt;00:00, 142.98it/s, v_num=11]Epoch 15:   0%|          | 0/6 [00:00&lt;?, ?it/s, v_num=11]         Epoch 16:   0%|          | 0/6 [00:00&lt;?, ?it/s, v_num=11]Epoch 16:  17%|█▋        | 1/6 [00:00&lt;00:00, 142.79it/s, v_num=11]Epoch 16:  17%|█▋        | 1/6 [00:00&lt;00:00, 131.17it/s, v_num=11]Epoch 16:  33%|███▎      | 2/6 [00:00&lt;00:00, 193.41it/s, v_num=11]Epoch 16:  33%|███▎      | 2/6 [00:00&lt;00:00, 187.32it/s, v_num=11]Epoch 16:  50%|█████     | 3/6 [00:00&lt;00:00, 234.55it/s, v_num=11]Epoch 16:  50%|█████     | 3/6 [00:00&lt;00:00, 229.06it/s, v_num=11]Epoch 16:  67%|██████▋   | 4/6 [00:00&lt;00:00, 260.71it/s, v_num=11]Epoch 16:  67%|██████▋   | 4/6 [00:00&lt;00:00, 252.69it/s, v_num=11]Epoch 16:  83%|████████▎ | 5/6 [00:00&lt;00:00, 187.29it/s, v_num=11]Epoch 16:  83%|████████▎ | 5/6 [00:00&lt;00:00, 184.98it/s, v_num=11]Epoch 16: 100%|██████████| 6/6 [00:00&lt;00:00, 206.58it/s, v_num=11]Epoch 16: 100%|██████████| 6/6 [00:00&lt;00:00, 204.37it/s, v_num=11]\nValidation: |          | 0/? [00:00&lt;?, ?it/s]\nValidation:   0%|          | 0/3 [00:00&lt;?, ?it/s]\nValidation DataLoader 0:   0%|          | 0/3 [00:00&lt;?, ?it/s]\nValidation DataLoader 0:  33%|███▎      | 1/3 [00:00&lt;00:00, 582.14it/s]\nValidation DataLoader 0:  67%|██████▋   | 2/3 [00:00&lt;00:00, 450.88it/s]\nValidation DataLoader 0: 100%|██████████| 3/3 [00:00&lt;00:00, 447.65it/s]\n                                                                       Epoch 16: 100%|██████████| 6/6 [00:00&lt;00:00, 137.34it/s, v_num=11]Epoch 16: 100%|██████████| 6/6 [00:00&lt;00:00, 135.19it/s, v_num=11]Epoch 16:   0%|          | 0/6 [00:00&lt;?, ?it/s, v_num=11]         Epoch 17:   0%|          | 0/6 [00:00&lt;?, ?it/s, v_num=11]Epoch 17:  17%|█▋        | 1/6 [00:00&lt;00:00, 182.05it/s, v_num=11]Epoch 17:  17%|█▋        | 1/6 [00:00&lt;00:00, 170.94it/s, v_num=11]Epoch 17:  33%|███▎      | 2/6 [00:00&lt;00:00, 254.42it/s, v_num=11]Epoch 17:  33%|███▎      | 2/6 [00:00&lt;00:00, 244.94it/s, v_num=11]Epoch 17:  50%|█████     | 3/6 [00:00&lt;00:00, 298.94it/s, v_num=11]Epoch 17:  50%|█████     | 3/6 [00:00&lt;00:00, 290.50it/s, v_num=11]Epoch 17:  67%|██████▋   | 4/6 [00:00&lt;00:00, 273.81it/s, v_num=11]Epoch 17:  67%|██████▋   | 4/6 [00:00&lt;00:00, 264.14it/s, v_num=11]Epoch 17:  83%|████████▎ | 5/6 [00:00&lt;00:00, 255.46it/s, v_num=11]Epoch 17:  83%|████████▎ | 5/6 [00:00&lt;00:00, 250.23it/s, v_num=11]Epoch 17: 100%|██████████| 6/6 [00:00&lt;00:00, 270.33it/s, v_num=11]Epoch 17: 100%|██████████| 6/6 [00:00&lt;00:00, 266.38it/s, v_num=11]\nValidation: |          | 0/? [00:00&lt;?, ?it/s]\nValidation:   0%|          | 0/3 [00:00&lt;?, ?it/s]\nValidation DataLoader 0:   0%|          | 0/3 [00:00&lt;?, ?it/s]\nValidation DataLoader 0:  33%|███▎      | 1/3 [00:00&lt;00:00, 352.82it/s]\nValidation DataLoader 0:  67%|██████▋   | 2/3 [00:00&lt;00:00, 390.64it/s]\nValidation DataLoader 0: 100%|██████████| 3/3 [00:00&lt;00:00, 426.22it/s]\n                                                                       Epoch 17: 100%|██████████| 6/6 [00:00&lt;00:00, 161.65it/s, v_num=11]Epoch 17: 100%|██████████| 6/6 [00:00&lt;00:00, 158.27it/s, v_num=11]Epoch 17:   0%|          | 0/6 [00:00&lt;?, ?it/s, v_num=11]         Epoch 18:   0%|          | 0/6 [00:00&lt;?, ?it/s, v_num=11]Epoch 18:  17%|█▋        | 1/6 [00:00&lt;00:00, 128.72it/s, v_num=11]Epoch 18:  17%|█▋        | 1/6 [00:00&lt;00:00, 117.33it/s, v_num=11]Epoch 18:  33%|███▎      | 2/6 [00:00&lt;00:00, 167.82it/s, v_num=11]Epoch 18:  33%|███▎      | 2/6 [00:00&lt;00:00, 159.53it/s, v_num=11]Epoch 18:  50%|█████     | 3/6 [00:00&lt;00:00, 180.17it/s, v_num=11]Epoch 18:  50%|█████     | 3/6 [00:00&lt;00:00, 174.90it/s, v_num=11]Epoch 18:  67%|██████▋   | 4/6 [00:00&lt;00:00, 194.52it/s, v_num=11]Epoch 18:  67%|██████▋   | 4/6 [00:00&lt;00:00, 188.63it/s, v_num=11]Epoch 18:  83%|████████▎ | 5/6 [00:00&lt;00:00, 200.57it/s, v_num=11]Epoch 18:  83%|████████▎ | 5/6 [00:00&lt;00:00, 197.57it/s, v_num=11]Epoch 18: 100%|██████████| 6/6 [00:00&lt;00:00, 218.43it/s, v_num=11]Epoch 18: 100%|██████████| 6/6 [00:00&lt;00:00, 215.16it/s, v_num=11]\nValidation: |          | 0/? [00:00&lt;?, ?it/s]\nValidation:   0%|          | 0/3 [00:00&lt;?, ?it/s]\nValidation DataLoader 0:   0%|          | 0/3 [00:00&lt;?, ?it/s]\nValidation DataLoader 0:  33%|███▎      | 1/3 [00:00&lt;00:00, 498.79it/s]\nValidation DataLoader 0:  67%|██████▋   | 2/3 [00:00&lt;00:00, 437.73it/s]\nValidation DataLoader 0: 100%|██████████| 3/3 [00:00&lt;00:00, 472.70it/s]\n                                                                       Epoch 18: 100%|██████████| 6/6 [00:00&lt;00:00, 148.16it/s, v_num=11]Epoch 18: 100%|██████████| 6/6 [00:00&lt;00:00, 145.67it/s, v_num=11]Epoch 18:   0%|          | 0/6 [00:00&lt;?, ?it/s, v_num=11]         Epoch 19:   0%|          | 0/6 [00:00&lt;?, ?it/s, v_num=11]Epoch 19:  17%|█▋        | 1/6 [00:00&lt;00:00, 145.39it/s, v_num=11]Epoch 19:  17%|█▋        | 1/6 [00:00&lt;00:00, 135.27it/s, v_num=11]Epoch 19:  33%|███▎      | 2/6 [00:00&lt;00:00, 172.26it/s, v_num=11]Epoch 19:  33%|███▎      | 2/6 [00:00&lt;00:00, 165.50it/s, v_num=11]Epoch 19:  50%|█████     | 3/6 [00:00&lt;00:00, 213.88it/s, v_num=11]Epoch 19:  50%|█████     | 3/6 [00:00&lt;00:00, 209.54it/s, v_num=11]Epoch 19:  67%|██████▋   | 4/6 [00:00&lt;00:00, 247.28it/s, v_num=11]Epoch 19:  67%|██████▋   | 4/6 [00:00&lt;00:00, 242.98it/s, v_num=11]Epoch 19:  83%|████████▎ | 5/6 [00:00&lt;00:00, 266.44it/s, v_num=11]Epoch 19:  83%|████████▎ | 5/6 [00:00&lt;00:00, 262.32it/s, v_num=11]Epoch 19: 100%|██████████| 6/6 [00:00&lt;00:00, 282.28it/s, v_num=11]Epoch 19: 100%|██████████| 6/6 [00:00&lt;00:00, 278.57it/s, v_num=11]\nValidation: |          | 0/? [00:00&lt;?, ?it/s]\nValidation:   0%|          | 0/3 [00:00&lt;?, ?it/s]\nValidation DataLoader 0:   0%|          | 0/3 [00:00&lt;?, ?it/s]\nValidation DataLoader 0:  33%|███▎      | 1/3 [00:00&lt;00:00, 570.03it/s]\nValidation DataLoader 0:  67%|██████▋   | 2/3 [00:00&lt;00:00, 524.75it/s]\nValidation DataLoader 0: 100%|██████████| 3/3 [00:00&lt;00:00, 578.26it/s]\n                                                                       Epoch 19: 100%|██████████| 6/6 [00:00&lt;00:00, 173.12it/s, v_num=11]Epoch 19: 100%|██████████| 6/6 [00:00&lt;00:00, 169.34it/s, v_num=11]Epoch 19:   0%|          | 0/6 [00:00&lt;?, ?it/s, v_num=11]         Epoch 20:   0%|          | 0/6 [00:00&lt;?, ?it/s, v_num=11]Epoch 20:  17%|█▋        | 1/6 [00:00&lt;00:00, 188.07it/s, v_num=11]Epoch 20:  17%|█▋        | 1/6 [00:00&lt;00:00, 176.70it/s, v_num=11]Epoch 20:  33%|███▎      | 2/6 [00:00&lt;00:00, 258.09it/s, v_num=11]Epoch 20:  33%|███▎      | 2/6 [00:00&lt;00:00, 248.77it/s, v_num=11]Epoch 20:  50%|█████     | 3/6 [00:00&lt;00:00, 303.85it/s, v_num=11]Epoch 20:  50%|█████     | 3/6 [00:00&lt;00:00, 294.82it/s, v_num=11]Epoch 20:  67%|██████▋   | 4/6 [00:00&lt;00:00, 328.54it/s, v_num=11]Epoch 20:  67%|██████▋   | 4/6 [00:00&lt;00:00, 320.28it/s, v_num=11]Epoch 20:  83%|████████▎ | 5/6 [00:00&lt;00:00, 310.60it/s, v_num=11]Epoch 20:  83%|████████▎ | 5/6 [00:00&lt;00:00, 300.96it/s, v_num=11]Epoch 20: 100%|██████████| 6/6 [00:00&lt;00:00, 291.75it/s, v_num=11]Epoch 20: 100%|██████████| 6/6 [00:00&lt;00:00, 286.34it/s, v_num=11]\nValidation: |          | 0/? [00:00&lt;?, ?it/s]\nValidation:   0%|          | 0/3 [00:00&lt;?, ?it/s]\nValidation DataLoader 0:   0%|          | 0/3 [00:00&lt;?, ?it/s]\nValidation DataLoader 0:  33%|███▎      | 1/3 [00:00&lt;00:00, 605.68it/s]\nValidation DataLoader 0:  67%|██████▋   | 2/3 [00:00&lt;00:00, 442.02it/s]\nValidation DataLoader 0: 100%|██████████| 3/3 [00:00&lt;00:00, 455.89it/s]\n                                                                       Epoch 20: 100%|██████████| 6/6 [00:00&lt;00:00, 173.34it/s, v_num=11]Epoch 20: 100%|██████████| 6/6 [00:00&lt;00:00, 169.52it/s, v_num=11]Epoch 20:   0%|          | 0/6 [00:00&lt;?, ?it/s, v_num=11]         Epoch 21:   0%|          | 0/6 [00:00&lt;?, ?it/s, v_num=11]Epoch 21:  17%|█▋        | 1/6 [00:00&lt;00:00, 177.75it/s, v_num=11]Epoch 21:  17%|█▋        | 1/6 [00:00&lt;00:00, 167.39it/s, v_num=11]Epoch 21:  33%|███▎      | 2/6 [00:00&lt;00:00, 238.76it/s, v_num=11]Epoch 21:  33%|███▎      | 2/6 [00:00&lt;00:00, 230.62it/s, v_num=11]Epoch 21:  50%|█████     | 3/6 [00:00&lt;00:00, 279.12it/s, v_num=11]Epoch 21:  50%|█████     | 3/6 [00:00&lt;00:00, 270.86it/s, v_num=11]Epoch 21:  67%|██████▋   | 4/6 [00:00&lt;00:00, 302.06it/s, v_num=11]Epoch 21:  67%|██████▋   | 4/6 [00:00&lt;00:00, 294.89it/s, v_num=11]Epoch 21:  83%|████████▎ | 5/6 [00:00&lt;00:00, 303.97it/s, v_num=11]Epoch 21:  83%|████████▎ | 5/6 [00:00&lt;00:00, 297.50it/s, v_num=11]Epoch 21: 100%|██████████| 6/6 [00:00&lt;00:00, 298.69it/s, v_num=11]Epoch 21: 100%|██████████| 6/6 [00:00&lt;00:00, 291.47it/s, v_num=11]\nValidation: |          | 0/? [00:00&lt;?, ?it/s]\nValidation:   0%|          | 0/3 [00:00&lt;?, ?it/s]\nValidation DataLoader 0:   0%|          | 0/3 [00:00&lt;?, ?it/s]\nValidation DataLoader 0:  33%|███▎      | 1/3 [00:00&lt;00:00, 536.01it/s]\nValidation DataLoader 0:  67%|██████▋   | 2/3 [00:00&lt;00:00, 443.61it/s]\nValidation DataLoader 0: 100%|██████████| 3/3 [00:00&lt;00:00, 478.75it/s]\n                                                                       Epoch 21: 100%|██████████| 6/6 [00:00&lt;00:00, 176.97it/s, v_num=11]Epoch 21: 100%|██████████| 6/6 [00:00&lt;00:00, 172.35it/s, v_num=11]Epoch 21:   0%|          | 0/6 [00:00&lt;?, ?it/s, v_num=11]         Epoch 22:   0%|          | 0/6 [00:00&lt;?, ?it/s, v_num=11]Epoch 22:  17%|█▋        | 1/6 [00:00&lt;00:00, 203.29it/s, v_num=11]Epoch 22:  17%|█▋        | 1/6 [00:00&lt;00:00, 189.64it/s, v_num=11]Epoch 22:  33%|███▎      | 2/6 [00:00&lt;00:00, 260.02it/s, v_num=11]Epoch 22:  33%|███▎      | 2/6 [00:00&lt;00:00, 250.13it/s, v_num=11]Epoch 22:  50%|█████     | 3/6 [00:00&lt;00:00, 305.06it/s, v_num=11]Epoch 22:  50%|█████     | 3/6 [00:00&lt;00:00, 296.31it/s, v_num=11]Epoch 22:  67%|██████▋   | 4/6 [00:00&lt;00:00, 281.39it/s, v_num=11]Epoch 22:  67%|██████▋   | 4/6 [00:00&lt;00:00, 268.61it/s, v_num=11]Epoch 22:  83%|████████▎ | 5/6 [00:00&lt;00:00, 274.80it/s, v_num=11]Epoch 22:  83%|████████▎ | 5/6 [00:00&lt;00:00, 268.61it/s, v_num=11]Epoch 22: 100%|██████████| 6/6 [00:00&lt;00:00, 284.74it/s, v_num=11]Epoch 22: 100%|██████████| 6/6 [00:00&lt;00:00, 280.37it/s, v_num=11]\nValidation: |          | 0/? [00:00&lt;?, ?it/s]\nValidation:   0%|          | 0/3 [00:00&lt;?, ?it/s]\nValidation DataLoader 0:   0%|          | 0/3 [00:00&lt;?, ?it/s]\nValidation DataLoader 0:  33%|███▎      | 1/3 [00:00&lt;00:00, 590.25it/s]\nValidation DataLoader 0:  67%|██████▋   | 2/3 [00:00&lt;00:00, 488.99it/s]\nValidation DataLoader 0: 100%|██████████| 3/3 [00:00&lt;00:00, 475.83it/s]\n                                                                       Epoch 22: 100%|██████████| 6/6 [00:00&lt;00:00, 172.91it/s, v_num=11]Epoch 22: 100%|██████████| 6/6 [00:00&lt;00:00, 168.97it/s, v_num=11]Epoch 22:   0%|          | 0/6 [00:00&lt;?, ?it/s, v_num=11]         Epoch 23:   0%|          | 0/6 [00:00&lt;?, ?it/s, v_num=11]Epoch 23:  17%|█▋        | 1/6 [00:00&lt;00:00, 152.54it/s, v_num=11]Epoch 23:  17%|█▋        | 1/6 [00:00&lt;00:00, 143.41it/s, v_num=11]Epoch 23:  33%|███▎      | 2/6 [00:00&lt;00:00, 221.34it/s, v_num=11]Epoch 23:  33%|███▎      | 2/6 [00:00&lt;00:00, 214.10it/s, v_num=11]Epoch 23:  50%|█████     | 3/6 [00:00&lt;00:00, 257.02it/s, v_num=11]Epoch 23:  50%|█████     | 3/6 [00:00&lt;00:00, 250.55it/s, v_num=11]Epoch 23:  67%|██████▋   | 4/6 [00:00&lt;00:00, 289.46it/s, v_num=11]Epoch 23:  67%|██████▋   | 4/6 [00:00&lt;00:00, 283.41it/s, v_num=11]Epoch 23:  83%|████████▎ | 5/6 [00:00&lt;00:00, 283.07it/s, v_num=11]Epoch 23:  83%|████████▎ | 5/6 [00:00&lt;00:00, 268.60it/s, v_num=11]Epoch 23: 100%|██████████| 6/6 [00:00&lt;00:00, 269.80it/s, v_num=11]Epoch 23: 100%|██████████| 6/6 [00:00&lt;00:00, 262.43it/s, v_num=11]\nValidation: |          | 0/? [00:00&lt;?, ?it/s]\nValidation:   0%|          | 0/3 [00:00&lt;?, ?it/s]\nValidation DataLoader 0:   0%|          | 0/3 [00:00&lt;?, ?it/s]\nValidation DataLoader 0:  33%|███▎      | 1/3 [00:00&lt;00:00, 604.19it/s]\nValidation DataLoader 0:  67%|██████▋   | 2/3 [00:00&lt;00:00, 500.04it/s]\nValidation DataLoader 0: 100%|██████████| 3/3 [00:00&lt;00:00, 585.71it/s]\n                                                                       Epoch 23: 100%|██████████| 6/6 [00:00&lt;00:00, 168.56it/s, v_num=11]Epoch 23: 100%|██████████| 6/6 [00:00&lt;00:00, 164.98it/s, v_num=11]Epoch 23:   0%|          | 0/6 [00:00&lt;?, ?it/s, v_num=11]         Epoch 24:   0%|          | 0/6 [00:00&lt;?, ?it/s, v_num=11]Epoch 24:  17%|█▋        | 1/6 [00:00&lt;00:00, 183.30it/s, v_num=11]Epoch 24:  17%|█▋        | 1/6 [00:00&lt;00:00, 173.30it/s, v_num=11]Epoch 24:  33%|███▎      | 2/6 [00:00&lt;00:00, 220.28it/s, v_num=11]Epoch 24:  33%|███▎      | 2/6 [00:00&lt;00:00, 205.00it/s, v_num=11]Epoch 24:  50%|█████     | 3/6 [00:00&lt;00:00, 224.14it/s, v_num=11]Epoch 24:  50%|█████     | 3/6 [00:00&lt;00:00, 214.10it/s, v_num=11]Epoch 24:  67%|██████▋   | 4/6 [00:00&lt;00:00, 231.52it/s, v_num=11]Epoch 24:  67%|██████▋   | 4/6 [00:00&lt;00:00, 223.83it/s, v_num=11]Epoch 24:  83%|████████▎ | 5/6 [00:00&lt;00:00, 228.54it/s, v_num=11]Epoch 24:  83%|████████▎ | 5/6 [00:00&lt;00:00, 224.73it/s, v_num=11]Epoch 24: 100%|██████████| 6/6 [00:00&lt;00:00, 240.44it/s, v_num=11]Epoch 24: 100%|██████████| 6/6 [00:00&lt;00:00, 235.89it/s, v_num=11]\nValidation: |          | 0/? [00:00&lt;?, ?it/s]\nValidation:   0%|          | 0/3 [00:00&lt;?, ?it/s]\nValidation DataLoader 0:   0%|          | 0/3 [00:00&lt;?, ?it/s]\nValidation DataLoader 0:  33%|███▎      | 1/3 [00:00&lt;00:00, 741.83it/s]\nValidation DataLoader 0:  67%|██████▋   | 2/3 [00:00&lt;00:00, 694.88it/s]\nValidation DataLoader 0: 100%|██████████| 3/3 [00:00&lt;00:00, 750.95it/s]\n                                                                       Epoch 24: 100%|██████████| 6/6 [00:00&lt;00:00, 161.13it/s, v_num=11]Epoch 24: 100%|██████████| 6/6 [00:00&lt;00:00, 157.96it/s, v_num=11]Epoch 24:   0%|          | 0/6 [00:00&lt;?, ?it/s, v_num=11]         Epoch 25:   0%|          | 0/6 [00:00&lt;?, ?it/s, v_num=11]Epoch 25:  17%|█▋        | 1/6 [00:00&lt;00:00, 136.40it/s, v_num=11]Epoch 25:  17%|█▋        | 1/6 [00:00&lt;00:00, 124.32it/s, v_num=11]Epoch 25:  33%|███▎      | 2/6 [00:00&lt;00:00, 164.03it/s, v_num=11]Epoch 25:  33%|███▎      | 2/6 [00:00&lt;00:00, 158.62it/s, v_num=11]Epoch 25:  50%|█████     | 3/6 [00:00&lt;00:00, 200.87it/s, v_num=11]Epoch 25:  50%|█████     | 3/6 [00:00&lt;00:00, 194.36it/s, v_num=11]Epoch 25:  67%|██████▋   | 4/6 [00:00&lt;00:00, 217.79it/s, v_num=11]Epoch 25:  67%|██████▋   | 4/6 [00:00&lt;00:00, 213.69it/s, v_num=11]Epoch 25:  83%|████████▎ | 5/6 [00:00&lt;00:00, 236.14it/s, v_num=11]Epoch 25:  83%|████████▎ | 5/6 [00:00&lt;00:00, 232.79it/s, v_num=11]Epoch 25: 100%|██████████| 6/6 [00:00&lt;00:00, 248.08it/s, v_num=11]Epoch 25: 100%|██████████| 6/6 [00:00&lt;00:00, 245.19it/s, v_num=11]\nValidation: |          | 0/? [00:00&lt;?, ?it/s]\nValidation:   0%|          | 0/3 [00:00&lt;?, ?it/s]\nValidation DataLoader 0:   0%|          | 0/3 [00:00&lt;?, ?it/s]\nValidation DataLoader 0:  33%|███▎      | 1/3 [00:00&lt;00:00, 734.04it/s]\nValidation DataLoader 0:  67%|██████▋   | 2/3 [00:00&lt;00:00, 671.84it/s]\nValidation DataLoader 0: 100%|██████████| 3/3 [00:00&lt;00:00, 739.65it/s]\n                                                                       Epoch 25: 100%|██████████| 6/6 [00:00&lt;00:00, 169.67it/s, v_num=11]Epoch 25: 100%|██████████| 6/6 [00:00&lt;00:00, 165.06it/s, v_num=11]Epoch 25:   0%|          | 0/6 [00:00&lt;?, ?it/s, v_num=11]         Epoch 26:   0%|          | 0/6 [00:00&lt;?, ?it/s, v_num=11]Epoch 26:  17%|█▋        | 1/6 [00:00&lt;00:00, 134.73it/s, v_num=11]Epoch 26:  17%|█▋        | 1/6 [00:00&lt;00:00, 124.93it/s, v_num=11]Epoch 26:  33%|███▎      | 2/6 [00:00&lt;00:00, 177.00it/s, v_num=11]Epoch 26:  33%|███▎      | 2/6 [00:00&lt;00:00, 168.78it/s, v_num=11]Epoch 26:  50%|█████     | 3/6 [00:00&lt;00:00, 204.04it/s, v_num=11]Epoch 26:  50%|█████     | 3/6 [00:00&lt;00:00, 199.30it/s, v_num=11]Epoch 26:  67%|██████▋   | 4/6 [00:00&lt;00:00, 234.22it/s, v_num=11]Epoch 26:  67%|██████▋   | 4/6 [00:00&lt;00:00, 230.02it/s, v_num=11]Epoch 26:  83%|████████▎ | 5/6 [00:00&lt;00:00, 242.08it/s, v_num=11]Epoch 26:  83%|████████▎ | 5/6 [00:00&lt;00:00, 237.43it/s, v_num=11]Epoch 26: 100%|██████████| 6/6 [00:00&lt;00:00, 261.60it/s, v_num=11]Epoch 26: 100%|██████████| 6/6 [00:00&lt;00:00, 258.14it/s, v_num=11]\nValidation: |          | 0/? [00:00&lt;?, ?it/s]\nValidation:   0%|          | 0/3 [00:00&lt;?, ?it/s]\nValidation DataLoader 0:   0%|          | 0/3 [00:00&lt;?, ?it/s]\nValidation DataLoader 0:  33%|███▎      | 1/3 [00:00&lt;00:00, 567.10it/s]\nValidation DataLoader 0:  67%|██████▋   | 2/3 [00:00&lt;00:00, 562.65it/s]\nValidation DataLoader 0: 100%|██████████| 3/3 [00:00&lt;00:00, 637.53it/s]\n                                                                       Epoch 26: 100%|██████████| 6/6 [00:00&lt;00:00, 175.47it/s, v_num=11]Epoch 26: 100%|██████████| 6/6 [00:00&lt;00:00, 170.72it/s, v_num=11]Epoch 26:   0%|          | 0/6 [00:00&lt;?, ?it/s, v_num=11]         Epoch 27:   0%|          | 0/6 [00:00&lt;?, ?it/s, v_num=11]Epoch 27:  17%|█▋        | 1/6 [00:00&lt;00:00, 143.74it/s, v_num=11]Epoch 27:  17%|█▋        | 1/6 [00:00&lt;00:00, 135.08it/s, v_num=11]Epoch 27:  33%|███▎      | 2/6 [00:00&lt;00:00, 195.12it/s, v_num=11]Epoch 27:  33%|███▎      | 2/6 [00:00&lt;00:00, 185.55it/s, v_num=11]Epoch 27:  50%|█████     | 3/6 [00:00&lt;00:00, 232.30it/s, v_num=11]Epoch 27:  50%|█████     | 3/6 [00:00&lt;00:00, 226.69it/s, v_num=11]Epoch 27:  67%|██████▋   | 4/6 [00:00&lt;00:00, 257.02it/s, v_num=11]Epoch 27:  67%|██████▋   | 4/6 [00:00&lt;00:00, 251.99it/s, v_num=11]Epoch 27:  83%|████████▎ | 5/6 [00:00&lt;00:00, 269.59it/s, v_num=11]Epoch 27:  83%|████████▎ | 5/6 [00:00&lt;00:00, 265.32it/s, v_num=11]Epoch 27: 100%|██████████| 6/6 [00:00&lt;00:00, 290.04it/s, v_num=11]Epoch 27: 100%|██████████| 6/6 [00:00&lt;00:00, 286.13it/s, v_num=11]\nValidation: |          | 0/? [00:00&lt;?, ?it/s]\nValidation:   0%|          | 0/3 [00:00&lt;?, ?it/s]\nValidation DataLoader 0:   0%|          | 0/3 [00:00&lt;?, ?it/s]\nValidation DataLoader 0:  33%|███▎      | 1/3 [00:00&lt;00:00, 670.77it/s]\nValidation DataLoader 0:  67%|██████▋   | 2/3 [00:00&lt;00:00, 467.25it/s]\nValidation DataLoader 0: 100%|██████████| 3/3 [00:00&lt;00:00, 527.83it/s]\n                                                                       Epoch 27: 100%|██████████| 6/6 [00:00&lt;00:00, 181.37it/s, v_num=11]Epoch 27: 100%|██████████| 6/6 [00:00&lt;00:00, 176.96it/s, v_num=11]Epoch 27:   0%|          | 0/6 [00:00&lt;?, ?it/s, v_num=11]         Epoch 28:   0%|          | 0/6 [00:00&lt;?, ?it/s, v_num=11]Epoch 28:  17%|█▋        | 1/6 [00:00&lt;00:00, 164.06it/s, v_num=11]Epoch 28:  17%|█▋        | 1/6 [00:00&lt;00:00, 154.50it/s, v_num=11]Epoch 28:  33%|███▎      | 2/6 [00:00&lt;00:00, 236.41it/s, v_num=11]Epoch 28:  33%|███▎      | 2/6 [00:00&lt;00:00, 228.14it/s, v_num=11]Epoch 28:  50%|█████     | 3/6 [00:00&lt;00:00, 270.97it/s, v_num=11]Epoch 28:  50%|█████     | 3/6 [00:00&lt;00:00, 263.91it/s, v_num=11]Epoch 28:  67%|██████▋   | 4/6 [00:00&lt;00:00, 302.60it/s, v_num=11]Epoch 28:  67%|██████▋   | 4/6 [00:00&lt;00:00, 295.97it/s, v_num=11]Epoch 28:  83%|████████▎ | 5/6 [00:00&lt;00:00, 308.29it/s, v_num=11]Epoch 28:  83%|████████▎ | 5/6 [00:00&lt;00:00, 301.42it/s, v_num=11]Epoch 28: 100%|██████████| 6/6 [00:00&lt;00:00, 320.51it/s, v_num=11]Epoch 28: 100%|██████████| 6/6 [00:00&lt;00:00, 312.09it/s, v_num=11]\nValidation: |          | 0/? [00:00&lt;?, ?it/s]\nValidation:   0%|          | 0/3 [00:00&lt;?, ?it/s]\nValidation DataLoader 0:   0%|          | 0/3 [00:00&lt;?, ?it/s]\nValidation DataLoader 0:  33%|███▎      | 1/3 [00:00&lt;00:00, 675.30it/s]\nValidation DataLoader 0:  67%|██████▋   | 2/3 [00:00&lt;00:00, 587.19it/s]\nValidation DataLoader 0: 100%|██████████| 3/3 [00:00&lt;00:00, 618.20it/s]\n                                                                       Epoch 28: 100%|██████████| 6/6 [00:00&lt;00:00, 186.57it/s, v_num=11]Epoch 28: 100%|██████████| 6/6 [00:00&lt;00:00, 182.17it/s, v_num=11]Epoch 28:   0%|          | 0/6 [00:00&lt;?, ?it/s, v_num=11]         Epoch 29:   0%|          | 0/6 [00:00&lt;?, ?it/s, v_num=11]Epoch 29:  17%|█▋        | 1/6 [00:00&lt;00:00, 161.10it/s, v_num=11]Epoch 29:  17%|█▋        | 1/6 [00:00&lt;00:00, 148.50it/s, v_num=11]Epoch 29:  33%|███▎      | 2/6 [00:00&lt;00:00, 215.30it/s, v_num=11]Epoch 29:  33%|███▎      | 2/6 [00:00&lt;00:00, 208.02it/s, v_num=11]Epoch 29:  50%|█████     | 3/6 [00:00&lt;00:00, 261.53it/s, v_num=11]Epoch 29:  50%|█████     | 3/6 [00:00&lt;00:00, 254.79it/s, v_num=11]Epoch 29:  67%|██████▋   | 4/6 [00:00&lt;00:00, 291.36it/s, v_num=11]Epoch 29:  67%|██████▋   | 4/6 [00:00&lt;00:00, 279.83it/s, v_num=11]Epoch 29:  83%|████████▎ | 5/6 [00:00&lt;00:00, 281.54it/s, v_num=11]Epoch 29:  83%|████████▎ | 5/6 [00:00&lt;00:00, 275.08it/s, v_num=11]Epoch 29: 100%|██████████| 6/6 [00:00&lt;00:00, 289.65it/s, v_num=11]Epoch 29: 100%|██████████| 6/6 [00:00&lt;00:00, 281.99it/s, v_num=11]\nValidation: |          | 0/? [00:00&lt;?, ?it/s]\nValidation:   0%|          | 0/3 [00:00&lt;?, ?it/s]\nValidation DataLoader 0:   0%|          | 0/3 [00:00&lt;?, ?it/s]\nValidation DataLoader 0:  33%|███▎      | 1/3 [00:00&lt;00:00, 720.67it/s]\nValidation DataLoader 0:  67%|██████▋   | 2/3 [00:00&lt;00:00, 694.88it/s]\nValidation DataLoader 0: 100%|██████████| 3/3 [00:00&lt;00:00, 660.24it/s]\n                                                                       Epoch 29: 100%|██████████| 6/6 [00:00&lt;00:00, 174.85it/s, v_num=11]Epoch 29: 100%|██████████| 6/6 [00:00&lt;00:00, 171.18it/s, v_num=11]Epoch 29:   0%|          | 0/6 [00:00&lt;?, ?it/s, v_num=11]         Epoch 30:   0%|          | 0/6 [00:00&lt;?, ?it/s, v_num=11]Epoch 30:  17%|█▋        | 1/6 [00:00&lt;00:00, 183.44it/s, v_num=11]Epoch 30:  17%|█▋        | 1/6 [00:00&lt;00:00, 172.37it/s, v_num=11]Epoch 30:  33%|███▎      | 2/6 [00:00&lt;00:00, 255.49it/s, v_num=11]Epoch 30:  33%|███▎      | 2/6 [00:00&lt;00:00, 244.76it/s, v_num=11]Epoch 30:  50%|█████     | 3/6 [00:00&lt;00:00, 297.09it/s, v_num=11]Epoch 30:  50%|█████     | 3/6 [00:00&lt;00:00, 287.56it/s, v_num=11]Epoch 30:  67%|██████▋   | 4/6 [00:00&lt;00:00, 286.74it/s, v_num=11]Epoch 30:  67%|██████▋   | 4/6 [00:00&lt;00:00, 274.19it/s, v_num=11]Epoch 30:  83%|████████▎ | 5/6 [00:00&lt;00:00, 264.74it/s, v_num=11]Epoch 30:  83%|████████▎ | 5/6 [00:00&lt;00:00, 256.42it/s, v_num=11]Epoch 30: 100%|██████████| 6/6 [00:00&lt;00:00, 266.99it/s, v_num=11]Epoch 30: 100%|██████████| 6/6 [00:00&lt;00:00, 262.94it/s, v_num=11]\nValidation: |          | 0/? [00:00&lt;?, ?it/s]\nValidation:   0%|          | 0/3 [00:00&lt;?, ?it/s]\nValidation DataLoader 0:   0%|          | 0/3 [00:00&lt;?, ?it/s]\nValidation DataLoader 0:  33%|███▎      | 1/3 [00:00&lt;00:00, 714.29it/s]\nValidation DataLoader 0:  67%|██████▋   | 2/3 [00:00&lt;00:00, 723.47it/s]\nValidation DataLoader 0: 100%|██████████| 3/3 [00:00&lt;00:00, 772.19it/s]\n                                                                       Epoch 30: 100%|██████████| 6/6 [00:00&lt;00:00, 181.43it/s, v_num=11]Epoch 30: 100%|██████████| 6/6 [00:00&lt;00:00, 177.26it/s, v_num=11]Epoch 30:   0%|          | 0/6 [00:00&lt;?, ?it/s, v_num=11]         Epoch 31:   0%|          | 0/6 [00:00&lt;?, ?it/s, v_num=11]Epoch 31:  17%|█▋        | 1/6 [00:00&lt;00:00, 140.79it/s, v_num=11]Epoch 31:  17%|█▋        | 1/6 [00:00&lt;00:00, 128.40it/s, v_num=11]Epoch 31:  33%|███▎      | 2/6 [00:00&lt;00:00, 182.27it/s, v_num=11]Epoch 31:  33%|███▎      | 2/6 [00:00&lt;00:00, 173.22it/s, v_num=11]Epoch 31:  50%|█████     | 3/6 [00:00&lt;00:00, 216.34it/s, v_num=11]Epoch 31:  50%|█████     | 3/6 [00:00&lt;00:00, 211.46it/s, v_num=11]Epoch 31:  67%|██████▋   | 4/6 [00:00&lt;00:00, 247.67it/s, v_num=11]Epoch 31:  67%|██████▋   | 4/6 [00:00&lt;00:00, 243.26it/s, v_num=11]Epoch 31:  83%|████████▎ | 5/6 [00:00&lt;00:00, 242.22it/s, v_num=11]Epoch 31:  83%|████████▎ | 5/6 [00:00&lt;00:00, 235.61it/s, v_num=11]Epoch 31: 100%|██████████| 6/6 [00:00&lt;00:00, 240.53it/s, v_num=11]Epoch 31: 100%|██████████| 6/6 [00:00&lt;00:00, 234.84it/s, v_num=11]\nValidation: |          | 0/? [00:00&lt;?, ?it/s]\nValidation:   0%|          | 0/3 [00:00&lt;?, ?it/s]\nValidation DataLoader 0:   0%|          | 0/3 [00:00&lt;?, ?it/s]\nValidation DataLoader 0:  33%|███▎      | 1/3 [00:00&lt;00:00, 740.91it/s]\nValidation DataLoader 0:  67%|██████▋   | 2/3 [00:00&lt;00:00, 731.86it/s]\nValidation DataLoader 0: 100%|██████████| 3/3 [00:00&lt;00:00, 768.56it/s]\n                                                                       Epoch 31: 100%|██████████| 6/6 [00:00&lt;00:00, 163.55it/s, v_num=11]Epoch 31: 100%|██████████| 6/6 [00:00&lt;00:00, 160.39it/s, v_num=11]Epoch 31:   0%|          | 0/6 [00:00&lt;?, ?it/s, v_num=11]         Epoch 32:   0%|          | 0/6 [00:00&lt;?, ?it/s, v_num=11]Epoch 32:  17%|█▋        | 1/6 [00:00&lt;00:00, 135.51it/s, v_num=11]Epoch 32:  17%|█▋        | 1/6 [00:00&lt;00:00, 123.51it/s, v_num=11]Epoch 32:  33%|███▎      | 2/6 [00:00&lt;00:00, 188.89it/s, v_num=11]Epoch 32:  33%|███▎      | 2/6 [00:00&lt;00:00, 183.24it/s, v_num=11]Epoch 32:  50%|█████     | 3/6 [00:00&lt;00:00, 218.51it/s, v_num=11]Epoch 32:  50%|█████     | 3/6 [00:00&lt;00:00, 211.23it/s, v_num=11]Epoch 32:  67%|██████▋   | 4/6 [00:00&lt;00:00, 222.75it/s, v_num=11]Epoch 32:  67%|██████▋   | 4/6 [00:00&lt;00:00, 218.26it/s, v_num=11]Epoch 32:  83%|████████▎ | 5/6 [00:00&lt;00:00, 228.54it/s, v_num=11]Epoch 32:  83%|████████▎ | 5/6 [00:00&lt;00:00, 224.69it/s, v_num=11]Epoch 32: 100%|██████████| 6/6 [00:00&lt;00:00, 247.58it/s, v_num=11]Epoch 32: 100%|██████████| 6/6 [00:00&lt;00:00, 244.62it/s, v_num=11]\nValidation: |          | 0/? [00:00&lt;?, ?it/s]\nValidation:   0%|          | 0/3 [00:00&lt;?, ?it/s]\nValidation DataLoader 0:   0%|          | 0/3 [00:00&lt;?, ?it/s]\nValidation DataLoader 0:  33%|███▎      | 1/3 [00:00&lt;00:00, 747.51it/s]\nValidation DataLoader 0:  67%|██████▋   | 2/3 [00:00&lt;00:00, 582.87it/s]\nValidation DataLoader 0: 100%|██████████| 3/3 [00:00&lt;00:00, 655.09it/s]\n                                                                       Epoch 32: 100%|██████████| 6/6 [00:00&lt;00:00, 174.45it/s, v_num=11]Epoch 32: 100%|██████████| 6/6 [00:00&lt;00:00, 169.14it/s, v_num=11]Epoch 32:   0%|          | 0/6 [00:00&lt;?, ?it/s, v_num=11]         Epoch 33:   0%|          | 0/6 [00:00&lt;?, ?it/s, v_num=11]Epoch 33:  17%|█▋        | 1/6 [00:00&lt;00:00, 146.10it/s, v_num=11]Epoch 33:  17%|█▋        | 1/6 [00:00&lt;00:00, 133.92it/s, v_num=11]Epoch 33:  33%|███▎      | 2/6 [00:00&lt;00:00, 208.50it/s, v_num=11]Epoch 33:  33%|███▎      | 2/6 [00:00&lt;00:00, 202.14it/s, v_num=11]Epoch 33:  50%|█████     | 3/6 [00:00&lt;00:00, 224.08it/s, v_num=11]Epoch 33:  50%|█████     | 3/6 [00:00&lt;00:00, 217.71it/s, v_num=11]Epoch 33:  67%|██████▋   | 4/6 [00:00&lt;00:00, 240.19it/s, v_num=11]Epoch 33:  67%|██████▋   | 4/6 [00:00&lt;00:00, 232.16it/s, v_num=11]Epoch 33:  83%|████████▎ | 5/6 [00:00&lt;00:00, 236.83it/s, v_num=11]Epoch 33:  83%|████████▎ | 5/6 [00:00&lt;00:00, 232.72it/s, v_num=11]Epoch 33: 100%|██████████| 6/6 [00:00&lt;00:00, 255.22it/s, v_num=11]Epoch 33: 100%|██████████| 6/6 [00:00&lt;00:00, 251.92it/s, v_num=11]\nValidation: |          | 0/? [00:00&lt;?, ?it/s]\nValidation:   0%|          | 0/3 [00:00&lt;?, ?it/s]\nValidation DataLoader 0:   0%|          | 0/3 [00:00&lt;?, ?it/s]\nValidation DataLoader 0:  33%|███▎      | 1/3 [00:00&lt;00:00, 663.76it/s]\nValidation DataLoader 0:  67%|██████▋   | 2/3 [00:00&lt;00:00, 568.56it/s]\nValidation DataLoader 0: 100%|██████████| 3/3 [00:00&lt;00:00, 592.14it/s]\n                                                                       Epoch 33: 100%|██████████| 6/6 [00:00&lt;00:00, 164.78it/s, v_num=11]Epoch 33: 100%|██████████| 6/6 [00:00&lt;00:00, 160.86it/s, v_num=11]Epoch 33:   0%|          | 0/6 [00:00&lt;?, ?it/s, v_num=11]         Epoch 34:   0%|          | 0/6 [00:00&lt;?, ?it/s, v_num=11]Epoch 34:  17%|█▋        | 1/6 [00:00&lt;00:00, 135.28it/s, v_num=11]Epoch 34:  17%|█▋        | 1/6 [00:00&lt;00:00, 126.10it/s, v_num=11]Epoch 34:  33%|███▎      | 2/6 [00:00&lt;00:00, 186.72it/s, v_num=11]Epoch 34:  33%|███▎      | 2/6 [00:00&lt;00:00, 180.44it/s, v_num=11]Epoch 34:  50%|█████     | 3/6 [00:00&lt;00:00, 230.36it/s, v_num=11]Epoch 34:  50%|█████     | 3/6 [00:00&lt;00:00, 224.73it/s, v_num=11]Epoch 34:  67%|██████▋   | 4/6 [00:00&lt;00:00, 262.04it/s, v_num=11]Epoch 34:  67%|██████▋   | 4/6 [00:00&lt;00:00, 256.54it/s, v_num=11]Epoch 34:  83%|████████▎ | 5/6 [00:00&lt;00:00, 273.99it/s, v_num=11]Epoch 34:  83%|████████▎ | 5/6 [00:00&lt;00:00, 268.98it/s, v_num=11]Epoch 34: 100%|██████████| 6/6 [00:00&lt;00:00, 292.55it/s, v_num=11]Epoch 34: 100%|██████████| 6/6 [00:00&lt;00:00, 287.82it/s, v_num=11]\nValidation: |          | 0/? [00:00&lt;?, ?it/s]\nValidation:   0%|          | 0/3 [00:00&lt;?, ?it/s]\nValidation DataLoader 0:   0%|          | 0/3 [00:00&lt;?, ?it/s]\nValidation DataLoader 0:  33%|███▎      | 1/3 [00:00&lt;00:00, 572.84it/s]\nValidation DataLoader 0:  67%|██████▋   | 2/3 [00:00&lt;00:00, 424.20it/s]\nValidation DataLoader 0: 100%|██████████| 3/3 [00:00&lt;00:00, 500.10it/s]\n                                                                       Epoch 34: 100%|██████████| 6/6 [00:00&lt;00:00, 171.83it/s, v_num=11]Epoch 34: 100%|██████████| 6/6 [00:00&lt;00:00, 166.07it/s, v_num=11]Epoch 34:   0%|          | 0/6 [00:00&lt;?, ?it/s, v_num=11]         Epoch 35:   0%|          | 0/6 [00:00&lt;?, ?it/s, v_num=11]Epoch 35:  17%|█▋        | 1/6 [00:00&lt;00:00, 130.51it/s, v_num=11]Epoch 35:  17%|█▋        | 1/6 [00:00&lt;00:00, 119.89it/s, v_num=11]Epoch 35:  33%|███▎      | 2/6 [00:00&lt;00:00, 177.54it/s, v_num=11]Epoch 35:  33%|███▎      | 2/6 [00:00&lt;00:00, 171.49it/s, v_num=11]Epoch 35:  50%|█████     | 3/6 [00:00&lt;00:00, 205.18it/s, v_num=11]Epoch 35:  50%|█████     | 3/6 [00:00&lt;00:00, 198.00it/s, v_num=11]Epoch 35:  67%|██████▋   | 4/6 [00:00&lt;00:00, 219.34it/s, v_num=11]Epoch 35:  67%|██████▋   | 4/6 [00:00&lt;00:00, 214.77it/s, v_num=11]Epoch 35:  83%|████████▎ | 5/6 [00:00&lt;00:00, 234.81it/s, v_num=11]Epoch 35:  83%|████████▎ | 5/6 [00:00&lt;00:00, 231.08it/s, v_num=11]Epoch 35: 100%|██████████| 6/6 [00:00&lt;00:00, 243.82it/s, v_num=11]Epoch 35: 100%|██████████| 6/6 [00:00&lt;00:00, 240.43it/s, v_num=11]\nValidation: |          | 0/? [00:00&lt;?, ?it/s]\nValidation:   0%|          | 0/3 [00:00&lt;?, ?it/s]\nValidation DataLoader 0:   0%|          | 0/3 [00:00&lt;?, ?it/s]\nValidation DataLoader 0:  33%|███▎      | 1/3 [00:00&lt;00:00, 390.57it/s]\nValidation DataLoader 0:  67%|██████▋   | 2/3 [00:00&lt;00:00, 447.46it/s]\nValidation DataLoader 0: 100%|██████████| 3/3 [00:00&lt;00:00, 505.30it/s]\n                                                                       Epoch 35: 100%|██████████| 6/6 [00:00&lt;00:00, 154.66it/s, v_num=11]Epoch 35: 100%|██████████| 6/6 [00:00&lt;00:00, 150.81it/s, v_num=11]Epoch 35:   0%|          | 0/6 [00:00&lt;?, ?it/s, v_num=11]         Epoch 36:   0%|          | 0/6 [00:00&lt;?, ?it/s, v_num=11]Epoch 36:  17%|█▋        | 1/6 [00:00&lt;00:00, 119.89it/s, v_num=11]Epoch 36:  17%|█▋        | 1/6 [00:00&lt;00:00, 111.65it/s, v_num=11]Epoch 36:  33%|███▎      | 2/6 [00:00&lt;00:00, 160.37it/s, v_num=11]Epoch 36:  33%|███▎      | 2/6 [00:00&lt;00:00, 151.76it/s, v_num=11]Epoch 36:  50%|█████     | 3/6 [00:00&lt;00:00, 189.93it/s, v_num=11]Epoch 36:  50%|█████     | 3/6 [00:00&lt;00:00, 185.56it/s, v_num=11]Epoch 36:  67%|██████▋   | 4/6 [00:00&lt;00:00, 217.96it/s, v_num=11]Epoch 36:  67%|██████▋   | 4/6 [00:00&lt;00:00, 214.23it/s, v_num=11]Epoch 36:  83%|████████▎ | 5/6 [00:00&lt;00:00, 229.09it/s, v_num=11]Epoch 36:  83%|████████▎ | 5/6 [00:00&lt;00:00, 225.37it/s, v_num=11]Epoch 36: 100%|██████████| 6/6 [00:00&lt;00:00, 248.00it/s, v_num=11]Epoch 36: 100%|██████████| 6/6 [00:00&lt;00:00, 244.80it/s, v_num=11]\nValidation: |          | 0/? [00:00&lt;?, ?it/s]\nValidation:   0%|          | 0/3 [00:00&lt;?, ?it/s]\nValidation DataLoader 0:   0%|          | 0/3 [00:00&lt;?, ?it/s]\nValidation DataLoader 0:  33%|███▎      | 1/3 [00:00&lt;00:00, 344.78it/s]\nValidation DataLoader 0:  67%|██████▋   | 2/3 [00:00&lt;00:00, 365.21it/s]\nValidation DataLoader 0: 100%|██████████| 3/3 [00:00&lt;00:00, 429.01it/s]\n                                                                       Epoch 36: 100%|██████████| 6/6 [00:00&lt;00:00, 153.19it/s, v_num=11]Epoch 36: 100%|██████████| 6/6 [00:00&lt;00:00, 149.00it/s, v_num=11]Epoch 36:   0%|          | 0/6 [00:00&lt;?, ?it/s, v_num=11]         Epoch 37:   0%|          | 0/6 [00:00&lt;?, ?it/s, v_num=11]Epoch 37:  17%|█▋        | 1/6 [00:00&lt;00:00, 143.77it/s, v_num=11]Epoch 37:  17%|█▋        | 1/6 [00:00&lt;00:00, 136.24it/s, v_num=11]Epoch 37:  33%|███▎      | 2/6 [00:00&lt;00:00, 199.42it/s, v_num=11]Epoch 37:  33%|███▎      | 2/6 [00:00&lt;00:00, 193.17it/s, v_num=11]Epoch 37:  50%|█████     | 3/6 [00:00&lt;00:00, 242.10it/s, v_num=11]Epoch 37:  50%|█████     | 3/6 [00:00&lt;00:00, 235.62it/s, v_num=11]Epoch 37:  67%|██████▋   | 4/6 [00:00&lt;00:00, 262.20it/s, v_num=11]Epoch 37:  67%|██████▋   | 4/6 [00:00&lt;00:00, 256.67it/s, v_num=11]Epoch 37:  83%|████████▎ | 5/6 [00:00&lt;00:00, 276.67it/s, v_num=11]Epoch 37:  83%|████████▎ | 5/6 [00:00&lt;00:00, 271.56it/s, v_num=11]Epoch 37: 100%|██████████| 6/6 [00:00&lt;00:00, 278.25it/s, v_num=11]Epoch 37: 100%|██████████| 6/6 [00:00&lt;00:00, 270.57it/s, v_num=11]\nValidation: |          | 0/? [00:00&lt;?, ?it/s]\nValidation:   0%|          | 0/3 [00:00&lt;?, ?it/s]\nValidation DataLoader 0:   0%|          | 0/3 [00:00&lt;?, ?it/s]\nValidation DataLoader 0:  33%|███▎      | 1/3 [00:00&lt;00:00, 368.73it/s]\nValidation DataLoader 0:  67%|██████▋   | 2/3 [00:00&lt;00:00, 383.88it/s]\nValidation DataLoader 0: 100%|██████████| 3/3 [00:00&lt;00:00, 406.33it/s]\n                                                                       Epoch 37: 100%|██████████| 6/6 [00:00&lt;00:00, 156.71it/s, v_num=11]Epoch 37: 100%|██████████| 6/6 [00:00&lt;00:00, 153.76it/s, v_num=11]Epoch 37:   0%|          | 0/6 [00:00&lt;?, ?it/s, v_num=11]         Epoch 38:   0%|          | 0/6 [00:00&lt;?, ?it/s, v_num=11]Epoch 38:  17%|█▋        | 1/6 [00:00&lt;00:00, 123.07it/s, v_num=11]Epoch 38:  17%|█▋        | 1/6 [00:00&lt;00:00, 113.81it/s, v_num=11]Epoch 38:  33%|███▎      | 2/6 [00:00&lt;00:00, 165.61it/s, v_num=11]Epoch 38:  33%|███▎      | 2/6 [00:00&lt;00:00, 159.63it/s, v_num=11]Epoch 38:  50%|█████     | 3/6 [00:00&lt;00:00, 189.21it/s, v_num=11]Epoch 38:  50%|█████     | 3/6 [00:00&lt;00:00, 182.83it/s, v_num=11]Epoch 38:  67%|██████▋   | 4/6 [00:00&lt;00:00, 206.65it/s, v_num=11]Epoch 38:  67%|██████▋   | 4/6 [00:00&lt;00:00, 200.64it/s, v_num=11]Epoch 38:  83%|████████▎ | 5/6 [00:00&lt;00:00, 209.14it/s, v_num=11]Epoch 38:  83%|████████▎ | 5/6 [00:00&lt;00:00, 204.82it/s, v_num=11]Epoch 38: 100%|██████████| 6/6 [00:00&lt;00:00, 217.37it/s, v_num=11]Epoch 38: 100%|██████████| 6/6 [00:00&lt;00:00, 214.39it/s, v_num=11]\nValidation: |          | 0/? [00:00&lt;?, ?it/s]\nValidation:   0%|          | 0/3 [00:00&lt;?, ?it/s]\nValidation DataLoader 0:   0%|          | 0/3 [00:00&lt;?, ?it/s]\nValidation DataLoader 0:  33%|███▎      | 1/3 [00:00&lt;00:00, 516.22it/s]\nValidation DataLoader 0:  67%|██████▋   | 2/3 [00:00&lt;00:00, 589.34it/s]\nValidation DataLoader 0: 100%|██████████| 3/3 [00:00&lt;00:00, 580.13it/s]\n                                                                       Epoch 38: 100%|██████████| 6/6 [00:00&lt;00:00, 151.78it/s, v_num=11]Epoch 38: 100%|██████████| 6/6 [00:00&lt;00:00, 149.04it/s, v_num=11]Epoch 38:   0%|          | 0/6 [00:00&lt;?, ?it/s, v_num=11]         Epoch 39:   0%|          | 0/6 [00:00&lt;?, ?it/s, v_num=11]Epoch 39:  17%|█▋        | 1/6 [00:00&lt;00:00, 139.83it/s, v_num=11]Epoch 39:  17%|█▋        | 1/6 [00:00&lt;00:00, 130.22it/s, v_num=11]Epoch 39:  33%|███▎      | 2/6 [00:00&lt;00:00, 191.58it/s, v_num=11]Epoch 39:  33%|███▎      | 2/6 [00:00&lt;00:00, 186.18it/s, v_num=11]Epoch 39:  50%|█████     | 3/6 [00:00&lt;00:00, 236.48it/s, v_num=11]Epoch 39:  50%|█████     | 3/6 [00:00&lt;00:00, 229.80it/s, v_num=11]Epoch 39:  67%|██████▋   | 4/6 [00:00&lt;00:00, 262.79it/s, v_num=11]Epoch 39:  67%|██████▋   | 4/6 [00:00&lt;00:00, 257.62it/s, v_num=11]Epoch 39:  83%|████████▎ | 5/6 [00:00&lt;00:00, 271.00it/s, v_num=11]Epoch 39:  83%|████████▎ | 5/6 [00:00&lt;00:00, 266.53it/s, v_num=11]Epoch 39: 100%|██████████| 6/6 [00:00&lt;00:00, 274.63it/s, v_num=11]Epoch 39: 100%|██████████| 6/6 [00:00&lt;00:00, 268.98it/s, v_num=11]\nValidation: |          | 0/? [00:00&lt;?, ?it/s]\nValidation:   0%|          | 0/3 [00:00&lt;?, ?it/s]\nValidation DataLoader 0:   0%|          | 0/3 [00:00&lt;?, ?it/s]\nValidation DataLoader 0:  33%|███▎      | 1/3 [00:00&lt;00:00, 628.64it/s]\nValidation DataLoader 0:  67%|██████▋   | 2/3 [00:00&lt;00:00, 586.25it/s]\nValidation DataLoader 0: 100%|██████████| 3/3 [00:00&lt;00:00, 547.99it/s]\n                                                                       Epoch 39: 100%|██████████| 6/6 [00:00&lt;00:00, 167.34it/s, v_num=11]Epoch 39: 100%|██████████| 6/6 [00:00&lt;00:00, 163.80it/s, v_num=11]Epoch 39:   0%|          | 0/6 [00:00&lt;?, ?it/s, v_num=11]         Epoch 40:   0%|          | 0/6 [00:00&lt;?, ?it/s, v_num=11]Epoch 40:  17%|█▋        | 1/6 [00:00&lt;00:00, 172.66it/s, v_num=11]Epoch 40:  17%|█▋        | 1/6 [00:00&lt;00:00, 162.32it/s, v_num=11]Epoch 40:  33%|███▎      | 2/6 [00:00&lt;00:00, 239.89it/s, v_num=11]Epoch 40:  33%|███▎      | 2/6 [00:00&lt;00:00, 230.55it/s, v_num=11]Epoch 40:  50%|█████     | 3/6 [00:00&lt;00:00, 279.94it/s, v_num=11]Epoch 40:  50%|█████     | 3/6 [00:00&lt;00:00, 271.80it/s, v_num=11]Epoch 40:  67%|██████▋   | 4/6 [00:00&lt;00:00, 293.51it/s, v_num=11]Epoch 40:  67%|██████▋   | 4/6 [00:00&lt;00:00, 285.18it/s, v_num=11]Epoch 40:  83%|████████▎ | 5/6 [00:00&lt;00:00, 288.68it/s, v_num=11]Epoch 40:  83%|████████▎ | 5/6 [00:00&lt;00:00, 282.21it/s, v_num=11]Epoch 40: 100%|██████████| 6/6 [00:00&lt;00:00, 296.53it/s, v_num=11]Epoch 40: 100%|██████████| 6/6 [00:00&lt;00:00, 291.23it/s, v_num=11]\nValidation: |          | 0/? [00:00&lt;?, ?it/s]\nValidation:   0%|          | 0/3 [00:00&lt;?, ?it/s]\nValidation DataLoader 0:   0%|          | 0/3 [00:00&lt;?, ?it/s]\nValidation DataLoader 0:  33%|███▎      | 1/3 [00:00&lt;00:00, 584.82it/s]\nValidation DataLoader 0:  67%|██████▋   | 2/3 [00:00&lt;00:00, 627.37it/s]\nValidation DataLoader 0: 100%|██████████| 3/3 [00:00&lt;00:00, 696.81it/s]\n                                                                       Epoch 40: 100%|██████████| 6/6 [00:00&lt;00:00, 189.13it/s, v_num=11]Epoch 40: 100%|██████████| 6/6 [00:00&lt;00:00, 183.09it/s, v_num=11]Epoch 40:   0%|          | 0/6 [00:00&lt;?, ?it/s, v_num=11]         Epoch 41:   0%|          | 0/6 [00:00&lt;?, ?it/s, v_num=11]Epoch 41:  17%|█▋        | 1/6 [00:00&lt;00:00, 143.30it/s, v_num=11]Epoch 41:  17%|█▋        | 1/6 [00:00&lt;00:00, 131.92it/s, v_num=11]Epoch 41:  33%|███▎      | 2/6 [00:00&lt;00:00, 182.32it/s, v_num=11]Epoch 41:  33%|███▎      | 2/6 [00:00&lt;00:00, 174.61it/s, v_num=11]Epoch 41:  50%|█████     | 3/6 [00:00&lt;00:00, 206.22it/s, v_num=11]Epoch 41:  50%|█████     | 3/6 [00:00&lt;00:00, 198.07it/s, v_num=11]Epoch 41:  67%|██████▋   | 4/6 [00:00&lt;00:00, 219.92it/s, v_num=11]Epoch 41:  67%|██████▋   | 4/6 [00:00&lt;00:00, 213.54it/s, v_num=11]Epoch 41:  83%|████████▎ | 5/6 [00:00&lt;00:00, 219.34it/s, v_num=11]Epoch 41:  83%|████████▎ | 5/6 [00:00&lt;00:00, 216.25it/s, v_num=11]Epoch 41: 100%|██████████| 6/6 [00:00&lt;00:00, 239.89it/s, v_num=11]Epoch 41: 100%|██████████| 6/6 [00:00&lt;00:00, 236.56it/s, v_num=11]\nValidation: |          | 0/? [00:00&lt;?, ?it/s]\nValidation:   0%|          | 0/3 [00:00&lt;?, ?it/s]\nValidation DataLoader 0:   0%|          | 0/3 [00:00&lt;?, ?it/s]\nValidation DataLoader 0:  33%|███▎      | 1/3 [00:00&lt;00:00, 723.28it/s]\nValidation DataLoader 0:  67%|██████▋   | 2/3 [00:00&lt;00:00, 619.22it/s]\nValidation DataLoader 0: 100%|██████████| 3/3 [00:00&lt;00:00, 640.91it/s]\n                                                                       Epoch 41: 100%|██████████| 6/6 [00:00&lt;00:00, 170.77it/s, v_num=11]Epoch 41: 100%|██████████| 6/6 [00:00&lt;00:00, 167.54it/s, v_num=11]Epoch 41:   0%|          | 0/6 [00:00&lt;?, ?it/s, v_num=11]         Epoch 42:   0%|          | 0/6 [00:00&lt;?, ?it/s, v_num=11]Epoch 42:  17%|█▋        | 1/6 [00:00&lt;00:00, 136.69it/s, v_num=11]Epoch 42:  17%|█▋        | 1/6 [00:00&lt;00:00, 127.24it/s, v_num=11]Epoch 42:  33%|███▎      | 2/6 [00:00&lt;00:00, 182.00it/s, v_num=11]Epoch 42:  33%|███▎      | 2/6 [00:00&lt;00:00, 174.14it/s, v_num=11]Epoch 42:  50%|█████     | 3/6 [00:00&lt;00:00, 203.92it/s, v_num=11]Epoch 42:  50%|█████     | 3/6 [00:00&lt;00:00, 197.88it/s, v_num=11]Epoch 42:  67%|██████▋   | 4/6 [00:00&lt;00:00, 221.88it/s, v_num=11]Epoch 42:  67%|██████▋   | 4/6 [00:00&lt;00:00, 218.10it/s, v_num=11]Epoch 42:  83%|████████▎ | 5/6 [00:00&lt;00:00, 236.66it/s, v_num=11]Epoch 42:  83%|████████▎ | 5/6 [00:00&lt;00:00, 233.41it/s, v_num=11]Epoch 42: 100%|██████████| 6/6 [00:00&lt;00:00, 253.99it/s, v_num=11]Epoch 42: 100%|██████████| 6/6 [00:00&lt;00:00, 250.87it/s, v_num=11]\nValidation: |          | 0/? [00:00&lt;?, ?it/s]\nValidation:   0%|          | 0/3 [00:00&lt;?, ?it/s]\nValidation DataLoader 0:   0%|          | 0/3 [00:00&lt;?, ?it/s]\nValidation DataLoader 0:  33%|███▎      | 1/3 [00:00&lt;00:00, 728.18it/s]\nValidation DataLoader 0:  67%|██████▋   | 2/3 [00:00&lt;00:00, 737.14it/s]\nValidation DataLoader 0: 100%|██████████| 3/3 [00:00&lt;00:00, 647.64it/s]\n                                                                       Epoch 42: 100%|██████████| 6/6 [00:00&lt;00:00, 173.15it/s, v_num=11]Epoch 42: 100%|██████████| 6/6 [00:00&lt;00:00, 169.44it/s, v_num=11]Epoch 42:   0%|          | 0/6 [00:00&lt;?, ?it/s, v_num=11]         Epoch 43:   0%|          | 0/6 [00:00&lt;?, ?it/s, v_num=11]Epoch 43:  17%|█▋        | 1/6 [00:00&lt;00:00, 140.40it/s, v_num=11]Epoch 43:  17%|█▋        | 1/6 [00:00&lt;00:00, 130.73it/s, v_num=11]Epoch 43:  33%|███▎      | 2/6 [00:00&lt;00:00, 179.68it/s, v_num=11]Epoch 43:  33%|███▎      | 2/6 [00:00&lt;00:00, 169.98it/s, v_num=11]Epoch 43:  50%|█████     | 3/6 [00:00&lt;00:00, 201.59it/s, v_num=11]Epoch 43:  50%|█████     | 3/6 [00:00&lt;00:00, 197.21it/s, v_num=11]Epoch 43:  67%|██████▋   | 4/6 [00:00&lt;00:00, 231.95it/s, v_num=11]Epoch 43:  67%|██████▋   | 4/6 [00:00&lt;00:00, 228.17it/s, v_num=11]Epoch 43:  83%|████████▎ | 5/6 [00:00&lt;00:00, 240.20it/s, v_num=11]Epoch 43:  83%|████████▎ | 5/6 [00:00&lt;00:00, 236.65it/s, v_num=11]Epoch 43: 100%|██████████| 6/6 [00:00&lt;00:00, 260.25it/s, v_num=11]Epoch 43: 100%|██████████| 6/6 [00:00&lt;00:00, 256.95it/s, v_num=11]\nValidation: |          | 0/? [00:00&lt;?, ?it/s]\nValidation:   0%|          | 0/3 [00:00&lt;?, ?it/s]\nValidation DataLoader 0:   0%|          | 0/3 [00:00&lt;?, ?it/s]\nValidation DataLoader 0:  33%|███▎      | 1/3 [00:00&lt;00:00, 749.92it/s]\nValidation DataLoader 0:  67%|██████▋   | 2/3 [00:00&lt;00:00, 640.55it/s]\nValidation DataLoader 0: 100%|██████████| 3/3 [00:00&lt;00:00, 648.70it/s]\n                                                                       Epoch 43: 100%|██████████| 6/6 [00:00&lt;00:00, 177.17it/s, v_num=11]Epoch 43: 100%|██████████| 6/6 [00:00&lt;00:00, 173.04it/s, v_num=11]Epoch 43:   0%|          | 0/6 [00:00&lt;?, ?it/s, v_num=11]         Epoch 44:   0%|          | 0/6 [00:00&lt;?, ?it/s, v_num=11]Epoch 44:  17%|█▋        | 1/6 [00:00&lt;00:00, 126.43it/s, v_num=11]Epoch 44:  17%|█▋        | 1/6 [00:00&lt;00:00, 116.87it/s, v_num=11]Epoch 44:  33%|███▎      | 2/6 [00:00&lt;00:00, 162.32it/s, v_num=11]Epoch 44:  33%|███▎      | 2/6 [00:00&lt;00:00, 155.47it/s, v_num=11]Epoch 44:  50%|█████     | 3/6 [00:00&lt;00:00, 182.87it/s, v_num=11]Epoch 44:  50%|█████     | 3/6 [00:00&lt;00:00, 177.86it/s, v_num=11]Epoch 44:  67%|██████▋   | 4/6 [00:00&lt;00:00, 210.17it/s, v_num=11]Epoch 44:  67%|██████▋   | 4/6 [00:00&lt;00:00, 206.69it/s, v_num=11]Epoch 44:  83%|████████▎ | 5/6 [00:00&lt;00:00, 223.97it/s, v_num=11]Epoch 44:  83%|████████▎ | 5/6 [00:00&lt;00:00, 220.89it/s, v_num=11]Epoch 44: 100%|██████████| 6/6 [00:00&lt;00:00, 233.29it/s, v_num=11]Epoch 44: 100%|██████████| 6/6 [00:00&lt;00:00, 228.32it/s, v_num=11]\nValidation: |          | 0/? [00:00&lt;?, ?it/s]\nValidation:   0%|          | 0/3 [00:00&lt;?, ?it/s]\nValidation DataLoader 0:   0%|          | 0/3 [00:00&lt;?, ?it/s]\nValidation DataLoader 0:  33%|███▎      | 1/3 [00:00&lt;00:00, 772.72it/s]\nValidation DataLoader 0:  67%|██████▋   | 2/3 [00:00&lt;00:00, 582.50it/s]\nValidation DataLoader 0: 100%|██████████| 3/3 [00:00&lt;00:00, 651.26it/s]\n                                                                       Epoch 44: 100%|██████████| 6/6 [00:00&lt;00:00, 161.89it/s, v_num=11]Epoch 44: 100%|██████████| 6/6 [00:00&lt;00:00, 158.84it/s, v_num=11]Epoch 44:   0%|          | 0/6 [00:00&lt;?, ?it/s, v_num=11]         Epoch 45:   0%|          | 0/6 [00:00&lt;?, ?it/s, v_num=11]Epoch 45:  17%|█▋        | 1/6 [00:00&lt;00:00, 143.20it/s, v_num=11]Epoch 45:  17%|█▋        | 1/6 [00:00&lt;00:00, 133.89it/s, v_num=11]Epoch 45:  33%|███▎      | 2/6 [00:00&lt;00:00, 198.51it/s, v_num=11]Epoch 45:  33%|███▎      | 2/6 [00:00&lt;00:00, 191.25it/s, v_num=11]Epoch 45:  50%|█████     | 3/6 [00:00&lt;00:00, 237.18it/s, v_num=11]Epoch 45:  50%|█████     | 3/6 [00:00&lt;00:00, 230.36it/s, v_num=11]Epoch 45:  67%|██████▋   | 4/6 [00:00&lt;00:00, 255.04it/s, v_num=11]Epoch 45:  67%|██████▋   | 4/6 [00:00&lt;00:00, 247.29it/s, v_num=11]Epoch 45:  83%|████████▎ | 5/6 [00:00&lt;00:00, 259.10it/s, v_num=11]Epoch 45:  83%|████████▎ | 5/6 [00:00&lt;00:00, 254.67it/s, v_num=11]Epoch 45: 100%|██████████| 6/6 [00:00&lt;00:00, 270.96it/s, v_num=11]Epoch 45: 100%|██████████| 6/6 [00:00&lt;00:00, 265.78it/s, v_num=11]\nValidation: |          | 0/? [00:00&lt;?, ?it/s]\nValidation:   0%|          | 0/3 [00:00&lt;?, ?it/s]\nValidation DataLoader 0:   0%|          | 0/3 [00:00&lt;?, ?it/s]\nValidation DataLoader 0:  33%|███▎      | 1/3 [00:00&lt;00:00, 448.01it/s]\nValidation DataLoader 0:  67%|██████▋   | 2/3 [00:00&lt;00:00, 401.68it/s]\nValidation DataLoader 0: 100%|██████████| 3/3 [00:00&lt;00:00, 436.44it/s]\n                                                                       Epoch 45: 100%|██████████| 6/6 [00:00&lt;00:00, 153.47it/s, v_num=11]Epoch 45: 100%|██████████| 6/6 [00:00&lt;00:00, 148.01it/s, v_num=11]Epoch 45:   0%|          | 0/6 [00:00&lt;?, ?it/s, v_num=11]         Epoch 46:   0%|          | 0/6 [00:00&lt;?, ?it/s, v_num=11]Epoch 46:  17%|█▋        | 1/6 [00:00&lt;00:00, 140.32it/s, v_num=11]Epoch 46:  17%|█▋        | 1/6 [00:00&lt;00:00, 132.95it/s, v_num=11]Epoch 46:  33%|███▎      | 2/6 [00:00&lt;00:00, 205.56it/s, v_num=11]Epoch 46:  33%|███▎      | 2/6 [00:00&lt;00:00, 198.64it/s, v_num=11]Epoch 46:  50%|█████     | 3/6 [00:00&lt;00:00, 247.90it/s, v_num=11]Epoch 46:  50%|█████     | 3/6 [00:00&lt;00:00, 241.58it/s, v_num=11]Epoch 46:  67%|██████▋   | 4/6 [00:00&lt;00:00, 277.79it/s, v_num=11]Epoch 46:  67%|██████▋   | 4/6 [00:00&lt;00:00, 271.68it/s, v_num=11]Epoch 46:  83%|████████▎ | 5/6 [00:00&lt;00:00, 287.02it/s, v_num=11]Epoch 46:  83%|████████▎ | 5/6 [00:00&lt;00:00, 281.82it/s, v_num=11]Epoch 46: 100%|██████████| 6/6 [00:00&lt;00:00, 283.54it/s, v_num=11]Epoch 46: 100%|██████████| 6/6 [00:00&lt;00:00, 274.86it/s, v_num=11]\nValidation: |          | 0/? [00:00&lt;?, ?it/s]\nValidation:   0%|          | 0/3 [00:00&lt;?, ?it/s]\nValidation DataLoader 0:   0%|          | 0/3 [00:00&lt;?, ?it/s]\nValidation DataLoader 0:  33%|███▎      | 1/3 [00:00&lt;00:00, 628.74it/s]\nValidation DataLoader 0:  67%|██████▋   | 2/3 [00:00&lt;00:00, 524.55it/s]\nValidation DataLoader 0: 100%|██████████| 3/3 [00:00&lt;00:00, 604.92it/s]\n                                                                       Epoch 46: 100%|██████████| 6/6 [00:00&lt;00:00, 177.55it/s, v_num=11]Epoch 46: 100%|██████████| 6/6 [00:00&lt;00:00, 172.81it/s, v_num=11]Epoch 46:   0%|          | 0/6 [00:00&lt;?, ?it/s, v_num=11]         Epoch 47:   0%|          | 0/6 [00:00&lt;?, ?it/s, v_num=11]Epoch 47:  17%|█▋        | 1/6 [00:00&lt;00:00, 189.67it/s, v_num=11]Epoch 47:  17%|█▋        | 1/6 [00:00&lt;00:00, 177.60it/s, v_num=11]Epoch 47:  33%|███▎      | 2/6 [00:00&lt;00:00, 249.69it/s, v_num=11]Epoch 47:  33%|███▎      | 2/6 [00:00&lt;00:00, 240.51it/s, v_num=11]Epoch 47:  50%|█████     | 3/6 [00:00&lt;00:00, 296.23it/s, v_num=11]Epoch 47:  50%|█████     | 3/6 [00:00&lt;00:00, 285.96it/s, v_num=11]Epoch 47:  67%|██████▋   | 4/6 [00:00&lt;00:00, 313.09it/s, v_num=11]Epoch 47:  67%|██████▋   | 4/6 [00:00&lt;00:00, 305.41it/s, v_num=11]Epoch 47:  83%|████████▎ | 5/6 [00:00&lt;00:00, 294.81it/s, v_num=11]Epoch 47:  83%|████████▎ | 5/6 [00:00&lt;00:00, 284.04it/s, v_num=11]Epoch 47: 100%|██████████| 6/6 [00:00&lt;00:00, 297.47it/s, v_num=11]Epoch 47: 100%|██████████| 6/6 [00:00&lt;00:00, 290.93it/s, v_num=11]\nValidation: |          | 0/? [00:00&lt;?, ?it/s]\nValidation:   0%|          | 0/3 [00:00&lt;?, ?it/s]\nValidation DataLoader 0:   0%|          | 0/3 [00:00&lt;?, ?it/s]\nValidation DataLoader 0:  33%|███▎      | 1/3 [00:00&lt;00:00, 603.06it/s]\nValidation DataLoader 0:  67%|██████▋   | 2/3 [00:00&lt;00:00, 442.25it/s]\nValidation DataLoader 0: 100%|██████████| 3/3 [00:00&lt;00:00, 483.73it/s]\n                                                                       Epoch 47: 100%|██████████| 6/6 [00:00&lt;00:00, 179.57it/s, v_num=11]Epoch 47: 100%|██████████| 6/6 [00:00&lt;00:00, 175.69it/s, v_num=11]Epoch 47:   0%|          | 0/6 [00:00&lt;?, ?it/s, v_num=11]         Epoch 48:   0%|          | 0/6 [00:00&lt;?, ?it/s, v_num=11]Epoch 48:  17%|█▋        | 1/6 [00:00&lt;00:00, 202.29it/s, v_num=11]Epoch 48:  17%|█▋        | 1/6 [00:00&lt;00:00, 187.43it/s, v_num=11]Epoch 48:  33%|███▎      | 2/6 [00:00&lt;00:00, 232.02it/s, v_num=11]Epoch 48:  33%|███▎      | 2/6 [00:00&lt;00:00, 223.02it/s, v_num=11]Epoch 48:  50%|█████     | 3/6 [00:00&lt;00:00, 261.32it/s, v_num=11]Epoch 48:  50%|█████     | 3/6 [00:00&lt;00:00, 252.35it/s, v_num=11]Epoch 48:  67%|██████▋   | 4/6 [00:00&lt;00:00, 266.47it/s, v_num=11]Epoch 48:  67%|██████▋   | 4/6 [00:00&lt;00:00, 259.78it/s, v_num=11]Epoch 48:  83%|████████▎ | 5/6 [00:00&lt;00:00, 258.86it/s, v_num=11]Epoch 48:  83%|████████▎ | 5/6 [00:00&lt;00:00, 252.14it/s, v_num=11]Epoch 48: 100%|██████████| 6/6 [00:00&lt;00:00, 260.91it/s, v_num=11]Epoch 48: 100%|██████████| 6/6 [00:00&lt;00:00, 257.15it/s, v_num=11]\nValidation: |          | 0/? [00:00&lt;?, ?it/s]\nValidation:   0%|          | 0/3 [00:00&lt;?, ?it/s]\nValidation DataLoader 0:   0%|          | 0/3 [00:00&lt;?, ?it/s]\nValidation DataLoader 0:  33%|███▎      | 1/3 [00:00&lt;00:00, 747.78it/s]\nValidation DataLoader 0:  67%|██████▋   | 2/3 [00:00&lt;00:00, 541.20it/s]\nValidation DataLoader 0: 100%|██████████| 3/3 [00:00&lt;00:00, 614.88it/s]\n                                                                       Epoch 48: 100%|██████████| 6/6 [00:00&lt;00:00, 173.68it/s, v_num=11]Epoch 48: 100%|██████████| 6/6 [00:00&lt;00:00, 170.23it/s, v_num=11]Epoch 48:   0%|          | 0/6 [00:00&lt;?, ?it/s, v_num=11]         Epoch 49:   0%|          | 0/6 [00:00&lt;?, ?it/s, v_num=11]Epoch 49:  17%|█▋        | 1/6 [00:00&lt;00:00, 146.42it/s, v_num=11]Epoch 49:  17%|█▋        | 1/6 [00:00&lt;00:00, 130.62it/s, v_num=11]Epoch 49:  33%|███▎      | 2/6 [00:00&lt;00:00, 170.48it/s, v_num=11]Epoch 49:  33%|███▎      | 2/6 [00:00&lt;00:00, 161.46it/s, v_num=11]Epoch 49:  50%|█████     | 3/6 [00:00&lt;00:00, 192.59it/s, v_num=11]Epoch 49:  50%|█████     | 3/6 [00:00&lt;00:00, 186.83it/s, v_num=11]Epoch 49:  67%|██████▋   | 4/6 [00:00&lt;00:00, 218.37it/s, v_num=11]Epoch 49:  67%|██████▋   | 4/6 [00:00&lt;00:00, 214.75it/s, v_num=11]Epoch 49:  83%|████████▎ | 5/6 [00:00&lt;00:00, 236.97it/s, v_num=11]Epoch 49:  83%|████████▎ | 5/6 [00:00&lt;00:00, 233.69it/s, v_num=11]Epoch 49: 100%|██████████| 6/6 [00:00&lt;00:00, 252.93it/s, v_num=11]Epoch 49: 100%|██████████| 6/6 [00:00&lt;00:00, 249.39it/s, v_num=11]\nValidation: |          | 0/? [00:00&lt;?, ?it/s]\nValidation:   0%|          | 0/3 [00:00&lt;?, ?it/s]\nValidation DataLoader 0:   0%|          | 0/3 [00:00&lt;?, ?it/s]\nValidation DataLoader 0:  33%|███▎      | 1/3 [00:00&lt;00:00, 571.66it/s]\nValidation DataLoader 0:  67%|██████▋   | 2/3 [00:00&lt;00:00, 441.69it/s]\nValidation DataLoader 0: 100%|██████████| 3/3 [00:00&lt;00:00, 526.04it/s]\n                                                                       Epoch 49: 100%|██████████| 6/6 [00:00&lt;00:00, 131.38it/s, v_num=11]Epoch 49: 100%|██████████| 6/6 [00:00&lt;00:00, 129.09it/s, v_num=11]\n\n\n`Trainer.fit` stopped: `max_epochs=50` reached.\n\n\nEpoch 49: 100%|██████████| 6/6 [00:00&lt;00:00, 119.48it/s, v_num=11]\n\n\nAt each step of SGD, the algorithm randomly selects 32 training observations for the computation of the gradient. Recall from Section~ that an epoch amounts to the number of SGD steps required to process n observations. Since the training set has n=175, and we specified a batch_size of 32 in the construction of hit_dm, an epoch is 175/32=5.5 SGD steps.\nAfter having fit the model, we can evaluate performance on our test data using the test() method of our trainer.\n\nhit_trainer.test(hit_module, datamodule=hit_dm)\n\nLOCAL_RANK: 0 - CUDA_VISIBLE_DEVICES: [0]\n\n\nTesting: |          | 0/? [00:00&lt;?, ?it/s]Testing:   0%|          | 0/3 [00:00&lt;?, ?it/s]Testing DataLoader 0:   0%|          | 0/3 [00:00&lt;?, ?it/s]Testing DataLoader 0:  33%|███▎      | 1/3 [00:00&lt;00:00, 712.83it/s]Testing DataLoader 0:  67%|██████▋   | 2/3 [00:00&lt;00:00, 697.31it/s]Testing DataLoader 0: 100%|██████████| 3/3 [00:00&lt;00:00, 658.52it/s]Testing DataLoader 0: 100%|██████████| 3/3 [00:00&lt;00:00, 293.83it/s]\n────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────\n       Test metric             DataLoader 0\n────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────\n        test_loss               123543.3125\n        test_mae            248.27792358398438\n────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────\n\n\n[{'test_loss': 123543.3125, 'test_mae': 248.27792358398438}]\n\n\nThe results of the fit have been logged into a CSV file. We can find the results specific to this run in the experiment.metrics_file_path attribute of our logger. Note that each time the model is fit, the logger will output results into a new subdirectory of our directory logs/hitters.\nWe now create a plot of the MAE (mean absolute error) as a function of the number of epochs. First we retrieve the logged summaries.\n\nhit_results = pd.read_csv(hit_logger.experiment.metrics_file_path)\n\nSince we will produce similar plots in later examples, we write a simple generic function to produce this plot.\n\ndef summary_plot(results,\n                 ax,\n                 col='loss',\n                 valid_legend='Validation',\n                 training_legend='Training',\n                 ylabel='Loss',\n                 fontsize=20):\n    for (column,\n         color,\n         label) in zip([f'train_{col}_epoch',\n                        f'valid_{col}'],\n                       ['black',\n                        'red'],\n                       [training_legend,\n                        valid_legend]):\n        results.plot(x='epoch',\n                     y=column,\n                     label=label,\n                     marker='o',\n                     color=color,\n                     ax=ax)\n    ax.set_xlabel('Epoch')\n    ax.set_ylabel(ylabel)\n    return ax\n\nWe now set up our axes, and use our function to produce the MAE plot.\n\nfig, ax = subplots(1, 1, figsize=(6, 6))\nax = summary_plot(hit_results,\n                  ax,\n                  col='mae',\n                  ylabel='MAE',\n                  valid_legend='Validation (=Test)')\nax.set_ylim([0, 400])\nax.set_xticks(np.linspace(0, 50, 11).astype(int));\n\n\n\n\n\n\n\n\nWe can predict directly from the final model, and evaluate its performance on the test data. Before fitting, we call the eval() method of hit_model. This tells torch to effectively consider this model to be fitted, so that we can use it to predict on new data. For our model here, the biggest change is that the dropout layers will be turned off, i.e. no weights will be randomly dropped in predicting on new data.\n\nhit_model.eval() \npreds = hit_module(X_test_t)\ntorch.abs(Y_test_t - preds).mean()\n\nHittersModel(\n  (flatten): Flatten(start_dim=1, end_dim=-1)\n  (sequential): Sequential(\n    (0): Linear(in_features=19, out_features=50, bias=True)\n    (1): ReLU()\n    (2): Dropout(p=0.4, inplace=False)\n    (3): Linear(in_features=50, out_features=1, bias=True)\n  )\n)\n\n\ntensor(248.2779, grad_fn=&lt;MeanBackward0&gt;)\n\n\n\n\n\nIn setting up our data module, we had initiated several worker processes that will remain running. We delete all references to the torch objects to ensure these processes will be killed.\n\ndel(Hitters,\n    hit_model, hit_dm,\n    hit_logger,\n    hit_test, hit_train,\n    X, Y,\n    X_test, X_train,\n    Y_test, Y_train,\n    X_test_t, Y_test_t,\n    hit_trainer, hit_module)\n\n\n\n\n\nThe torchvision package comes with a number of example datasets, including the MNIST digit data. Our first step is to retrieve the training and test data sets; the MNIST() function within torchvision.datasets is provided for this purpose. The data will be downloaded the first time this function is executed, and stored in the directory data/MNIST.\n\n(mnist_train, \n mnist_test) = [MNIST(root='data',\n                      train=train,\n                      download=True,\n                      transform=ToTensor())\n                for train in [True, False]]\nmnist_train\n\nDataset MNIST\n    Number of datapoints: 60000\n    Root location: data\n    Split: Train\n    StandardTransform\nTransform: ToTensor()\n\n\nThere are 60,000 images in the training data and 10,000 in the test data. The images are 28\\times 28, and stored as a matrix of pixels. We need to transform each one into a vector.\nNeural networks are somewhat sensitive to the scale of the inputs, much as ridge and lasso regularization are affected by scaling. Here the inputs are eight-bit grayscale values between 0 and 255, so we rescale to the unit interval. {Note: eight bits means 2^8, which equals 256. Since the convention is to start at 0, the possible values range from 0 to 255.} This transformation, along with some reordering of the axes, is performed by the ToTensor() transform from the torchvision.transforms package.\nAs in our Hitters example, we form a data module from the training and test datasets, setting aside 20% of the training images for validation.\n\nmnist_dm = SimpleDataModule(mnist_train,\n                            mnist_test,\n                            validation=0.2,\n                            num_workers=max_num_workers,\n                            batch_size=256)\n\nLet’s take a look at the data that will get fed into our network. We loop through the first few chunks of the test dataset, breaking after 2 batches:\n\nfor idx, (X_ ,Y_) in enumerate(mnist_dm.train_dataloader()):\n    print('X: ', X_.shape)\n    print('Y: ', Y_.shape)\n    if idx &gt;= 1:\n        break\n\nX:  torch.Size([256, 1, 28, 28])\nY:  torch.Size([256])\nX:  torch.Size([256, 1, 28, 28])\nY:  torch.Size([256])\n\n\nWe see that the X for each batch consists of 256 images of size 1x28x28. Here the 1 indicates a single channel (greyscale). For RGB images such as CIFAR100 below, we will see that the 1 in the size will be replaced by 3 for the three RGB channels.\nNow we are ready to specify our neural network.\n\nclass MNISTModel(nn.Module):\n    def __init__(self):\n        super(MNISTModel, self).__init__()\n        self.layer1 = nn.Sequential(\n            nn.Flatten(),\n            nn.Linear(28*28, 256),\n            nn.ReLU(),\n            nn.Dropout(0.4))\n        self.layer2 = nn.Sequential(\n            nn.Linear(256, 128),\n            nn.ReLU(),\n            nn.Dropout(0.3))\n        self._forward = nn.Sequential(\n            self.layer1,\n            self.layer2,\n            nn.Linear(128, 10))\n    def forward(self, x):\n        return self._forward(x)\n\nWe see that in the first layer, each 1x28x28 image is flattened, then mapped to 256 dimensions where we apply a ReLU activation with 40% dropout. A second layer maps the first layer’s output down to 128 dimensions, applying a ReLU activation with 30% dropout. Finally, the 128 dimensions are mapped down to 10, the number of classes in the MNIST data.\n\nmnist_model = MNISTModel()\n\nWe can check that the model produces output of expected size based on our existing batch X_ above.\n\nmnist_model(X_).size()\n\ntorch.Size([256, 10])\n\n\nLet’s take a look at the summary of the model. Instead of an input_size we can pass a tensor of correct shape. In this case, we pass through the final batched X_ from above.\n\nsummary(mnist_model,\n        input_data=X_,\n        col_names=['input_size',\n                   'output_size',\n                   'num_params'])\n\n===================================================================================================================\nLayer (type:depth-idx)                   Input Shape               Output Shape              Param #\n===================================================================================================================\nMNISTModel                               [256, 1, 28, 28]          [256, 10]                 --\n├─Sequential: 1-1                        [256, 1, 28, 28]          [256, 10]                 --\n│    └─Sequential: 2-1                   [256, 1, 28, 28]          [256, 256]                --\n│    │    └─Flatten: 3-1                 [256, 1, 28, 28]          [256, 784]                --\n│    │    └─Linear: 3-2                  [256, 784]                [256, 256]                200,960\n│    │    └─ReLU: 3-3                    [256, 256]                [256, 256]                --\n│    │    └─Dropout: 3-4                 [256, 256]                [256, 256]                --\n│    └─Sequential: 2-2                   [256, 256]                [256, 128]                --\n│    │    └─Linear: 3-5                  [256, 256]                [256, 128]                32,896\n│    │    └─ReLU: 3-6                    [256, 128]                [256, 128]                --\n│    │    └─Dropout: 3-7                 [256, 128]                [256, 128]                --\n│    └─Linear: 2-3                       [256, 128]                [256, 10]                 1,290\n===================================================================================================================\nTotal params: 235,146\nTrainable params: 235,146\nNon-trainable params: 0\nTotal mult-adds (M): 60.20\n===================================================================================================================\nInput size (MB): 0.80\nForward/backward pass size (MB): 0.81\nParams size (MB): 0.94\nEstimated Total Size (MB): 2.55\n===================================================================================================================\n\n\nHaving set up both the model and the data module, fitting this model is now almost identical to the Hitters example. In contrast to our regression model, here we will use the SimpleModule.classification() method which uses the cross-entropy loss function instead of mean squared error. It must be supplied with the number of classes in the problem.\n\nmnist_module = SimpleModule.classification(mnist_model,\n                                           num_classes=10)\nmnist_logger = CSVLogger('logs', name='MNIST')\n\nNow we are ready to go. The final step is to supply training data, and fit the model. We disable the progress bar below to avoid lengthy output in the browser when running.\n\nmnist_trainer = Trainer(deterministic=False,#True\n                        max_epochs=30,\n                        logger=mnist_logger,\n                        enable_progress_bar=False,\n                        callbacks=[ErrorTracker()])\nmnist_trainer.fit(mnist_module,\n                  datamodule=mnist_dm)\n\nGPU available: True (cuda), used: True\nTPU available: False, using: 0 TPU cores\nIPU available: False, using: 0 IPUs\nHPU available: False, using: 0 HPUs\nLOCAL_RANK: 0 - CUDA_VISIBLE_DEVICES: [0]\n\n  | Name  | Type             | Params\n-------------------------------------------\n0 | model | MNISTModel       | 235 K \n1 | loss  | CrossEntropyLoss | 0     \n-------------------------------------------\n235 K     Trainable params\n0         Non-trainable params\n235 K     Total params\n0.941     Total estimated model params size (MB)\n`Trainer.fit` stopped: `max_epochs=30` reached.\n\n\nWe have suppressed the output here, which is a progress report on the fitting of the model, grouped by epoch. This is very useful, since on large datasets fitting can take time. Fitting this model took 245 seconds on a MacBook Pro with an Apple M1 Pro chip with 10 cores and 16 GB of RAM. Here we specified a validation split of 20%, so training is actually performed on 80% of the 60,000 observations in the training set. This is an alternative to actually supplying validation data, like we did for the Hitters data. SGD uses batches of 256 observations in computing the gradient, and doing the arithmetic, we see that an epoch corresponds to 188 gradient steps.\nSimpleModule.classification() includes an accuracy metric by default. Other classification metrics can be added from torchmetrics. We will use our summary_plot() function to display accuracy across epochs.\n\nmnist_results = pd.read_csv(mnist_logger.experiment.metrics_file_path)\nfig, ax = subplots(1, 1, figsize=(6, 6))\nsummary_plot(mnist_results,\n             ax,\n             col='accuracy',\n             ylabel='Accuracy')\nax.set_ylim([0.5, 1])\nax.set_ylabel('Accuracy')\nax.set_xticks(np.linspace(0, 30, 7).astype(int));\n\n\n\n\n\n\n\n\nOnce again we evaluate the accuracy using the test() method of our trainer. This model achieves 97% accuracy on the test data.\n\nmnist_trainer.test(mnist_module,\n                   datamodule=mnist_dm)\n\nLOCAL_RANK: 0 - CUDA_VISIBLE_DEVICES: [0]\n\n\n────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────\n       Test metric             DataLoader 0\n────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────\n      test_accuracy         0.9678000211715698\n        test_loss           0.14884594082832336\n────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────\n\n\n[{'test_loss': 0.14884594082832336, 'test_accuracy': 0.9678000211715698}]\n\n\nTable~ also reports the error rates resulting from LDA (Chapter~) and multiclass logistic regression. For LDA we refer the reader to Section~. Although we could use the sklearn function LogisticRegression() to fit\nmulticlass logistic regression, we are set up here to fit such a model with torch. We just have an input layer and an output layer, and omit the hidden layers!\n\nclass MNIST_MLR(nn.Module):\n    def __init__(self):\n        super(MNIST_MLR, self).__init__()\n        self.linear = nn.Sequential(nn.Flatten(),\n                                    nn.Linear(784, 10))\n    def forward(self, x):\n        return self.linear(x)\n\nmlr_model = MNIST_MLR()\nmlr_module = SimpleModule.classification(mlr_model,\n                                         num_classes=10)\nmlr_logger = CSVLogger('logs', name='MNIST_MLR')\n\n\nmlr_trainer = Trainer(deterministic=False,#True\n                      max_epochs=30,\n                      enable_progress_bar=False,\n                      callbacks=[ErrorTracker()])\nmlr_trainer.fit(mlr_module, datamodule=mnist_dm)\n\nGPU available: True (cuda), used: True\nTPU available: False, using: 0 TPU cores\nIPU available: False, using: 0 IPUs\nHPU available: False, using: 0 HPUs\n/home/oren/work/notes/notes-islr-py/.venv/lib/python3.10/site-packages/pytorch_lightning/trainer/connectors/logger_connector/logger_connector.py:75: Starting from v1.9.0, `tensorboardX` has been removed as a dependency of the `pytorch_lightning` package, due to potential conflicts with other packages in the ML ecosystem. For this reason, `logger=True` will use `CSVLogger` as the default logger, unless the `tensorboard` or `tensorboardX` packages are found. Please `pip install lightning[extra]` or one of them to enable TensorBoard support by default\nLOCAL_RANK: 0 - CUDA_VISIBLE_DEVICES: [0]\n\n  | Name  | Type             | Params\n-------------------------------------------\n0 | model | MNIST_MLR        | 7.9 K \n1 | loss  | CrossEntropyLoss | 0     \n-------------------------------------------\n7.9 K     Trainable params\n0         Non-trainable params\n7.9 K     Total params\n0.031     Total estimated model params size (MB)\n`Trainer.fit` stopped: `max_epochs=30` reached.\n\n\nWe fit the model just as before and compute the test results.\n\nmlr_trainer.test(mlr_module,\n                 datamodule=mnist_dm)\n\nLOCAL_RANK: 0 - CUDA_VISIBLE_DEVICES: [0]\n\n\n────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────\n       Test metric             DataLoader 0\n────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────\n      test_accuracy          0.920799970626831\n        test_loss           0.33121007680892944\n────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────\n\n\n[{'test_loss': 0.33121007680892944, 'test_accuracy': 0.920799970626831}]\n\n\nThe accuracy is above 90% even for this pretty simple model.\nAs in the Hitters example, we delete some of the objects we created above.\n\ndel(mnist_test,\n    mnist_train,\n    mnist_model,\n    mnist_dm,\n    mnist_trainer,\n    mnist_module,\n    mnist_results,\n    mlr_model,\n    mlr_module,\n    mlr_trainer)\n\n\n\n\nIn this section we fit a CNN to the CIFAR100 data, which is available in the torchvision package. It is arranged in a similar fashion as the MNIST data.\n\n(cifar_train, \n cifar_test) = [CIFAR100(root=\"data\",\n                         train=train,\n                         download=True)\n             for train in [True, False]]\n\nFiles already downloaded and verified\nFiles already downloaded and verified\n\n\n\ntransform = ToTensor()\ncifar_train_X = torch.stack([transform(x) for x in\n                            cifar_train.data])\ncifar_test_X = torch.stack([transform(x) for x in\n                            cifar_test.data])\ncifar_train = TensorDataset(cifar_train_X,\n                            torch.tensor(cifar_train.targets))\ncifar_test = TensorDataset(cifar_test_X,\n                            torch.tensor(cifar_test.targets))\n\nThe CIFAR100 dataset consists of 50,000 training images, each represented by a three-dimensional tensor: each three-color image is represented as a set of three channels, each of which consists of 32\\times 32 eight-bit pixels. We standardize as we did for the digits, but keep the array structure. This is accomplished with the ToTensor() transform.\nCreating the data module is similar to the MNIST example.\n\ncifar_dm = SimpleDataModule(cifar_train,\n                            cifar_test,\n                            validation=0.2,\n                            num_workers=max_num_workers,\n                            batch_size=128)\n\nWe again look at the shape of typical batches in our data loaders.\n\nfor idx, (X_ ,Y_) in enumerate(cifar_dm.train_dataloader()):\n    print('X: ', X_.shape)\n    print('Y: ', Y_.shape)\n    if idx &gt;= 1:\n        break\n\nX:  torch.Size([128, 3, 32, 32])\nY:  torch.Size([128])\nX:  torch.Size([128, 3, 32, 32])\nY:  torch.Size([128])\n\n\nBefore we start, we look at some of the training images; similar code produced Figure~ on page . The example below also illustrates that TensorDataset objects can be indexed with integers — we are choosing random images from the training data by indexing cifar_train. In order to display correctly, we must reorder the dimensions by a call to np.transpose().\n\nfig, axes = subplots(5, 5, figsize=(10,10))\nrng = np.random.default_rng(4)\nindices = rng.choice(np.arange(len(cifar_train)), 25,\n                     replace=False).reshape((5,5))\nfor i in range(5):\n    for j in range(5):\n        idx = indices[i,j]\n        axes[i,j].imshow(np.transpose(cifar_train[idx][0],\n                                      [1,2,0]),\n                                      interpolation=None)\n        axes[i,j].set_xticks([])\n        axes[i,j].set_yticks([])\n\n\n\n\n\n\n\n\nHere the imshow() method recognizes from the shape of its argument that it is a 3-dimensional array, with the last dimension indexing the three RGB color channels.\nWe specify a moderately-sized CNN for demonstration purposes, similar in structure to Figure~. We use several layers, each consisting of convolution, ReLU, and max-pooling steps. We first define a module that defines one of these layers. As in our previous examples, we overwrite the __init__() and forward() methods of nn.Module. This user-defined module can now be used in ways just like nn.Linear() or nn.Dropout().\n\nclass BuildingBlock(nn.Module):\n\n    def __init__(self,\n                 in_channels,\n                 out_channels):\n\n        super(BuildingBlock, self).__init__()\n        self.conv = nn.Conv2d(in_channels=in_channels,\n                              out_channels=out_channels,\n                              kernel_size=(3,3),\n                              padding='same')\n        self.activation = nn.ReLU()\n        self.pool = nn.MaxPool2d(kernel_size=(2,2))\n\n    def forward(self, x):\n        return self.pool(self.activation(self.conv(x)))\n\nNotice that we used the padding = \"same\" argument to nn.Conv2d(), which ensures that the output channels have the same dimension as the input channels. There are 32 channels in the first hidden layer, in contrast to the three channels in the input layer. We use a 3\\times 3 convolution filter for each channel in all the layers. Each convolution is followed by a max-pooling layer over 2\\times2 blocks.\nIn forming our deep learning model for the CIFAR100 data, we use several of our BuildingBlock() modules sequentially. This simple example illustrates some of the power of torch. Users can define modules of their own, which can be combined in other modules. Ultimately, everything is fit by a generic trainer.\n\nclass CIFARModel(nn.Module):\n\n    def __init__(self):\n        super(CIFARModel, self).__init__()\n        sizes = [(3,32),\n                 (32,64),\n                 (64,128),\n                 (128,256)]\n        self.conv = nn.Sequential(*[BuildingBlock(in_, out_)\n                                    for in_, out_ in sizes])\n\n        self.output = nn.Sequential(nn.Dropout(0.5),\n                                    nn.Linear(2*2*256, 512),\n                                    nn.ReLU(),\n                                    nn.Linear(512, 100))\n    def forward(self, x):\n        val = self.conv(x)\n        val = torch.flatten(val, start_dim=1)\n        return self.output(val)\n\nWe build the model and look at the summary. (We had created examples of X_ earlier.)\n\ncifar_model = CIFARModel()\nsummary(cifar_model,\n        input_data=X_,\n        col_names=['input_size',\n                   'output_size',\n                   'num_params'])\n\n===================================================================================================================\nLayer (type:depth-idx)                   Input Shape               Output Shape              Param #\n===================================================================================================================\nCIFARModel                               [128, 3, 32, 32]          [128, 100]                --\n├─Sequential: 1-1                        [128, 3, 32, 32]          [128, 256, 2, 2]          --\n│    └─BuildingBlock: 2-1                [128, 3, 32, 32]          [128, 32, 16, 16]         --\n│    │    └─Conv2d: 3-1                  [128, 3, 32, 32]          [128, 32, 32, 32]         896\n│    │    └─ReLU: 3-2                    [128, 32, 32, 32]         [128, 32, 32, 32]         --\n│    │    └─MaxPool2d: 3-3               [128, 32, 32, 32]         [128, 32, 16, 16]         --\n│    └─BuildingBlock: 2-2                [128, 32, 16, 16]         [128, 64, 8, 8]           --\n│    │    └─Conv2d: 3-4                  [128, 32, 16, 16]         [128, 64, 16, 16]         18,496\n│    │    └─ReLU: 3-5                    [128, 64, 16, 16]         [128, 64, 16, 16]         --\n│    │    └─MaxPool2d: 3-6               [128, 64, 16, 16]         [128, 64, 8, 8]           --\n│    └─BuildingBlock: 2-3                [128, 64, 8, 8]           [128, 128, 4, 4]          --\n│    │    └─Conv2d: 3-7                  [128, 64, 8, 8]           [128, 128, 8, 8]          73,856\n│    │    └─ReLU: 3-8                    [128, 128, 8, 8]          [128, 128, 8, 8]          --\n│    │    └─MaxPool2d: 3-9               [128, 128, 8, 8]          [128, 128, 4, 4]          --\n│    └─BuildingBlock: 2-4                [128, 128, 4, 4]          [128, 256, 2, 2]          --\n│    │    └─Conv2d: 3-10                 [128, 128, 4, 4]          [128, 256, 4, 4]          295,168\n│    │    └─ReLU: 3-11                   [128, 256, 4, 4]          [128, 256, 4, 4]          --\n│    │    └─MaxPool2d: 3-12              [128, 256, 4, 4]          [128, 256, 2, 2]          --\n├─Sequential: 1-2                        [128, 1024]               [128, 100]                --\n│    └─Dropout: 2-5                      [128, 1024]               [128, 1024]               --\n│    └─Linear: 2-6                       [128, 1024]               [128, 512]                524,800\n│    └─ReLU: 2-7                         [128, 512]                [128, 512]                --\n│    └─Linear: 2-8                       [128, 512]                [128, 100]                51,300\n===================================================================================================================\nTotal params: 964,516\nTrainable params: 964,516\nNon-trainable params: 0\nTotal mult-adds (G): 2.01\n===================================================================================================================\nInput size (MB): 1.57\nForward/backward pass size (MB): 63.54\nParams size (MB): 3.86\nEstimated Total Size (MB): 68.97\n===================================================================================================================\n\n\nThe total number of trainable parameters is 964,516. By studying the size of the parameters, we can see that the channels halve in both dimensions after each of these max-pooling operations. After the last of these we have a layer with 256 channels of dimension 2\\times 2. These are then flattened to a dense layer of size 1,024; in other words, each of the 2\\times 2 matrices is turned into a 4-vector, and put side-by-side in one layer. This is followed by a dropout regularization layer, then another dense layer of size 512, and finally, the output layer.\nUp to now, we have been using a default optimizer in SimpleModule(). For these data, experiments show that a smaller learning rate performs better than the default 0.01. We use a custom optimizer here with a learning rate of 0.001. Besides this, the logging and training follow a similar pattern to our previous examples. The optimizer takes an argument params that informs the optimizer which parameters are involved in SGD (stochastic gradient descent).\nWe saw earlier that entries of a module’s parameters are tensors. In passing the parameters to the optimizer we are doing more than simply passing arrays; part of the structure of the graph is encoded in the tensors themselves.\n\ncifar_optimizer = RMSprop(cifar_model.parameters(), lr=0.001)\ncifar_module = SimpleModule.classification(cifar_model,\n                                    num_classes=100,\n                                    optimizer=cifar_optimizer)\ncifar_logger = CSVLogger('logs', name='CIFAR100')\n\n\ncifar_trainer = Trainer(deterministic=False,#True\n                        max_epochs=30,\n                        logger=cifar_logger,\n                        enable_progress_bar=False,\n                        callbacks=[ErrorTracker()])\ncifar_trainer.fit(cifar_module,\n                  datamodule=cifar_dm)\n\nGPU available: True (cuda), used: True\nTPU available: False, using: 0 TPU cores\nIPU available: False, using: 0 IPUs\nHPU available: False, using: 0 HPUs\nLOCAL_RANK: 0 - CUDA_VISIBLE_DEVICES: [0]\n\n  | Name  | Type             | Params\n-------------------------------------------\n0 | model | CIFARModel       | 964 K \n1 | loss  | CrossEntropyLoss | 0     \n-------------------------------------------\n964 K     Trainable params\n0         Non-trainable params\n964 K     Total params\n3.858     Total estimated model params size (MB)\nCould not load library libcudnn_cnn_train.so.8. Error: /usr/lib/x86_64-linux-gnu/libcudnn_cnn_train.so.8: undefined symbol: _ZN5cudnn3cnn34layerNormFwd_execute_internal_implERKNS_7backend11VariantPackEP11CUstream_stRNS0_18LayerNormFwdParamsERKNS1_20NormForwardOperationEmb, version libcudnn_cnn_infer.so.8\nCould not load library libcudnn_cnn_train.so.8. Error: /usr/lib/x86_64-linux-gnu/libcudnn_cnn_train.so.8: undefined symbol: _ZN5cudnn3cnn34layerNormFwd_execute_internal_implERKNS_7backend11VariantPackEP11CUstream_stRNS0_18LayerNormFwdParamsERKNS1_20NormForwardOperationEmb, version libcudnn_cnn_infer.so.8\nCould not load library libcudnn_cnn_train.so.8. Error: /usr/lib/x86_64-linux-gnu/libcudnn_cnn_train.so.8: undefined symbol: _ZN5cudnn3cnn34layerNormFwd_execute_internal_implERKNS_7backend11VariantPackEP11CUstream_stRNS0_18LayerNormFwdParamsERKNS1_20NormForwardOperationEmb, version libcudnn_cnn_infer.so.8\nCould not load library libcudnn_cnn_train.so.8. Error: /usr/lib/x86_64-linux-gnu/libcudnn_cnn_train.so.8: undefined symbol: _ZN5cudnn3cnn34layerNormFwd_execute_internal_implERKNS_7backend11VariantPackEP11CUstream_stRNS0_18LayerNormFwdParamsERKNS1_20NormForwardOperationEmb, version libcudnn_cnn_infer.so.8\nCould not load library libcudnn_cnn_train.so.8. Error: /usr/lib/x86_64-linux-gnu/libcudnn_cnn_train.so.8: undefined symbol: _ZN5cudnn3cnn34layerNormFwd_execute_internal_implERKNS_7backend11VariantPackEP11CUstream_stRNS0_18LayerNormFwdParamsERKNS1_20NormForwardOperationEmb, version libcudnn_cnn_infer.so.8\nCould not load library libcudnn_cnn_train.so.8. Error: /usr/lib/x86_64-linux-gnu/libcudnn_cnn_train.so.8: undefined symbol: _ZN5cudnn3cnn34layerNormFwd_execute_internal_implERKNS_7backend11VariantPackEP11CUstream_stRNS0_18LayerNormFwdParamsERKNS1_20NormForwardOperationEmb, version libcudnn_cnn_infer.so.8\nCould not load library libcudnn_cnn_train.so.8. Error: /usr/lib/x86_64-linux-gnu/libcudnn_cnn_train.so.8: undefined symbol: _ZN5cudnn3cnn34layerNormFwd_execute_internal_implERKNS_7backend11VariantPackEP11CUstream_stRNS0_18LayerNormFwdParamsERKNS1_20NormForwardOperationEmb, version libcudnn_cnn_infer.so.8\nCould not load library libcudnn_cnn_train.so.8. Error: /usr/lib/x86_64-linux-gnu/libcudnn_cnn_train.so.8: undefined symbol: _ZN5cudnn3cnn34layerNormFwd_execute_internal_implERKNS_7backend11VariantPackEP11CUstream_stRNS0_18LayerNormFwdParamsERKNS1_20NormForwardOperationEmb, version libcudnn_cnn_infer.so.8\nCould not load library libcudnn_cnn_train.so.8. Error: /usr/lib/x86_64-linux-gnu/libcudnn_cnn_train.so.8: undefined symbol: _ZN5cudnn3cnn34layerNormFwd_execute_internal_implERKNS_7backend11VariantPackEP11CUstream_stRNS0_18LayerNormFwdParamsERKNS1_20NormForwardOperationEmb, version libcudnn_cnn_infer.so.8\nCould not load library libcudnn_cnn_train.so.8. Error: /usr/lib/x86_64-linux-gnu/libcudnn_cnn_train.so.8: undefined symbol: _ZN5cudnn3cnn34layerNormFwd_execute_internal_implERKNS_7backend11VariantPackEP11CUstream_stRNS0_18LayerNormFwdParamsERKNS1_20NormForwardOperationEmb, version libcudnn_cnn_infer.so.8\nCould not load library libcudnn_cnn_train.so.8. Error: /usr/lib/x86_64-linux-gnu/libcudnn_cnn_train.so.8: undefined symbol: _ZN5cudnn3cnn34layerNormFwd_execute_internal_implERKNS_7backend11VariantPackEP11CUstream_stRNS0_18LayerNormFwdParamsERKNS1_20NormForwardOperationEmb, version libcudnn_cnn_infer.so.8\nCould not load library libcudnn_cnn_train.so.8. Error: /usr/lib/x86_64-linux-gnu/libcudnn_cnn_train.so.8: undefined symbol: _ZN5cudnn3cnn34layerNormFwd_execute_internal_implERKNS_7backend11VariantPackEP11CUstream_stRNS0_18LayerNormFwdParamsERKNS1_20NormForwardOperationEmb, version libcudnn_cnn_infer.so.8\nCould not load library libcudnn_cnn_train.so.8. Error: /usr/lib/x86_64-linux-gnu/libcudnn_cnn_train.so.8: undefined symbol: _ZN5cudnn3cnn34layerNormFwd_execute_internal_implERKNS_7backend11VariantPackEP11CUstream_stRNS0_18LayerNormFwdParamsERKNS1_20NormForwardOperationEmb, version libcudnn_cnn_infer.so.8\nCould not load library libcudnn_cnn_train.so.8. Error: /usr/lib/x86_64-linux-gnu/libcudnn_cnn_train.so.8: undefined symbol: _ZN5cudnn3cnn34layerNormFwd_execute_internal_implERKNS_7backend11VariantPackEP11CUstream_stRNS0_18LayerNormFwdParamsERKNS1_20NormForwardOperationEmb, version libcudnn_cnn_infer.so.8\nCould not load library libcudnn_cnn_train.so.8. Error: /usr/lib/x86_64-linux-gnu/libcudnn_cnn_train.so.8: undefined symbol: _ZN5cudnn3cnn34layerNormFwd_execute_internal_implERKNS_7backend11VariantPackEP11CUstream_stRNS0_18LayerNormFwdParamsERKNS1_20NormForwardOperationEmb, version libcudnn_cnn_infer.so.8\nCould not load library libcudnn_cnn_train.so.8. Error: /usr/lib/x86_64-linux-gnu/libcudnn_cnn_train.so.8: undefined symbol: _ZN5cudnn3cnn34layerNormFwd_execute_internal_implERKNS_7backend11VariantPackEP11CUstream_stRNS0_18LayerNormFwdParamsERKNS1_20NormForwardOperationEmb, version libcudnn_cnn_infer.so.8\nCould not load library libcudnn_cnn_train.so.8. Error: /usr/lib/x86_64-linux-gnu/libcudnn_cnn_train.so.8: undefined symbol: _ZN5cudnn3cnn34layerNormFwd_execute_internal_implERKNS_7backend11VariantPackEP11CUstream_stRNS0_18LayerNormFwdParamsERKNS1_20NormForwardOperationEmb, version libcudnn_cnn_infer.so.8\nCould not load library libcudnn_cnn_train.so.8. Error: /usr/lib/x86_64-linux-gnu/libcudnn_cnn_train.so.8: undefined symbol: _ZN5cudnn3cnn34layerNormFwd_execute_internal_implERKNS_7backend11VariantPackEP11CUstream_stRNS0_18LayerNormFwdParamsERKNS1_20NormForwardOperationEmb, version libcudnn_cnn_infer.so.8\nCould not load library libcudnn_cnn_train.so.8. Error: /usr/lib/x86_64-linux-gnu/libcudnn_cnn_train.so.8: undefined symbol: _ZN5cudnn3cnn34layerNormFwd_execute_internal_implERKNS_7backend11VariantPackEP11CUstream_stRNS0_18LayerNormFwdParamsERKNS1_20NormForwardOperationEmb, version libcudnn_cnn_infer.so.8\nCould not load library libcudnn_cnn_train.so.8. Error: /usr/lib/x86_64-linux-gnu/libcudnn_cnn_train.so.8: undefined symbol: _ZN5cudnn3cnn34layerNormFwd_execute_internal_implERKNS_7backend11VariantPackEP11CUstream_stRNS0_18LayerNormFwdParamsERKNS1_20NormForwardOperationEmb, version libcudnn_cnn_infer.so.8\nCould not load library libcudnn_cnn_train.so.8. Error: /usr/lib/x86_64-linux-gnu/libcudnn_cnn_train.so.8: undefined symbol: _ZN5cudnn3cnn34layerNormFwd_execute_internal_implERKNS_7backend11VariantPackEP11CUstream_stRNS0_18LayerNormFwdParamsERKNS1_20NormForwardOperationEmb, version libcudnn_cnn_infer.so.8\nCould not load library libcudnn_cnn_train.so.8. Error: /usr/lib/x86_64-linux-gnu/libcudnn_cnn_train.so.8: undefined symbol: _ZN5cudnn3cnn34layerNormFwd_execute_internal_implERKNS_7backend11VariantPackEP11CUstream_stRNS0_18LayerNormFwdParamsERKNS1_20NormForwardOperationEmb, version libcudnn_cnn_infer.so.8\nCould not load library libcudnn_cnn_train.so.8. Error: /usr/lib/x86_64-linux-gnu/libcudnn_cnn_train.so.8: undefined symbol: _ZN5cudnn3cnn34layerNormFwd_execute_internal_implERKNS_7backend11VariantPackEP11CUstream_stRNS0_18LayerNormFwdParamsERKNS1_20NormForwardOperationEmb, version libcudnn_cnn_infer.so.8\nCould not load library libcudnn_cnn_train.so.8. Error: /usr/lib/x86_64-linux-gnu/libcudnn_cnn_train.so.8: undefined symbol: _ZN5cudnn3cnn34layerNormFwd_execute_internal_implERKNS_7backend11VariantPackEP11CUstream_stRNS0_18LayerNormFwdParamsERKNS1_20NormForwardOperationEmb, version libcudnn_cnn_infer.so.8\nCould not load library libcudnn_cnn_train.so.8. Error: /usr/lib/x86_64-linux-gnu/libcudnn_cnn_train.so.8: undefined symbol: _ZN5cudnn3cnn34layerNormFwd_execute_internal_implERKNS_7backend11VariantPackEP11CUstream_stRNS0_18LayerNormFwdParamsERKNS1_20NormForwardOperationEmb, version libcudnn_cnn_infer.so.8\nCould not load library libcudnn_cnn_train.so.8. Error: /usr/lib/x86_64-linux-gnu/libcudnn_cnn_train.so.8: undefined symbol: _ZN5cudnn3cnn34layerNormFwd_execute_internal_implERKNS_7backend11VariantPackEP11CUstream_stRNS0_18LayerNormFwdParamsERKNS1_20NormForwardOperationEmb, version libcudnn_cnn_infer.so.8\nCould not load library libcudnn_cnn_train.so.8. Error: /usr/lib/x86_64-linux-gnu/libcudnn_cnn_train.so.8: undefined symbol: _ZN5cudnn3cnn34layerNormFwd_execute_internal_implERKNS_7backend11VariantPackEP11CUstream_stRNS0_18LayerNormFwdParamsERKNS1_20NormForwardOperationEmb, version libcudnn_cnn_infer.so.8\nCould not load library libcudnn_cnn_train.so.8. Error: /usr/lib/x86_64-linux-gnu/libcudnn_cnn_train.so.8: undefined symbol: _ZN5cudnn3cnn34layerNormFwd_execute_internal_implERKNS_7backend11VariantPackEP11CUstream_stRNS0_18LayerNormFwdParamsERKNS1_20NormForwardOperationEmb, version libcudnn_cnn_infer.so.8\nCould not load library libcudnn_cnn_train.so.8. Error: /usr/lib/x86_64-linux-gnu/libcudnn_cnn_train.so.8: undefined symbol: _ZN5cudnn3cnn34layerNormFwd_execute_internal_implERKNS_7backend11VariantPackEP11CUstream_stRNS0_18LayerNormFwdParamsERKNS1_20NormForwardOperationEmb, version libcudnn_cnn_infer.so.8\nCould not load library libcudnn_cnn_train.so.8. Error: /usr/lib/x86_64-linux-gnu/libcudnn_cnn_train.so.8: undefined symbol: _ZN5cudnn3cnn34layerNormFwd_execute_internal_implERKNS_7backend11VariantPackEP11CUstream_stRNS0_18LayerNormFwdParamsERKNS1_20NormForwardOperationEmb, version libcudnn_cnn_infer.so.8\nCould not load library libcudnn_cnn_train.so.8. Error: /usr/lib/x86_64-linux-gnu/libcudnn_cnn_train.so.8: undefined symbol: _ZN5cudnn3cnn34layerNormFwd_execute_internal_implERKNS_7backend11VariantPackEP11CUstream_stRNS0_18LayerNormFwdParamsERKNS1_20NormForwardOperationEmb, version libcudnn_cnn_infer.so.8\nCould not load library libcudnn_cnn_train.so.8. Error: /usr/lib/x86_64-linux-gnu/libcudnn_cnn_train.so.8: undefined symbol: _ZN5cudnn3cnn34layerNormFwd_execute_internal_implERKNS_7backend11VariantPackEP11CUstream_stRNS0_18LayerNormFwdParamsERKNS1_20NormForwardOperationEmb, version libcudnn_cnn_infer.so.8\nCould not load library libcudnn_cnn_train.so.8. Error: /usr/lib/x86_64-linux-gnu/libcudnn_cnn_train.so.8: undefined symbol: _ZN5cudnn3cnn34layerNormFwd_execute_internal_implERKNS_7backend11VariantPackEP11CUstream_stRNS0_18LayerNormFwdParamsERKNS1_20NormForwardOperationEmb, version libcudnn_cnn_infer.so.8\nCould not load library libcudnn_cnn_train.so.8. Error: /usr/lib/x86_64-linux-gnu/libcudnn_cnn_train.so.8: undefined symbol: _ZN5cudnn3cnn34layerNormFwd_execute_internal_implERKNS_7backend11VariantPackEP11CUstream_stRNS0_18LayerNormFwdParamsERKNS1_20NormForwardOperationEmb, version libcudnn_cnn_infer.so.8\nCould not load library libcudnn_cnn_train.so.8. Error: /usr/lib/x86_64-linux-gnu/libcudnn_cnn_train.so.8: undefined symbol: _ZN5cudnn3cnn34layerNormFwd_execute_internal_implERKNS_7backend11VariantPackEP11CUstream_stRNS0_18LayerNormFwdParamsERKNS1_20NormForwardOperationEmb, version libcudnn_cnn_infer.so.8\nCould not load library libcudnn_cnn_train.so.8. Error: /usr/lib/x86_64-linux-gnu/libcudnn_cnn_train.so.8: undefined symbol: _ZN5cudnn3cnn34layerNormFwd_execute_internal_implERKNS_7backend11VariantPackEP11CUstream_stRNS0_18LayerNormFwdParamsERKNS1_20NormForwardOperationEmb, version libcudnn_cnn_infer.so.8\nCould not load library libcudnn_cnn_train.so.8. Error: /usr/lib/x86_64-linux-gnu/libcudnn_cnn_train.so.8: undefined symbol: _ZN5cudnn3cnn34layerNormFwd_execute_internal_implERKNS_7backend11VariantPackEP11CUstream_stRNS0_18LayerNormFwdParamsERKNS1_20NormForwardOperationEmb, version libcudnn_cnn_infer.so.8\nCould not load library libcudnn_cnn_train.so.8. Error: /usr/lib/x86_64-linux-gnu/libcudnn_cnn_train.so.8: undefined symbol: _ZN5cudnn3cnn34layerNormFwd_execute_internal_implERKNS_7backend11VariantPackEP11CUstream_stRNS0_18LayerNormFwdParamsERKNS1_20NormForwardOperationEmb, version libcudnn_cnn_infer.so.8\nCould not load library libcudnn_cnn_train.so.8. Error: /usr/lib/x86_64-linux-gnu/libcudnn_cnn_train.so.8: undefined symbol: _ZN5cudnn3cnn34layerNormFwd_execute_internal_implERKNS_7backend11VariantPackEP11CUstream_stRNS0_18LayerNormFwdParamsERKNS1_20NormForwardOperationEmb, version libcudnn_cnn_infer.so.8\nCould not load library libcudnn_cnn_train.so.8. Error: /usr/lib/x86_64-linux-gnu/libcudnn_cnn_train.so.8: undefined symbol: _ZN5cudnn3cnn34layerNormFwd_execute_internal_implERKNS_7backend11VariantPackEP11CUstream_stRNS0_18LayerNormFwdParamsERKNS1_20NormForwardOperationEmb, version libcudnn_cnn_infer.so.8\nCould not load library libcudnn_cnn_train.so.8. Error: /usr/lib/x86_64-linux-gnu/libcudnn_cnn_train.so.8: undefined symbol: _ZN5cudnn3cnn34layerNormFwd_execute_internal_implERKNS_7backend11VariantPackEP11CUstream_stRNS0_18LayerNormFwdParamsERKNS1_20NormForwardOperationEmb, version libcudnn_cnn_infer.so.8\nCould not load library libcudnn_cnn_train.so.8. Error: /usr/lib/x86_64-linux-gnu/libcudnn_cnn_train.so.8: undefined symbol: _ZN5cudnn3cnn34layerNormFwd_execute_internal_implERKNS_7backend11VariantPackEP11CUstream_stRNS0_18LayerNormFwdParamsERKNS1_20NormForwardOperationEmb, version libcudnn_cnn_infer.so.8\nCould not load library libcudnn_cnn_train.so.8. Error: /usr/lib/x86_64-linux-gnu/libcudnn_cnn_train.so.8: undefined symbol: _ZN5cudnn3cnn34layerNormFwd_execute_internal_implERKNS_7backend11VariantPackEP11CUstream_stRNS0_18LayerNormFwdParamsERKNS1_20NormForwardOperationEmb, version libcudnn_cnn_infer.so.8\n\n\n\n---------------------------------------------------------------------------\nRuntimeError                              Traceback (most recent call last)\nCell In[58], line 6\n      1 cifar_trainer = Trainer(deterministic=False,#True\n      2                         max_epochs=30,\n      3                         logger=cifar_logger,\n      4                         enable_progress_bar=False,\n      5                         callbacks=[ErrorTracker()])\n----&gt; 6 cifar_trainer.fit(cifar_module,\n      7                   datamodule=cifar_dm)\n\nFile ~/work/notes/notes-islr-py/.venv/lib/python3.10/site-packages/pytorch_lightning/trainer/trainer.py:544, in Trainer.fit(self, model, train_dataloaders, val_dataloaders, datamodule, ckpt_path)\n    542 self.state.status = TrainerStatus.RUNNING\n    543 self.training = True\n--&gt; 544 call._call_and_handle_interrupt(\n    545     self, self._fit_impl, model, train_dataloaders, val_dataloaders, datamodule, ckpt_path\n    546 )\n\nFile ~/work/notes/notes-islr-py/.venv/lib/python3.10/site-packages/pytorch_lightning/trainer/call.py:44, in _call_and_handle_interrupt(trainer, trainer_fn, *args, **kwargs)\n     42     if trainer.strategy.launcher is not None:\n     43         return trainer.strategy.launcher.launch(trainer_fn, *args, trainer=trainer, **kwargs)\n---&gt; 44     return trainer_fn(*args, **kwargs)\n     46 except _TunerExitException:\n     47     _call_teardown_hook(trainer)\n\nFile ~/work/notes/notes-islr-py/.venv/lib/python3.10/site-packages/pytorch_lightning/trainer/trainer.py:580, in Trainer._fit_impl(self, model, train_dataloaders, val_dataloaders, datamodule, ckpt_path)\n    573 assert self.state.fn is not None\n    574 ckpt_path = self._checkpoint_connector._select_ckpt_path(\n    575     self.state.fn,\n    576     ckpt_path,\n    577     model_provided=True,\n    578     model_connected=self.lightning_module is not None,\n    579 )\n--&gt; 580 self._run(model, ckpt_path=ckpt_path)\n    582 assert self.state.stopped\n    583 self.training = False\n\nFile ~/work/notes/notes-islr-py/.venv/lib/python3.10/site-packages/pytorch_lightning/trainer/trainer.py:987, in Trainer._run(self, model, ckpt_path)\n    982 self._signal_connector.register_signal_handlers()\n    984 # ----------------------------\n    985 # RUN THE TRAINER\n    986 # ----------------------------\n--&gt; 987 results = self._run_stage()\n    989 # ----------------------------\n    990 # POST-Training CLEAN UP\n    991 # ----------------------------\n    992 log.debug(f\"{self.__class__.__name__}: trainer tearing down\")\n\nFile ~/work/notes/notes-islr-py/.venv/lib/python3.10/site-packages/pytorch_lightning/trainer/trainer.py:1033, in Trainer._run_stage(self)\n   1031         self._run_sanity_check()\n   1032     with torch.autograd.set_detect_anomaly(self._detect_anomaly):\n-&gt; 1033         self.fit_loop.run()\n   1034     return None\n   1035 raise RuntimeError(f\"Unexpected state {self.state}\")\n\nFile ~/work/notes/notes-islr-py/.venv/lib/python3.10/site-packages/pytorch_lightning/loops/fit_loop.py:205, in _FitLoop.run(self)\n    203 try:\n    204     self.on_advance_start()\n--&gt; 205     self.advance()\n    206     self.on_advance_end()\n    207     self._restarting = False\n\nFile ~/work/notes/notes-islr-py/.venv/lib/python3.10/site-packages/pytorch_lightning/loops/fit_loop.py:363, in _FitLoop.advance(self)\n    361 with self.trainer.profiler.profile(\"run_training_epoch\"):\n    362     assert self._data_fetcher is not None\n--&gt; 363     self.epoch_loop.run(self._data_fetcher)\n\nFile ~/work/notes/notes-islr-py/.venv/lib/python3.10/site-packages/pytorch_lightning/loops/training_epoch_loop.py:140, in _TrainingEpochLoop.run(self, data_fetcher)\n    138 while not self.done:\n    139     try:\n--&gt; 140         self.advance(data_fetcher)\n    141         self.on_advance_end(data_fetcher)\n    142         self._restarting = False\n\nFile ~/work/notes/notes-islr-py/.venv/lib/python3.10/site-packages/pytorch_lightning/loops/training_epoch_loop.py:250, in _TrainingEpochLoop.advance(self, data_fetcher)\n    247 with trainer.profiler.profile(\"run_training_batch\"):\n    248     if trainer.lightning_module.automatic_optimization:\n    249         # in automatic optimization, there can only be one optimizer\n--&gt; 250         batch_output = self.automatic_optimization.run(trainer.optimizers[0], batch_idx, kwargs)\n    251     else:\n    252         batch_output = self.manual_optimization.run(kwargs)\n\nFile ~/work/notes/notes-islr-py/.venv/lib/python3.10/site-packages/pytorch_lightning/loops/optimization/automatic.py:190, in _AutomaticOptimization.run(self, optimizer, batch_idx, kwargs)\n    183         closure()\n    185 # ------------------------------\n    186 # BACKWARD PASS\n    187 # ------------------------------\n    188 # gradient update with accumulated gradients\n    189 else:\n--&gt; 190     self._optimizer_step(batch_idx, closure)\n    192 result = closure.consume_result()\n    193 if result.loss is None:\n\nFile ~/work/notes/notes-islr-py/.venv/lib/python3.10/site-packages/pytorch_lightning/loops/optimization/automatic.py:268, in _AutomaticOptimization._optimizer_step(self, batch_idx, train_step_and_backward_closure)\n    265     self.optim_progress.optimizer.step.increment_ready()\n    267 # model hook\n--&gt; 268 call._call_lightning_module_hook(\n    269     trainer,\n    270     \"optimizer_step\",\n    271     trainer.current_epoch,\n    272     batch_idx,\n    273     optimizer,\n    274     train_step_and_backward_closure,\n    275 )\n    277 if not should_accumulate:\n    278     self.optim_progress.optimizer.step.increment_completed()\n\nFile ~/work/notes/notes-islr-py/.venv/lib/python3.10/site-packages/pytorch_lightning/trainer/call.py:157, in _call_lightning_module_hook(trainer, hook_name, pl_module, *args, **kwargs)\n    154 pl_module._current_fx_name = hook_name\n    156 with trainer.profiler.profile(f\"[LightningModule]{pl_module.__class__.__name__}.{hook_name}\"):\n--&gt; 157     output = fn(*args, **kwargs)\n    159 # restore current_fx when nested context\n    160 pl_module._current_fx_name = prev_fx_name\n\nFile ~/work/notes/notes-islr-py/.venv/lib/python3.10/site-packages/pytorch_lightning/core/module.py:1303, in LightningModule.optimizer_step(self, epoch, batch_idx, optimizer, optimizer_closure)\n   1264 def optimizer_step(\n   1265     self,\n   1266     epoch: int,\n   (...)\n   1269     optimizer_closure: Optional[Callable[[], Any]] = None,\n   1270 ) -&gt; None:\n   1271     r\"\"\"Override this method to adjust the default way the :class:`~pytorch_lightning.trainer.trainer.Trainer` calls\n   1272     the optimizer.\n   1273 \n   (...)\n   1301 \n   1302     \"\"\"\n-&gt; 1303     optimizer.step(closure=optimizer_closure)\n\nFile ~/work/notes/notes-islr-py/.venv/lib/python3.10/site-packages/pytorch_lightning/core/optimizer.py:152, in LightningOptimizer.step(self, closure, **kwargs)\n    149     raise MisconfigurationException(\"When `optimizer.step(closure)` is called, the closure should be callable\")\n    151 assert self._strategy is not None\n--&gt; 152 step_output = self._strategy.optimizer_step(self._optimizer, closure, **kwargs)\n    154 self._on_after_step()\n    156 return step_output\n\nFile ~/work/notes/notes-islr-py/.venv/lib/python3.10/site-packages/pytorch_lightning/strategies/strategy.py:239, in Strategy.optimizer_step(self, optimizer, closure, model, **kwargs)\n    237 # TODO(fabric): remove assertion once strategy's optimizer_step typing is fixed\n    238 assert isinstance(model, pl.LightningModule)\n--&gt; 239 return self.precision_plugin.optimizer_step(optimizer, model=model, closure=closure, **kwargs)\n\nFile ~/work/notes/notes-islr-py/.venv/lib/python3.10/site-packages/pytorch_lightning/plugins/precision/precision.py:122, in Precision.optimizer_step(self, optimizer, model, closure, **kwargs)\n    120 \"\"\"Hook to run the optimizer step.\"\"\"\n    121 closure = partial(self._wrap_closure, model, optimizer, closure)\n--&gt; 122 return optimizer.step(closure=closure, **kwargs)\n\nFile ~/work/notes/notes-islr-py/.venv/lib/python3.10/site-packages/torch/optim/optimizer.py:391, in Optimizer.profile_hook_step.&lt;locals&gt;.wrapper(*args, **kwargs)\n    386         else:\n    387             raise RuntimeError(\n    388                 f\"{func} must return None or a tuple of (new_args, new_kwargs), but got {result}.\"\n    389             )\n--&gt; 391 out = func(*args, **kwargs)\n    392 self._optimizer_step_code()\n    394 # call optimizer step post hooks\n\nFile ~/work/notes/notes-islr-py/.venv/lib/python3.10/site-packages/torch/optim/optimizer.py:76, in _use_grad_for_differentiable.&lt;locals&gt;._use_grad(self, *args, **kwargs)\n     74     torch.set_grad_enabled(self.defaults['differentiable'])\n     75     torch._dynamo.graph_break()\n---&gt; 76     ret = func(self, *args, **kwargs)\n     77 finally:\n     78     torch._dynamo.graph_break()\n\nFile ~/work/notes/notes-islr-py/.venv/lib/python3.10/site-packages/torch/optim/rmsprop.py:109, in RMSprop.step(self, closure)\n    107 if closure is not None:\n    108     with torch.enable_grad():\n--&gt; 109         loss = closure()\n    111 for group in self.param_groups:\n    112     params_with_grad = []\n\nFile ~/work/notes/notes-islr-py/.venv/lib/python3.10/site-packages/pytorch_lightning/plugins/precision/precision.py:108, in Precision._wrap_closure(self, model, optimizer, closure)\n     95 def _wrap_closure(\n     96     self,\n     97     model: \"pl.LightningModule\",\n     98     optimizer: Optimizer,\n     99     closure: Callable[[], Any],\n    100 ) -&gt; Any:\n    101     \"\"\"This double-closure allows makes sure the ``closure`` is executed before the ``on_before_optimizer_step``\n    102     hook is called.\n    103 \n   (...)\n    106 \n    107     \"\"\"\n--&gt; 108     closure_result = closure()\n    109     self._after_closure(model, optimizer)\n    110     return closure_result\n\nFile ~/work/notes/notes-islr-py/.venv/lib/python3.10/site-packages/pytorch_lightning/loops/optimization/automatic.py:144, in Closure.__call__(self, *args, **kwargs)\n    142 @override\n    143 def __call__(self, *args: Any, **kwargs: Any) -&gt; Optional[Tensor]:\n--&gt; 144     self._result = self.closure(*args, **kwargs)\n    145     return self._result.loss\n\nFile ~/work/notes/notes-islr-py/.venv/lib/python3.10/site-packages/torch/utils/_contextlib.py:115, in context_decorator.&lt;locals&gt;.decorate_context(*args, **kwargs)\n    112 @functools.wraps(func)\n    113 def decorate_context(*args, **kwargs):\n    114     with ctx_factory():\n--&gt; 115         return func(*args, **kwargs)\n\nFile ~/work/notes/notes-islr-py/.venv/lib/python3.10/site-packages/pytorch_lightning/loops/optimization/automatic.py:138, in Closure.closure(self, *args, **kwargs)\n    135     self._zero_grad_fn()\n    137 if self._backward_fn is not None and step_output.closure_loss is not None:\n--&gt; 138     self._backward_fn(step_output.closure_loss)\n    140 return step_output\n\nFile ~/work/notes/notes-islr-py/.venv/lib/python3.10/site-packages/pytorch_lightning/loops/optimization/automatic.py:239, in _AutomaticOptimization._make_backward_fn.&lt;locals&gt;.backward_fn(loss)\n    238 def backward_fn(loss: Tensor) -&gt; None:\n--&gt; 239     call._call_strategy_hook(self.trainer, \"backward\", loss, optimizer)\n\nFile ~/work/notes/notes-islr-py/.venv/lib/python3.10/site-packages/pytorch_lightning/trainer/call.py:309, in _call_strategy_hook(trainer, hook_name, *args, **kwargs)\n    306     return None\n    308 with trainer.profiler.profile(f\"[Strategy]{trainer.strategy.__class__.__name__}.{hook_name}\"):\n--&gt; 309     output = fn(*args, **kwargs)\n    311 # restore current_fx when nested context\n    312 pl_module._current_fx_name = prev_fx_name\n\nFile ~/work/notes/notes-islr-py/.venv/lib/python3.10/site-packages/pytorch_lightning/strategies/strategy.py:213, in Strategy.backward(self, closure_loss, optimizer, *args, **kwargs)\n    210 assert self.lightning_module is not None\n    211 closure_loss = self.precision_plugin.pre_backward(closure_loss, self.lightning_module)\n--&gt; 213 self.precision_plugin.backward(closure_loss, self.lightning_module, optimizer, *args, **kwargs)\n    215 closure_loss = self.precision_plugin.post_backward(closure_loss, self.lightning_module)\n    216 self.post_backward(closure_loss)\n\nFile ~/work/notes/notes-islr-py/.venv/lib/python3.10/site-packages/pytorch_lightning/plugins/precision/precision.py:72, in Precision.backward(self, tensor, model, optimizer, *args, **kwargs)\n     52 @override\n     53 def backward(  # type: ignore[override]\n     54     self,\n   (...)\n     59     **kwargs: Any,\n     60 ) -&gt; None:\n     61     r\"\"\"Performs the actual backpropagation.\n     62 \n     63     Args:\n   (...)\n     70 \n     71     \"\"\"\n---&gt; 72     model.backward(tensor, *args, **kwargs)\n\nFile ~/work/notes/notes-islr-py/.venv/lib/python3.10/site-packages/pytorch_lightning/core/module.py:1090, in LightningModule.backward(self, loss, *args, **kwargs)\n   1088     self._fabric.backward(loss, *args, **kwargs)\n   1089 else:\n-&gt; 1090     loss.backward(*args, **kwargs)\n\nFile ~/work/notes/notes-islr-py/.venv/lib/python3.10/site-packages/torch/_tensor.py:525, in Tensor.backward(self, gradient, retain_graph, create_graph, inputs)\n    515 if has_torch_function_unary(self):\n    516     return handle_torch_function(\n    517         Tensor.backward,\n    518         (self,),\n   (...)\n    523         inputs=inputs,\n    524     )\n--&gt; 525 torch.autograd.backward(\n    526     self, gradient, retain_graph, create_graph, inputs=inputs\n    527 )\n\nFile ~/work/notes/notes-islr-py/.venv/lib/python3.10/site-packages/torch/autograd/__init__.py:267, in backward(tensors, grad_tensors, retain_graph, create_graph, grad_variables, inputs)\n    262     retain_graph = create_graph\n    264 # The reason we repeat the same comment below is that\n    265 # some Python versions print out the first line of a multi-line function\n    266 # calls in the traceback and some print out the last line\n--&gt; 267 _engine_run_backward(\n    268     tensors,\n    269     grad_tensors_,\n    270     retain_graph,\n    271     create_graph,\n    272     inputs,\n    273     allow_unreachable=True,\n    274     accumulate_grad=True,\n    275 )\n\nFile ~/work/notes/notes-islr-py/.venv/lib/python3.10/site-packages/torch/autograd/graph.py:744, in _engine_run_backward(t_outputs, *args, **kwargs)\n    742     unregister_hooks = _register_logging_hooks_on_whole_graph(t_outputs)\n    743 try:\n--&gt; 744     return Variable._execution_engine.run_backward(  # Calls into the C++ engine to run the backward pass\n    745         t_outputs, *args, **kwargs\n    746     )  # Calls into the C++ engine to run the backward pass\n    747 finally:\n    748     if attach_logging_hooks:\n\nRuntimeError: GET was unable to find an engine to execute this computation\n\n\n\nThis model can take 10 minutes or more to run and achieves about 42% accuracy on the test data. Although this is not terrible for 100-class data (a random classifier gets 1% accuracy), searching the web we see results around 75%. Typically it takes a lot of architecture carpentry, fiddling with regularization, and time, to achieve such results.\nLet’s take a look at the validation and training accuracy across epochs.\n\nlog_path = cifar_logger.experiment.metrics_file_path\ncifar_results = pd.read_csv(log_path)\nfig, ax = subplots(1, 1, figsize=(6, 6))\nsummary_plot(cifar_results,\n             ax,\n             col='accuracy',\n             ylabel='Accuracy')\nax.set_xticks(np.linspace(0, 10, 6).astype(int))\nax.set_ylabel('Accuracy')\nax.set_ylim([0, 1]);\n\n\n---------------------------------------------------------------------------\nFileNotFoundError                         Traceback (most recent call last)\nCell In[59], line 2\n      1 log_path = cifar_logger.experiment.metrics_file_path\n----&gt; 2 cifar_results = pd.read_csv(log_path)\n      3 fig, ax = subplots(1, 1, figsize=(6, 6))\n      4 summary_plot(cifar_results,\n      5              ax,\n      6              col='accuracy',\n      7              ylabel='Accuracy')\n\nFile ~/work/notes/notes-islr-py/.venv/lib/python3.10/site-packages/pandas/io/parsers/readers.py:1026, in read_csv(filepath_or_buffer, sep, delimiter, header, names, index_col, usecols, dtype, engine, converters, true_values, false_values, skipinitialspace, skiprows, skipfooter, nrows, na_values, keep_default_na, na_filter, verbose, skip_blank_lines, parse_dates, infer_datetime_format, keep_date_col, date_parser, date_format, dayfirst, cache_dates, iterator, chunksize, compression, thousands, decimal, lineterminator, quotechar, quoting, doublequote, escapechar, comment, encoding, encoding_errors, dialect, on_bad_lines, delim_whitespace, low_memory, memory_map, float_precision, storage_options, dtype_backend)\n   1013 kwds_defaults = _refine_defaults_read(\n   1014     dialect,\n   1015     delimiter,\n   (...)\n   1022     dtype_backend=dtype_backend,\n   1023 )\n   1024 kwds.update(kwds_defaults)\n-&gt; 1026 return _read(filepath_or_buffer, kwds)\n\nFile ~/work/notes/notes-islr-py/.venv/lib/python3.10/site-packages/pandas/io/parsers/readers.py:620, in _read(filepath_or_buffer, kwds)\n    617 _validate_names(kwds.get(\"names\", None))\n    619 # Create the parser.\n--&gt; 620 parser = TextFileReader(filepath_or_buffer, **kwds)\n    622 if chunksize or iterator:\n    623     return parser\n\nFile ~/work/notes/notes-islr-py/.venv/lib/python3.10/site-packages/pandas/io/parsers/readers.py:1620, in TextFileReader.__init__(self, f, engine, **kwds)\n   1617     self.options[\"has_index_names\"] = kwds[\"has_index_names\"]\n   1619 self.handles: IOHandles | None = None\n-&gt; 1620 self._engine = self._make_engine(f, self.engine)\n\nFile ~/work/notes/notes-islr-py/.venv/lib/python3.10/site-packages/pandas/io/parsers/readers.py:1880, in TextFileReader._make_engine(self, f, engine)\n   1878     if \"b\" not in mode:\n   1879         mode += \"b\"\n-&gt; 1880 self.handles = get_handle(\n   1881     f,\n   1882     mode,\n   1883     encoding=self.options.get(\"encoding\", None),\n   1884     compression=self.options.get(\"compression\", None),\n   1885     memory_map=self.options.get(\"memory_map\", False),\n   1886     is_text=is_text,\n   1887     errors=self.options.get(\"encoding_errors\", \"strict\"),\n   1888     storage_options=self.options.get(\"storage_options\", None),\n   1889 )\n   1890 assert self.handles is not None\n   1891 f = self.handles.handle\n\nFile ~/work/notes/notes-islr-py/.venv/lib/python3.10/site-packages/pandas/io/common.py:873, in get_handle(path_or_buf, mode, encoding, compression, memory_map, is_text, errors, storage_options)\n    868 elif isinstance(handle, str):\n    869     # Check whether the filename is to be opened in binary mode.\n    870     # Binary mode does not support 'encoding' and 'newline'.\n    871     if ioargs.encoding and \"b\" not in ioargs.mode:\n    872         # Encoding\n--&gt; 873         handle = open(\n    874             handle,\n    875             ioargs.mode,\n    876             encoding=ioargs.encoding,\n    877             errors=errors,\n    878             newline=\"\",\n    879         )\n    880     else:\n    881         # Binary mode\n    882         handle = open(handle, ioargs.mode)\n\nFileNotFoundError: [Errno 2] No such file or directory: 'logs/CIFAR100/version_11/metrics.csv'\n\n\n\nFinally, we evaluate our model on our test data.\n\ncifar_trainer.test(cifar_module,\n                   datamodule=cifar_dm)\n\nLOCAL_RANK: 0 - CUDA_VISIBLE_DEVICES: [0]\n\n\n────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────\n       Test metric             DataLoader 0\n────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────\n      test_accuracy        0.009999999776482582\n        test_loss            4.605414390563965\n────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────\n\n\n[{'test_loss': 4.605414390563965, 'test_accuracy': 0.009999999776482582}]\n\n\n\n\nAs deep learning has become ubiquitous in machine learning, hardware manufacturers have produced special libraries that can often speed up the gradient-descent steps.\nFor instance, Mac OS devices with the M1 chip may have the Metal programming framework enabled, which can speed up the torch computations. We present an example of how to use this acceleration.\nThe main changes are to the Trainer() call as well as to the metrics that will be evaluated on the data. These metrics must be told where the data will be located at evaluation time. This is accomplished with a call to the to() method of the metrics.\n\ntry:\n    for name, metric in cifar_module.metrics.items():\n        cifar_module.metrics[name] = metric.to('mps')\n    cifar_trainer_mps = Trainer(accelerator='mps',\n                                deterministic=False,#True\n                                enable_progress_bar=False,\n                                max_epochs=30)\n    cifar_trainer_mps.fit(cifar_module,\n                          datamodule=cifar_dm)\n    cifar_trainer_mps.test(cifar_module,\n                          datamodule=cifar_dm)\nexcept:\n    pass\n\nThis yields approximately two- or three-fold acceleration for each epoch. We have protected this code block using try: and except: clauses; if it works, we get the speedup, if it fails, nothing happens.\n\n\n\n\nWe now show how to use a CNN pretrained on the imagenet database to classify natural images, and demonstrate how we produced Figure~. We copied six JPEG images from a digital photo album into the directory book_images. These images are available from the data section of &lt;www.statlearning.com&gt;, the ISLP book website. Download book_images.zip; when clicked it creates the book_images directory.\nThe pretrained network we use is called resnet50; specification details can be found on the web. We will read in the images, and convert them into the array format expected by the torch software to match the specifications in resnet50. The conversion involves a resize, a crop and then a predefined standardization for each of the three channels. We now read in the images and preprocess them.\n\nresize = Resize((232,232), antialias=True)\ncrop = CenterCrop(224)\nnormalize = Normalize([0.485,0.456,0.406],\n                      [0.229,0.224,0.225])\nimgfiles = sorted([f for f in glob('book_images/*')])\nimgs = torch.stack([torch.div(crop(resize(read_image(f))), 255)\n                    for f in imgfiles])\nimgs = normalize(imgs)\nimgs.size()\n\n\n---------------------------------------------------------------------------\nRuntimeError                              Traceback (most recent call last)\nCell In[62], line 6\n      3 normalize = Normalize([0.485,0.456,0.406],\n      4                       [0.229,0.224,0.225])\n      5 imgfiles = sorted([f for f in glob('book_images/*')])\n----&gt; 6 imgs = torch.stack([torch.div(crop(resize(read_image(f))), 255)\n      7                     for f in imgfiles])\n      8 imgs = normalize(imgs)\n      9 imgs.size()\n\nRuntimeError: stack expects a non-empty TensorList\n\n\n\nWe now set up the trained network with the weights we read in code block~6. The model has 50 layers, with a fair bit of complexity.\n\nresnet_model = resnet50(weights=ResNet50_Weights.DEFAULT)\nsummary(resnet_model,\n        input_data=imgs,\n        col_names=['input_size',\n                   'output_size',\n                   'num_params'])\n\n\n---------------------------------------------------------------------------\nNameError                                 Traceback (most recent call last)\nCell In[63], line 3\n      1 resnet_model = resnet50(weights=ResNet50_Weights.DEFAULT)\n      2 summary(resnet_model,\n----&gt; 3         input_data=imgs,\n      4         col_names=['input_size',\n      5                    'output_size',\n      6                    'num_params'])\n\nNameError: name 'imgs' is not defined\n\n\n\nWe set the mode to eval() to ensure that the model is ready to predict on new data.\n\nresnet_model.eval()\n\nResNet(\n  (conv1): Conv2d(3, 64, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3), bias=False)\n  (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n  (relu): ReLU(inplace=True)\n  (maxpool): MaxPool2d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)\n  (layer1): Sequential(\n    (0): Bottleneck(\n      (conv1): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)\n      (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n      (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\n      (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n      (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)\n      (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n      (relu): ReLU(inplace=True)\n      (downsample): Sequential(\n        (0): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)\n        (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n      )\n    )\n    (1): Bottleneck(\n      (conv1): Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)\n      (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n      (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\n      (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n      (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)\n      (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n      (relu): ReLU(inplace=True)\n    )\n    (2): Bottleneck(\n      (conv1): Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)\n      (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n      (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\n      (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n      (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)\n      (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n      (relu): ReLU(inplace=True)\n    )\n  )\n  (layer2): Sequential(\n    (0): Bottleneck(\n      (conv1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)\n      (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n      (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)\n      (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n      (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)\n      (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n      (relu): ReLU(inplace=True)\n      (downsample): Sequential(\n        (0): Conv2d(256, 512, kernel_size=(1, 1), stride=(2, 2), bias=False)\n        (1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n      )\n    )\n    (1): Bottleneck(\n      (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)\n      (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n      (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\n      (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n      (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)\n      (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n      (relu): ReLU(inplace=True)\n    )\n    (2): Bottleneck(\n      (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)\n      (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n      (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\n      (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n      (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)\n      (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n      (relu): ReLU(inplace=True)\n    )\n    (3): Bottleneck(\n      (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)\n      (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n      (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\n      (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n      (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)\n      (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n      (relu): ReLU(inplace=True)\n    )\n  )\n  (layer3): Sequential(\n    (0): Bottleneck(\n      (conv1): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)\n      (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n      (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)\n      (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n      (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)\n      (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n      (relu): ReLU(inplace=True)\n      (downsample): Sequential(\n        (0): Conv2d(512, 1024, kernel_size=(1, 1), stride=(2, 2), bias=False)\n        (1): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n      )\n    )\n    (1): Bottleneck(\n      (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)\n      (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n      (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\n      (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n      (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)\n      (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n      (relu): ReLU(inplace=True)\n    )\n    (2): Bottleneck(\n      (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)\n      (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n      (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\n      (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n      (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)\n      (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n      (relu): ReLU(inplace=True)\n    )\n    (3): Bottleneck(\n      (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)\n      (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n      (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\n      (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n      (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)\n      (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n      (relu): ReLU(inplace=True)\n    )\n    (4): Bottleneck(\n      (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)\n      (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n      (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\n      (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n      (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)\n      (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n      (relu): ReLU(inplace=True)\n    )\n    (5): Bottleneck(\n      (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)\n      (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n      (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\n      (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n      (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)\n      (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n      (relu): ReLU(inplace=True)\n    )\n  )\n  (layer4): Sequential(\n    (0): Bottleneck(\n      (conv1): Conv2d(1024, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)\n      (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n      (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)\n      (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n      (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)\n      (bn3): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n      (relu): ReLU(inplace=True)\n      (downsample): Sequential(\n        (0): Conv2d(1024, 2048, kernel_size=(1, 1), stride=(2, 2), bias=False)\n        (1): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n      )\n    )\n    (1): Bottleneck(\n      (conv1): Conv2d(2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)\n      (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n      (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\n      (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n      (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)\n      (bn3): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n      (relu): ReLU(inplace=True)\n    )\n    (2): Bottleneck(\n      (conv1): Conv2d(2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)\n      (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n      (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\n      (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n      (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)\n      (bn3): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n      (relu): ReLU(inplace=True)\n    )\n  )\n  (avgpool): AdaptiveAvgPool2d(output_size=(1, 1))\n  (fc): Linear(in_features=2048, out_features=1000, bias=True)\n)\n\n\nInspecting the output above, we see that when setting up the resnet_model, the authors defined a Bottleneck, much like our BuildingBlock module.\nWe now feed our six images through the fitted network.\n\nimg_preds = resnet_model(imgs)\n\n\n---------------------------------------------------------------------------\nNameError                                 Traceback (most recent call last)\nCell In[65], line 1\n----&gt; 1 img_preds = resnet_model(imgs)\n\nNameError: name 'imgs' is not defined\n\n\n\nLet’s look at the predicted probabilities for each of the top 3 choices. First we compute the probabilities by applying the softmax to the logits in img_preds. Note that we have had to call the detach() method on the tensor img_preds in order to convert it to our a more familiar ndarray.\n\nimg_probs = np.exp(np.asarray(img_preds.detach()))\nimg_probs /= img_probs.sum(1)[:,None]\n\n\n---------------------------------------------------------------------------\nNameError                                 Traceback (most recent call last)\nCell In[66], line 1\n----&gt; 1 img_probs = np.exp(np.asarray(img_preds.detach()))\n      2 img_probs /= img_probs.sum(1)[:,None]\n\nNameError: name 'img_preds' is not defined\n\n\n\nIn order to see the class labels, we must download the index file associated with imagenet. {This is avalable from the book website and s3.amazonaws.com/deep-learning-models/image-models/imagenet_class_index.json.}\n\nlabs = json.load(open('imagenet_class_index.json'))\nclass_labels = pd.DataFrame([(int(k), v[1]) for k, v in \n                           labs.items()],\n                           columns=['idx', 'label'])\nclass_labels = class_labels.set_index('idx')\nclass_labels = class_labels.sort_index()\n\n\n---------------------------------------------------------------------------\nFileNotFoundError                         Traceback (most recent call last)\nCell In[67], line 1\n----&gt; 1 labs = json.load(open('imagenet_class_index.json'))\n      2 class_labels = pd.DataFrame([(int(k), v[1]) for k, v in \n      3                            labs.items()],\n      4                            columns=['idx', 'label'])\n      5 class_labels = class_labels.set_index('idx')\n\nFile ~/work/notes/notes-islr-py/.venv/lib/python3.10/site-packages/IPython/core/interactiveshell.py:324, in _modified_open(file, *args, **kwargs)\n    317 if file in {0, 1, 2}:\n    318     raise ValueError(\n    319         f\"IPython won't let you open fd={file} by default \"\n    320         \"as it is likely to crash IPython. If you know what you are doing, \"\n    321         \"you can use builtins' open.\"\n    322     )\n--&gt; 324 return io_open(file, *args, **kwargs)\n\nFileNotFoundError: [Errno 2] No such file or directory: 'imagenet_class_index.json'\n\n\n\nWe’ll now construct a data frame for each image file with the labels with the three highest probabilities as estimated by the model above.\n\nfor i, imgfile in enumerate(imgfiles):\n    img_df = class_labels.copy()\n    img_df['prob'] = img_probs[i]\n    img_df = img_df.sort_values(by='prob', ascending=False)[:3]\n    print(f'Image: {imgfile}')\n    print(img_df.reset_index().drop(columns=['idx']))\n\nWe see that the model is quite confident about Flamingo.jpg, but a little less so for the other images.\nWe end this section with our usual cleanup.\n\ndel(cifar_test,\n    cifar_train,\n    cifar_dm,\n    cifar_module,\n    cifar_logger,\n    cifar_optimizer,\n    cifar_trainer)\n\n\n\n\nWe now implement models for sentiment classification (Section~) on the IMDB dataset. As mentioned above code block~8, we are using a preprocessed version of the IMDB dataset found in the keras package. As keras uses tensorflow, a different tensor and deep learning library, we have converted the data to be suitable for torch. The code used to convert from keras is available in the module ISLP.torch._make_imdb. It requires some of the keras packages to run. These data use a dictionary of size 10,000.\nWe have stored three different representations of the review data for this lab:\n\nload_tensor(), a sparse tensor version usable by torch;\nload_sparse(), a sparse matrix version usable by sklearn, since we will compare with a lasso fit;\nload_sequential(), a padded version of the original sequence representation, limited to the last 500 words of each review.\n\n\n(imdb_seq_train,\n imdb_seq_test) = load_sequential(root='data/IMDB')\npadded_sample = np.asarray(imdb_seq_train.tensors[0][0])\nsample_review = padded_sample[padded_sample &gt; 0][:12]\nsample_review[:12]\n\narray([   1,   14,   22,   16,   43,  530,  973, 1622, 1385,   65,  458,\n       4468], dtype=int32)\n\n\nThe datasets imdb_seq_train and imdb_seq_test are both instances of the class TensorDataset. The tensors used to construct them can be found in the tensors attribute, with the first tensor the features X and the second the outcome Y. We have taken the first row of features and stored it as padded_sample. In the preprocessing used to form these data, sequences were padded with 0s in the beginning if they were not long enough, hence we remove this padding by restricting to entries where padded_sample &gt; 0. We then provide the first 12 words of the sample review.\nWe can find these words in the lookup dictionary from the ISLP.torch.imdb module.\n\nlookup = load_lookup(root='data/IMDB')\n' '.join(lookup[i] for i in sample_review)\n\n\"&lt;START&gt; this film was just brilliant casting location scenery story direction everyone's\"\n\n\nFor our first model, we have created a binary feature for each of the 10,000 possible words in the dataset, with an entry of one in the i,j entry if word j appears in review i. As most reviews are quite short, such a feature matrix has over 98% zeros. These data are accessed using load_tensor() from the ISLP library.\n\nmax_num_workers=10\n(imdb_train,\n imdb_test) = load_tensor(root='data/IMDB')\nimdb_dm = SimpleDataModule(imdb_train,\n                           imdb_test,\n                           validation=2000,\n                           num_workers=min(6, max_num_workers),\n                           batch_size=512)\n\nWe’ll use a two-layer model for our first model.\n\nclass IMDBModel(nn.Module):\n\n    def __init__(self, input_size):\n        super(IMDBModel, self).__init__()\n        self.dense1 = nn.Linear(input_size, 16)\n        self.activation = nn.ReLU()\n        self.dense2 = nn.Linear(16, 16)\n        self.output = nn.Linear(16, 1)\n\n    def forward(self, x):\n        val = x\n        for _map in [self.dense1,\n                     self.activation,\n                     self.dense2,\n                     self.activation,\n                     self.output]:\n            val = _map(val)\n        return torch.flatten(val)\n\nWe now instantiate our model and look at a summary.\n\nimdb_model = IMDBModel(imdb_test.tensors[0].size()[1])\nsummary(imdb_model,\n        input_size=imdb_test.tensors[0].size(),\n        col_names=['input_size',\n                   'output_size',\n                   'num_params'])\n\n===================================================================================================================\nLayer (type:depth-idx)                   Input Shape               Output Shape              Param #\n===================================================================================================================\nIMDBModel                                [25000, 10003]            [25000]                   --\n├─Linear: 1-1                            [25000, 10003]            [25000, 16]               160,064\n├─ReLU: 1-2                              [25000, 16]               [25000, 16]               --\n├─Linear: 1-3                            [25000, 16]               [25000, 16]               272\n├─ReLU: 1-4                              [25000, 16]               [25000, 16]               --\n├─Linear: 1-5                            [25000, 16]               [25000, 1]                17\n===================================================================================================================\nTotal params: 160,353\nTrainable params: 160,353\nNon-trainable params: 0\nTotal mult-adds (G): 4.01\n===================================================================================================================\nInput size (MB): 1000.30\nForward/backward pass size (MB): 6.60\nParams size (MB): 0.64\nEstimated Total Size (MB): 1007.54\n===================================================================================================================\n\n\nWe’ll again usea smaller learning rate for these data, hence we pass an optimizer to the SimpleModule. Since the reviews are classified into positive or negative sentiment, we use SimpleModule.binary_classification(). {Our use of binary_classification() instead of classification() is due to some subtlety in how torchmetrics.Accuracy() works, as well as the data type of the targets.}\n\nimdb_optimizer = RMSprop(imdb_model.parameters(), lr=0.001)\nimdb_module = SimpleModule.binary_classification(\n                         imdb_model,\n                         optimizer=imdb_optimizer)\n\nHaving loaded the datasets into a data module and created a SimpleModule, the remaining steps are familiar.\n\nimdb_logger = CSVLogger('logs', name='IMDB')\nimdb_trainer = Trainer(deterministic=False,#True\n                       max_epochs=30,\n                       logger=imdb_logger,\n                       enable_progress_bar=False,\n                       callbacks=[ErrorTracker()])\nimdb_trainer.fit(imdb_module,\n                 datamodule=imdb_dm)\n\nGPU available: True (cuda), used: True\nTPU available: False, using: 0 TPU cores\nIPU available: False, using: 0 IPUs\nHPU available: False, using: 0 HPUs\nLOCAL_RANK: 0 - CUDA_VISIBLE_DEVICES: [0]\n\n  | Name  | Type              | Params\n--------------------------------------------\n0 | model | IMDBModel         | 160 K \n1 | loss  | BCEWithLogitsLoss | 0     \n--------------------------------------------\n160 K     Trainable params\n0         Non-trainable params\n160 K     Total params\n0.641     Total estimated model params size (MB)\n/home/oren/work/notes/notes-islr-py/.venv/lib/python3.10/site-packages/pytorch_lightning/loops/fit_loop.py:298: The number of training batches (45) is smaller than the logging interval Trainer(log_every_n_steps=50). Set a lower value for log_every_n_steps if you want to see logs for the training epoch.\n`Trainer.fit` stopped: `max_epochs=30` reached.\n\n\nEvaluating the test error yields roughly 86% accuracy.\n\ntest_results = imdb_trainer.test(imdb_module, datamodule=imdb_dm)\ntest_results\n\nLOCAL_RANK: 0 - CUDA_VISIBLE_DEVICES: [0]\n\n\n────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────\n       Test metric             DataLoader 0\n────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────\n      test_accuracy          0.85316002368927\n        test_loss           1.1613209247589111\n────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────\n\n\n[{'test_loss': 1.1613209247589111, 'test_accuracy': 0.85316002368927}]\n\n\n\n\nWe now fit a lasso logistic regression model using LogisticRegression() from sklearn. Since sklearn does not recognize the sparse tensors of torch, we use a sparse matrix that is recognized by sklearn.\n\n((X_train, Y_train),\n (X_valid, Y_valid),\n (X_test, Y_test)) = load_sparse(validation=2000,\n                                 random_state=0,\n                                 root='data/IMDB')\n\nSimilar to what we did in Section~, we construct a series of 50 values for the lasso reguralization parameter \\lambda.\n\nlam_max = np.abs(X_train.T * (Y_train - Y_train.mean())).max()\nlam_val = lam_max * np.exp(np.linspace(np.log(1),\n                                       np.log(1e-4), 50))\n\nWith LogisticRegression() the regularization parameter C is specified as the inverse of \\lambda. There are several solvers for logistic regression; here we use liblinear which works well with the sparse input format.\n\nlogit = LogisticRegression(penalty='l1', \n                           C=1/lam_max,\n                           solver='liblinear',\n                           warm_start=True,\n                           fit_intercept=True)\n\nThe path of 50 values takes approximately 40 seconds to run.\n\ncoefs = []\nintercepts = []\n\nfor l in lam_val:\n    logit.C = 1/l\n    logit.fit(X_train, Y_train)\n    coefs.append(logit.coef_.copy())\n    intercepts.append(logit.intercept_)\n\nLogisticRegression(C=0.0007489236279827927, penalty='l1', solver='liblinear',\n                   warm_start=True)In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.  LogisticRegression?Documentation for LogisticRegressioniFittedLogisticRegression(C=0.0007489236279827927, penalty='l1', solver='liblinear',\n                   warm_start=True) \n\n\nLogisticRegression(C=0.0009037955226505406, penalty='l1', solver='liblinear',\n                   warm_start=True)In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.  LogisticRegression?Documentation for LogisticRegressioniFittedLogisticRegression(C=0.0009037955226505406, penalty='l1', solver='liblinear',\n                   warm_start=True) \n\n\nLogisticRegression(C=0.001090693785377448, penalty='l1', solver='liblinear',\n                   warm_start=True)In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.  LogisticRegression?Documentation for LogisticRegressioniFittedLogisticRegression(C=0.001090693785377448, penalty='l1', solver='liblinear',\n                   warm_start=True) \n\n\nLogisticRegression(C=0.0013162412333845557, penalty='l1', solver='liblinear',\n                   warm_start=True)In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.  LogisticRegression?Documentation for LogisticRegressioniFittedLogisticRegression(C=0.0013162412333845557, penalty='l1', solver='liblinear',\n                   warm_start=True) \n\n\nLogisticRegression(C=0.0015884302337545147, penalty='l1', solver='liblinear',\n                   warm_start=True)In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.  LogisticRegression?Documentation for LogisticRegressioniFittedLogisticRegression(C=0.0015884302337545147, penalty='l1', solver='liblinear',\n                   warm_start=True) \n\n\nLogisticRegression(C=0.001916905916263957, penalty='l1', solver='liblinear',\n                   warm_start=True)In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.  LogisticRegression?Documentation for LogisticRegressioniFittedLogisticRegression(C=0.001916905916263957, penalty='l1', solver='liblinear',\n                   warm_start=True) \n\n\nLogisticRegression(C=0.0023133079525453322, penalty='l1', solver='liblinear',\n                   warm_start=True)In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.  LogisticRegression?Documentation for LogisticRegressioniFittedLogisticRegression(C=0.0023133079525453322, penalty='l1', solver='liblinear',\n                   warm_start=True) \n\n\nLogisticRegression(C=0.0027916830126641402, penalty='l1', solver='liblinear',\n                   warm_start=True)In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.  LogisticRegression?Documentation for LogisticRegressioniFittedLogisticRegression(C=0.0027916830126641402, penalty='l1', solver='liblinear',\n                   warm_start=True) \n\n\nLogisticRegression(C=0.003368982514680914, penalty='l1', solver='liblinear',\n                   warm_start=True)In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.  LogisticRegression?Documentation for LogisticRegressioniFittedLogisticRegression(C=0.003368982514680914, penalty='l1', solver='liblinear',\n                   warm_start=True) \n\n\nLogisticRegression(C=0.004065663305159506, penalty='l1', solver='liblinear',\n                   warm_start=True)In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.  LogisticRegression?Documentation for LogisticRegressioniFittedLogisticRegression(C=0.004065663305159506, penalty='l1', solver='liblinear',\n                   warm_start=True) \n\n\nLogisticRegression(C=0.00490641255598386, penalty='l1', solver='liblinear',\n                   warm_start=True)In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.  LogisticRegression?Documentation for LogisticRegressioniFittedLogisticRegression(C=0.00490641255598386, penalty='l1', solver='liblinear',\n                   warm_start=True) \n\n\nLogisticRegression(C=0.00592102256450172, penalty='l1', solver='liblinear',\n                   warm_start=True)In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.  LogisticRegression?Documentation for LogisticRegressioniFittedLogisticRegression(C=0.00592102256450172, penalty='l1', solver='liblinear',\n                   warm_start=True) \n\n\nLogisticRegression(C=0.007145446455900081, penalty='l1', solver='liblinear',\n                   warm_start=True)In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.  LogisticRegression?Documentation for LogisticRegressioniFittedLogisticRegression(C=0.007145446455900081, penalty='l1', solver='liblinear',\n                   warm_start=True) \n\n\nLogisticRegression(C=0.008623072197062593, penalty='l1', solver='liblinear',\n                   warm_start=True)In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.  LogisticRegression?Documentation for LogisticRegressioniFittedLogisticRegression(C=0.008623072197062593, penalty='l1', solver='liblinear',\n                   warm_start=True) \n\n\nLogisticRegression(C=0.01040626006711674, penalty='l1', solver='liblinear',\n                   warm_start=True)In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.  LogisticRegression?Documentation for LogisticRegressioniFittedLogisticRegression(C=0.01040626006711674, penalty='l1', solver='liblinear',\n                   warm_start=True) \n\n\nLogisticRegression(C=0.012558198065575408, penalty='l1', solver='liblinear',\n                   warm_start=True)In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.  LogisticRegression?Documentation for LogisticRegressioniFittedLogisticRegression(C=0.012558198065575408, penalty='l1', solver='liblinear',\n                   warm_start=True) \n\n\nLogisticRegression(C=0.015155141005227458, penalty='l1', solver='liblinear',\n                   warm_start=True)In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.  LogisticRegression?Documentation for LogisticRegressioniFittedLogisticRegression(C=0.015155141005227458, penalty='l1', solver='liblinear',\n                   warm_start=True) \n\n\nLogisticRegression(C=0.018289112632959816, penalty='l1', solver='liblinear',\n                   warm_start=True)In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.  LogisticRegression?Documentation for LogisticRegressioniFittedLogisticRegression(C=0.018289112632959816, penalty='l1', solver='liblinear',\n                   warm_start=True) \n\n\nLogisticRegression(C=0.022071166529279682, penalty='l1', solver='liblinear',\n                   warm_start=True)In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.  LogisticRegression?Documentation for LogisticRegressioniFittedLogisticRegression(C=0.022071166529279682, penalty='l1', solver='liblinear',\n                   warm_start=True) \n\n\nLogisticRegression(C=0.026635321337859782, penalty='l1', solver='liblinear',\n                   warm_start=True)In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.  LogisticRegression?Documentation for LogisticRegressioniFittedLogisticRegression(C=0.026635321337859782, penalty='l1', solver='liblinear',\n                   warm_start=True) \n\n\nLogisticRegression(C=0.03214330977159287, penalty='l1', solver='liblinear',\n                   warm_start=True)In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.  LogisticRegression?Documentation for LogisticRegressioniFittedLogisticRegression(C=0.03214330977159287, penalty='l1', solver='liblinear',\n                   warm_start=True) \n\n\nLogisticRegression(C=0.03879030967814849, penalty='l1', solver='liblinear',\n                   warm_start=True)In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.  LogisticRegression?Documentation for LogisticRegressioniFittedLogisticRegression(C=0.03879030967814849, penalty='l1', solver='liblinear',\n                   warm_start=True) \n\n\nLogisticRegression(C=0.04681186024771011, penalty='l1', solver='liblinear',\n                   warm_start=True)In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.  LogisticRegression?Documentation for LogisticRegressioniFittedLogisticRegression(C=0.04681186024771011, penalty='l1', solver='liblinear',\n                   warm_start=True) \n\n\nLogisticRegression(C=0.05649220844157334, penalty='l1', solver='liblinear',\n                   warm_start=True)In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.  LogisticRegression?Documentation for LogisticRegressioniFittedLogisticRegression(C=0.05649220844157334, penalty='l1', solver='liblinear',\n                   warm_start=True) \n\n\nLogisticRegression(C=0.06817438140075363, penalty='l1', solver='liblinear',\n                   warm_start=True)In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.  LogisticRegression?Documentation for LogisticRegressioniFittedLogisticRegression(C=0.06817438140075363, penalty='l1', solver='liblinear',\n                   warm_start=True) \n\n\nLogisticRegression(C=0.08227234175456818, penalty='l1', solver='liblinear',\n                   warm_start=True)In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.  LogisticRegression?Documentation for LogisticRegressioniFittedLogisticRegression(C=0.08227234175456818, penalty='l1', solver='liblinear',\n                   warm_start=True) \n\n\nLogisticRegression(C=0.09928565655757668, penalty='l1', solver='liblinear',\n                   warm_start=True)In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.  LogisticRegression?Documentation for LogisticRegressioniFittedLogisticRegression(C=0.09928565655757668, penalty='l1', solver='liblinear',\n                   warm_start=True) \n\n\nLogisticRegression(C=0.1198171996547274, penalty='l1', solver='liblinear',\n                   warm_start=True)In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.  LogisticRegression?Documentation for LogisticRegressioniFittedLogisticRegression(C=0.1198171996547274, penalty='l1', solver='liblinear',\n                   warm_start=True) \n\n\nLogisticRegression(C=0.14459451476533808, penalty='l1', solver='liblinear',\n                   warm_start=True)In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.  LogisticRegression?Documentation for LogisticRegressioniFittedLogisticRegression(C=0.14459451476533808, penalty='l1', solver='liblinear',\n                   warm_start=True) \n\n\nLogisticRegression(C=0.17449559629562483, penalty='l1', solver='liblinear',\n                   warm_start=True)In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.  LogisticRegression?Documentation for LogisticRegressioniFittedLogisticRegression(C=0.17449559629562483, penalty='l1', solver='liblinear',\n                   warm_start=True) \n\n\nLogisticRegression(C=0.21058000143353128, penalty='l1', solver='liblinear',\n                   warm_start=True)In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.  LogisticRegression?Documentation for LogisticRegressioniFittedLogisticRegression(C=0.21058000143353128, penalty='l1', solver='liblinear',\n                   warm_start=True) \n\n\nLogisticRegression(C=0.25412639599580494, penalty='l1', solver='liblinear',\n                   warm_start=True)In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.  LogisticRegression?Documentation for LogisticRegressioniFittedLogisticRegression(C=0.25412639599580494, penalty='l1', solver='liblinear',\n                   warm_start=True) \n\n\nLogisticRegression(C=0.30667786447993306, penalty='l1', solver='liblinear',\n                   warm_start=True)In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.  LogisticRegression?Documentation for LogisticRegressioniFittedLogisticRegression(C=0.30667786447993306, penalty='l1', solver='liblinear',\n                   warm_start=True) \n\n\nLogisticRegression(C=0.37009658990136846, penalty='l1', solver='liblinear',\n                   warm_start=True)In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.  LogisticRegression?Documentation for LogisticRegressioniFittedLogisticRegression(C=0.37009658990136846, penalty='l1', solver='liblinear',\n                   warm_start=True) \n\n\nLogisticRegression(C=0.4466298410186834, penalty='l1', solver='liblinear',\n                   warm_start=True)In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.  LogisticRegression?Documentation for LogisticRegressioniFittedLogisticRegression(C=0.4466298410186834, penalty='l1', solver='liblinear',\n                   warm_start=True) \n\n\nLogisticRegression(C=0.5389896052312603, penalty='l1', solver='liblinear',\n                   warm_start=True)In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.  LogisticRegression?Documentation for LogisticRegressioniFittedLogisticRegression(C=0.5389896052312603, penalty='l1', solver='liblinear',\n                   warm_start=True) \n\n\nLogisticRegression(C=0.6504486889741823, penalty='l1', solver='liblinear',\n                   warm_start=True)In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.  LogisticRegression?Documentation for LogisticRegressioniFittedLogisticRegression(C=0.6504486889741823, penalty='l1', solver='liblinear',\n                   warm_start=True) \n\n\nLogisticRegression(C=0.7849566909675425, penalty='l1', solver='liblinear',\n                   warm_start=True)In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.  LogisticRegression?Documentation for LogisticRegressioniFittedLogisticRegression(C=0.7849566909675425, penalty='l1', solver='liblinear',\n                   warm_start=True) \n\n\nLogisticRegression(C=0.9472799578802298, penalty='l1', solver='liblinear',\n                   warm_start=True)In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.  LogisticRegression?Documentation for LogisticRegressioniFittedLogisticRegression(C=0.9472799578802298, penalty='l1', solver='liblinear',\n                   warm_start=True) \n\n\nLogisticRegression(C=1.143170481794995, penalty='l1', solver='liblinear',\n                   warm_start=True)In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.  LogisticRegression?Documentation for LogisticRegressioniFittedLogisticRegression(C=1.143170481794995, penalty='l1', solver='liblinear',\n                   warm_start=True) \n\n\nLogisticRegression(C=1.3795697244263152, penalty='l1', solver='liblinear',\n                   warm_start=True)In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.  LogisticRegression?Documentation for LogisticRegressioniFittedLogisticRegression(C=1.3795697244263152, penalty='l1', solver='liblinear',\n                   warm_start=True) \n\n\nLogisticRegression(C=1.664854590686503, penalty='l1', solver='liblinear',\n                   warm_start=True)In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.  LogisticRegression?Documentation for LogisticRegressioniFittedLogisticRegression(C=1.664854590686503, penalty='l1', solver='liblinear',\n                   warm_start=True) \n\n\nLogisticRegression(C=2.009134267775075, penalty='l1', solver='liblinear',\n                   warm_start=True)In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.  LogisticRegression?Documentation for LogisticRegressioniFittedLogisticRegression(C=2.009134267775075, penalty='l1', solver='liblinear',\n                   warm_start=True) \n\n\nLogisticRegression(C=2.424608448407246, penalty='l1', solver='liblinear',\n                   warm_start=True)In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.  LogisticRegression?Documentation for LogisticRegressioniFittedLogisticRegression(C=2.424608448407246, penalty='l1', solver='liblinear',\n                   warm_start=True) \n\n\nLogisticRegression(C=2.9259996319698045, penalty='l1', solver='liblinear',\n                   warm_start=True)In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.  LogisticRegression?Documentation for LogisticRegressioniFittedLogisticRegression(C=2.9259996319698045, penalty='l1', solver='liblinear',\n                   warm_start=True) \n\n\nLogisticRegression(C=3.5310748223745434, penalty='l1', solver='liblinear',\n                   warm_start=True)In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.  LogisticRegression?Documentation for LogisticRegressioniFittedLogisticRegression(C=3.5310748223745434, penalty='l1', solver='liblinear',\n                   warm_start=True) \n\n\nLogisticRegression(C=4.2612751091884284, penalty='l1', solver='liblinear',\n                   warm_start=True)In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.  LogisticRegression?Documentation for LogisticRegressioniFittedLogisticRegression(C=4.2612751091884284, penalty='l1', solver='liblinear',\n                   warm_start=True) \n\n\nLogisticRegression(C=5.142475441508147, penalty='l1', solver='liblinear',\n                   warm_start=True)In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.  LogisticRegression?Documentation for LogisticRegressioniFittedLogisticRegression(C=5.142475441508147, penalty='l1', solver='liblinear',\n                   warm_start=True) \n\n\nLogisticRegression(C=6.20590151748051, penalty='l1', solver='liblinear',\n                   warm_start=True)In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.  LogisticRegression?Documentation for LogisticRegressioniFittedLogisticRegression(C=6.20590151748051, penalty='l1', solver='liblinear',\n                   warm_start=True) \n\n\nLogisticRegression(C=7.48923627982792, penalty='l1', solver='liblinear',\n                   warm_start=True)In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.  LogisticRegression?Documentation for LogisticRegressioniFittedLogisticRegression(C=7.48923627982792, penalty='l1', solver='liblinear',\n                   warm_start=True) \n\n\nThe coefficient and intercepts have an extraneous dimension which can be removed by the np.squeeze() function.\n\ncoefs = np.squeeze(coefs)\nintercepts = np.squeeze(intercepts)\n\nWe’ll now make a plot to compare our neural network results with the lasso.\n\n%%capture\nfig, axes = subplots(1, 2, figsize=(16, 8), sharey=True)\nfor ((X_, Y_),\n     data_,\n     color) in zip([(X_train, Y_train),\n                    (X_valid, Y_valid),\n                    (X_test, Y_test)],\n                    ['Training', 'Validation', 'Test'],\n                    ['black', 'red', 'blue']):\n    linpred_ = X_ * coefs.T + intercepts[None,:]\n    label_ = np.array(linpred_ &gt; 0)\n    accuracy_ = np.array([np.mean(Y_ == l) for l in label_.T])\n    axes[0].plot(-np.log(lam_val / X_train.shape[0]),\n                 accuracy_,\n                 '.--',\n                 color=color,\n                 markersize=13,\n                 linewidth=2,\n                 label=data_)\naxes[0].legend()\naxes[0].set_xlabel(r'$-\\log(\\lambda)$', fontsize=20)\naxes[0].set_ylabel('Accuracy', fontsize=20)\n\nNotice the use of %%capture, which suppresses the displaying of the partially completed figure. This is useful when making a complex figure, since the steps can be spread across two or more cells. We now add a plot of the lasso accuracy, and display the composed figure by simply entering its name at the end of the cell.\n\nimdb_results = pd.read_csv(imdb_logger.experiment.metrics_file_path)\nsummary_plot(imdb_results,\n             axes[1],\n             col='accuracy',\n             ylabel='Accuracy')\naxes[1].set_xticks(np.linspace(0, 30, 7).astype(int))\naxes[1].set_ylabel('Accuracy', fontsize=20)\naxes[1].set_xlabel('Epoch', fontsize=20)\naxes[1].set_ylim([0.5, 1]);\naxes[1].axhline(test_results[0]['test_accuracy'],\n                color='blue',\n                linestyle='--',\n                linewidth=3)\nfig\n\nText(1421.526515151515, 0.5, 'Accuracy')\n\n\nText(0.5, 75.19999999999999, 'Epoch')\n\n\n\n\n\n\n\n\n\nFrom the graphs we see that the accuracy of the lasso logistic regression peaks at about 0.88, as it does for the neural network.\nOnce again, we end with a cleanup.\n\ndel(imdb_model,\n    imdb_trainer,\n    imdb_logger,\n    imdb_dm,\n    imdb_train,\n    imdb_test)\n\n\n\n\n\nIn this lab we fit the models illustrated in Section~.\n\n\nHere we fit a simple LSTM RNN for sentiment prediction to the IMDb movie-review data, as discussed in Section~. For an RNN we use the sequence of words in a document, taking their order into account. We loaded the preprocessed data at the beginning of Section~. A script that details the preprocessing can be found in the ISLP library. Notably, since more than 90% of the documents had fewer than 500 words, we set the document length to 500. For longer documents, we used the last 500 words, and for shorter documents, we padded the front with blanks.\n\nimdb_seq_dm = SimpleDataModule(imdb_seq_train,\n                               imdb_seq_test,\n                               validation=2000,\n                               batch_size=300,\n                               num_workers=min(6, max_num_workers)\n                               )\n\nThe first layer of the RNN is an embedding layer of size 32, which will be learned during training. This layer one-hot encodes each document as a matrix of dimension 500 \\times 10,003, and then maps these 10,003 dimensions down to 32. {The extra 3 dimensions correspond to commonly occurring non-word entries in the reviews.} Since each word is represented by an integer, this is effectively achieved by the creation of an embedding matrix of size 10,003\\times 32; each of the 500 integers in the document are then mapped to the appropriate 32 real numbers by indexing the appropriate rows of this matrix.\nThe second layer is an LSTM with 32 units, and the output layer is a single logit for the binary classification task. In the last line of the forward() method below, we take the last 32-dimensional output of the LSTM and map it to our response.\n\nclass LSTMModel(nn.Module):\n    def __init__(self, input_size):\n        super(LSTMModel, self).__init__()\n        self.embedding = nn.Embedding(input_size, 32)\n        self.lstm = nn.LSTM(input_size=32,\n                            hidden_size=32,\n                            batch_first=True)\n        self.dense = nn.Linear(32, 1)\n    def forward(self, x):\n        val, (h_n, c_n) = self.lstm(self.embedding(x))\n        return torch.flatten(self.dense(val[:,-1]))\n\nWe instantiate and take a look at the summary of the model, using the first 10 documents in the corpus.\n\nlstm_model = LSTMModel(X_test.shape[-1])\nsummary(lstm_model,\n        input_data=imdb_seq_train.tensors[0][:10],\n        col_names=['input_size',\n                   'output_size',\n                   'num_params'])\n\n===================================================================================================================\nLayer (type:depth-idx)                   Input Shape               Output Shape              Param #\n===================================================================================================================\nLSTMModel                                [10, 500]                 [10]                      --\n├─Embedding: 1-1                         [10, 500]                 [10, 500, 32]             320,096\n├─LSTM: 1-2                              [10, 500, 32]             [10, 500, 32]             8,448\n├─Linear: 1-3                            [10, 32]                  [10, 1]                   33\n===================================================================================================================\nTotal params: 328,577\nTrainable params: 328,577\nNon-trainable params: 0\nTotal mult-adds (M): 45.44\n===================================================================================================================\nInput size (MB): 50.00\nForward/backward pass size (MB): 2.56\nParams size (MB): 1.31\nEstimated Total Size (MB): 53.87\n===================================================================================================================\n\n\nThe 10,003 is suppressed in the summary, but we see it in the parameter count, since 10,003\\times 32=320,096.\n\nlstm_module = SimpleModule.binary_classification(lstm_model)\nlstm_logger = CSVLogger('logs', name='IMDB_LSTM')\n\n\nlstm_trainer = Trainer(deterministic=False,#True\n                       max_epochs=20,\n                       logger=lstm_logger,\n                       enable_progress_bar=False,\n                       callbacks=[ErrorTracker()])\nlstm_trainer.fit(lstm_module,\n                 datamodule=imdb_seq_dm)\n\nGPU available: True (cuda), used: True\nTPU available: False, using: 0 TPU cores\nIPU available: False, using: 0 IPUs\nHPU available: False, using: 0 HPUs\nLOCAL_RANK: 0 - CUDA_VISIBLE_DEVICES: [0]\n\n  | Name  | Type              | Params\n--------------------------------------------\n0 | model | LSTMModel         | 328 K \n1 | loss  | BCEWithLogitsLoss | 0     \n--------------------------------------------\n328 K     Trainable params\n0         Non-trainable params\n328 K     Total params\n1.314     Total estimated model params size (MB)\n`Trainer.fit` stopped: `max_epochs=20` reached.\n\n\nThe rest is now similar to other networks we have fit. We track the test performance as the network is fit, and see that it attains 85% accuracy.\n\nlstm_trainer.test(lstm_module, datamodule=imdb_seq_dm)\n\nLOCAL_RANK: 0 - CUDA_VISIBLE_DEVICES: [0]\n\n\n────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────\n       Test metric             DataLoader 0\n────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────\n      test_accuracy         0.8395199775695801\n        test_loss           0.8458924889564514\n────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────\n\n\n[{'test_loss': 0.8458924889564514, 'test_accuracy': 0.8395199775695801}]\n\n\nWe once again show the learning progress, followed by cleanup.\n\nlstm_results = pd.read_csv(lstm_logger.experiment.metrics_file_path)\nfig, ax = subplots(1, 1, figsize=(6, 6))\nsummary_plot(lstm_results,\n             ax,\n             col='accuracy',\n             ylabel='Accuracy')\nax.set_xticks(np.linspace(0, 20, 5).astype(int))\nax.set_ylabel('Accuracy')\nax.set_ylim([0.5, 1])\n\nText(0, 0.5, 'Accuracy')\n\n\n\n\n\n\n\n\n\n\ndel(lstm_model,\n    lstm_trainer,\n    lstm_logger,\n    imdb_seq_dm,\n    imdb_seq_train,\n    imdb_seq_test)\n\n\n\n\nWe now show how to fit the models in Section~ for time series prediction. We first load and standardize the data.\n\nNYSE = load_data('NYSE')\ncols = ['DJ_return', 'log_volume', 'log_volatility']\nX = pd.DataFrame(StandardScaler(\n                     with_mean=True,\n                     with_std=True).fit_transform(NYSE[cols]),\n                 columns=NYSE[cols].columns,\n                 index=NYSE.index)\n\nNext we set up the lagged versions of the data, dropping any rows with missing values using the dropna() method.\n\nfor lag in range(1, 6):\n    for col in cols:\n        newcol = np.zeros(X.shape[0]) * np.nan\n        newcol[lag:] = X[col].values[:-lag]\n        X.insert(len(X.columns), \"{0}_{1}\".format(col, lag), newcol)\nX.insert(len(X.columns), 'train', NYSE['train'])\nX = X.dropna()\n\nFinally, we extract the response, training indicator, and drop the current day’s DJ_return and log_volatility to predict only from previous day’s data.\n\nY, train = X['log_volume'], X['train']\nX = X.drop(columns=['train'] + cols)\nX.columns\n\nIndex(['DJ_return_1', 'log_volume_1', 'log_volatility_1', 'DJ_return_2',\n       'log_volume_2', 'log_volatility_2', 'DJ_return_3', 'log_volume_3',\n       'log_volatility_3', 'DJ_return_4', 'log_volume_4', 'log_volatility_4',\n       'DJ_return_5', 'log_volume_5', 'log_volatility_5'],\n      dtype='object')\n\n\nWe first fit a simple linear model and compute the R^2 on the test data using the score() method.\n\nM = LinearRegression()\nM.fit(X[train], Y[train])\nM.score(X[~train], Y[~train])\n\nLinearRegression()In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.  LinearRegression?Documentation for LinearRegressioniFittedLinearRegression() \n\n\n0.4128912938562521\n\n\nWe refit this model, including the factor variable day_of_week. For a categorical series in pandas, we can form the indicators using the get_dummies() method.\n\nX_day = pd.concat([X, \n                  pd.get_dummies(NYSE['day_of_week'])],\n                  axis=1).dropna()\n\nNote that we do not have to reinstantiate the linear regression model as its fit() method accepts a design matrix and a response directly.\n\nM.fit(X_day[train], Y[train])\nM.score(X_day[~train], Y[~train])\n\nLinearRegression()In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.  LinearRegression?Documentation for LinearRegressioniFittedLinearRegression() \n\n\n0.4595563133053274\n\n\nThis model achieves an R^2 of about 46%.\nTo fit the RNN, we must reshape the data, as it will expect 5 lagged versions of each feature as indicated by the input_shape argument to the layer nn.RNN() below. We first ensure the columns of our data frame are such that a reshaped matrix will have the variables correctly lagged. We use the reindex() method to do this.\nFor an input shape (5,3), each row represents a lagged version of the three variables. The nn.RNN() layer also expects the first row of each observation to be earliest in time, so we must reverse the current order. Hence we loop over range(5,0,-1) below, which is an example of using a slice() to index iterable objects. The general notation is start:end:step.\n\nordered_cols = []\nfor lag in range(5,0,-1):\n    for col in cols:\n        ordered_cols.append('{0}_{1}'.format(col, lag))\nX = X.reindex(columns=ordered_cols)\nX.columns\n\nIndex(['DJ_return_5', 'log_volume_5', 'log_volatility_5', 'DJ_return_4',\n       'log_volume_4', 'log_volatility_4', 'DJ_return_3', 'log_volume_3',\n       'log_volatility_3', 'DJ_return_2', 'log_volume_2', 'log_volatility_2',\n       'DJ_return_1', 'log_volume_1', 'log_volatility_1'],\n      dtype='object')\n\n\nWe now reshape the data.\n\nX_rnn = X.to_numpy().reshape((-1,5,3))\nX_rnn.shape\n\n(6046, 5, 3)\n\n\nBy specifying the first size as -1, numpy.reshape() deduces its size based on the remaining arguments.\nNow we are ready to proceed with the RNN, which uses 12 hidden units, and 10% dropout. After passing through the RNN, we extract the final time point as val[:,-1] in forward() below. This gets passed through a 10% dropout and then flattened through a linear layer.\n\nclass NYSEModel(nn.Module):\n    def __init__(self):\n        super(NYSEModel, self).__init__()\n        self.rnn = nn.RNN(3,\n                          12,\n                          batch_first=True)\n        self.dense = nn.Linear(12, 1)\n        self.dropout = nn.Dropout(0.1)\n    def forward(self, x):\n        val, h_n = self.rnn(x)\n        val = self.dense(self.dropout(val[:,-1]))\n        return torch.flatten(val)\nnyse_model = NYSEModel()\n\nWe fit the model in a similar fashion to previous networks. We supply the fit function with test data as validation data, so that when we monitor its progress and plot the history function we can see the progress on the test data. Of course we should not use this as a basis for early stopping, since then the test performance would be biased.\nWe form the training dataset similar to our Hitters example.\n\ndatasets = []\nfor mask in [train, ~train]:\n    X_rnn_t = torch.tensor(X_rnn[mask].astype(np.float32))\n    Y_t = torch.tensor(Y[mask].astype(np.float32))\n    datasets.append(TensorDataset(X_rnn_t, Y_t))\nnyse_train, nyse_test = datasets\n\n/tmp/ipykernel_29829/2100042546.py:4: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`\n  Y_t = torch.tensor(Y[mask].astype(np.float32))\n/tmp/ipykernel_29829/2100042546.py:4: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`\n  Y_t = torch.tensor(Y[mask].astype(np.float32))\n\n\nFollowing our usual pattern, we inspect the summary.\n\nsummary(nyse_model,\n        input_data=X_rnn_t,\n        col_names=['input_size',\n                   'output_size',\n                   'num_params'])\n\n===================================================================================================================\nLayer (type:depth-idx)                   Input Shape               Output Shape              Param #\n===================================================================================================================\nNYSEModel                                [1770, 5, 3]              [1770]                    --\n├─RNN: 1-1                               [1770, 5, 3]              [1770, 5, 12]             204\n├─Dropout: 1-2                           [1770, 12]                [1770, 12]                --\n├─Linear: 1-3                            [1770, 12]                [1770, 1]                 13\n===================================================================================================================\nTotal params: 217\nTrainable params: 217\nNon-trainable params: 0\nTotal mult-adds (M): 1.83\n===================================================================================================================\nInput size (MB): 0.11\nForward/backward pass size (MB): 0.86\nParams size (MB): 0.00\nEstimated Total Size (MB): 0.97\n===================================================================================================================\n\n\nWe again put the two datasets into a data module, with a batch size of 64.\n\nnyse_dm = SimpleDataModule(nyse_train,\n                           nyse_test,\n                           num_workers=min(4, max_num_workers),\n                           validation=nyse_test,\n                           batch_size=64)\n\nWe run some data through our model to be sure the sizes match up correctly.\n\nfor idx, (x, y) in enumerate(nyse_dm.train_dataloader()):\n    out = nyse_model(x)\n    print(y.size(), out.size())\n    if idx &gt;= 2:\n        break\n\ntorch.Size([64]) torch.Size([64])\ntorch.Size([64]) torch.Size([64])\ntorch.Size([64]) torch.Size([64])\n\n\nWe follow our previous example for setting up a trainer for a regression problem, requesting the R^2 metric to be be computed at each epoch.\n\nnyse_optimizer = RMSprop(nyse_model.parameters(),\n                         lr=0.001)\nnyse_module = SimpleModule.regression(nyse_model,\n                                      optimizer=nyse_optimizer,\n                                      metrics={'r2':R2Score()})\n\nFitting the model should by now be familiar. The results on the test data are very similar to the linear AR model.\n\nnyse_trainer = Trainer(deterministic=False,#True,\n                       max_epochs=200,\n                       enable_progress_bar=False,\n                       callbacks=[ErrorTracker()])\nnyse_trainer.fit(nyse_module,\n                 datamodule=nyse_dm)\nnyse_trainer.test(nyse_module,\n                  datamodule=nyse_dm)\n\nGPU available: True (cuda), used: True\nTPU available: False, using: 0 TPU cores\nIPU available: False, using: 0 IPUs\nHPU available: False, using: 0 HPUs\nLOCAL_RANK: 0 - CUDA_VISIBLE_DEVICES: [0]\n\n  | Name  | Type      | Params\n------------------------------------\n0 | model | NYSEModel | 217   \n1 | loss  | MSELoss   | 0     \n------------------------------------\n217       Trainable params\n0         Non-trainable params\n217       Total params\n0.001     Total estimated model params size (MB)\n`Trainer.fit` stopped: `max_epochs=200` reached.\nLOCAL_RANK: 0 - CUDA_VISIBLE_DEVICES: [0]\n\n\n────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────\n       Test metric             DataLoader 0\n────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────\n        test_loss           0.6162289977073669\n         test_r2            0.4151685833930969\n────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────\n\n\n[{'test_loss': 0.6162289977073669, 'test_r2': 0.4151685833930969}]\n\n\nWe could also fit a model without the nn.RNN() layer by just using a nn.Flatten() layer instead. This would be a nonlinear AR model. If in addition we excluded the hidden layer, this would be equivalent to our earlier linear AR model.\nInstead we will fit a nonlinear AR model using the feature set X_day that includes the day_of_week indicators. To do so, we must first create our test and training datasets and a corresponding data module. This may seem a little burdensome, but is part of the general pipeline for torch.\n\ndatasets = []\nfor mask in [train, ~train]:\n    X_day_t = torch.tensor(\n                   np.asarray(X_day[mask]).astype(np.float32))\n    Y_t = torch.tensor(np.asarray(Y[mask]).astype(np.float32))\n    datasets.append(TensorDataset(X_day_t, Y_t))\nday_train, day_test = datasets\n\nCreating a data module follows a familiar pattern.\n\nday_dm = SimpleDataModule(day_train,\n                          day_test,\n                          num_workers=min(4, max_num_workers),\n                          validation=day_test,\n                          batch_size=64)\n\nWe build a NonLinearARModel() that takes as input the 20 features and a hidden layer with 32 units. The remaining steps are familiar.\n\nclass NonLinearARModel(nn.Module):\n    def __init__(self):\n        super(NonLinearARModel, self).__init__()\n        self._forward = nn.Sequential(nn.Flatten(),\n                                      nn.Linear(20, 32),\n                                      nn.ReLU(),\n                                      nn.Dropout(0.5),\n                                      nn.Linear(32, 1))\n    def forward(self, x):\n        return torch.flatten(self._forward(x))\n\n\nnl_model = NonLinearARModel()\nnl_optimizer = RMSprop(nl_model.parameters(),\n                           lr=0.001)\nnl_module = SimpleModule.regression(nl_model,\n                                        optimizer=nl_optimizer,\n                                        metrics={'r2':R2Score()})\n\nWe continue with the usual training steps, fit the model, and evaluate the test error. We see the test R^2 is a slight improvement over the linear AR model that also includes day_of_week.\n\nnl_trainer = Trainer(deterministic=False,#True,\n                     max_epochs=20,\n                     enable_progress_bar=False,\n                     callbacks=[ErrorTracker()])\nnl_trainer.fit(nl_module, datamodule=day_dm)\nnl_trainer.test(nl_module, datamodule=day_dm) \n\nGPU available: True (cuda), used: True\nTPU available: False, using: 0 TPU cores\nIPU available: False, using: 0 IPUs\nHPU available: False, using: 0 HPUs\nLOCAL_RANK: 0 - CUDA_VISIBLE_DEVICES: [0]\n\n  | Name  | Type             | Params\n-------------------------------------------\n0 | model | NonLinearARModel | 705   \n1 | loss  | MSELoss          | 0     \n-------------------------------------------\n705       Trainable params\n0         Non-trainable params\n705       Total params\n0.003     Total estimated model params size (MB)\n`Trainer.fit` stopped: `max_epochs=20` reached.\nLOCAL_RANK: 0 - CUDA_VISIBLE_DEVICES: [0]\n\n\n────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────\n       Test metric             DataLoader 0\n────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────\n        test_loss           0.5651618838310242\n         test_r2            0.46363383531570435\n────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────\n\n\n[{'test_loss': 0.5651618838310242, 'test_r2': 0.46363383531570435}]"
  },
  {
    "objectID": "posts/ch10-deep-learning/Ch10-deeplearning-lab.html#single-layer-network-on-hitters-data",
    "href": "posts/ch10-deep-learning/Ch10-deeplearning-lab.html#single-layer-network-on-hitters-data",
    "title": "Chapter 10: Deep Learning",
    "section": "",
    "text": "We start by fitting the models in Section~ on the Hitters data.\n\nHitters = load_data('Hitters').dropna()\nn = Hitters.shape[0]\n\nWe will fit two linear models (least squares and lasso) and compare their performance to that of a neural network. For this comparison we will use mean absolute error on a validation dataset.\n\n\\begin{equation*}\n\\begin{split}\n\\mbox{MAE}(y,\\hat{y}) = \\frac{1}{n} \\sum_{i=1}^n |y_i-\\hat{y}_i|.\n\\end{split}\n\\end{equation*}\n\nWe set up the model matrix and the response.\n\nmodel = MS(Hitters.columns.drop('Salary'), intercept=False)\nX = model.fit_transform(Hitters).to_numpy()\nY = Hitters['Salary'].to_numpy()\n\nThe to_numpy() method above converts pandas data frames or series to numpy arrays. We do this because we will need to use sklearn to fit the lasso model, and it requires this conversion. We also use a linear regression method from sklearn, rather than the method in Chapter~3 from statsmodels, to facilitate the comparisons.\nWe now split the data into test and training, fixing the random state used by sklearn to do the split.\n\n(X_train, \n X_test,\n Y_train,\n Y_test) = train_test_split(X,\n                            Y,\n                            test_size=1/3,\n                            random_state=1)\n\n\n\nWe fit the linear model and evaluate the test error directly.\n\nhit_lm = LinearRegression().fit(X_train, Y_train)\nYhat_test = hit_lm.predict(X_test)\nnp.abs(Yhat_test - Y_test).mean()\n\n259.7152883314627\n\n\nNext we fit the lasso using sklearn. We are using mean absolute error to select and evaluate a model, rather than mean squared error. The specialized solver we used in Section~ uses only mean squared error. So here, with a bit more work, we create a cross-validation grid and perform the cross-validation directly.\nWe encode a pipeline with two steps: we first normalize the features using a StandardScaler() transform, and then fit the lasso without further normalization.\n\nscaler = StandardScaler(with_mean=True, with_std=True)\nlasso = Lasso(warm_start=True, max_iter=30000)\nstandard_lasso = Pipeline(steps=[('scaler', scaler),\n                                 ('lasso', lasso)])\n\nWe need to create a grid of values for \\lambda. As is common practice, we choose a grid of 100 values of \\lambda, uniform on the log scale from lam_max down to 0.01*lam_max. Here lam_max is the smallest value of \\lambda with an all-zero solution. This value equals the largest absolute inner-product between any predictor and the (centered) response. {The derivation of this result is beyond the scope of this book.}\n\nX_s = scaler.fit_transform(X_train)\nn = X_s.shape[0]\nlam_max = np.fabs(X_s.T.dot(Y_train - Y_train.mean())).max() / n\nparam_grid = {'lasso__alpha': np.exp(np.linspace(0, np.log(0.01), 100))\n             * lam_max}\n\nNote that we had to transform the data first, since the scale of the variables impacts the choice of \\lambda. We now perform cross-validation using this sequence of \\lambda values.\n\ncv = KFold(10,\n           shuffle=True,\n           random_state=1)\ngrid = GridSearchCV(standard_lasso,\n                    param_grid,\n                    cv=cv,\n                    scoring='neg_mean_absolute_error')\ngrid.fit(X_train, Y_train);\n\nWe extract the lasso model with best cross-validated mean absolute error, and evaluate its performance on X_test and Y_test, which were not used in cross-validation.\n\ntrained_lasso = grid.best_estimator_\nYhat_test = trained_lasso.predict(X_test)\nnp.fabs(Yhat_test - Y_test).mean()\n\n235.6754837478029\n\n\nThis is similar to the results we got for the linear model fit by least squares. However, these results can vary a lot for different train/test splits; we encourage the reader to try a different seed in code block 12 and rerun the subsequent code up to this point.\n\n\n\nTo fit the neural network, we first set up a model structure that describes the network. Doing so requires us to define new classes specific to the model we wish to fit. Typically this is done in pytorch by sub-classing a generic representation of a network, which is the approach we take here. Although this example is simple, we will go through the steps in some detail, since it will serve us well for the more complex examples to follow.\n\nclass HittersModel(nn.Module):\n\n    def __init__(self, input_size):\n        super(HittersModel, self).__init__()\n        self.flatten = nn.Flatten()\n        self.sequential = nn.Sequential(\n            nn.Linear(input_size, 50),\n            nn.ReLU(),\n            nn.Dropout(0.4),\n            nn.Linear(50, 1))\n\n    def forward(self, x):\n        x = self.flatten(x)\n        return torch.flatten(self.sequential(x))\n\nThe class statement identifies the code chunk as a declaration for a class HittersModel that inherits from the base class nn.Module. This base class is ubiquitous in torch and represents the mappings in the neural networks.\nIndented beneath the class statement are the methods of this class: in this case __init__ and forward. The __init__ method is called when an instance of the class is created as in the cell below. In the methods, self always refers to an instance of the class. In the __init__ method, we have attached two objects to self as attributes: flatten and sequential. These are used in the forward method to describe the map that this module implements.\nThere is one additional line in the __init__ method, which is a call to super(). This function allows subclasses (i.e. HittersModel) to access methods of the class they inherit from. For example, the class nn.Module has its own __init__ method, which is different from the HittersModel.__init__() method we’ve written above. Using super() allows us to call the method of the base class. For torch models, we will always be making this super() call as it is necessary for the model to be properly interpreted by torch.\nThe object nn.Module has more methods than simply __init__ and forward. These methods are directly accessible to HittersModel instances because of this inheritance. One such method we will see shortly is the eval() method, used to disable dropout for when we want to evaluate the model on test data.\n\nhit_model = HittersModel(X.shape[1])\n\nThe object self.sequential is a composition of four maps. The first maps the 19 features of Hitters to 50 dimensions, introducing 50\\times 19+50 parameters for the weights and intercept of the map (often called the bias). This layer is then mapped to a ReLU layer followed by a 40% dropout layer, and finally a linear map down to 1 dimension, again with a bias. The total number of trainable parameters is therefore 50\\times 19+50+50+1=1051.\nThe package torchinfo provides a summary() function that neatly summarizes this information. We specify the size of the input and see the size of each tensor as it passes through layers of the network.\n\nsummary(hit_model, \n        input_size=X_train.shape,\n        col_names=['input_size',\n                   'output_size',\n                   'num_params'])\n\n/home/oren/work/notes/notes-islr-py/.venv/lib/python3.10/site-packages/torch/nn/modules/linear.py:116: UserWarning: Deterministic behavior was enabled with either `torch.use_deterministic_algorithms(True)` or `at::Context::setDeterministicAlgorithms(true)`, but this operation is not deterministic because it uses CuBLAS and you have CUDA &gt;= 10.2. To enable deterministic behavior in this case, you must set an environment variable before running your PyTorch application: CUBLAS_WORKSPACE_CONFIG=:4096:8 or CUBLAS_WORKSPACE_CONFIG=:16:8. For more information, go to https://docs.nvidia.com/cuda/cublas/index.html#results-reproducibility (Triggered internally at ../aten/src/ATen/Context.cpp:185.)\n  return F.linear(input, self.weight, self.bias)\n\n\n===================================================================================================================\nLayer (type:depth-idx)                   Input Shape               Output Shape              Param #\n===================================================================================================================\nHittersModel                             [175, 19]                 [175]                     --\n├─Flatten: 1-1                           [175, 19]                 [175, 19]                 --\n├─Sequential: 1-2                        [175, 19]                 [175, 1]                  --\n│    └─Linear: 2-1                       [175, 19]                 [175, 50]                 1,000\n│    └─ReLU: 2-2                         [175, 50]                 [175, 50]                 --\n│    └─Dropout: 2-3                      [175, 50]                 [175, 50]                 --\n│    └─Linear: 2-4                       [175, 50]                 [175, 1]                  51\n===================================================================================================================\nTotal params: 1,051\nTrainable params: 1,051\nNon-trainable params: 0\nTotal mult-adds (M): 0.18\n===================================================================================================================\nInput size (MB): 0.01\nForward/backward pass size (MB): 0.07\nParams size (MB): 0.00\nEstimated Total Size (MB): 0.09\n===================================================================================================================\n\n\nWe have truncated the end of the output slightly, here and in subsequent uses.\nWe now need to transform our training data into a form accessible to torch. The basic datatype in torch is a tensor, which is very similar to an ndarray from early chapters. We also note here that torch typically works with 32-bit (single precision) rather than 64-bit (double precision) floating point numbers.\nWe therefore convert our data to np.float32 before forming the tensor. The X and Y tensors are then arranged into a Dataset recognized by torch using TensorDataset().\n\nX_train_t = torch.tensor(X_train.astype(np.float32))\nY_train_t = torch.tensor(Y_train.astype(np.float32))\nhit_train = TensorDataset(X_train_t, Y_train_t)\n\nWe do the same for the test data.\n\nX_test_t = torch.tensor(X_test.astype(np.float32))\nY_test_t = torch.tensor(Y_test.astype(np.float32))\nhit_test = TensorDataset(X_test_t, Y_test_t)\n\nFinally, this dataset is passed to a DataLoader() which ultimately passes data into our network. While this may seem like a lot of overhead, this structure is helpful for more complex tasks where data may live on different machines, or where data must be passed to a GPU.\nWe provide a helper function SimpleDataModule() in ISLP to make this task easier for standard usage. One of its arguments is num_workers, which indicates how many processes we will use for loading the data. For small data like Hitters this will have little effect, but it does provide an advantage for the MNIST and CIFAR100 examples below.\nThe torch package will inspect the process running and determine a maximum number of workers. {This depends on the computing hardware and the number of cores available.} We’ve included a function rec_num_workers() to compute this so we know how many workers might be reasonable (here the max was 16).\n\nmax_num_workers = rec_num_workers()\n\nThe general training setup in pytorch_lightning involves training, validation and test data. These are each represented by different data loaders. During each epoch, we run a training step to learn the model and a validation step to track the error. The test data is typically used at the end of training to evaluate the model.\nIn this case, as we had split only into test and training, we’ll use the test data as validation data with the argument validation=hit_test. The validation argument can be a float between 0 and 1, an integer, or a Dataset. If a float (respectively, integer), it is interpreted as a percentage (respectively number) of the training observations to be used for validation. If it is a Dataset, it is passed directly to a data loader.\n\nhit_dm = SimpleDataModule(hit_train,\n                          hit_test,\n                          batch_size=32,\n                          num_workers=min(4, max_num_workers),\n                          validation=hit_test)\n\nNext we must provide a pytorch_lightning module that controls the steps performed during the training process. We provide methods for our SimpleModule() that simply record the value of the loss function and any additional metrics at the end of each epoch. These operations are controlled by the methods SimpleModule.[training/test/validation]_step(), though we will not be modifying these in our examples.\n\nhit_module = SimpleModule.regression(hit_model,\n                           metrics={'mae':MeanAbsoluteError()})\n\nBy using the SimpleModule.regression() method, we indicate that we will use squared-error loss as in (). We have also asked for mean absolute error to be tracked as well in the metrics that are logged.\nWe log our results via CSVLogger(), which in this case stores the results in a CSV file within a directory logs/hitters. After the fitting is complete, this allows us to load the results as a pd.DataFrame() and visualize them below. There are several ways to log the results within pytorch_lightning, though we will not cover those here in detail.\n\nhit_logger = CSVLogger('logs', name='hitters')\n\nFinally we are ready to train our model and log the results. We use the Trainer() object from pytorch_lightning to do this work. The argument datamodule=hit_dm tells the trainer how training/validation/test logs are produced, while the first argument hit_module specifies the network architecture as well as the training/validation/test steps. The callbacks argument allows for several tasks to be carried out at various points while training a model. Here our ErrorTracker() callback will enable us to compute validation error while training and, finally, the test error. We now fit the model for 50 epochs.\n\nhit_trainer = Trainer(deterministic=False,#True,\n                      max_epochs=50,\n                      log_every_n_steps=5,\n                      logger=hit_logger,\n                      callbacks=[ErrorTracker()])\nhit_trainer.fit(hit_module, datamodule=hit_dm)\n\nGPU available: True (cuda), used: True\nTPU available: False, using: 0 TPU cores\nIPU available: False, using: 0 IPUs\nHPU available: False, using: 0 HPUs\nYou are using a CUDA device ('NVIDIA GeForce RTX 3070 Laptop GPU') that has Tensor Cores. To properly utilize them, you should set `torch.set_float32_matmul_precision('medium' | 'high')` which will trade-off precision for performance. For more details, read https://pytorch.org/docs/stable/generated/torch.set_float32_matmul_precision.html#torch.set_float32_matmul_precision\nLOCAL_RANK: 0 - CUDA_VISIBLE_DEVICES: [0]\n\n  | Name  | Type         | Params\n---------------------------------------\n0 | model | HittersModel | 1.1 K \n1 | loss  | MSELoss      | 0     \n---------------------------------------\n1.1 K     Trainable params\n0         Non-trainable params\n1.1 K     Total params\n0.004     Total estimated model params size (MB)\n\n\nSanity Checking: |          | 0/? [00:00&lt;?, ?it/s]Sanity Checking:   0%|          | 0/2 [00:00&lt;?, ?it/s]Sanity Checking DataLoader 0:   0%|          | 0/2 [00:00&lt;?, ?it/s]Sanity Checking DataLoader 0:  50%|█████     | 1/2 [00:00&lt;00:00, 376.61it/s]Sanity Checking DataLoader 0: 100%|██████████| 2/2 [00:00&lt;00:00, 359.21it/s]                                                                            Training: |          | 0/? [00:00&lt;?, ?it/s]Training:   0%|          | 0/6 [00:00&lt;?, ?it/s]Epoch 0:   0%|          | 0/6 [00:00&lt;?, ?it/s] Epoch 0:  17%|█▋        | 1/6 [00:00&lt;00:00, 15.85it/s]Epoch 0:  17%|█▋        | 1/6 [00:00&lt;00:00, 15.66it/s, v_num=11]Epoch 0:  33%|███▎      | 2/6 [00:00&lt;00:00, 29.30it/s, v_num=11]Epoch 0:  33%|███▎      | 2/6 [00:00&lt;00:00, 29.12it/s, v_num=11]Epoch 0:  50%|█████     | 3/6 [00:00&lt;00:00, 42.33it/s, v_num=11]Epoch 0:  50%|█████     | 3/6 [00:00&lt;00:00, 42.11it/s, v_num=11]Epoch 0:  67%|██████▋   | 4/6 [00:00&lt;00:00, 53.94it/s, v_num=11]Epoch 0:  67%|██████▋   | 4/6 [00:00&lt;00:00, 53.57it/s, v_num=11]Epoch 0:  83%|████████▎ | 5/6 [00:00&lt;00:00, 64.87it/s, v_num=11]Epoch 0:  83%|████████▎ | 5/6 [00:00&lt;00:00, 64.50it/s, v_num=11]Epoch 0: 100%|██████████| 6/6 [00:00&lt;00:00, 69.70it/s, v_num=11]Epoch 0: 100%|██████████| 6/6 [00:00&lt;00:00, 69.04it/s, v_num=11]\nValidation: |          | 0/? [00:00&lt;?, ?it/s]\nValidation:   0%|          | 0/3 [00:00&lt;?, ?it/s]\nValidation DataLoader 0:   0%|          | 0/3 [00:00&lt;?, ?it/s]\nValidation DataLoader 0:  33%|███▎      | 1/3 [00:00&lt;00:00, 494.32it/s]\nValidation DataLoader 0:  67%|██████▋   | 2/3 [00:00&lt;00:00, 447.97it/s]\nValidation DataLoader 0: 100%|██████████| 3/3 [00:00&lt;00:00, 526.04it/s]\n                                                                       Epoch 0: 100%|██████████| 6/6 [00:00&lt;00:00, 58.48it/s, v_num=11]Epoch 0: 100%|██████████| 6/6 [00:00&lt;00:00, 58.05it/s, v_num=11]Epoch 0:   0%|          | 0/6 [00:00&lt;?, ?it/s, v_num=11]        Epoch 1:   0%|          | 0/6 [00:00&lt;?, ?it/s, v_num=11]Epoch 1:  17%|█▋        | 1/6 [00:00&lt;00:00, 144.37it/s, v_num=11]Epoch 1:  17%|█▋        | 1/6 [00:00&lt;00:00, 136.39it/s, v_num=11]Epoch 1:  33%|███▎      | 2/6 [00:00&lt;00:00, 207.18it/s, v_num=11]Epoch 1:  33%|███▎      | 2/6 [00:00&lt;00:00, 195.71it/s, v_num=11]Epoch 1:  50%|█████     | 3/6 [00:00&lt;00:00, 208.25it/s, v_num=11]Epoch 1:  50%|█████     | 3/6 [00:00&lt;00:00, 202.27it/s, v_num=11]Epoch 1:  67%|██████▋   | 4/6 [00:00&lt;00:00, 232.97it/s, v_num=11]Epoch 1:  67%|██████▋   | 4/6 [00:00&lt;00:00, 227.85it/s, v_num=11]Epoch 1:  83%|████████▎ | 5/6 [00:00&lt;00:00, 222.40it/s, v_num=11]Epoch 1:  83%|████████▎ | 5/6 [00:00&lt;00:00, 216.79it/s, v_num=11]Epoch 1: 100%|██████████| 6/6 [00:00&lt;00:00, 230.10it/s, v_num=11]Epoch 1: 100%|██████████| 6/6 [00:00&lt;00:00, 226.51it/s, v_num=11]\nValidation: |          | 0/? [00:00&lt;?, ?it/s]\nValidation:   0%|          | 0/3 [00:00&lt;?, ?it/s]\nValidation DataLoader 0:   0%|          | 0/3 [00:00&lt;?, ?it/s]\nValidation DataLoader 0:  33%|███▎      | 1/3 [00:00&lt;00:00, 637.72it/s]\nValidation DataLoader 0:  67%|██████▋   | 2/3 [00:00&lt;00:00, 419.20it/s]\nValidation DataLoader 0: 100%|██████████| 3/3 [00:00&lt;00:00, 486.60it/s]\n                                                                       Epoch 1: 100%|██████████| 6/6 [00:00&lt;00:00, 151.50it/s, v_num=11]Epoch 1: 100%|██████████| 6/6 [00:00&lt;00:00, 148.29it/s, v_num=11]Epoch 1:   0%|          | 0/6 [00:00&lt;?, ?it/s, v_num=11]         Epoch 2:   0%|          | 0/6 [00:00&lt;?, ?it/s, v_num=11]Epoch 2:  17%|█▋        | 1/6 [00:00&lt;00:00, 168.68it/s, v_num=11]Epoch 2:  17%|█▋        | 1/6 [00:00&lt;00:00, 157.73it/s, v_num=11]Epoch 2:  33%|███▎      | 2/6 [00:00&lt;00:00, 226.82it/s, v_num=11]Epoch 2:  33%|███▎      | 2/6 [00:00&lt;00:00, 218.63it/s, v_num=11]Epoch 2:  50%|█████     | 3/6 [00:00&lt;00:00, 273.16it/s, v_num=11]Epoch 2:  50%|█████     | 3/6 [00:00&lt;00:00, 265.77it/s, v_num=11]Epoch 2:  67%|██████▋   | 4/6 [00:00&lt;00:00, 294.06it/s, v_num=11]Epoch 2:  67%|██████▋   | 4/6 [00:00&lt;00:00, 287.24it/s, v_num=11]Epoch 2:  83%|████████▎ | 5/6 [00:00&lt;00:00, 280.87it/s, v_num=11]Epoch 2:  83%|████████▎ | 5/6 [00:00&lt;00:00, 270.81it/s, v_num=11]Epoch 2: 100%|██████████| 6/6 [00:00&lt;00:00, 281.79it/s, v_num=11]Epoch 2: 100%|██████████| 6/6 [00:00&lt;00:00, 276.82it/s, v_num=11]\nValidation: |          | 0/? [00:00&lt;?, ?it/s]\nValidation:   0%|          | 0/3 [00:00&lt;?, ?it/s]\nValidation DataLoader 0:   0%|          | 0/3 [00:00&lt;?, ?it/s]\nValidation DataLoader 0:  33%|███▎      | 1/3 [00:00&lt;00:00, 552.75it/s]\nValidation DataLoader 0:  67%|██████▋   | 2/3 [00:00&lt;00:00, 454.27it/s]\nValidation DataLoader 0: 100%|██████████| 3/3 [00:00&lt;00:00, 490.83it/s]\n                                                                       Epoch 2: 100%|██████████| 6/6 [00:00&lt;00:00, 164.65it/s, v_num=11]Epoch 2: 100%|██████████| 6/6 [00:00&lt;00:00, 161.28it/s, v_num=11]Epoch 2:   0%|          | 0/6 [00:00&lt;?, ?it/s, v_num=11]         Epoch 3:   0%|          | 0/6 [00:00&lt;?, ?it/s, v_num=11]Epoch 3:  17%|█▋        | 1/6 [00:00&lt;00:00, 194.37it/s, v_num=11]Epoch 3:  17%|█▋        | 1/6 [00:00&lt;00:00, 182.31it/s, v_num=11]Epoch 3:  33%|███▎      | 2/6 [00:00&lt;00:00, 251.69it/s, v_num=11]Epoch 3:  33%|███▎      | 2/6 [00:00&lt;00:00, 242.19it/s, v_num=11]Epoch 3:  50%|█████     | 3/6 [00:00&lt;00:00, 285.75it/s, v_num=11]Epoch 3:  50%|█████     | 3/6 [00:00&lt;00:00, 277.46it/s, v_num=11]Epoch 3:  67%|██████▋   | 4/6 [00:00&lt;00:00, 315.17it/s, v_num=11]Epoch 3:  67%|██████▋   | 4/6 [00:00&lt;00:00, 307.33it/s, v_num=11]Epoch 3:  83%|████████▎ | 5/6 [00:00&lt;00:00, 308.88it/s, v_num=11]Epoch 3:  83%|████████▎ | 5/6 [00:00&lt;00:00, 300.90it/s, v_num=11]Epoch 3: 100%|██████████| 6/6 [00:00&lt;00:00, 304.60it/s, v_num=11]Epoch 3: 100%|██████████| 6/6 [00:00&lt;00:00, 297.16it/s, v_num=11]\nValidation: |          | 0/? [00:00&lt;?, ?it/s]\nValidation:   0%|          | 0/3 [00:00&lt;?, ?it/s]\nValidation DataLoader 0:   0%|          | 0/3 [00:00&lt;?, ?it/s]\nValidation DataLoader 0:  33%|███▎      | 1/3 [00:00&lt;00:00, 581.90it/s]\nValidation DataLoader 0:  67%|██████▋   | 2/3 [00:00&lt;00:00, 606.42it/s]\nValidation DataLoader 0: 100%|██████████| 3/3 [00:00&lt;00:00, 671.30it/s]\n                                                                       Epoch 3: 100%|██████████| 6/6 [00:00&lt;00:00, 188.84it/s, v_num=11]Epoch 3: 100%|██████████| 6/6 [00:00&lt;00:00, 184.66it/s, v_num=11]Epoch 3:   0%|          | 0/6 [00:00&lt;?, ?it/s, v_num=11]         Epoch 4:   0%|          | 0/6 [00:00&lt;?, ?it/s, v_num=11]Epoch 4:  17%|█▋        | 1/6 [00:00&lt;00:00, 143.66it/s, v_num=11]Epoch 4:  17%|█▋        | 1/6 [00:00&lt;00:00, 130.38it/s, v_num=11]Epoch 4:  33%|███▎      | 2/6 [00:00&lt;00:00, 167.49it/s, v_num=11]Epoch 4:  33%|███▎      | 2/6 [00:00&lt;00:00, 159.97it/s, v_num=11]Epoch 4:  50%|█████     | 3/6 [00:00&lt;00:00, 200.84it/s, v_num=11]Epoch 4:  50%|█████     | 3/6 [00:00&lt;00:00, 196.62it/s, v_num=11]Epoch 4:  67%|██████▋   | 4/6 [00:00&lt;00:00, 219.58it/s, v_num=11]Epoch 4:  67%|██████▋   | 4/6 [00:00&lt;00:00, 213.82it/s, v_num=11]Epoch 4:  83%|████████▎ | 5/6 [00:00&lt;00:00, 220.59it/s, v_num=11]Epoch 4:  83%|████████▎ | 5/6 [00:00&lt;00:00, 216.13it/s, v_num=11]Epoch 4: 100%|██████████| 6/6 [00:00&lt;00:00, 231.53it/s, v_num=11]Epoch 4: 100%|██████████| 6/6 [00:00&lt;00:00, 227.99it/s, v_num=11]\nValidation: |          | 0/? [00:00&lt;?, ?it/s]\nValidation:   0%|          | 0/3 [00:00&lt;?, ?it/s]\nValidation DataLoader 0:   0%|          | 0/3 [00:00&lt;?, ?it/s]\nValidation DataLoader 0:  33%|███▎      | 1/3 [00:00&lt;00:00, 743.54it/s]\nValidation DataLoader 0:  67%|██████▋   | 2/3 [00:00&lt;00:00, 535.94it/s]\nValidation DataLoader 0: 100%|██████████| 3/3 [00:00&lt;00:00, 617.75it/s]\n                                                                       Epoch 4: 100%|██████████| 6/6 [00:00&lt;00:00, 160.86it/s, v_num=11]Epoch 4: 100%|██████████| 6/6 [00:00&lt;00:00, 157.88it/s, v_num=11]Epoch 4:   0%|          | 0/6 [00:00&lt;?, ?it/s, v_num=11]         Epoch 5:   0%|          | 0/6 [00:00&lt;?, ?it/s, v_num=11]Epoch 5:  17%|█▋        | 1/6 [00:00&lt;00:00, 119.33it/s, v_num=11]Epoch 5:  17%|█▋        | 1/6 [00:00&lt;00:00, 110.63it/s, v_num=11]Epoch 5:  33%|███▎      | 2/6 [00:00&lt;00:00, 156.54it/s, v_num=11]Epoch 5:  33%|███▎      | 2/6 [00:00&lt;00:00, 149.47it/s, v_num=11]Epoch 5:  50%|█████     | 3/6 [00:00&lt;00:00, 179.43it/s, v_num=11]Epoch 5:  50%|█████     | 3/6 [00:00&lt;00:00, 175.22it/s, v_num=11]Epoch 5:  67%|██████▋   | 4/6 [00:00&lt;00:00, 205.50it/s, v_num=11]Epoch 5:  67%|██████▋   | 4/6 [00:00&lt;00:00, 202.51it/s, v_num=11]Epoch 5:  83%|████████▎ | 5/6 [00:00&lt;00:00, 221.35it/s, v_num=11]Epoch 5:  83%|████████▎ | 5/6 [00:00&lt;00:00, 218.58it/s, v_num=11]Epoch 5: 100%|██████████| 6/6 [00:00&lt;00:00, 236.02it/s, v_num=11]Epoch 5: 100%|██████████| 6/6 [00:00&lt;00:00, 232.75it/s, v_num=11]\nValidation: |          | 0/? [00:00&lt;?, ?it/s]\nValidation:   0%|          | 0/3 [00:00&lt;?, ?it/s]\nValidation DataLoader 0:   0%|          | 0/3 [00:00&lt;?, ?it/s]\nValidation DataLoader 0:  33%|███▎      | 1/3 [00:00&lt;00:00, 641.63it/s]\nValidation DataLoader 0:  67%|██████▋   | 2/3 [00:00&lt;00:00, 487.17it/s]\nValidation DataLoader 0: 100%|██████████| 3/3 [00:00&lt;00:00, 535.03it/s]\n                                                                       Epoch 5: 100%|██████████| 6/6 [00:00&lt;00:00, 155.59it/s, v_num=11]Epoch 5: 100%|██████████| 6/6 [00:00&lt;00:00, 151.04it/s, v_num=11]Epoch 5:   0%|          | 0/6 [00:00&lt;?, ?it/s, v_num=11]         Epoch 6:   0%|          | 0/6 [00:00&lt;?, ?it/s, v_num=11]Epoch 6:  17%|█▋        | 1/6 [00:00&lt;00:00, 125.78it/s, v_num=11]Epoch 6:  17%|█▋        | 1/6 [00:00&lt;00:00, 113.63it/s, v_num=11]Epoch 6:  33%|███▎      | 2/6 [00:00&lt;00:00, 167.37it/s, v_num=11]Epoch 6:  33%|███▎      | 2/6 [00:00&lt;00:00, 159.22it/s, v_num=11]Epoch 6:  50%|█████     | 3/6 [00:00&lt;00:00, 183.48it/s, v_num=11]Epoch 6:  50%|█████     | 3/6 [00:00&lt;00:00, 178.55it/s, v_num=11]Epoch 6:  67%|██████▋   | 4/6 [00:00&lt;00:00, 198.29it/s, v_num=11]Epoch 6:  67%|██████▋   | 4/6 [00:00&lt;00:00, 193.56it/s, v_num=11]Epoch 6:  83%|████████▎ | 5/6 [00:00&lt;00:00, 190.50it/s, v_num=11]Epoch 6:  83%|████████▎ | 5/6 [00:00&lt;00:00, 187.05it/s, v_num=11]Epoch 6: 100%|██████████| 6/6 [00:00&lt;00:00, 205.08it/s, v_num=11]Epoch 6: 100%|██████████| 6/6 [00:00&lt;00:00, 202.07it/s, v_num=11]\nValidation: |          | 0/? [00:00&lt;?, ?it/s]\nValidation:   0%|          | 0/3 [00:00&lt;?, ?it/s]\nValidation DataLoader 0:   0%|          | 0/3 [00:00&lt;?, ?it/s]\nValidation DataLoader 0:  33%|███▎      | 1/3 [00:00&lt;00:00, 617.90it/s]\nValidation DataLoader 0:  67%|██████▋   | 2/3 [00:00&lt;00:00, 494.49it/s]\nValidation DataLoader 0: 100%|██████████| 3/3 [00:00&lt;00:00, 513.38it/s]\n                                                                       Epoch 6: 100%|██████████| 6/6 [00:00&lt;00:00, 140.26it/s, v_num=11]Epoch 6: 100%|██████████| 6/6 [00:00&lt;00:00, 137.53it/s, v_num=11]Epoch 6:   0%|          | 0/6 [00:00&lt;?, ?it/s, v_num=11]         Epoch 7:   0%|          | 0/6 [00:00&lt;?, ?it/s, v_num=11]Epoch 7:  17%|█▋        | 1/6 [00:00&lt;00:00, 130.99it/s, v_num=11]Epoch 7:  17%|█▋        | 1/6 [00:00&lt;00:00, 118.18it/s, v_num=11]Epoch 7:  33%|███▎      | 2/6 [00:00&lt;00:00, 159.83it/s, v_num=11]Epoch 7:  33%|███▎      | 2/6 [00:00&lt;00:00, 153.09it/s, v_num=11]Epoch 7:  50%|█████     | 3/6 [00:00&lt;00:00, 182.37it/s, v_num=11]Epoch 7:  50%|█████     | 3/6 [00:00&lt;00:00, 177.89it/s, v_num=11]Epoch 7:  67%|██████▋   | 4/6 [00:00&lt;00:00, 185.80it/s, v_num=11]Epoch 7:  67%|██████▋   | 4/6 [00:00&lt;00:00, 180.16it/s, v_num=11]Epoch 7:  83%|████████▎ | 5/6 [00:00&lt;00:00, 187.21it/s, v_num=11]Epoch 7:  83%|████████▎ | 5/6 [00:00&lt;00:00, 184.25it/s, v_num=11]Epoch 7: 100%|██████████| 6/6 [00:00&lt;00:00, 198.65it/s, v_num=11]Epoch 7: 100%|██████████| 6/6 [00:00&lt;00:00, 195.71it/s, v_num=11]\nValidation: |          | 0/? [00:00&lt;?, ?it/s]\nValidation:   0%|          | 0/3 [00:00&lt;?, ?it/s]\nValidation DataLoader 0:   0%|          | 0/3 [00:00&lt;?, ?it/s]\nValidation DataLoader 0:  33%|███▎      | 1/3 [00:00&lt;00:00, 609.02it/s]\nValidation DataLoader 0:  67%|██████▋   | 2/3 [00:00&lt;00:00, 505.34it/s]\nValidation DataLoader 0: 100%|██████████| 3/3 [00:00&lt;00:00, 562.89it/s]\n                                                                       Epoch 7: 100%|██████████| 6/6 [00:00&lt;00:00, 138.42it/s, v_num=11]Epoch 7: 100%|██████████| 6/6 [00:00&lt;00:00, 135.57it/s, v_num=11]Epoch 7:   0%|          | 0/6 [00:00&lt;?, ?it/s, v_num=11]         Epoch 8:   0%|          | 0/6 [00:00&lt;?, ?it/s, v_num=11]Epoch 8:  17%|█▋        | 1/6 [00:00&lt;00:00, 115.51it/s, v_num=11]Epoch 8:  17%|█▋        | 1/6 [00:00&lt;00:00, 106.78it/s, v_num=11]Epoch 8:  33%|███▎      | 2/6 [00:00&lt;00:00, 157.09it/s, v_num=11]Epoch 8:  33%|███▎      | 2/6 [00:00&lt;00:00, 151.46it/s, v_num=11]Epoch 8:  50%|█████     | 3/6 [00:00&lt;00:00, 174.73it/s, v_num=11]Epoch 8:  50%|█████     | 3/6 [00:00&lt;00:00, 168.36it/s, v_num=11]Epoch 8:  67%|██████▋   | 4/6 [00:00&lt;00:00, 194.81it/s, v_num=11]Epoch 8:  67%|██████▋   | 4/6 [00:00&lt;00:00, 191.43it/s, v_num=11]Epoch 8:  83%|████████▎ | 5/6 [00:00&lt;00:00, 205.81it/s, v_num=11]Epoch 8:  83%|████████▎ | 5/6 [00:00&lt;00:00, 200.70it/s, v_num=11]Epoch 8: 100%|██████████| 6/6 [00:00&lt;00:00, 221.16it/s, v_num=11]Epoch 8: 100%|██████████| 6/6 [00:00&lt;00:00, 218.48it/s, v_num=11]\nValidation: |          | 0/? [00:00&lt;?, ?it/s]\nValidation:   0%|          | 0/3 [00:00&lt;?, ?it/s]\nValidation DataLoader 0:   0%|          | 0/3 [00:00&lt;?, ?it/s]\nValidation DataLoader 0:  33%|███▎      | 1/3 [00:00&lt;00:00, 689.06it/s]\nValidation DataLoader 0:  67%|██████▋   | 2/3 [00:00&lt;00:00, 519.29it/s]\nValidation DataLoader 0: 100%|██████████| 3/3 [00:00&lt;00:00, 593.93it/s]\n                                                                       Epoch 8: 100%|██████████| 6/6 [00:00&lt;00:00, 158.31it/s, v_num=11]Epoch 8: 100%|██████████| 6/6 [00:00&lt;00:00, 155.44it/s, v_num=11]Epoch 8:   0%|          | 0/6 [00:00&lt;?, ?it/s, v_num=11]         Epoch 9:   0%|          | 0/6 [00:00&lt;?, ?it/s, v_num=11]Epoch 9:  17%|█▋        | 1/6 [00:00&lt;00:00, 130.71it/s, v_num=11]Epoch 9:  17%|█▋        | 1/6 [00:00&lt;00:00, 120.06it/s, v_num=11]Epoch 9:  33%|███▎      | 2/6 [00:00&lt;00:00, 171.23it/s, v_num=11]Epoch 9:  33%|███▎      | 2/6 [00:00&lt;00:00, 166.32it/s, v_num=11]Epoch 9:  50%|█████     | 3/6 [00:00&lt;00:00, 214.64it/s, v_num=11]Epoch 9:  50%|█████     | 3/6 [00:00&lt;00:00, 209.73it/s, v_num=11]Epoch 9:  67%|██████▋   | 4/6 [00:00&lt;00:00, 247.25it/s, v_num=11]Epoch 9:  67%|██████▋   | 4/6 [00:00&lt;00:00, 242.29it/s, v_num=11]Epoch 9:  83%|████████▎ | 5/6 [00:00&lt;00:00, 258.91it/s, v_num=11]Epoch 9:  83%|████████▎ | 5/6 [00:00&lt;00:00, 254.13it/s, v_num=11]Epoch 9: 100%|██████████| 6/6 [00:00&lt;00:00, 277.90it/s, v_num=11]Epoch 9: 100%|██████████| 6/6 [00:00&lt;00:00, 274.33it/s, v_num=11]\nValidation: |          | 0/? [00:00&lt;?, ?it/s]\nValidation:   0%|          | 0/3 [00:00&lt;?, ?it/s]\nValidation DataLoader 0:   0%|          | 0/3 [00:00&lt;?, ?it/s]\nValidation DataLoader 0:  33%|███▎      | 1/3 [00:00&lt;00:00, 391.15it/s]\nValidation DataLoader 0:  67%|██████▋   | 2/3 [00:00&lt;00:00, 430.32it/s]\nValidation DataLoader 0: 100%|██████████| 3/3 [00:00&lt;00:00, 433.19it/s]\n                                                                       Epoch 9: 100%|██████████| 6/6 [00:00&lt;00:00, 157.30it/s, v_num=11]Epoch 9: 100%|██████████| 6/6 [00:00&lt;00:00, 152.34it/s, v_num=11]Epoch 9:   0%|          | 0/6 [00:00&lt;?, ?it/s, v_num=11]         Epoch 10:   0%|          | 0/6 [00:00&lt;?, ?it/s, v_num=11]Epoch 10:  17%|█▋        | 1/6 [00:00&lt;00:00, 143.88it/s, v_num=11]Epoch 10:  17%|█▋        | 1/6 [00:00&lt;00:00, 136.07it/s, v_num=11]Epoch 10:  33%|███▎      | 2/6 [00:00&lt;00:00, 211.50it/s, v_num=11]Epoch 10:  33%|███▎      | 2/6 [00:00&lt;00:00, 204.75it/s, v_num=11]Epoch 10:  50%|█████     | 3/6 [00:00&lt;00:00, 257.72it/s, v_num=11]Epoch 10:  50%|█████     | 3/6 [00:00&lt;00:00, 251.16it/s, v_num=11]Epoch 10:  67%|██████▋   | 4/6 [00:00&lt;00:00, 289.62it/s, v_num=11]Epoch 10:  67%|██████▋   | 4/6 [00:00&lt;00:00, 283.73it/s, v_num=11]Epoch 10:  83%|████████▎ | 5/6 [00:00&lt;00:00, 304.48it/s, v_num=11]Epoch 10:  83%|████████▎ | 5/6 [00:00&lt;00:00, 298.84it/s, v_num=11]Epoch 10: 100%|██████████| 6/6 [00:00&lt;00:00, 309.45it/s, v_num=11]Epoch 10: 100%|██████████| 6/6 [00:00&lt;00:00, 304.30it/s, v_num=11]\nValidation: |          | 0/? [00:00&lt;?, ?it/s]\nValidation:   0%|          | 0/3 [00:00&lt;?, ?it/s]\nValidation DataLoader 0:   0%|          | 0/3 [00:00&lt;?, ?it/s]\nValidation DataLoader 0:  33%|███▎      | 1/3 [00:00&lt;00:00, 420.23it/s]\nValidation DataLoader 0:  67%|██████▋   | 2/3 [00:00&lt;00:00, 375.77it/s]\nValidation DataLoader 0: 100%|██████████| 3/3 [00:00&lt;00:00, 435.46it/s]\n                                                                       Epoch 10: 100%|██████████| 6/6 [00:00&lt;00:00, 173.78it/s, v_num=11]Epoch 10: 100%|██████████| 6/6 [00:00&lt;00:00, 169.62it/s, v_num=11]Epoch 10:   0%|          | 0/6 [00:00&lt;?, ?it/s, v_num=11]         Epoch 11:   0%|          | 0/6 [00:00&lt;?, ?it/s, v_num=11]Epoch 11:  17%|█▋        | 1/6 [00:00&lt;00:00, 152.73it/s, v_num=11]Epoch 11:  17%|█▋        | 1/6 [00:00&lt;00:00, 136.02it/s, v_num=11]Epoch 11:  33%|███▎      | 2/6 [00:00&lt;00:00, 177.31it/s, v_num=11]Epoch 11:  33%|███▎      | 2/6 [00:00&lt;00:00, 166.93it/s, v_num=11]Epoch 11:  50%|█████     | 3/6 [00:00&lt;00:00, 207.16it/s, v_num=11]Epoch 11:  50%|█████     | 3/6 [00:00&lt;00:00, 202.29it/s, v_num=11]Epoch 11:  67%|██████▋   | 4/6 [00:00&lt;00:00, 219.14it/s, v_num=11]Epoch 11:  67%|██████▋   | 4/6 [00:00&lt;00:00, 213.07it/s, v_num=11]Epoch 11:  83%|████████▎ | 5/6 [00:00&lt;00:00, 207.45it/s, v_num=11]Epoch 11:  83%|████████▎ | 5/6 [00:00&lt;00:00, 201.38it/s, v_num=11]Epoch 11: 100%|██████████| 6/6 [00:00&lt;00:00, 212.79it/s, v_num=11]Epoch 11: 100%|██████████| 6/6 [00:00&lt;00:00, 210.30it/s, v_num=11]\nValidation: |          | 0/? [00:00&lt;?, ?it/s]\nValidation:   0%|          | 0/3 [00:00&lt;?, ?it/s]\nValidation DataLoader 0:   0%|          | 0/3 [00:00&lt;?, ?it/s]\nValidation DataLoader 0:  33%|███▎      | 1/3 [00:00&lt;00:00, 638.60it/s]\nValidation DataLoader 0:  67%|██████▋   | 2/3 [00:00&lt;00:00, 538.21it/s]\nValidation DataLoader 0: 100%|██████████| 3/3 [00:00&lt;00:00, 589.00it/s]\n                                                                       Epoch 11: 100%|██████████| 6/6 [00:00&lt;00:00, 147.24it/s, v_num=11]Epoch 11: 100%|██████████| 6/6 [00:00&lt;00:00, 143.84it/s, v_num=11]Epoch 11:   0%|          | 0/6 [00:00&lt;?, ?it/s, v_num=11]         Epoch 12:   0%|          | 0/6 [00:00&lt;?, ?it/s, v_num=11]Epoch 12:  17%|█▋        | 1/6 [00:00&lt;00:00, 124.10it/s, v_num=11]Epoch 12:  17%|█▋        | 1/6 [00:00&lt;00:00, 114.01it/s, v_num=11]Epoch 12:  33%|███▎      | 2/6 [00:00&lt;00:00, 164.22it/s, v_num=11]Epoch 12:  33%|███▎      | 2/6 [00:00&lt;00:00, 159.27it/s, v_num=11]Epoch 12:  50%|█████     | 3/6 [00:00&lt;00:00, 200.69it/s, v_num=11]Epoch 12:  50%|█████     | 3/6 [00:00&lt;00:00, 196.09it/s, v_num=11]Epoch 12:  67%|██████▋   | 4/6 [00:00&lt;00:00, 220.76it/s, v_num=11]Epoch 12:  67%|██████▋   | 4/6 [00:00&lt;00:00, 217.17it/s, v_num=11]Epoch 12:  83%|████████▎ | 5/6 [00:00&lt;00:00, 233.59it/s, v_num=11]Epoch 12:  83%|████████▎ | 5/6 [00:00&lt;00:00, 230.37it/s, v_num=11]Epoch 12: 100%|██████████| 6/6 [00:00&lt;00:00, 251.49it/s, v_num=11]Epoch 12: 100%|██████████| 6/6 [00:00&lt;00:00, 248.32it/s, v_num=11]\nValidation: |          | 0/? [00:00&lt;?, ?it/s]\nValidation:   0%|          | 0/3 [00:00&lt;?, ?it/s]\nValidation DataLoader 0:   0%|          | 0/3 [00:00&lt;?, ?it/s]\nValidation DataLoader 0:  33%|███▎      | 1/3 [00:00&lt;00:00, 571.28it/s]\nValidation DataLoader 0:  67%|██████▋   | 2/3 [00:00&lt;00:00, 498.85it/s]\nValidation DataLoader 0: 100%|██████████| 3/3 [00:00&lt;00:00, 454.98it/s]\n                                                                       Epoch 12: 100%|██████████| 6/6 [00:00&lt;00:00, 158.45it/s, v_num=11]Epoch 12: 100%|██████████| 6/6 [00:00&lt;00:00, 153.75it/s, v_num=11]Epoch 12:   0%|          | 0/6 [00:00&lt;?, ?it/s, v_num=11]         Epoch 13:   0%|          | 0/6 [00:00&lt;?, ?it/s, v_num=11]Epoch 13:  17%|█▋        | 1/6 [00:00&lt;00:00, 130.02it/s, v_num=11]Epoch 13:  17%|█▋        | 1/6 [00:00&lt;00:00, 119.27it/s, v_num=11]Epoch 13:  33%|███▎      | 2/6 [00:00&lt;00:00, 183.67it/s, v_num=11]Epoch 13:  33%|███▎      | 2/6 [00:00&lt;00:00, 178.61it/s, v_num=11]Epoch 13:  50%|█████     | 3/6 [00:00&lt;00:00, 217.31it/s, v_num=11]Epoch 13:  50%|█████     | 3/6 [00:00&lt;00:00, 212.38it/s, v_num=11]Epoch 13:  67%|██████▋   | 4/6 [00:00&lt;00:00, 244.90it/s, v_num=11]Epoch 13:  67%|██████▋   | 4/6 [00:00&lt;00:00, 240.55it/s, v_num=11]Epoch 13:  83%|████████▎ | 5/6 [00:00&lt;00:00, 256.29it/s, v_num=11]Epoch 13:  83%|████████▎ | 5/6 [00:00&lt;00:00, 252.34it/s, v_num=11]Epoch 13: 100%|██████████| 6/6 [00:00&lt;00:00, 269.87it/s, v_num=11]Epoch 13: 100%|██████████| 6/6 [00:00&lt;00:00, 265.90it/s, v_num=11]\nValidation: |          | 0/? [00:00&lt;?, ?it/s]\nValidation:   0%|          | 0/3 [00:00&lt;?, ?it/s]\nValidation DataLoader 0:   0%|          | 0/3 [00:00&lt;?, ?it/s]\nValidation DataLoader 0:  33%|███▎      | 1/3 [00:00&lt;00:00, 569.03it/s]\nValidation DataLoader 0:  67%|██████▋   | 2/3 [00:00&lt;00:00, 396.66it/s]\nValidation DataLoader 0: 100%|██████████| 3/3 [00:00&lt;00:00, 452.95it/s]\n                                                                       Epoch 13: 100%|██████████| 6/6 [00:00&lt;00:00, 165.08it/s, v_num=11]Epoch 13: 100%|██████████| 6/6 [00:00&lt;00:00, 161.96it/s, v_num=11]Epoch 13:   0%|          | 0/6 [00:00&lt;?, ?it/s, v_num=11]         Epoch 14:   0%|          | 0/6 [00:00&lt;?, ?it/s, v_num=11]Epoch 14:  17%|█▋        | 1/6 [00:00&lt;00:00, 183.24it/s, v_num=11]Epoch 14:  17%|█▋        | 1/6 [00:00&lt;00:00, 171.95it/s, v_num=11]Epoch 14:  33%|███▎      | 2/6 [00:00&lt;00:00, 241.45it/s, v_num=11]Epoch 14:  33%|███▎      | 2/6 [00:00&lt;00:00, 230.20it/s, v_num=11]Epoch 14:  50%|█████     | 3/6 [00:00&lt;00:00, 285.48it/s, v_num=11]Epoch 14:  50%|█████     | 3/6 [00:00&lt;00:00, 275.52it/s, v_num=11]Epoch 14:  67%|██████▋   | 4/6 [00:00&lt;00:00, 309.85it/s, v_num=11]Epoch 14:  67%|██████▋   | 4/6 [00:00&lt;00:00, 300.42it/s, v_num=11]Epoch 14:  83%|████████▎ | 5/6 [00:00&lt;00:00, 296.85it/s, v_num=11]Epoch 14:  83%|████████▎ | 5/6 [00:00&lt;00:00, 286.50it/s, v_num=11]Epoch 14: 100%|██████████| 6/6 [00:00&lt;00:00, 288.59it/s, v_num=11]Epoch 14: 100%|██████████| 6/6 [00:00&lt;00:00, 281.84it/s, v_num=11]\nValidation: |          | 0/? [00:00&lt;?, ?it/s]\nValidation:   0%|          | 0/3 [00:00&lt;?, ?it/s]\nValidation DataLoader 0:   0%|          | 0/3 [00:00&lt;?, ?it/s]\nValidation DataLoader 0:  33%|███▎      | 1/3 [00:00&lt;00:00, 547.27it/s]\nValidation DataLoader 0:  67%|██████▋   | 2/3 [00:00&lt;00:00, 507.66it/s]\nValidation DataLoader 0: 100%|██████████| 3/3 [00:00&lt;00:00, 527.47it/s]\n                                                                       Epoch 14: 100%|██████████| 6/6 [00:00&lt;00:00, 172.83it/s, v_num=11]Epoch 14: 100%|██████████| 6/6 [00:00&lt;00:00, 168.22it/s, v_num=11]Epoch 14:   0%|          | 0/6 [00:00&lt;?, ?it/s, v_num=11]         Epoch 15:   0%|          | 0/6 [00:00&lt;?, ?it/s, v_num=11]Epoch 15:  17%|█▋        | 1/6 [00:00&lt;00:00, 132.80it/s, v_num=11]Epoch 15:  17%|█▋        | 1/6 [00:00&lt;00:00, 120.54it/s, v_num=11]Epoch 15:  33%|███▎      | 2/6 [00:00&lt;00:00, 166.20it/s, v_num=11]Epoch 15:  33%|███▎      | 2/6 [00:00&lt;00:00, 159.92it/s, v_num=11]Epoch 15:  50%|█████     | 3/6 [00:00&lt;00:00, 201.01it/s, v_num=11]Epoch 15:  50%|█████     | 3/6 [00:00&lt;00:00, 194.03it/s, v_num=11]Epoch 15:  67%|██████▋   | 4/6 [00:00&lt;00:00, 211.13it/s, v_num=11]Epoch 15:  67%|██████▋   | 4/6 [00:00&lt;00:00, 203.71it/s, v_num=11]Epoch 15:  83%|████████▎ | 5/6 [00:00&lt;00:00, 207.45it/s, v_num=11]Epoch 15:  83%|████████▎ | 5/6 [00:00&lt;00:00, 202.29it/s, v_num=11]Epoch 15: 100%|██████████| 6/6 [00:00&lt;00:00, 212.46it/s, v_num=11]Epoch 15: 100%|██████████| 6/6 [00:00&lt;00:00, 209.18it/s, v_num=11]\nValidation: |          | 0/? [00:00&lt;?, ?it/s]\nValidation:   0%|          | 0/3 [00:00&lt;?, ?it/s]\nValidation DataLoader 0:   0%|          | 0/3 [00:00&lt;?, ?it/s]\nValidation DataLoader 0:  33%|███▎      | 1/3 [00:00&lt;00:00, 630.44it/s]\nValidation DataLoader 0:  67%|██████▋   | 2/3 [00:00&lt;00:00, 554.47it/s]\nValidation DataLoader 0: 100%|██████████| 3/3 [00:00&lt;00:00, 607.25it/s]\n                                                                       Epoch 15: 100%|██████████| 6/6 [00:00&lt;00:00, 147.35it/s, v_num=11]Epoch 15: 100%|██████████| 6/6 [00:00&lt;00:00, 142.98it/s, v_num=11]Epoch 15:   0%|          | 0/6 [00:00&lt;?, ?it/s, v_num=11]         Epoch 16:   0%|          | 0/6 [00:00&lt;?, ?it/s, v_num=11]Epoch 16:  17%|█▋        | 1/6 [00:00&lt;00:00, 142.79it/s, v_num=11]Epoch 16:  17%|█▋        | 1/6 [00:00&lt;00:00, 131.17it/s, v_num=11]Epoch 16:  33%|███▎      | 2/6 [00:00&lt;00:00, 193.41it/s, v_num=11]Epoch 16:  33%|███▎      | 2/6 [00:00&lt;00:00, 187.32it/s, v_num=11]Epoch 16:  50%|█████     | 3/6 [00:00&lt;00:00, 234.55it/s, v_num=11]Epoch 16:  50%|█████     | 3/6 [00:00&lt;00:00, 229.06it/s, v_num=11]Epoch 16:  67%|██████▋   | 4/6 [00:00&lt;00:00, 260.71it/s, v_num=11]Epoch 16:  67%|██████▋   | 4/6 [00:00&lt;00:00, 252.69it/s, v_num=11]Epoch 16:  83%|████████▎ | 5/6 [00:00&lt;00:00, 187.29it/s, v_num=11]Epoch 16:  83%|████████▎ | 5/6 [00:00&lt;00:00, 184.98it/s, v_num=11]Epoch 16: 100%|██████████| 6/6 [00:00&lt;00:00, 206.58it/s, v_num=11]Epoch 16: 100%|██████████| 6/6 [00:00&lt;00:00, 204.37it/s, v_num=11]\nValidation: |          | 0/? [00:00&lt;?, ?it/s]\nValidation:   0%|          | 0/3 [00:00&lt;?, ?it/s]\nValidation DataLoader 0:   0%|          | 0/3 [00:00&lt;?, ?it/s]\nValidation DataLoader 0:  33%|███▎      | 1/3 [00:00&lt;00:00, 582.14it/s]\nValidation DataLoader 0:  67%|██████▋   | 2/3 [00:00&lt;00:00, 450.88it/s]\nValidation DataLoader 0: 100%|██████████| 3/3 [00:00&lt;00:00, 447.65it/s]\n                                                                       Epoch 16: 100%|██████████| 6/6 [00:00&lt;00:00, 137.34it/s, v_num=11]Epoch 16: 100%|██████████| 6/6 [00:00&lt;00:00, 135.19it/s, v_num=11]Epoch 16:   0%|          | 0/6 [00:00&lt;?, ?it/s, v_num=11]         Epoch 17:   0%|          | 0/6 [00:00&lt;?, ?it/s, v_num=11]Epoch 17:  17%|█▋        | 1/6 [00:00&lt;00:00, 182.05it/s, v_num=11]Epoch 17:  17%|█▋        | 1/6 [00:00&lt;00:00, 170.94it/s, v_num=11]Epoch 17:  33%|███▎      | 2/6 [00:00&lt;00:00, 254.42it/s, v_num=11]Epoch 17:  33%|███▎      | 2/6 [00:00&lt;00:00, 244.94it/s, v_num=11]Epoch 17:  50%|█████     | 3/6 [00:00&lt;00:00, 298.94it/s, v_num=11]Epoch 17:  50%|█████     | 3/6 [00:00&lt;00:00, 290.50it/s, v_num=11]Epoch 17:  67%|██████▋   | 4/6 [00:00&lt;00:00, 273.81it/s, v_num=11]Epoch 17:  67%|██████▋   | 4/6 [00:00&lt;00:00, 264.14it/s, v_num=11]Epoch 17:  83%|████████▎ | 5/6 [00:00&lt;00:00, 255.46it/s, v_num=11]Epoch 17:  83%|████████▎ | 5/6 [00:00&lt;00:00, 250.23it/s, v_num=11]Epoch 17: 100%|██████████| 6/6 [00:00&lt;00:00, 270.33it/s, v_num=11]Epoch 17: 100%|██████████| 6/6 [00:00&lt;00:00, 266.38it/s, v_num=11]\nValidation: |          | 0/? [00:00&lt;?, ?it/s]\nValidation:   0%|          | 0/3 [00:00&lt;?, ?it/s]\nValidation DataLoader 0:   0%|          | 0/3 [00:00&lt;?, ?it/s]\nValidation DataLoader 0:  33%|███▎      | 1/3 [00:00&lt;00:00, 352.82it/s]\nValidation DataLoader 0:  67%|██████▋   | 2/3 [00:00&lt;00:00, 390.64it/s]\nValidation DataLoader 0: 100%|██████████| 3/3 [00:00&lt;00:00, 426.22it/s]\n                                                                       Epoch 17: 100%|██████████| 6/6 [00:00&lt;00:00, 161.65it/s, v_num=11]Epoch 17: 100%|██████████| 6/6 [00:00&lt;00:00, 158.27it/s, v_num=11]Epoch 17:   0%|          | 0/6 [00:00&lt;?, ?it/s, v_num=11]         Epoch 18:   0%|          | 0/6 [00:00&lt;?, ?it/s, v_num=11]Epoch 18:  17%|█▋        | 1/6 [00:00&lt;00:00, 128.72it/s, v_num=11]Epoch 18:  17%|█▋        | 1/6 [00:00&lt;00:00, 117.33it/s, v_num=11]Epoch 18:  33%|███▎      | 2/6 [00:00&lt;00:00, 167.82it/s, v_num=11]Epoch 18:  33%|███▎      | 2/6 [00:00&lt;00:00, 159.53it/s, v_num=11]Epoch 18:  50%|█████     | 3/6 [00:00&lt;00:00, 180.17it/s, v_num=11]Epoch 18:  50%|█████     | 3/6 [00:00&lt;00:00, 174.90it/s, v_num=11]Epoch 18:  67%|██████▋   | 4/6 [00:00&lt;00:00, 194.52it/s, v_num=11]Epoch 18:  67%|██████▋   | 4/6 [00:00&lt;00:00, 188.63it/s, v_num=11]Epoch 18:  83%|████████▎ | 5/6 [00:00&lt;00:00, 200.57it/s, v_num=11]Epoch 18:  83%|████████▎ | 5/6 [00:00&lt;00:00, 197.57it/s, v_num=11]Epoch 18: 100%|██████████| 6/6 [00:00&lt;00:00, 218.43it/s, v_num=11]Epoch 18: 100%|██████████| 6/6 [00:00&lt;00:00, 215.16it/s, v_num=11]\nValidation: |          | 0/? [00:00&lt;?, ?it/s]\nValidation:   0%|          | 0/3 [00:00&lt;?, ?it/s]\nValidation DataLoader 0:   0%|          | 0/3 [00:00&lt;?, ?it/s]\nValidation DataLoader 0:  33%|███▎      | 1/3 [00:00&lt;00:00, 498.79it/s]\nValidation DataLoader 0:  67%|██████▋   | 2/3 [00:00&lt;00:00, 437.73it/s]\nValidation DataLoader 0: 100%|██████████| 3/3 [00:00&lt;00:00, 472.70it/s]\n                                                                       Epoch 18: 100%|██████████| 6/6 [00:00&lt;00:00, 148.16it/s, v_num=11]Epoch 18: 100%|██████████| 6/6 [00:00&lt;00:00, 145.67it/s, v_num=11]Epoch 18:   0%|          | 0/6 [00:00&lt;?, ?it/s, v_num=11]         Epoch 19:   0%|          | 0/6 [00:00&lt;?, ?it/s, v_num=11]Epoch 19:  17%|█▋        | 1/6 [00:00&lt;00:00, 145.39it/s, v_num=11]Epoch 19:  17%|█▋        | 1/6 [00:00&lt;00:00, 135.27it/s, v_num=11]Epoch 19:  33%|███▎      | 2/6 [00:00&lt;00:00, 172.26it/s, v_num=11]Epoch 19:  33%|███▎      | 2/6 [00:00&lt;00:00, 165.50it/s, v_num=11]Epoch 19:  50%|█████     | 3/6 [00:00&lt;00:00, 213.88it/s, v_num=11]Epoch 19:  50%|█████     | 3/6 [00:00&lt;00:00, 209.54it/s, v_num=11]Epoch 19:  67%|██████▋   | 4/6 [00:00&lt;00:00, 247.28it/s, v_num=11]Epoch 19:  67%|██████▋   | 4/6 [00:00&lt;00:00, 242.98it/s, v_num=11]Epoch 19:  83%|████████▎ | 5/6 [00:00&lt;00:00, 266.44it/s, v_num=11]Epoch 19:  83%|████████▎ | 5/6 [00:00&lt;00:00, 262.32it/s, v_num=11]Epoch 19: 100%|██████████| 6/6 [00:00&lt;00:00, 282.28it/s, v_num=11]Epoch 19: 100%|██████████| 6/6 [00:00&lt;00:00, 278.57it/s, v_num=11]\nValidation: |          | 0/? [00:00&lt;?, ?it/s]\nValidation:   0%|          | 0/3 [00:00&lt;?, ?it/s]\nValidation DataLoader 0:   0%|          | 0/3 [00:00&lt;?, ?it/s]\nValidation DataLoader 0:  33%|███▎      | 1/3 [00:00&lt;00:00, 570.03it/s]\nValidation DataLoader 0:  67%|██████▋   | 2/3 [00:00&lt;00:00, 524.75it/s]\nValidation DataLoader 0: 100%|██████████| 3/3 [00:00&lt;00:00, 578.26it/s]\n                                                                       Epoch 19: 100%|██████████| 6/6 [00:00&lt;00:00, 173.12it/s, v_num=11]Epoch 19: 100%|██████████| 6/6 [00:00&lt;00:00, 169.34it/s, v_num=11]Epoch 19:   0%|          | 0/6 [00:00&lt;?, ?it/s, v_num=11]         Epoch 20:   0%|          | 0/6 [00:00&lt;?, ?it/s, v_num=11]Epoch 20:  17%|█▋        | 1/6 [00:00&lt;00:00, 188.07it/s, v_num=11]Epoch 20:  17%|█▋        | 1/6 [00:00&lt;00:00, 176.70it/s, v_num=11]Epoch 20:  33%|███▎      | 2/6 [00:00&lt;00:00, 258.09it/s, v_num=11]Epoch 20:  33%|███▎      | 2/6 [00:00&lt;00:00, 248.77it/s, v_num=11]Epoch 20:  50%|█████     | 3/6 [00:00&lt;00:00, 303.85it/s, v_num=11]Epoch 20:  50%|█████     | 3/6 [00:00&lt;00:00, 294.82it/s, v_num=11]Epoch 20:  67%|██████▋   | 4/6 [00:00&lt;00:00, 328.54it/s, v_num=11]Epoch 20:  67%|██████▋   | 4/6 [00:00&lt;00:00, 320.28it/s, v_num=11]Epoch 20:  83%|████████▎ | 5/6 [00:00&lt;00:00, 310.60it/s, v_num=11]Epoch 20:  83%|████████▎ | 5/6 [00:00&lt;00:00, 300.96it/s, v_num=11]Epoch 20: 100%|██████████| 6/6 [00:00&lt;00:00, 291.75it/s, v_num=11]Epoch 20: 100%|██████████| 6/6 [00:00&lt;00:00, 286.34it/s, v_num=11]\nValidation: |          | 0/? [00:00&lt;?, ?it/s]\nValidation:   0%|          | 0/3 [00:00&lt;?, ?it/s]\nValidation DataLoader 0:   0%|          | 0/3 [00:00&lt;?, ?it/s]\nValidation DataLoader 0:  33%|███▎      | 1/3 [00:00&lt;00:00, 605.68it/s]\nValidation DataLoader 0:  67%|██████▋   | 2/3 [00:00&lt;00:00, 442.02it/s]\nValidation DataLoader 0: 100%|██████████| 3/3 [00:00&lt;00:00, 455.89it/s]\n                                                                       Epoch 20: 100%|██████████| 6/6 [00:00&lt;00:00, 173.34it/s, v_num=11]Epoch 20: 100%|██████████| 6/6 [00:00&lt;00:00, 169.52it/s, v_num=11]Epoch 20:   0%|          | 0/6 [00:00&lt;?, ?it/s, v_num=11]         Epoch 21:   0%|          | 0/6 [00:00&lt;?, ?it/s, v_num=11]Epoch 21:  17%|█▋        | 1/6 [00:00&lt;00:00, 177.75it/s, v_num=11]Epoch 21:  17%|█▋        | 1/6 [00:00&lt;00:00, 167.39it/s, v_num=11]Epoch 21:  33%|███▎      | 2/6 [00:00&lt;00:00, 238.76it/s, v_num=11]Epoch 21:  33%|███▎      | 2/6 [00:00&lt;00:00, 230.62it/s, v_num=11]Epoch 21:  50%|█████     | 3/6 [00:00&lt;00:00, 279.12it/s, v_num=11]Epoch 21:  50%|█████     | 3/6 [00:00&lt;00:00, 270.86it/s, v_num=11]Epoch 21:  67%|██████▋   | 4/6 [00:00&lt;00:00, 302.06it/s, v_num=11]Epoch 21:  67%|██████▋   | 4/6 [00:00&lt;00:00, 294.89it/s, v_num=11]Epoch 21:  83%|████████▎ | 5/6 [00:00&lt;00:00, 303.97it/s, v_num=11]Epoch 21:  83%|████████▎ | 5/6 [00:00&lt;00:00, 297.50it/s, v_num=11]Epoch 21: 100%|██████████| 6/6 [00:00&lt;00:00, 298.69it/s, v_num=11]Epoch 21: 100%|██████████| 6/6 [00:00&lt;00:00, 291.47it/s, v_num=11]\nValidation: |          | 0/? [00:00&lt;?, ?it/s]\nValidation:   0%|          | 0/3 [00:00&lt;?, ?it/s]\nValidation DataLoader 0:   0%|          | 0/3 [00:00&lt;?, ?it/s]\nValidation DataLoader 0:  33%|███▎      | 1/3 [00:00&lt;00:00, 536.01it/s]\nValidation DataLoader 0:  67%|██████▋   | 2/3 [00:00&lt;00:00, 443.61it/s]\nValidation DataLoader 0: 100%|██████████| 3/3 [00:00&lt;00:00, 478.75it/s]\n                                                                       Epoch 21: 100%|██████████| 6/6 [00:00&lt;00:00, 176.97it/s, v_num=11]Epoch 21: 100%|██████████| 6/6 [00:00&lt;00:00, 172.35it/s, v_num=11]Epoch 21:   0%|          | 0/6 [00:00&lt;?, ?it/s, v_num=11]         Epoch 22:   0%|          | 0/6 [00:00&lt;?, ?it/s, v_num=11]Epoch 22:  17%|█▋        | 1/6 [00:00&lt;00:00, 203.29it/s, v_num=11]Epoch 22:  17%|█▋        | 1/6 [00:00&lt;00:00, 189.64it/s, v_num=11]Epoch 22:  33%|███▎      | 2/6 [00:00&lt;00:00, 260.02it/s, v_num=11]Epoch 22:  33%|███▎      | 2/6 [00:00&lt;00:00, 250.13it/s, v_num=11]Epoch 22:  50%|█████     | 3/6 [00:00&lt;00:00, 305.06it/s, v_num=11]Epoch 22:  50%|█████     | 3/6 [00:00&lt;00:00, 296.31it/s, v_num=11]Epoch 22:  67%|██████▋   | 4/6 [00:00&lt;00:00, 281.39it/s, v_num=11]Epoch 22:  67%|██████▋   | 4/6 [00:00&lt;00:00, 268.61it/s, v_num=11]Epoch 22:  83%|████████▎ | 5/6 [00:00&lt;00:00, 274.80it/s, v_num=11]Epoch 22:  83%|████████▎ | 5/6 [00:00&lt;00:00, 268.61it/s, v_num=11]Epoch 22: 100%|██████████| 6/6 [00:00&lt;00:00, 284.74it/s, v_num=11]Epoch 22: 100%|██████████| 6/6 [00:00&lt;00:00, 280.37it/s, v_num=11]\nValidation: |          | 0/? [00:00&lt;?, ?it/s]\nValidation:   0%|          | 0/3 [00:00&lt;?, ?it/s]\nValidation DataLoader 0:   0%|          | 0/3 [00:00&lt;?, ?it/s]\nValidation DataLoader 0:  33%|███▎      | 1/3 [00:00&lt;00:00, 590.25it/s]\nValidation DataLoader 0:  67%|██████▋   | 2/3 [00:00&lt;00:00, 488.99it/s]\nValidation DataLoader 0: 100%|██████████| 3/3 [00:00&lt;00:00, 475.83it/s]\n                                                                       Epoch 22: 100%|██████████| 6/6 [00:00&lt;00:00, 172.91it/s, v_num=11]Epoch 22: 100%|██████████| 6/6 [00:00&lt;00:00, 168.97it/s, v_num=11]Epoch 22:   0%|          | 0/6 [00:00&lt;?, ?it/s, v_num=11]         Epoch 23:   0%|          | 0/6 [00:00&lt;?, ?it/s, v_num=11]Epoch 23:  17%|█▋        | 1/6 [00:00&lt;00:00, 152.54it/s, v_num=11]Epoch 23:  17%|█▋        | 1/6 [00:00&lt;00:00, 143.41it/s, v_num=11]Epoch 23:  33%|███▎      | 2/6 [00:00&lt;00:00, 221.34it/s, v_num=11]Epoch 23:  33%|███▎      | 2/6 [00:00&lt;00:00, 214.10it/s, v_num=11]Epoch 23:  50%|█████     | 3/6 [00:00&lt;00:00, 257.02it/s, v_num=11]Epoch 23:  50%|█████     | 3/6 [00:00&lt;00:00, 250.55it/s, v_num=11]Epoch 23:  67%|██████▋   | 4/6 [00:00&lt;00:00, 289.46it/s, v_num=11]Epoch 23:  67%|██████▋   | 4/6 [00:00&lt;00:00, 283.41it/s, v_num=11]Epoch 23:  83%|████████▎ | 5/6 [00:00&lt;00:00, 283.07it/s, v_num=11]Epoch 23:  83%|████████▎ | 5/6 [00:00&lt;00:00, 268.60it/s, v_num=11]Epoch 23: 100%|██████████| 6/6 [00:00&lt;00:00, 269.80it/s, v_num=11]Epoch 23: 100%|██████████| 6/6 [00:00&lt;00:00, 262.43it/s, v_num=11]\nValidation: |          | 0/? [00:00&lt;?, ?it/s]\nValidation:   0%|          | 0/3 [00:00&lt;?, ?it/s]\nValidation DataLoader 0:   0%|          | 0/3 [00:00&lt;?, ?it/s]\nValidation DataLoader 0:  33%|███▎      | 1/3 [00:00&lt;00:00, 604.19it/s]\nValidation DataLoader 0:  67%|██████▋   | 2/3 [00:00&lt;00:00, 500.04it/s]\nValidation DataLoader 0: 100%|██████████| 3/3 [00:00&lt;00:00, 585.71it/s]\n                                                                       Epoch 23: 100%|██████████| 6/6 [00:00&lt;00:00, 168.56it/s, v_num=11]Epoch 23: 100%|██████████| 6/6 [00:00&lt;00:00, 164.98it/s, v_num=11]Epoch 23:   0%|          | 0/6 [00:00&lt;?, ?it/s, v_num=11]         Epoch 24:   0%|          | 0/6 [00:00&lt;?, ?it/s, v_num=11]Epoch 24:  17%|█▋        | 1/6 [00:00&lt;00:00, 183.30it/s, v_num=11]Epoch 24:  17%|█▋        | 1/6 [00:00&lt;00:00, 173.30it/s, v_num=11]Epoch 24:  33%|███▎      | 2/6 [00:00&lt;00:00, 220.28it/s, v_num=11]Epoch 24:  33%|███▎      | 2/6 [00:00&lt;00:00, 205.00it/s, v_num=11]Epoch 24:  50%|█████     | 3/6 [00:00&lt;00:00, 224.14it/s, v_num=11]Epoch 24:  50%|█████     | 3/6 [00:00&lt;00:00, 214.10it/s, v_num=11]Epoch 24:  67%|██████▋   | 4/6 [00:00&lt;00:00, 231.52it/s, v_num=11]Epoch 24:  67%|██████▋   | 4/6 [00:00&lt;00:00, 223.83it/s, v_num=11]Epoch 24:  83%|████████▎ | 5/6 [00:00&lt;00:00, 228.54it/s, v_num=11]Epoch 24:  83%|████████▎ | 5/6 [00:00&lt;00:00, 224.73it/s, v_num=11]Epoch 24: 100%|██████████| 6/6 [00:00&lt;00:00, 240.44it/s, v_num=11]Epoch 24: 100%|██████████| 6/6 [00:00&lt;00:00, 235.89it/s, v_num=11]\nValidation: |          | 0/? [00:00&lt;?, ?it/s]\nValidation:   0%|          | 0/3 [00:00&lt;?, ?it/s]\nValidation DataLoader 0:   0%|          | 0/3 [00:00&lt;?, ?it/s]\nValidation DataLoader 0:  33%|███▎      | 1/3 [00:00&lt;00:00, 741.83it/s]\nValidation DataLoader 0:  67%|██████▋   | 2/3 [00:00&lt;00:00, 694.88it/s]\nValidation DataLoader 0: 100%|██████████| 3/3 [00:00&lt;00:00, 750.95it/s]\n                                                                       Epoch 24: 100%|██████████| 6/6 [00:00&lt;00:00, 161.13it/s, v_num=11]Epoch 24: 100%|██████████| 6/6 [00:00&lt;00:00, 157.96it/s, v_num=11]Epoch 24:   0%|          | 0/6 [00:00&lt;?, ?it/s, v_num=11]         Epoch 25:   0%|          | 0/6 [00:00&lt;?, ?it/s, v_num=11]Epoch 25:  17%|█▋        | 1/6 [00:00&lt;00:00, 136.40it/s, v_num=11]Epoch 25:  17%|█▋        | 1/6 [00:00&lt;00:00, 124.32it/s, v_num=11]Epoch 25:  33%|███▎      | 2/6 [00:00&lt;00:00, 164.03it/s, v_num=11]Epoch 25:  33%|███▎      | 2/6 [00:00&lt;00:00, 158.62it/s, v_num=11]Epoch 25:  50%|█████     | 3/6 [00:00&lt;00:00, 200.87it/s, v_num=11]Epoch 25:  50%|█████     | 3/6 [00:00&lt;00:00, 194.36it/s, v_num=11]Epoch 25:  67%|██████▋   | 4/6 [00:00&lt;00:00, 217.79it/s, v_num=11]Epoch 25:  67%|██████▋   | 4/6 [00:00&lt;00:00, 213.69it/s, v_num=11]Epoch 25:  83%|████████▎ | 5/6 [00:00&lt;00:00, 236.14it/s, v_num=11]Epoch 25:  83%|████████▎ | 5/6 [00:00&lt;00:00, 232.79it/s, v_num=11]Epoch 25: 100%|██████████| 6/6 [00:00&lt;00:00, 248.08it/s, v_num=11]Epoch 25: 100%|██████████| 6/6 [00:00&lt;00:00, 245.19it/s, v_num=11]\nValidation: |          | 0/? [00:00&lt;?, ?it/s]\nValidation:   0%|          | 0/3 [00:00&lt;?, ?it/s]\nValidation DataLoader 0:   0%|          | 0/3 [00:00&lt;?, ?it/s]\nValidation DataLoader 0:  33%|███▎      | 1/3 [00:00&lt;00:00, 734.04it/s]\nValidation DataLoader 0:  67%|██████▋   | 2/3 [00:00&lt;00:00, 671.84it/s]\nValidation DataLoader 0: 100%|██████████| 3/3 [00:00&lt;00:00, 739.65it/s]\n                                                                       Epoch 25: 100%|██████████| 6/6 [00:00&lt;00:00, 169.67it/s, v_num=11]Epoch 25: 100%|██████████| 6/6 [00:00&lt;00:00, 165.06it/s, v_num=11]Epoch 25:   0%|          | 0/6 [00:00&lt;?, ?it/s, v_num=11]         Epoch 26:   0%|          | 0/6 [00:00&lt;?, ?it/s, v_num=11]Epoch 26:  17%|█▋        | 1/6 [00:00&lt;00:00, 134.73it/s, v_num=11]Epoch 26:  17%|█▋        | 1/6 [00:00&lt;00:00, 124.93it/s, v_num=11]Epoch 26:  33%|███▎      | 2/6 [00:00&lt;00:00, 177.00it/s, v_num=11]Epoch 26:  33%|███▎      | 2/6 [00:00&lt;00:00, 168.78it/s, v_num=11]Epoch 26:  50%|█████     | 3/6 [00:00&lt;00:00, 204.04it/s, v_num=11]Epoch 26:  50%|█████     | 3/6 [00:00&lt;00:00, 199.30it/s, v_num=11]Epoch 26:  67%|██████▋   | 4/6 [00:00&lt;00:00, 234.22it/s, v_num=11]Epoch 26:  67%|██████▋   | 4/6 [00:00&lt;00:00, 230.02it/s, v_num=11]Epoch 26:  83%|████████▎ | 5/6 [00:00&lt;00:00, 242.08it/s, v_num=11]Epoch 26:  83%|████████▎ | 5/6 [00:00&lt;00:00, 237.43it/s, v_num=11]Epoch 26: 100%|██████████| 6/6 [00:00&lt;00:00, 261.60it/s, v_num=11]Epoch 26: 100%|██████████| 6/6 [00:00&lt;00:00, 258.14it/s, v_num=11]\nValidation: |          | 0/? [00:00&lt;?, ?it/s]\nValidation:   0%|          | 0/3 [00:00&lt;?, ?it/s]\nValidation DataLoader 0:   0%|          | 0/3 [00:00&lt;?, ?it/s]\nValidation DataLoader 0:  33%|███▎      | 1/3 [00:00&lt;00:00, 567.10it/s]\nValidation DataLoader 0:  67%|██████▋   | 2/3 [00:00&lt;00:00, 562.65it/s]\nValidation DataLoader 0: 100%|██████████| 3/3 [00:00&lt;00:00, 637.53it/s]\n                                                                       Epoch 26: 100%|██████████| 6/6 [00:00&lt;00:00, 175.47it/s, v_num=11]Epoch 26: 100%|██████████| 6/6 [00:00&lt;00:00, 170.72it/s, v_num=11]Epoch 26:   0%|          | 0/6 [00:00&lt;?, ?it/s, v_num=11]         Epoch 27:   0%|          | 0/6 [00:00&lt;?, ?it/s, v_num=11]Epoch 27:  17%|█▋        | 1/6 [00:00&lt;00:00, 143.74it/s, v_num=11]Epoch 27:  17%|█▋        | 1/6 [00:00&lt;00:00, 135.08it/s, v_num=11]Epoch 27:  33%|███▎      | 2/6 [00:00&lt;00:00, 195.12it/s, v_num=11]Epoch 27:  33%|███▎      | 2/6 [00:00&lt;00:00, 185.55it/s, v_num=11]Epoch 27:  50%|█████     | 3/6 [00:00&lt;00:00, 232.30it/s, v_num=11]Epoch 27:  50%|█████     | 3/6 [00:00&lt;00:00, 226.69it/s, v_num=11]Epoch 27:  67%|██████▋   | 4/6 [00:00&lt;00:00, 257.02it/s, v_num=11]Epoch 27:  67%|██████▋   | 4/6 [00:00&lt;00:00, 251.99it/s, v_num=11]Epoch 27:  83%|████████▎ | 5/6 [00:00&lt;00:00, 269.59it/s, v_num=11]Epoch 27:  83%|████████▎ | 5/6 [00:00&lt;00:00, 265.32it/s, v_num=11]Epoch 27: 100%|██████████| 6/6 [00:00&lt;00:00, 290.04it/s, v_num=11]Epoch 27: 100%|██████████| 6/6 [00:00&lt;00:00, 286.13it/s, v_num=11]\nValidation: |          | 0/? [00:00&lt;?, ?it/s]\nValidation:   0%|          | 0/3 [00:00&lt;?, ?it/s]\nValidation DataLoader 0:   0%|          | 0/3 [00:00&lt;?, ?it/s]\nValidation DataLoader 0:  33%|███▎      | 1/3 [00:00&lt;00:00, 670.77it/s]\nValidation DataLoader 0:  67%|██████▋   | 2/3 [00:00&lt;00:00, 467.25it/s]\nValidation DataLoader 0: 100%|██████████| 3/3 [00:00&lt;00:00, 527.83it/s]\n                                                                       Epoch 27: 100%|██████████| 6/6 [00:00&lt;00:00, 181.37it/s, v_num=11]Epoch 27: 100%|██████████| 6/6 [00:00&lt;00:00, 176.96it/s, v_num=11]Epoch 27:   0%|          | 0/6 [00:00&lt;?, ?it/s, v_num=11]         Epoch 28:   0%|          | 0/6 [00:00&lt;?, ?it/s, v_num=11]Epoch 28:  17%|█▋        | 1/6 [00:00&lt;00:00, 164.06it/s, v_num=11]Epoch 28:  17%|█▋        | 1/6 [00:00&lt;00:00, 154.50it/s, v_num=11]Epoch 28:  33%|███▎      | 2/6 [00:00&lt;00:00, 236.41it/s, v_num=11]Epoch 28:  33%|███▎      | 2/6 [00:00&lt;00:00, 228.14it/s, v_num=11]Epoch 28:  50%|█████     | 3/6 [00:00&lt;00:00, 270.97it/s, v_num=11]Epoch 28:  50%|█████     | 3/6 [00:00&lt;00:00, 263.91it/s, v_num=11]Epoch 28:  67%|██████▋   | 4/6 [00:00&lt;00:00, 302.60it/s, v_num=11]Epoch 28:  67%|██████▋   | 4/6 [00:00&lt;00:00, 295.97it/s, v_num=11]Epoch 28:  83%|████████▎ | 5/6 [00:00&lt;00:00, 308.29it/s, v_num=11]Epoch 28:  83%|████████▎ | 5/6 [00:00&lt;00:00, 301.42it/s, v_num=11]Epoch 28: 100%|██████████| 6/6 [00:00&lt;00:00, 320.51it/s, v_num=11]Epoch 28: 100%|██████████| 6/6 [00:00&lt;00:00, 312.09it/s, v_num=11]\nValidation: |          | 0/? [00:00&lt;?, ?it/s]\nValidation:   0%|          | 0/3 [00:00&lt;?, ?it/s]\nValidation DataLoader 0:   0%|          | 0/3 [00:00&lt;?, ?it/s]\nValidation DataLoader 0:  33%|███▎      | 1/3 [00:00&lt;00:00, 675.30it/s]\nValidation DataLoader 0:  67%|██████▋   | 2/3 [00:00&lt;00:00, 587.19it/s]\nValidation DataLoader 0: 100%|██████████| 3/3 [00:00&lt;00:00, 618.20it/s]\n                                                                       Epoch 28: 100%|██████████| 6/6 [00:00&lt;00:00, 186.57it/s, v_num=11]Epoch 28: 100%|██████████| 6/6 [00:00&lt;00:00, 182.17it/s, v_num=11]Epoch 28:   0%|          | 0/6 [00:00&lt;?, ?it/s, v_num=11]         Epoch 29:   0%|          | 0/6 [00:00&lt;?, ?it/s, v_num=11]Epoch 29:  17%|█▋        | 1/6 [00:00&lt;00:00, 161.10it/s, v_num=11]Epoch 29:  17%|█▋        | 1/6 [00:00&lt;00:00, 148.50it/s, v_num=11]Epoch 29:  33%|███▎      | 2/6 [00:00&lt;00:00, 215.30it/s, v_num=11]Epoch 29:  33%|███▎      | 2/6 [00:00&lt;00:00, 208.02it/s, v_num=11]Epoch 29:  50%|█████     | 3/6 [00:00&lt;00:00, 261.53it/s, v_num=11]Epoch 29:  50%|█████     | 3/6 [00:00&lt;00:00, 254.79it/s, v_num=11]Epoch 29:  67%|██████▋   | 4/6 [00:00&lt;00:00, 291.36it/s, v_num=11]Epoch 29:  67%|██████▋   | 4/6 [00:00&lt;00:00, 279.83it/s, v_num=11]Epoch 29:  83%|████████▎ | 5/6 [00:00&lt;00:00, 281.54it/s, v_num=11]Epoch 29:  83%|████████▎ | 5/6 [00:00&lt;00:00, 275.08it/s, v_num=11]Epoch 29: 100%|██████████| 6/6 [00:00&lt;00:00, 289.65it/s, v_num=11]Epoch 29: 100%|██████████| 6/6 [00:00&lt;00:00, 281.99it/s, v_num=11]\nValidation: |          | 0/? [00:00&lt;?, ?it/s]\nValidation:   0%|          | 0/3 [00:00&lt;?, ?it/s]\nValidation DataLoader 0:   0%|          | 0/3 [00:00&lt;?, ?it/s]\nValidation DataLoader 0:  33%|███▎      | 1/3 [00:00&lt;00:00, 720.67it/s]\nValidation DataLoader 0:  67%|██████▋   | 2/3 [00:00&lt;00:00, 694.88it/s]\nValidation DataLoader 0: 100%|██████████| 3/3 [00:00&lt;00:00, 660.24it/s]\n                                                                       Epoch 29: 100%|██████████| 6/6 [00:00&lt;00:00, 174.85it/s, v_num=11]Epoch 29: 100%|██████████| 6/6 [00:00&lt;00:00, 171.18it/s, v_num=11]Epoch 29:   0%|          | 0/6 [00:00&lt;?, ?it/s, v_num=11]         Epoch 30:   0%|          | 0/6 [00:00&lt;?, ?it/s, v_num=11]Epoch 30:  17%|█▋        | 1/6 [00:00&lt;00:00, 183.44it/s, v_num=11]Epoch 30:  17%|█▋        | 1/6 [00:00&lt;00:00, 172.37it/s, v_num=11]Epoch 30:  33%|███▎      | 2/6 [00:00&lt;00:00, 255.49it/s, v_num=11]Epoch 30:  33%|███▎      | 2/6 [00:00&lt;00:00, 244.76it/s, v_num=11]Epoch 30:  50%|█████     | 3/6 [00:00&lt;00:00, 297.09it/s, v_num=11]Epoch 30:  50%|█████     | 3/6 [00:00&lt;00:00, 287.56it/s, v_num=11]Epoch 30:  67%|██████▋   | 4/6 [00:00&lt;00:00, 286.74it/s, v_num=11]Epoch 30:  67%|██████▋   | 4/6 [00:00&lt;00:00, 274.19it/s, v_num=11]Epoch 30:  83%|████████▎ | 5/6 [00:00&lt;00:00, 264.74it/s, v_num=11]Epoch 30:  83%|████████▎ | 5/6 [00:00&lt;00:00, 256.42it/s, v_num=11]Epoch 30: 100%|██████████| 6/6 [00:00&lt;00:00, 266.99it/s, v_num=11]Epoch 30: 100%|██████████| 6/6 [00:00&lt;00:00, 262.94it/s, v_num=11]\nValidation: |          | 0/? [00:00&lt;?, ?it/s]\nValidation:   0%|          | 0/3 [00:00&lt;?, ?it/s]\nValidation DataLoader 0:   0%|          | 0/3 [00:00&lt;?, ?it/s]\nValidation DataLoader 0:  33%|███▎      | 1/3 [00:00&lt;00:00, 714.29it/s]\nValidation DataLoader 0:  67%|██████▋   | 2/3 [00:00&lt;00:00, 723.47it/s]\nValidation DataLoader 0: 100%|██████████| 3/3 [00:00&lt;00:00, 772.19it/s]\n                                                                       Epoch 30: 100%|██████████| 6/6 [00:00&lt;00:00, 181.43it/s, v_num=11]Epoch 30: 100%|██████████| 6/6 [00:00&lt;00:00, 177.26it/s, v_num=11]Epoch 30:   0%|          | 0/6 [00:00&lt;?, ?it/s, v_num=11]         Epoch 31:   0%|          | 0/6 [00:00&lt;?, ?it/s, v_num=11]Epoch 31:  17%|█▋        | 1/6 [00:00&lt;00:00, 140.79it/s, v_num=11]Epoch 31:  17%|█▋        | 1/6 [00:00&lt;00:00, 128.40it/s, v_num=11]Epoch 31:  33%|███▎      | 2/6 [00:00&lt;00:00, 182.27it/s, v_num=11]Epoch 31:  33%|███▎      | 2/6 [00:00&lt;00:00, 173.22it/s, v_num=11]Epoch 31:  50%|█████     | 3/6 [00:00&lt;00:00, 216.34it/s, v_num=11]Epoch 31:  50%|█████     | 3/6 [00:00&lt;00:00, 211.46it/s, v_num=11]Epoch 31:  67%|██████▋   | 4/6 [00:00&lt;00:00, 247.67it/s, v_num=11]Epoch 31:  67%|██████▋   | 4/6 [00:00&lt;00:00, 243.26it/s, v_num=11]Epoch 31:  83%|████████▎ | 5/6 [00:00&lt;00:00, 242.22it/s, v_num=11]Epoch 31:  83%|████████▎ | 5/6 [00:00&lt;00:00, 235.61it/s, v_num=11]Epoch 31: 100%|██████████| 6/6 [00:00&lt;00:00, 240.53it/s, v_num=11]Epoch 31: 100%|██████████| 6/6 [00:00&lt;00:00, 234.84it/s, v_num=11]\nValidation: |          | 0/? [00:00&lt;?, ?it/s]\nValidation:   0%|          | 0/3 [00:00&lt;?, ?it/s]\nValidation DataLoader 0:   0%|          | 0/3 [00:00&lt;?, ?it/s]\nValidation DataLoader 0:  33%|███▎      | 1/3 [00:00&lt;00:00, 740.91it/s]\nValidation DataLoader 0:  67%|██████▋   | 2/3 [00:00&lt;00:00, 731.86it/s]\nValidation DataLoader 0: 100%|██████████| 3/3 [00:00&lt;00:00, 768.56it/s]\n                                                                       Epoch 31: 100%|██████████| 6/6 [00:00&lt;00:00, 163.55it/s, v_num=11]Epoch 31: 100%|██████████| 6/6 [00:00&lt;00:00, 160.39it/s, v_num=11]Epoch 31:   0%|          | 0/6 [00:00&lt;?, ?it/s, v_num=11]         Epoch 32:   0%|          | 0/6 [00:00&lt;?, ?it/s, v_num=11]Epoch 32:  17%|█▋        | 1/6 [00:00&lt;00:00, 135.51it/s, v_num=11]Epoch 32:  17%|█▋        | 1/6 [00:00&lt;00:00, 123.51it/s, v_num=11]Epoch 32:  33%|███▎      | 2/6 [00:00&lt;00:00, 188.89it/s, v_num=11]Epoch 32:  33%|███▎      | 2/6 [00:00&lt;00:00, 183.24it/s, v_num=11]Epoch 32:  50%|█████     | 3/6 [00:00&lt;00:00, 218.51it/s, v_num=11]Epoch 32:  50%|█████     | 3/6 [00:00&lt;00:00, 211.23it/s, v_num=11]Epoch 32:  67%|██████▋   | 4/6 [00:00&lt;00:00, 222.75it/s, v_num=11]Epoch 32:  67%|██████▋   | 4/6 [00:00&lt;00:00, 218.26it/s, v_num=11]Epoch 32:  83%|████████▎ | 5/6 [00:00&lt;00:00, 228.54it/s, v_num=11]Epoch 32:  83%|████████▎ | 5/6 [00:00&lt;00:00, 224.69it/s, v_num=11]Epoch 32: 100%|██████████| 6/6 [00:00&lt;00:00, 247.58it/s, v_num=11]Epoch 32: 100%|██████████| 6/6 [00:00&lt;00:00, 244.62it/s, v_num=11]\nValidation: |          | 0/? [00:00&lt;?, ?it/s]\nValidation:   0%|          | 0/3 [00:00&lt;?, ?it/s]\nValidation DataLoader 0:   0%|          | 0/3 [00:00&lt;?, ?it/s]\nValidation DataLoader 0:  33%|███▎      | 1/3 [00:00&lt;00:00, 747.51it/s]\nValidation DataLoader 0:  67%|██████▋   | 2/3 [00:00&lt;00:00, 582.87it/s]\nValidation DataLoader 0: 100%|██████████| 3/3 [00:00&lt;00:00, 655.09it/s]\n                                                                       Epoch 32: 100%|██████████| 6/6 [00:00&lt;00:00, 174.45it/s, v_num=11]Epoch 32: 100%|██████████| 6/6 [00:00&lt;00:00, 169.14it/s, v_num=11]Epoch 32:   0%|          | 0/6 [00:00&lt;?, ?it/s, v_num=11]         Epoch 33:   0%|          | 0/6 [00:00&lt;?, ?it/s, v_num=11]Epoch 33:  17%|█▋        | 1/6 [00:00&lt;00:00, 146.10it/s, v_num=11]Epoch 33:  17%|█▋        | 1/6 [00:00&lt;00:00, 133.92it/s, v_num=11]Epoch 33:  33%|███▎      | 2/6 [00:00&lt;00:00, 208.50it/s, v_num=11]Epoch 33:  33%|███▎      | 2/6 [00:00&lt;00:00, 202.14it/s, v_num=11]Epoch 33:  50%|█████     | 3/6 [00:00&lt;00:00, 224.08it/s, v_num=11]Epoch 33:  50%|█████     | 3/6 [00:00&lt;00:00, 217.71it/s, v_num=11]Epoch 33:  67%|██████▋   | 4/6 [00:00&lt;00:00, 240.19it/s, v_num=11]Epoch 33:  67%|██████▋   | 4/6 [00:00&lt;00:00, 232.16it/s, v_num=11]Epoch 33:  83%|████████▎ | 5/6 [00:00&lt;00:00, 236.83it/s, v_num=11]Epoch 33:  83%|████████▎ | 5/6 [00:00&lt;00:00, 232.72it/s, v_num=11]Epoch 33: 100%|██████████| 6/6 [00:00&lt;00:00, 255.22it/s, v_num=11]Epoch 33: 100%|██████████| 6/6 [00:00&lt;00:00, 251.92it/s, v_num=11]\nValidation: |          | 0/? [00:00&lt;?, ?it/s]\nValidation:   0%|          | 0/3 [00:00&lt;?, ?it/s]\nValidation DataLoader 0:   0%|          | 0/3 [00:00&lt;?, ?it/s]\nValidation DataLoader 0:  33%|███▎      | 1/3 [00:00&lt;00:00, 663.76it/s]\nValidation DataLoader 0:  67%|██████▋   | 2/3 [00:00&lt;00:00, 568.56it/s]\nValidation DataLoader 0: 100%|██████████| 3/3 [00:00&lt;00:00, 592.14it/s]\n                                                                       Epoch 33: 100%|██████████| 6/6 [00:00&lt;00:00, 164.78it/s, v_num=11]Epoch 33: 100%|██████████| 6/6 [00:00&lt;00:00, 160.86it/s, v_num=11]Epoch 33:   0%|          | 0/6 [00:00&lt;?, ?it/s, v_num=11]         Epoch 34:   0%|          | 0/6 [00:00&lt;?, ?it/s, v_num=11]Epoch 34:  17%|█▋        | 1/6 [00:00&lt;00:00, 135.28it/s, v_num=11]Epoch 34:  17%|█▋        | 1/6 [00:00&lt;00:00, 126.10it/s, v_num=11]Epoch 34:  33%|███▎      | 2/6 [00:00&lt;00:00, 186.72it/s, v_num=11]Epoch 34:  33%|███▎      | 2/6 [00:00&lt;00:00, 180.44it/s, v_num=11]Epoch 34:  50%|█████     | 3/6 [00:00&lt;00:00, 230.36it/s, v_num=11]Epoch 34:  50%|█████     | 3/6 [00:00&lt;00:00, 224.73it/s, v_num=11]Epoch 34:  67%|██████▋   | 4/6 [00:00&lt;00:00, 262.04it/s, v_num=11]Epoch 34:  67%|██████▋   | 4/6 [00:00&lt;00:00, 256.54it/s, v_num=11]Epoch 34:  83%|████████▎ | 5/6 [00:00&lt;00:00, 273.99it/s, v_num=11]Epoch 34:  83%|████████▎ | 5/6 [00:00&lt;00:00, 268.98it/s, v_num=11]Epoch 34: 100%|██████████| 6/6 [00:00&lt;00:00, 292.55it/s, v_num=11]Epoch 34: 100%|██████████| 6/6 [00:00&lt;00:00, 287.82it/s, v_num=11]\nValidation: |          | 0/? [00:00&lt;?, ?it/s]\nValidation:   0%|          | 0/3 [00:00&lt;?, ?it/s]\nValidation DataLoader 0:   0%|          | 0/3 [00:00&lt;?, ?it/s]\nValidation DataLoader 0:  33%|███▎      | 1/3 [00:00&lt;00:00, 572.84it/s]\nValidation DataLoader 0:  67%|██████▋   | 2/3 [00:00&lt;00:00, 424.20it/s]\nValidation DataLoader 0: 100%|██████████| 3/3 [00:00&lt;00:00, 500.10it/s]\n                                                                       Epoch 34: 100%|██████████| 6/6 [00:00&lt;00:00, 171.83it/s, v_num=11]Epoch 34: 100%|██████████| 6/6 [00:00&lt;00:00, 166.07it/s, v_num=11]Epoch 34:   0%|          | 0/6 [00:00&lt;?, ?it/s, v_num=11]         Epoch 35:   0%|          | 0/6 [00:00&lt;?, ?it/s, v_num=11]Epoch 35:  17%|█▋        | 1/6 [00:00&lt;00:00, 130.51it/s, v_num=11]Epoch 35:  17%|█▋        | 1/6 [00:00&lt;00:00, 119.89it/s, v_num=11]Epoch 35:  33%|███▎      | 2/6 [00:00&lt;00:00, 177.54it/s, v_num=11]Epoch 35:  33%|███▎      | 2/6 [00:00&lt;00:00, 171.49it/s, v_num=11]Epoch 35:  50%|█████     | 3/6 [00:00&lt;00:00, 205.18it/s, v_num=11]Epoch 35:  50%|█████     | 3/6 [00:00&lt;00:00, 198.00it/s, v_num=11]Epoch 35:  67%|██████▋   | 4/6 [00:00&lt;00:00, 219.34it/s, v_num=11]Epoch 35:  67%|██████▋   | 4/6 [00:00&lt;00:00, 214.77it/s, v_num=11]Epoch 35:  83%|████████▎ | 5/6 [00:00&lt;00:00, 234.81it/s, v_num=11]Epoch 35:  83%|████████▎ | 5/6 [00:00&lt;00:00, 231.08it/s, v_num=11]Epoch 35: 100%|██████████| 6/6 [00:00&lt;00:00, 243.82it/s, v_num=11]Epoch 35: 100%|██████████| 6/6 [00:00&lt;00:00, 240.43it/s, v_num=11]\nValidation: |          | 0/? [00:00&lt;?, ?it/s]\nValidation:   0%|          | 0/3 [00:00&lt;?, ?it/s]\nValidation DataLoader 0:   0%|          | 0/3 [00:00&lt;?, ?it/s]\nValidation DataLoader 0:  33%|███▎      | 1/3 [00:00&lt;00:00, 390.57it/s]\nValidation DataLoader 0:  67%|██████▋   | 2/3 [00:00&lt;00:00, 447.46it/s]\nValidation DataLoader 0: 100%|██████████| 3/3 [00:00&lt;00:00, 505.30it/s]\n                                                                       Epoch 35: 100%|██████████| 6/6 [00:00&lt;00:00, 154.66it/s, v_num=11]Epoch 35: 100%|██████████| 6/6 [00:00&lt;00:00, 150.81it/s, v_num=11]Epoch 35:   0%|          | 0/6 [00:00&lt;?, ?it/s, v_num=11]         Epoch 36:   0%|          | 0/6 [00:00&lt;?, ?it/s, v_num=11]Epoch 36:  17%|█▋        | 1/6 [00:00&lt;00:00, 119.89it/s, v_num=11]Epoch 36:  17%|█▋        | 1/6 [00:00&lt;00:00, 111.65it/s, v_num=11]Epoch 36:  33%|███▎      | 2/6 [00:00&lt;00:00, 160.37it/s, v_num=11]Epoch 36:  33%|███▎      | 2/6 [00:00&lt;00:00, 151.76it/s, v_num=11]Epoch 36:  50%|█████     | 3/6 [00:00&lt;00:00, 189.93it/s, v_num=11]Epoch 36:  50%|█████     | 3/6 [00:00&lt;00:00, 185.56it/s, v_num=11]Epoch 36:  67%|██████▋   | 4/6 [00:00&lt;00:00, 217.96it/s, v_num=11]Epoch 36:  67%|██████▋   | 4/6 [00:00&lt;00:00, 214.23it/s, v_num=11]Epoch 36:  83%|████████▎ | 5/6 [00:00&lt;00:00, 229.09it/s, v_num=11]Epoch 36:  83%|████████▎ | 5/6 [00:00&lt;00:00, 225.37it/s, v_num=11]Epoch 36: 100%|██████████| 6/6 [00:00&lt;00:00, 248.00it/s, v_num=11]Epoch 36: 100%|██████████| 6/6 [00:00&lt;00:00, 244.80it/s, v_num=11]\nValidation: |          | 0/? [00:00&lt;?, ?it/s]\nValidation:   0%|          | 0/3 [00:00&lt;?, ?it/s]\nValidation DataLoader 0:   0%|          | 0/3 [00:00&lt;?, ?it/s]\nValidation DataLoader 0:  33%|███▎      | 1/3 [00:00&lt;00:00, 344.78it/s]\nValidation DataLoader 0:  67%|██████▋   | 2/3 [00:00&lt;00:00, 365.21it/s]\nValidation DataLoader 0: 100%|██████████| 3/3 [00:00&lt;00:00, 429.01it/s]\n                                                                       Epoch 36: 100%|██████████| 6/6 [00:00&lt;00:00, 153.19it/s, v_num=11]Epoch 36: 100%|██████████| 6/6 [00:00&lt;00:00, 149.00it/s, v_num=11]Epoch 36:   0%|          | 0/6 [00:00&lt;?, ?it/s, v_num=11]         Epoch 37:   0%|          | 0/6 [00:00&lt;?, ?it/s, v_num=11]Epoch 37:  17%|█▋        | 1/6 [00:00&lt;00:00, 143.77it/s, v_num=11]Epoch 37:  17%|█▋        | 1/6 [00:00&lt;00:00, 136.24it/s, v_num=11]Epoch 37:  33%|███▎      | 2/6 [00:00&lt;00:00, 199.42it/s, v_num=11]Epoch 37:  33%|███▎      | 2/6 [00:00&lt;00:00, 193.17it/s, v_num=11]Epoch 37:  50%|█████     | 3/6 [00:00&lt;00:00, 242.10it/s, v_num=11]Epoch 37:  50%|█████     | 3/6 [00:00&lt;00:00, 235.62it/s, v_num=11]Epoch 37:  67%|██████▋   | 4/6 [00:00&lt;00:00, 262.20it/s, v_num=11]Epoch 37:  67%|██████▋   | 4/6 [00:00&lt;00:00, 256.67it/s, v_num=11]Epoch 37:  83%|████████▎ | 5/6 [00:00&lt;00:00, 276.67it/s, v_num=11]Epoch 37:  83%|████████▎ | 5/6 [00:00&lt;00:00, 271.56it/s, v_num=11]Epoch 37: 100%|██████████| 6/6 [00:00&lt;00:00, 278.25it/s, v_num=11]Epoch 37: 100%|██████████| 6/6 [00:00&lt;00:00, 270.57it/s, v_num=11]\nValidation: |          | 0/? [00:00&lt;?, ?it/s]\nValidation:   0%|          | 0/3 [00:00&lt;?, ?it/s]\nValidation DataLoader 0:   0%|          | 0/3 [00:00&lt;?, ?it/s]\nValidation DataLoader 0:  33%|███▎      | 1/3 [00:00&lt;00:00, 368.73it/s]\nValidation DataLoader 0:  67%|██████▋   | 2/3 [00:00&lt;00:00, 383.88it/s]\nValidation DataLoader 0: 100%|██████████| 3/3 [00:00&lt;00:00, 406.33it/s]\n                                                                       Epoch 37: 100%|██████████| 6/6 [00:00&lt;00:00, 156.71it/s, v_num=11]Epoch 37: 100%|██████████| 6/6 [00:00&lt;00:00, 153.76it/s, v_num=11]Epoch 37:   0%|          | 0/6 [00:00&lt;?, ?it/s, v_num=11]         Epoch 38:   0%|          | 0/6 [00:00&lt;?, ?it/s, v_num=11]Epoch 38:  17%|█▋        | 1/6 [00:00&lt;00:00, 123.07it/s, v_num=11]Epoch 38:  17%|█▋        | 1/6 [00:00&lt;00:00, 113.81it/s, v_num=11]Epoch 38:  33%|███▎      | 2/6 [00:00&lt;00:00, 165.61it/s, v_num=11]Epoch 38:  33%|███▎      | 2/6 [00:00&lt;00:00, 159.63it/s, v_num=11]Epoch 38:  50%|█████     | 3/6 [00:00&lt;00:00, 189.21it/s, v_num=11]Epoch 38:  50%|█████     | 3/6 [00:00&lt;00:00, 182.83it/s, v_num=11]Epoch 38:  67%|██████▋   | 4/6 [00:00&lt;00:00, 206.65it/s, v_num=11]Epoch 38:  67%|██████▋   | 4/6 [00:00&lt;00:00, 200.64it/s, v_num=11]Epoch 38:  83%|████████▎ | 5/6 [00:00&lt;00:00, 209.14it/s, v_num=11]Epoch 38:  83%|████████▎ | 5/6 [00:00&lt;00:00, 204.82it/s, v_num=11]Epoch 38: 100%|██████████| 6/6 [00:00&lt;00:00, 217.37it/s, v_num=11]Epoch 38: 100%|██████████| 6/6 [00:00&lt;00:00, 214.39it/s, v_num=11]\nValidation: |          | 0/? [00:00&lt;?, ?it/s]\nValidation:   0%|          | 0/3 [00:00&lt;?, ?it/s]\nValidation DataLoader 0:   0%|          | 0/3 [00:00&lt;?, ?it/s]\nValidation DataLoader 0:  33%|███▎      | 1/3 [00:00&lt;00:00, 516.22it/s]\nValidation DataLoader 0:  67%|██████▋   | 2/3 [00:00&lt;00:00, 589.34it/s]\nValidation DataLoader 0: 100%|██████████| 3/3 [00:00&lt;00:00, 580.13it/s]\n                                                                       Epoch 38: 100%|██████████| 6/6 [00:00&lt;00:00, 151.78it/s, v_num=11]Epoch 38: 100%|██████████| 6/6 [00:00&lt;00:00, 149.04it/s, v_num=11]Epoch 38:   0%|          | 0/6 [00:00&lt;?, ?it/s, v_num=11]         Epoch 39:   0%|          | 0/6 [00:00&lt;?, ?it/s, v_num=11]Epoch 39:  17%|█▋        | 1/6 [00:00&lt;00:00, 139.83it/s, v_num=11]Epoch 39:  17%|█▋        | 1/6 [00:00&lt;00:00, 130.22it/s, v_num=11]Epoch 39:  33%|███▎      | 2/6 [00:00&lt;00:00, 191.58it/s, v_num=11]Epoch 39:  33%|███▎      | 2/6 [00:00&lt;00:00, 186.18it/s, v_num=11]Epoch 39:  50%|█████     | 3/6 [00:00&lt;00:00, 236.48it/s, v_num=11]Epoch 39:  50%|█████     | 3/6 [00:00&lt;00:00, 229.80it/s, v_num=11]Epoch 39:  67%|██████▋   | 4/6 [00:00&lt;00:00, 262.79it/s, v_num=11]Epoch 39:  67%|██████▋   | 4/6 [00:00&lt;00:00, 257.62it/s, v_num=11]Epoch 39:  83%|████████▎ | 5/6 [00:00&lt;00:00, 271.00it/s, v_num=11]Epoch 39:  83%|████████▎ | 5/6 [00:00&lt;00:00, 266.53it/s, v_num=11]Epoch 39: 100%|██████████| 6/6 [00:00&lt;00:00, 274.63it/s, v_num=11]Epoch 39: 100%|██████████| 6/6 [00:00&lt;00:00, 268.98it/s, v_num=11]\nValidation: |          | 0/? [00:00&lt;?, ?it/s]\nValidation:   0%|          | 0/3 [00:00&lt;?, ?it/s]\nValidation DataLoader 0:   0%|          | 0/3 [00:00&lt;?, ?it/s]\nValidation DataLoader 0:  33%|███▎      | 1/3 [00:00&lt;00:00, 628.64it/s]\nValidation DataLoader 0:  67%|██████▋   | 2/3 [00:00&lt;00:00, 586.25it/s]\nValidation DataLoader 0: 100%|██████████| 3/3 [00:00&lt;00:00, 547.99it/s]\n                                                                       Epoch 39: 100%|██████████| 6/6 [00:00&lt;00:00, 167.34it/s, v_num=11]Epoch 39: 100%|██████████| 6/6 [00:00&lt;00:00, 163.80it/s, v_num=11]Epoch 39:   0%|          | 0/6 [00:00&lt;?, ?it/s, v_num=11]         Epoch 40:   0%|          | 0/6 [00:00&lt;?, ?it/s, v_num=11]Epoch 40:  17%|█▋        | 1/6 [00:00&lt;00:00, 172.66it/s, v_num=11]Epoch 40:  17%|█▋        | 1/6 [00:00&lt;00:00, 162.32it/s, v_num=11]Epoch 40:  33%|███▎      | 2/6 [00:00&lt;00:00, 239.89it/s, v_num=11]Epoch 40:  33%|███▎      | 2/6 [00:00&lt;00:00, 230.55it/s, v_num=11]Epoch 40:  50%|█████     | 3/6 [00:00&lt;00:00, 279.94it/s, v_num=11]Epoch 40:  50%|█████     | 3/6 [00:00&lt;00:00, 271.80it/s, v_num=11]Epoch 40:  67%|██████▋   | 4/6 [00:00&lt;00:00, 293.51it/s, v_num=11]Epoch 40:  67%|██████▋   | 4/6 [00:00&lt;00:00, 285.18it/s, v_num=11]Epoch 40:  83%|████████▎ | 5/6 [00:00&lt;00:00, 288.68it/s, v_num=11]Epoch 40:  83%|████████▎ | 5/6 [00:00&lt;00:00, 282.21it/s, v_num=11]Epoch 40: 100%|██████████| 6/6 [00:00&lt;00:00, 296.53it/s, v_num=11]Epoch 40: 100%|██████████| 6/6 [00:00&lt;00:00, 291.23it/s, v_num=11]\nValidation: |          | 0/? [00:00&lt;?, ?it/s]\nValidation:   0%|          | 0/3 [00:00&lt;?, ?it/s]\nValidation DataLoader 0:   0%|          | 0/3 [00:00&lt;?, ?it/s]\nValidation DataLoader 0:  33%|███▎      | 1/3 [00:00&lt;00:00, 584.82it/s]\nValidation DataLoader 0:  67%|██████▋   | 2/3 [00:00&lt;00:00, 627.37it/s]\nValidation DataLoader 0: 100%|██████████| 3/3 [00:00&lt;00:00, 696.81it/s]\n                                                                       Epoch 40: 100%|██████████| 6/6 [00:00&lt;00:00, 189.13it/s, v_num=11]Epoch 40: 100%|██████████| 6/6 [00:00&lt;00:00, 183.09it/s, v_num=11]Epoch 40:   0%|          | 0/6 [00:00&lt;?, ?it/s, v_num=11]         Epoch 41:   0%|          | 0/6 [00:00&lt;?, ?it/s, v_num=11]Epoch 41:  17%|█▋        | 1/6 [00:00&lt;00:00, 143.30it/s, v_num=11]Epoch 41:  17%|█▋        | 1/6 [00:00&lt;00:00, 131.92it/s, v_num=11]Epoch 41:  33%|███▎      | 2/6 [00:00&lt;00:00, 182.32it/s, v_num=11]Epoch 41:  33%|███▎      | 2/6 [00:00&lt;00:00, 174.61it/s, v_num=11]Epoch 41:  50%|█████     | 3/6 [00:00&lt;00:00, 206.22it/s, v_num=11]Epoch 41:  50%|█████     | 3/6 [00:00&lt;00:00, 198.07it/s, v_num=11]Epoch 41:  67%|██████▋   | 4/6 [00:00&lt;00:00, 219.92it/s, v_num=11]Epoch 41:  67%|██████▋   | 4/6 [00:00&lt;00:00, 213.54it/s, v_num=11]Epoch 41:  83%|████████▎ | 5/6 [00:00&lt;00:00, 219.34it/s, v_num=11]Epoch 41:  83%|████████▎ | 5/6 [00:00&lt;00:00, 216.25it/s, v_num=11]Epoch 41: 100%|██████████| 6/6 [00:00&lt;00:00, 239.89it/s, v_num=11]Epoch 41: 100%|██████████| 6/6 [00:00&lt;00:00, 236.56it/s, v_num=11]\nValidation: |          | 0/? [00:00&lt;?, ?it/s]\nValidation:   0%|          | 0/3 [00:00&lt;?, ?it/s]\nValidation DataLoader 0:   0%|          | 0/3 [00:00&lt;?, ?it/s]\nValidation DataLoader 0:  33%|███▎      | 1/3 [00:00&lt;00:00, 723.28it/s]\nValidation DataLoader 0:  67%|██████▋   | 2/3 [00:00&lt;00:00, 619.22it/s]\nValidation DataLoader 0: 100%|██████████| 3/3 [00:00&lt;00:00, 640.91it/s]\n                                                                       Epoch 41: 100%|██████████| 6/6 [00:00&lt;00:00, 170.77it/s, v_num=11]Epoch 41: 100%|██████████| 6/6 [00:00&lt;00:00, 167.54it/s, v_num=11]Epoch 41:   0%|          | 0/6 [00:00&lt;?, ?it/s, v_num=11]         Epoch 42:   0%|          | 0/6 [00:00&lt;?, ?it/s, v_num=11]Epoch 42:  17%|█▋        | 1/6 [00:00&lt;00:00, 136.69it/s, v_num=11]Epoch 42:  17%|█▋        | 1/6 [00:00&lt;00:00, 127.24it/s, v_num=11]Epoch 42:  33%|███▎      | 2/6 [00:00&lt;00:00, 182.00it/s, v_num=11]Epoch 42:  33%|███▎      | 2/6 [00:00&lt;00:00, 174.14it/s, v_num=11]Epoch 42:  50%|█████     | 3/6 [00:00&lt;00:00, 203.92it/s, v_num=11]Epoch 42:  50%|█████     | 3/6 [00:00&lt;00:00, 197.88it/s, v_num=11]Epoch 42:  67%|██████▋   | 4/6 [00:00&lt;00:00, 221.88it/s, v_num=11]Epoch 42:  67%|██████▋   | 4/6 [00:00&lt;00:00, 218.10it/s, v_num=11]Epoch 42:  83%|████████▎ | 5/6 [00:00&lt;00:00, 236.66it/s, v_num=11]Epoch 42:  83%|████████▎ | 5/6 [00:00&lt;00:00, 233.41it/s, v_num=11]Epoch 42: 100%|██████████| 6/6 [00:00&lt;00:00, 253.99it/s, v_num=11]Epoch 42: 100%|██████████| 6/6 [00:00&lt;00:00, 250.87it/s, v_num=11]\nValidation: |          | 0/? [00:00&lt;?, ?it/s]\nValidation:   0%|          | 0/3 [00:00&lt;?, ?it/s]\nValidation DataLoader 0:   0%|          | 0/3 [00:00&lt;?, ?it/s]\nValidation DataLoader 0:  33%|███▎      | 1/3 [00:00&lt;00:00, 728.18it/s]\nValidation DataLoader 0:  67%|██████▋   | 2/3 [00:00&lt;00:00, 737.14it/s]\nValidation DataLoader 0: 100%|██████████| 3/3 [00:00&lt;00:00, 647.64it/s]\n                                                                       Epoch 42: 100%|██████████| 6/6 [00:00&lt;00:00, 173.15it/s, v_num=11]Epoch 42: 100%|██████████| 6/6 [00:00&lt;00:00, 169.44it/s, v_num=11]Epoch 42:   0%|          | 0/6 [00:00&lt;?, ?it/s, v_num=11]         Epoch 43:   0%|          | 0/6 [00:00&lt;?, ?it/s, v_num=11]Epoch 43:  17%|█▋        | 1/6 [00:00&lt;00:00, 140.40it/s, v_num=11]Epoch 43:  17%|█▋        | 1/6 [00:00&lt;00:00, 130.73it/s, v_num=11]Epoch 43:  33%|███▎      | 2/6 [00:00&lt;00:00, 179.68it/s, v_num=11]Epoch 43:  33%|███▎      | 2/6 [00:00&lt;00:00, 169.98it/s, v_num=11]Epoch 43:  50%|█████     | 3/6 [00:00&lt;00:00, 201.59it/s, v_num=11]Epoch 43:  50%|█████     | 3/6 [00:00&lt;00:00, 197.21it/s, v_num=11]Epoch 43:  67%|██████▋   | 4/6 [00:00&lt;00:00, 231.95it/s, v_num=11]Epoch 43:  67%|██████▋   | 4/6 [00:00&lt;00:00, 228.17it/s, v_num=11]Epoch 43:  83%|████████▎ | 5/6 [00:00&lt;00:00, 240.20it/s, v_num=11]Epoch 43:  83%|████████▎ | 5/6 [00:00&lt;00:00, 236.65it/s, v_num=11]Epoch 43: 100%|██████████| 6/6 [00:00&lt;00:00, 260.25it/s, v_num=11]Epoch 43: 100%|██████████| 6/6 [00:00&lt;00:00, 256.95it/s, v_num=11]\nValidation: |          | 0/? [00:00&lt;?, ?it/s]\nValidation:   0%|          | 0/3 [00:00&lt;?, ?it/s]\nValidation DataLoader 0:   0%|          | 0/3 [00:00&lt;?, ?it/s]\nValidation DataLoader 0:  33%|███▎      | 1/3 [00:00&lt;00:00, 749.92it/s]\nValidation DataLoader 0:  67%|██████▋   | 2/3 [00:00&lt;00:00, 640.55it/s]\nValidation DataLoader 0: 100%|██████████| 3/3 [00:00&lt;00:00, 648.70it/s]\n                                                                       Epoch 43: 100%|██████████| 6/6 [00:00&lt;00:00, 177.17it/s, v_num=11]Epoch 43: 100%|██████████| 6/6 [00:00&lt;00:00, 173.04it/s, v_num=11]Epoch 43:   0%|          | 0/6 [00:00&lt;?, ?it/s, v_num=11]         Epoch 44:   0%|          | 0/6 [00:00&lt;?, ?it/s, v_num=11]Epoch 44:  17%|█▋        | 1/6 [00:00&lt;00:00, 126.43it/s, v_num=11]Epoch 44:  17%|█▋        | 1/6 [00:00&lt;00:00, 116.87it/s, v_num=11]Epoch 44:  33%|███▎      | 2/6 [00:00&lt;00:00, 162.32it/s, v_num=11]Epoch 44:  33%|███▎      | 2/6 [00:00&lt;00:00, 155.47it/s, v_num=11]Epoch 44:  50%|█████     | 3/6 [00:00&lt;00:00, 182.87it/s, v_num=11]Epoch 44:  50%|█████     | 3/6 [00:00&lt;00:00, 177.86it/s, v_num=11]Epoch 44:  67%|██████▋   | 4/6 [00:00&lt;00:00, 210.17it/s, v_num=11]Epoch 44:  67%|██████▋   | 4/6 [00:00&lt;00:00, 206.69it/s, v_num=11]Epoch 44:  83%|████████▎ | 5/6 [00:00&lt;00:00, 223.97it/s, v_num=11]Epoch 44:  83%|████████▎ | 5/6 [00:00&lt;00:00, 220.89it/s, v_num=11]Epoch 44: 100%|██████████| 6/6 [00:00&lt;00:00, 233.29it/s, v_num=11]Epoch 44: 100%|██████████| 6/6 [00:00&lt;00:00, 228.32it/s, v_num=11]\nValidation: |          | 0/? [00:00&lt;?, ?it/s]\nValidation:   0%|          | 0/3 [00:00&lt;?, ?it/s]\nValidation DataLoader 0:   0%|          | 0/3 [00:00&lt;?, ?it/s]\nValidation DataLoader 0:  33%|███▎      | 1/3 [00:00&lt;00:00, 772.72it/s]\nValidation DataLoader 0:  67%|██████▋   | 2/3 [00:00&lt;00:00, 582.50it/s]\nValidation DataLoader 0: 100%|██████████| 3/3 [00:00&lt;00:00, 651.26it/s]\n                                                                       Epoch 44: 100%|██████████| 6/6 [00:00&lt;00:00, 161.89it/s, v_num=11]Epoch 44: 100%|██████████| 6/6 [00:00&lt;00:00, 158.84it/s, v_num=11]Epoch 44:   0%|          | 0/6 [00:00&lt;?, ?it/s, v_num=11]         Epoch 45:   0%|          | 0/6 [00:00&lt;?, ?it/s, v_num=11]Epoch 45:  17%|█▋        | 1/6 [00:00&lt;00:00, 143.20it/s, v_num=11]Epoch 45:  17%|█▋        | 1/6 [00:00&lt;00:00, 133.89it/s, v_num=11]Epoch 45:  33%|███▎      | 2/6 [00:00&lt;00:00, 198.51it/s, v_num=11]Epoch 45:  33%|███▎      | 2/6 [00:00&lt;00:00, 191.25it/s, v_num=11]Epoch 45:  50%|█████     | 3/6 [00:00&lt;00:00, 237.18it/s, v_num=11]Epoch 45:  50%|█████     | 3/6 [00:00&lt;00:00, 230.36it/s, v_num=11]Epoch 45:  67%|██████▋   | 4/6 [00:00&lt;00:00, 255.04it/s, v_num=11]Epoch 45:  67%|██████▋   | 4/6 [00:00&lt;00:00, 247.29it/s, v_num=11]Epoch 45:  83%|████████▎ | 5/6 [00:00&lt;00:00, 259.10it/s, v_num=11]Epoch 45:  83%|████████▎ | 5/6 [00:00&lt;00:00, 254.67it/s, v_num=11]Epoch 45: 100%|██████████| 6/6 [00:00&lt;00:00, 270.96it/s, v_num=11]Epoch 45: 100%|██████████| 6/6 [00:00&lt;00:00, 265.78it/s, v_num=11]\nValidation: |          | 0/? [00:00&lt;?, ?it/s]\nValidation:   0%|          | 0/3 [00:00&lt;?, ?it/s]\nValidation DataLoader 0:   0%|          | 0/3 [00:00&lt;?, ?it/s]\nValidation DataLoader 0:  33%|███▎      | 1/3 [00:00&lt;00:00, 448.01it/s]\nValidation DataLoader 0:  67%|██████▋   | 2/3 [00:00&lt;00:00, 401.68it/s]\nValidation DataLoader 0: 100%|██████████| 3/3 [00:00&lt;00:00, 436.44it/s]\n                                                                       Epoch 45: 100%|██████████| 6/6 [00:00&lt;00:00, 153.47it/s, v_num=11]Epoch 45: 100%|██████████| 6/6 [00:00&lt;00:00, 148.01it/s, v_num=11]Epoch 45:   0%|          | 0/6 [00:00&lt;?, ?it/s, v_num=11]         Epoch 46:   0%|          | 0/6 [00:00&lt;?, ?it/s, v_num=11]Epoch 46:  17%|█▋        | 1/6 [00:00&lt;00:00, 140.32it/s, v_num=11]Epoch 46:  17%|█▋        | 1/6 [00:00&lt;00:00, 132.95it/s, v_num=11]Epoch 46:  33%|███▎      | 2/6 [00:00&lt;00:00, 205.56it/s, v_num=11]Epoch 46:  33%|███▎      | 2/6 [00:00&lt;00:00, 198.64it/s, v_num=11]Epoch 46:  50%|█████     | 3/6 [00:00&lt;00:00, 247.90it/s, v_num=11]Epoch 46:  50%|█████     | 3/6 [00:00&lt;00:00, 241.58it/s, v_num=11]Epoch 46:  67%|██████▋   | 4/6 [00:00&lt;00:00, 277.79it/s, v_num=11]Epoch 46:  67%|██████▋   | 4/6 [00:00&lt;00:00, 271.68it/s, v_num=11]Epoch 46:  83%|████████▎ | 5/6 [00:00&lt;00:00, 287.02it/s, v_num=11]Epoch 46:  83%|████████▎ | 5/6 [00:00&lt;00:00, 281.82it/s, v_num=11]Epoch 46: 100%|██████████| 6/6 [00:00&lt;00:00, 283.54it/s, v_num=11]Epoch 46: 100%|██████████| 6/6 [00:00&lt;00:00, 274.86it/s, v_num=11]\nValidation: |          | 0/? [00:00&lt;?, ?it/s]\nValidation:   0%|          | 0/3 [00:00&lt;?, ?it/s]\nValidation DataLoader 0:   0%|          | 0/3 [00:00&lt;?, ?it/s]\nValidation DataLoader 0:  33%|███▎      | 1/3 [00:00&lt;00:00, 628.74it/s]\nValidation DataLoader 0:  67%|██████▋   | 2/3 [00:00&lt;00:00, 524.55it/s]\nValidation DataLoader 0: 100%|██████████| 3/3 [00:00&lt;00:00, 604.92it/s]\n                                                                       Epoch 46: 100%|██████████| 6/6 [00:00&lt;00:00, 177.55it/s, v_num=11]Epoch 46: 100%|██████████| 6/6 [00:00&lt;00:00, 172.81it/s, v_num=11]Epoch 46:   0%|          | 0/6 [00:00&lt;?, ?it/s, v_num=11]         Epoch 47:   0%|          | 0/6 [00:00&lt;?, ?it/s, v_num=11]Epoch 47:  17%|█▋        | 1/6 [00:00&lt;00:00, 189.67it/s, v_num=11]Epoch 47:  17%|█▋        | 1/6 [00:00&lt;00:00, 177.60it/s, v_num=11]Epoch 47:  33%|███▎      | 2/6 [00:00&lt;00:00, 249.69it/s, v_num=11]Epoch 47:  33%|███▎      | 2/6 [00:00&lt;00:00, 240.51it/s, v_num=11]Epoch 47:  50%|█████     | 3/6 [00:00&lt;00:00, 296.23it/s, v_num=11]Epoch 47:  50%|█████     | 3/6 [00:00&lt;00:00, 285.96it/s, v_num=11]Epoch 47:  67%|██████▋   | 4/6 [00:00&lt;00:00, 313.09it/s, v_num=11]Epoch 47:  67%|██████▋   | 4/6 [00:00&lt;00:00, 305.41it/s, v_num=11]Epoch 47:  83%|████████▎ | 5/6 [00:00&lt;00:00, 294.81it/s, v_num=11]Epoch 47:  83%|████████▎ | 5/6 [00:00&lt;00:00, 284.04it/s, v_num=11]Epoch 47: 100%|██████████| 6/6 [00:00&lt;00:00, 297.47it/s, v_num=11]Epoch 47: 100%|██████████| 6/6 [00:00&lt;00:00, 290.93it/s, v_num=11]\nValidation: |          | 0/? [00:00&lt;?, ?it/s]\nValidation:   0%|          | 0/3 [00:00&lt;?, ?it/s]\nValidation DataLoader 0:   0%|          | 0/3 [00:00&lt;?, ?it/s]\nValidation DataLoader 0:  33%|███▎      | 1/3 [00:00&lt;00:00, 603.06it/s]\nValidation DataLoader 0:  67%|██████▋   | 2/3 [00:00&lt;00:00, 442.25it/s]\nValidation DataLoader 0: 100%|██████████| 3/3 [00:00&lt;00:00, 483.73it/s]\n                                                                       Epoch 47: 100%|██████████| 6/6 [00:00&lt;00:00, 179.57it/s, v_num=11]Epoch 47: 100%|██████████| 6/6 [00:00&lt;00:00, 175.69it/s, v_num=11]Epoch 47:   0%|          | 0/6 [00:00&lt;?, ?it/s, v_num=11]         Epoch 48:   0%|          | 0/6 [00:00&lt;?, ?it/s, v_num=11]Epoch 48:  17%|█▋        | 1/6 [00:00&lt;00:00, 202.29it/s, v_num=11]Epoch 48:  17%|█▋        | 1/6 [00:00&lt;00:00, 187.43it/s, v_num=11]Epoch 48:  33%|███▎      | 2/6 [00:00&lt;00:00, 232.02it/s, v_num=11]Epoch 48:  33%|███▎      | 2/6 [00:00&lt;00:00, 223.02it/s, v_num=11]Epoch 48:  50%|█████     | 3/6 [00:00&lt;00:00, 261.32it/s, v_num=11]Epoch 48:  50%|█████     | 3/6 [00:00&lt;00:00, 252.35it/s, v_num=11]Epoch 48:  67%|██████▋   | 4/6 [00:00&lt;00:00, 266.47it/s, v_num=11]Epoch 48:  67%|██████▋   | 4/6 [00:00&lt;00:00, 259.78it/s, v_num=11]Epoch 48:  83%|████████▎ | 5/6 [00:00&lt;00:00, 258.86it/s, v_num=11]Epoch 48:  83%|████████▎ | 5/6 [00:00&lt;00:00, 252.14it/s, v_num=11]Epoch 48: 100%|██████████| 6/6 [00:00&lt;00:00, 260.91it/s, v_num=11]Epoch 48: 100%|██████████| 6/6 [00:00&lt;00:00, 257.15it/s, v_num=11]\nValidation: |          | 0/? [00:00&lt;?, ?it/s]\nValidation:   0%|          | 0/3 [00:00&lt;?, ?it/s]\nValidation DataLoader 0:   0%|          | 0/3 [00:00&lt;?, ?it/s]\nValidation DataLoader 0:  33%|███▎      | 1/3 [00:00&lt;00:00, 747.78it/s]\nValidation DataLoader 0:  67%|██████▋   | 2/3 [00:00&lt;00:00, 541.20it/s]\nValidation DataLoader 0: 100%|██████████| 3/3 [00:00&lt;00:00, 614.88it/s]\n                                                                       Epoch 48: 100%|██████████| 6/6 [00:00&lt;00:00, 173.68it/s, v_num=11]Epoch 48: 100%|██████████| 6/6 [00:00&lt;00:00, 170.23it/s, v_num=11]Epoch 48:   0%|          | 0/6 [00:00&lt;?, ?it/s, v_num=11]         Epoch 49:   0%|          | 0/6 [00:00&lt;?, ?it/s, v_num=11]Epoch 49:  17%|█▋        | 1/6 [00:00&lt;00:00, 146.42it/s, v_num=11]Epoch 49:  17%|█▋        | 1/6 [00:00&lt;00:00, 130.62it/s, v_num=11]Epoch 49:  33%|███▎      | 2/6 [00:00&lt;00:00, 170.48it/s, v_num=11]Epoch 49:  33%|███▎      | 2/6 [00:00&lt;00:00, 161.46it/s, v_num=11]Epoch 49:  50%|█████     | 3/6 [00:00&lt;00:00, 192.59it/s, v_num=11]Epoch 49:  50%|█████     | 3/6 [00:00&lt;00:00, 186.83it/s, v_num=11]Epoch 49:  67%|██████▋   | 4/6 [00:00&lt;00:00, 218.37it/s, v_num=11]Epoch 49:  67%|██████▋   | 4/6 [00:00&lt;00:00, 214.75it/s, v_num=11]Epoch 49:  83%|████████▎ | 5/6 [00:00&lt;00:00, 236.97it/s, v_num=11]Epoch 49:  83%|████████▎ | 5/6 [00:00&lt;00:00, 233.69it/s, v_num=11]Epoch 49: 100%|██████████| 6/6 [00:00&lt;00:00, 252.93it/s, v_num=11]Epoch 49: 100%|██████████| 6/6 [00:00&lt;00:00, 249.39it/s, v_num=11]\nValidation: |          | 0/? [00:00&lt;?, ?it/s]\nValidation:   0%|          | 0/3 [00:00&lt;?, ?it/s]\nValidation DataLoader 0:   0%|          | 0/3 [00:00&lt;?, ?it/s]\nValidation DataLoader 0:  33%|███▎      | 1/3 [00:00&lt;00:00, 571.66it/s]\nValidation DataLoader 0:  67%|██████▋   | 2/3 [00:00&lt;00:00, 441.69it/s]\nValidation DataLoader 0: 100%|██████████| 3/3 [00:00&lt;00:00, 526.04it/s]\n                                                                       Epoch 49: 100%|██████████| 6/6 [00:00&lt;00:00, 131.38it/s, v_num=11]Epoch 49: 100%|██████████| 6/6 [00:00&lt;00:00, 129.09it/s, v_num=11]\n\n\n`Trainer.fit` stopped: `max_epochs=50` reached.\n\n\nEpoch 49: 100%|██████████| 6/6 [00:00&lt;00:00, 119.48it/s, v_num=11]\n\n\nAt each step of SGD, the algorithm randomly selects 32 training observations for the computation of the gradient. Recall from Section~ that an epoch amounts to the number of SGD steps required to process n observations. Since the training set has n=175, and we specified a batch_size of 32 in the construction of hit_dm, an epoch is 175/32=5.5 SGD steps.\nAfter having fit the model, we can evaluate performance on our test data using the test() method of our trainer.\n\nhit_trainer.test(hit_module, datamodule=hit_dm)\n\nLOCAL_RANK: 0 - CUDA_VISIBLE_DEVICES: [0]\n\n\nTesting: |          | 0/? [00:00&lt;?, ?it/s]Testing:   0%|          | 0/3 [00:00&lt;?, ?it/s]Testing DataLoader 0:   0%|          | 0/3 [00:00&lt;?, ?it/s]Testing DataLoader 0:  33%|███▎      | 1/3 [00:00&lt;00:00, 712.83it/s]Testing DataLoader 0:  67%|██████▋   | 2/3 [00:00&lt;00:00, 697.31it/s]Testing DataLoader 0: 100%|██████████| 3/3 [00:00&lt;00:00, 658.52it/s]Testing DataLoader 0: 100%|██████████| 3/3 [00:00&lt;00:00, 293.83it/s]\n────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────\n       Test metric             DataLoader 0\n────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────\n        test_loss               123543.3125\n        test_mae            248.27792358398438\n────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────\n\n\n[{'test_loss': 123543.3125, 'test_mae': 248.27792358398438}]\n\n\nThe results of the fit have been logged into a CSV file. We can find the results specific to this run in the experiment.metrics_file_path attribute of our logger. Note that each time the model is fit, the logger will output results into a new subdirectory of our directory logs/hitters.\nWe now create a plot of the MAE (mean absolute error) as a function of the number of epochs. First we retrieve the logged summaries.\n\nhit_results = pd.read_csv(hit_logger.experiment.metrics_file_path)\n\nSince we will produce similar plots in later examples, we write a simple generic function to produce this plot.\n\ndef summary_plot(results,\n                 ax,\n                 col='loss',\n                 valid_legend='Validation',\n                 training_legend='Training',\n                 ylabel='Loss',\n                 fontsize=20):\n    for (column,\n         color,\n         label) in zip([f'train_{col}_epoch',\n                        f'valid_{col}'],\n                       ['black',\n                        'red'],\n                       [training_legend,\n                        valid_legend]):\n        results.plot(x='epoch',\n                     y=column,\n                     label=label,\n                     marker='o',\n                     color=color,\n                     ax=ax)\n    ax.set_xlabel('Epoch')\n    ax.set_ylabel(ylabel)\n    return ax\n\nWe now set up our axes, and use our function to produce the MAE plot.\n\nfig, ax = subplots(1, 1, figsize=(6, 6))\nax = summary_plot(hit_results,\n                  ax,\n                  col='mae',\n                  ylabel='MAE',\n                  valid_legend='Validation (=Test)')\nax.set_ylim([0, 400])\nax.set_xticks(np.linspace(0, 50, 11).astype(int));\n\n\n\n\n\n\n\n\nWe can predict directly from the final model, and evaluate its performance on the test data. Before fitting, we call the eval() method of hit_model. This tells torch to effectively consider this model to be fitted, so that we can use it to predict on new data. For our model here, the biggest change is that the dropout layers will be turned off, i.e. no weights will be randomly dropped in predicting on new data.\n\nhit_model.eval() \npreds = hit_module(X_test_t)\ntorch.abs(Y_test_t - preds).mean()\n\nHittersModel(\n  (flatten): Flatten(start_dim=1, end_dim=-1)\n  (sequential): Sequential(\n    (0): Linear(in_features=19, out_features=50, bias=True)\n    (1): ReLU()\n    (2): Dropout(p=0.4, inplace=False)\n    (3): Linear(in_features=50, out_features=1, bias=True)\n  )\n)\n\n\ntensor(248.2779, grad_fn=&lt;MeanBackward0&gt;)\n\n\n\n\n\nIn setting up our data module, we had initiated several worker processes that will remain running. We delete all references to the torch objects to ensure these processes will be killed.\n\ndel(Hitters,\n    hit_model, hit_dm,\n    hit_logger,\n    hit_test, hit_train,\n    X, Y,\n    X_test, X_train,\n    Y_test, Y_train,\n    X_test_t, Y_test_t,\n    hit_trainer, hit_module)"
  },
  {
    "objectID": "posts/ch10-deep-learning/Ch10-deeplearning-lab.html#multilayer-network-on-the-mnist-digit-data",
    "href": "posts/ch10-deep-learning/Ch10-deeplearning-lab.html#multilayer-network-on-the-mnist-digit-data",
    "title": "Chapter 10: Deep Learning",
    "section": "",
    "text": "The torchvision package comes with a number of example datasets, including the MNIST digit data. Our first step is to retrieve the training and test data sets; the MNIST() function within torchvision.datasets is provided for this purpose. The data will be downloaded the first time this function is executed, and stored in the directory data/MNIST.\n\n(mnist_train, \n mnist_test) = [MNIST(root='data',\n                      train=train,\n                      download=True,\n                      transform=ToTensor())\n                for train in [True, False]]\nmnist_train\n\nDataset MNIST\n    Number of datapoints: 60000\n    Root location: data\n    Split: Train\n    StandardTransform\nTransform: ToTensor()\n\n\nThere are 60,000 images in the training data and 10,000 in the test data. The images are 28\\times 28, and stored as a matrix of pixels. We need to transform each one into a vector.\nNeural networks are somewhat sensitive to the scale of the inputs, much as ridge and lasso regularization are affected by scaling. Here the inputs are eight-bit grayscale values between 0 and 255, so we rescale to the unit interval. {Note: eight bits means 2^8, which equals 256. Since the convention is to start at 0, the possible values range from 0 to 255.} This transformation, along with some reordering of the axes, is performed by the ToTensor() transform from the torchvision.transforms package.\nAs in our Hitters example, we form a data module from the training and test datasets, setting aside 20% of the training images for validation.\n\nmnist_dm = SimpleDataModule(mnist_train,\n                            mnist_test,\n                            validation=0.2,\n                            num_workers=max_num_workers,\n                            batch_size=256)\n\nLet’s take a look at the data that will get fed into our network. We loop through the first few chunks of the test dataset, breaking after 2 batches:\n\nfor idx, (X_ ,Y_) in enumerate(mnist_dm.train_dataloader()):\n    print('X: ', X_.shape)\n    print('Y: ', Y_.shape)\n    if idx &gt;= 1:\n        break\n\nX:  torch.Size([256, 1, 28, 28])\nY:  torch.Size([256])\nX:  torch.Size([256, 1, 28, 28])\nY:  torch.Size([256])\n\n\nWe see that the X for each batch consists of 256 images of size 1x28x28. Here the 1 indicates a single channel (greyscale). For RGB images such as CIFAR100 below, we will see that the 1 in the size will be replaced by 3 for the three RGB channels.\nNow we are ready to specify our neural network.\n\nclass MNISTModel(nn.Module):\n    def __init__(self):\n        super(MNISTModel, self).__init__()\n        self.layer1 = nn.Sequential(\n            nn.Flatten(),\n            nn.Linear(28*28, 256),\n            nn.ReLU(),\n            nn.Dropout(0.4))\n        self.layer2 = nn.Sequential(\n            nn.Linear(256, 128),\n            nn.ReLU(),\n            nn.Dropout(0.3))\n        self._forward = nn.Sequential(\n            self.layer1,\n            self.layer2,\n            nn.Linear(128, 10))\n    def forward(self, x):\n        return self._forward(x)\n\nWe see that in the first layer, each 1x28x28 image is flattened, then mapped to 256 dimensions where we apply a ReLU activation with 40% dropout. A second layer maps the first layer’s output down to 128 dimensions, applying a ReLU activation with 30% dropout. Finally, the 128 dimensions are mapped down to 10, the number of classes in the MNIST data.\n\nmnist_model = MNISTModel()\n\nWe can check that the model produces output of expected size based on our existing batch X_ above.\n\nmnist_model(X_).size()\n\ntorch.Size([256, 10])\n\n\nLet’s take a look at the summary of the model. Instead of an input_size we can pass a tensor of correct shape. In this case, we pass through the final batched X_ from above.\n\nsummary(mnist_model,\n        input_data=X_,\n        col_names=['input_size',\n                   'output_size',\n                   'num_params'])\n\n===================================================================================================================\nLayer (type:depth-idx)                   Input Shape               Output Shape              Param #\n===================================================================================================================\nMNISTModel                               [256, 1, 28, 28]          [256, 10]                 --\n├─Sequential: 1-1                        [256, 1, 28, 28]          [256, 10]                 --\n│    └─Sequential: 2-1                   [256, 1, 28, 28]          [256, 256]                --\n│    │    └─Flatten: 3-1                 [256, 1, 28, 28]          [256, 784]                --\n│    │    └─Linear: 3-2                  [256, 784]                [256, 256]                200,960\n│    │    └─ReLU: 3-3                    [256, 256]                [256, 256]                --\n│    │    └─Dropout: 3-4                 [256, 256]                [256, 256]                --\n│    └─Sequential: 2-2                   [256, 256]                [256, 128]                --\n│    │    └─Linear: 3-5                  [256, 256]                [256, 128]                32,896\n│    │    └─ReLU: 3-6                    [256, 128]                [256, 128]                --\n│    │    └─Dropout: 3-7                 [256, 128]                [256, 128]                --\n│    └─Linear: 2-3                       [256, 128]                [256, 10]                 1,290\n===================================================================================================================\nTotal params: 235,146\nTrainable params: 235,146\nNon-trainable params: 0\nTotal mult-adds (M): 60.20\n===================================================================================================================\nInput size (MB): 0.80\nForward/backward pass size (MB): 0.81\nParams size (MB): 0.94\nEstimated Total Size (MB): 2.55\n===================================================================================================================\n\n\nHaving set up both the model and the data module, fitting this model is now almost identical to the Hitters example. In contrast to our regression model, here we will use the SimpleModule.classification() method which uses the cross-entropy loss function instead of mean squared error. It must be supplied with the number of classes in the problem.\n\nmnist_module = SimpleModule.classification(mnist_model,\n                                           num_classes=10)\nmnist_logger = CSVLogger('logs', name='MNIST')\n\nNow we are ready to go. The final step is to supply training data, and fit the model. We disable the progress bar below to avoid lengthy output in the browser when running.\n\nmnist_trainer = Trainer(deterministic=False,#True\n                        max_epochs=30,\n                        logger=mnist_logger,\n                        enable_progress_bar=False,\n                        callbacks=[ErrorTracker()])\nmnist_trainer.fit(mnist_module,\n                  datamodule=mnist_dm)\n\nGPU available: True (cuda), used: True\nTPU available: False, using: 0 TPU cores\nIPU available: False, using: 0 IPUs\nHPU available: False, using: 0 HPUs\nLOCAL_RANK: 0 - CUDA_VISIBLE_DEVICES: [0]\n\n  | Name  | Type             | Params\n-------------------------------------------\n0 | model | MNISTModel       | 235 K \n1 | loss  | CrossEntropyLoss | 0     \n-------------------------------------------\n235 K     Trainable params\n0         Non-trainable params\n235 K     Total params\n0.941     Total estimated model params size (MB)\n`Trainer.fit` stopped: `max_epochs=30` reached.\n\n\nWe have suppressed the output here, which is a progress report on the fitting of the model, grouped by epoch. This is very useful, since on large datasets fitting can take time. Fitting this model took 245 seconds on a MacBook Pro with an Apple M1 Pro chip with 10 cores and 16 GB of RAM. Here we specified a validation split of 20%, so training is actually performed on 80% of the 60,000 observations in the training set. This is an alternative to actually supplying validation data, like we did for the Hitters data. SGD uses batches of 256 observations in computing the gradient, and doing the arithmetic, we see that an epoch corresponds to 188 gradient steps.\nSimpleModule.classification() includes an accuracy metric by default. Other classification metrics can be added from torchmetrics. We will use our summary_plot() function to display accuracy across epochs.\n\nmnist_results = pd.read_csv(mnist_logger.experiment.metrics_file_path)\nfig, ax = subplots(1, 1, figsize=(6, 6))\nsummary_plot(mnist_results,\n             ax,\n             col='accuracy',\n             ylabel='Accuracy')\nax.set_ylim([0.5, 1])\nax.set_ylabel('Accuracy')\nax.set_xticks(np.linspace(0, 30, 7).astype(int));\n\n\n\n\n\n\n\n\nOnce again we evaluate the accuracy using the test() method of our trainer. This model achieves 97% accuracy on the test data.\n\nmnist_trainer.test(mnist_module,\n                   datamodule=mnist_dm)\n\nLOCAL_RANK: 0 - CUDA_VISIBLE_DEVICES: [0]\n\n\n────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────\n       Test metric             DataLoader 0\n────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────\n      test_accuracy         0.9678000211715698\n        test_loss           0.14884594082832336\n────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────\n\n\n[{'test_loss': 0.14884594082832336, 'test_accuracy': 0.9678000211715698}]\n\n\nTable~ also reports the error rates resulting from LDA (Chapter~) and multiclass logistic regression. For LDA we refer the reader to Section~. Although we could use the sklearn function LogisticRegression() to fit\nmulticlass logistic regression, we are set up here to fit such a model with torch. We just have an input layer and an output layer, and omit the hidden layers!\n\nclass MNIST_MLR(nn.Module):\n    def __init__(self):\n        super(MNIST_MLR, self).__init__()\n        self.linear = nn.Sequential(nn.Flatten(),\n                                    nn.Linear(784, 10))\n    def forward(self, x):\n        return self.linear(x)\n\nmlr_model = MNIST_MLR()\nmlr_module = SimpleModule.classification(mlr_model,\n                                         num_classes=10)\nmlr_logger = CSVLogger('logs', name='MNIST_MLR')\n\n\nmlr_trainer = Trainer(deterministic=False,#True\n                      max_epochs=30,\n                      enable_progress_bar=False,\n                      callbacks=[ErrorTracker()])\nmlr_trainer.fit(mlr_module, datamodule=mnist_dm)\n\nGPU available: True (cuda), used: True\nTPU available: False, using: 0 TPU cores\nIPU available: False, using: 0 IPUs\nHPU available: False, using: 0 HPUs\n/home/oren/work/notes/notes-islr-py/.venv/lib/python3.10/site-packages/pytorch_lightning/trainer/connectors/logger_connector/logger_connector.py:75: Starting from v1.9.0, `tensorboardX` has been removed as a dependency of the `pytorch_lightning` package, due to potential conflicts with other packages in the ML ecosystem. For this reason, `logger=True` will use `CSVLogger` as the default logger, unless the `tensorboard` or `tensorboardX` packages are found. Please `pip install lightning[extra]` or one of them to enable TensorBoard support by default\nLOCAL_RANK: 0 - CUDA_VISIBLE_DEVICES: [0]\n\n  | Name  | Type             | Params\n-------------------------------------------\n0 | model | MNIST_MLR        | 7.9 K \n1 | loss  | CrossEntropyLoss | 0     \n-------------------------------------------\n7.9 K     Trainable params\n0         Non-trainable params\n7.9 K     Total params\n0.031     Total estimated model params size (MB)\n`Trainer.fit` stopped: `max_epochs=30` reached.\n\n\nWe fit the model just as before and compute the test results.\n\nmlr_trainer.test(mlr_module,\n                 datamodule=mnist_dm)\n\nLOCAL_RANK: 0 - CUDA_VISIBLE_DEVICES: [0]\n\n\n────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────\n       Test metric             DataLoader 0\n────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────\n      test_accuracy          0.920799970626831\n        test_loss           0.33121007680892944\n────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────\n\n\n[{'test_loss': 0.33121007680892944, 'test_accuracy': 0.920799970626831}]\n\n\nThe accuracy is above 90% even for this pretty simple model.\nAs in the Hitters example, we delete some of the objects we created above.\n\ndel(mnist_test,\n    mnist_train,\n    mnist_model,\n    mnist_dm,\n    mnist_trainer,\n    mnist_module,\n    mnist_results,\n    mlr_model,\n    mlr_module,\n    mlr_trainer)"
  },
  {
    "objectID": "posts/ch10-deep-learning/Ch10-deeplearning-lab.html#convolutional-neural-networks",
    "href": "posts/ch10-deep-learning/Ch10-deeplearning-lab.html#convolutional-neural-networks",
    "title": "Chapter 10: Deep Learning",
    "section": "",
    "text": "In this section we fit a CNN to the CIFAR100 data, which is available in the torchvision package. It is arranged in a similar fashion as the MNIST data.\n\n(cifar_train, \n cifar_test) = [CIFAR100(root=\"data\",\n                         train=train,\n                         download=True)\n             for train in [True, False]]\n\nFiles already downloaded and verified\nFiles already downloaded and verified\n\n\n\ntransform = ToTensor()\ncifar_train_X = torch.stack([transform(x) for x in\n                            cifar_train.data])\ncifar_test_X = torch.stack([transform(x) for x in\n                            cifar_test.data])\ncifar_train = TensorDataset(cifar_train_X,\n                            torch.tensor(cifar_train.targets))\ncifar_test = TensorDataset(cifar_test_X,\n                            torch.tensor(cifar_test.targets))\n\nThe CIFAR100 dataset consists of 50,000 training images, each represented by a three-dimensional tensor: each three-color image is represented as a set of three channels, each of which consists of 32\\times 32 eight-bit pixels. We standardize as we did for the digits, but keep the array structure. This is accomplished with the ToTensor() transform.\nCreating the data module is similar to the MNIST example.\n\ncifar_dm = SimpleDataModule(cifar_train,\n                            cifar_test,\n                            validation=0.2,\n                            num_workers=max_num_workers,\n                            batch_size=128)\n\nWe again look at the shape of typical batches in our data loaders.\n\nfor idx, (X_ ,Y_) in enumerate(cifar_dm.train_dataloader()):\n    print('X: ', X_.shape)\n    print('Y: ', Y_.shape)\n    if idx &gt;= 1:\n        break\n\nX:  torch.Size([128, 3, 32, 32])\nY:  torch.Size([128])\nX:  torch.Size([128, 3, 32, 32])\nY:  torch.Size([128])\n\n\nBefore we start, we look at some of the training images; similar code produced Figure~ on page . The example below also illustrates that TensorDataset objects can be indexed with integers — we are choosing random images from the training data by indexing cifar_train. In order to display correctly, we must reorder the dimensions by a call to np.transpose().\n\nfig, axes = subplots(5, 5, figsize=(10,10))\nrng = np.random.default_rng(4)\nindices = rng.choice(np.arange(len(cifar_train)), 25,\n                     replace=False).reshape((5,5))\nfor i in range(5):\n    for j in range(5):\n        idx = indices[i,j]\n        axes[i,j].imshow(np.transpose(cifar_train[idx][0],\n                                      [1,2,0]),\n                                      interpolation=None)\n        axes[i,j].set_xticks([])\n        axes[i,j].set_yticks([])\n\n\n\n\n\n\n\n\nHere the imshow() method recognizes from the shape of its argument that it is a 3-dimensional array, with the last dimension indexing the three RGB color channels.\nWe specify a moderately-sized CNN for demonstration purposes, similar in structure to Figure~. We use several layers, each consisting of convolution, ReLU, and max-pooling steps. We first define a module that defines one of these layers. As in our previous examples, we overwrite the __init__() and forward() methods of nn.Module. This user-defined module can now be used in ways just like nn.Linear() or nn.Dropout().\n\nclass BuildingBlock(nn.Module):\n\n    def __init__(self,\n                 in_channels,\n                 out_channels):\n\n        super(BuildingBlock, self).__init__()\n        self.conv = nn.Conv2d(in_channels=in_channels,\n                              out_channels=out_channels,\n                              kernel_size=(3,3),\n                              padding='same')\n        self.activation = nn.ReLU()\n        self.pool = nn.MaxPool2d(kernel_size=(2,2))\n\n    def forward(self, x):\n        return self.pool(self.activation(self.conv(x)))\n\nNotice that we used the padding = \"same\" argument to nn.Conv2d(), which ensures that the output channels have the same dimension as the input channels. There are 32 channels in the first hidden layer, in contrast to the three channels in the input layer. We use a 3\\times 3 convolution filter for each channel in all the layers. Each convolution is followed by a max-pooling layer over 2\\times2 blocks.\nIn forming our deep learning model for the CIFAR100 data, we use several of our BuildingBlock() modules sequentially. This simple example illustrates some of the power of torch. Users can define modules of their own, which can be combined in other modules. Ultimately, everything is fit by a generic trainer.\n\nclass CIFARModel(nn.Module):\n\n    def __init__(self):\n        super(CIFARModel, self).__init__()\n        sizes = [(3,32),\n                 (32,64),\n                 (64,128),\n                 (128,256)]\n        self.conv = nn.Sequential(*[BuildingBlock(in_, out_)\n                                    for in_, out_ in sizes])\n\n        self.output = nn.Sequential(nn.Dropout(0.5),\n                                    nn.Linear(2*2*256, 512),\n                                    nn.ReLU(),\n                                    nn.Linear(512, 100))\n    def forward(self, x):\n        val = self.conv(x)\n        val = torch.flatten(val, start_dim=1)\n        return self.output(val)\n\nWe build the model and look at the summary. (We had created examples of X_ earlier.)\n\ncifar_model = CIFARModel()\nsummary(cifar_model,\n        input_data=X_,\n        col_names=['input_size',\n                   'output_size',\n                   'num_params'])\n\n===================================================================================================================\nLayer (type:depth-idx)                   Input Shape               Output Shape              Param #\n===================================================================================================================\nCIFARModel                               [128, 3, 32, 32]          [128, 100]                --\n├─Sequential: 1-1                        [128, 3, 32, 32]          [128, 256, 2, 2]          --\n│    └─BuildingBlock: 2-1                [128, 3, 32, 32]          [128, 32, 16, 16]         --\n│    │    └─Conv2d: 3-1                  [128, 3, 32, 32]          [128, 32, 32, 32]         896\n│    │    └─ReLU: 3-2                    [128, 32, 32, 32]         [128, 32, 32, 32]         --\n│    │    └─MaxPool2d: 3-3               [128, 32, 32, 32]         [128, 32, 16, 16]         --\n│    └─BuildingBlock: 2-2                [128, 32, 16, 16]         [128, 64, 8, 8]           --\n│    │    └─Conv2d: 3-4                  [128, 32, 16, 16]         [128, 64, 16, 16]         18,496\n│    │    └─ReLU: 3-5                    [128, 64, 16, 16]         [128, 64, 16, 16]         --\n│    │    └─MaxPool2d: 3-6               [128, 64, 16, 16]         [128, 64, 8, 8]           --\n│    └─BuildingBlock: 2-3                [128, 64, 8, 8]           [128, 128, 4, 4]          --\n│    │    └─Conv2d: 3-7                  [128, 64, 8, 8]           [128, 128, 8, 8]          73,856\n│    │    └─ReLU: 3-8                    [128, 128, 8, 8]          [128, 128, 8, 8]          --\n│    │    └─MaxPool2d: 3-9               [128, 128, 8, 8]          [128, 128, 4, 4]          --\n│    └─BuildingBlock: 2-4                [128, 128, 4, 4]          [128, 256, 2, 2]          --\n│    │    └─Conv2d: 3-10                 [128, 128, 4, 4]          [128, 256, 4, 4]          295,168\n│    │    └─ReLU: 3-11                   [128, 256, 4, 4]          [128, 256, 4, 4]          --\n│    │    └─MaxPool2d: 3-12              [128, 256, 4, 4]          [128, 256, 2, 2]          --\n├─Sequential: 1-2                        [128, 1024]               [128, 100]                --\n│    └─Dropout: 2-5                      [128, 1024]               [128, 1024]               --\n│    └─Linear: 2-6                       [128, 1024]               [128, 512]                524,800\n│    └─ReLU: 2-7                         [128, 512]                [128, 512]                --\n│    └─Linear: 2-8                       [128, 512]                [128, 100]                51,300\n===================================================================================================================\nTotal params: 964,516\nTrainable params: 964,516\nNon-trainable params: 0\nTotal mult-adds (G): 2.01\n===================================================================================================================\nInput size (MB): 1.57\nForward/backward pass size (MB): 63.54\nParams size (MB): 3.86\nEstimated Total Size (MB): 68.97\n===================================================================================================================\n\n\nThe total number of trainable parameters is 964,516. By studying the size of the parameters, we can see that the channels halve in both dimensions after each of these max-pooling operations. After the last of these we have a layer with 256 channels of dimension 2\\times 2. These are then flattened to a dense layer of size 1,024; in other words, each of the 2\\times 2 matrices is turned into a 4-vector, and put side-by-side in one layer. This is followed by a dropout regularization layer, then another dense layer of size 512, and finally, the output layer.\nUp to now, we have been using a default optimizer in SimpleModule(). For these data, experiments show that a smaller learning rate performs better than the default 0.01. We use a custom optimizer here with a learning rate of 0.001. Besides this, the logging and training follow a similar pattern to our previous examples. The optimizer takes an argument params that informs the optimizer which parameters are involved in SGD (stochastic gradient descent).\nWe saw earlier that entries of a module’s parameters are tensors. In passing the parameters to the optimizer we are doing more than simply passing arrays; part of the structure of the graph is encoded in the tensors themselves.\n\ncifar_optimizer = RMSprop(cifar_model.parameters(), lr=0.001)\ncifar_module = SimpleModule.classification(cifar_model,\n                                    num_classes=100,\n                                    optimizer=cifar_optimizer)\ncifar_logger = CSVLogger('logs', name='CIFAR100')\n\n\ncifar_trainer = Trainer(deterministic=False,#True\n                        max_epochs=30,\n                        logger=cifar_logger,\n                        enable_progress_bar=False,\n                        callbacks=[ErrorTracker()])\ncifar_trainer.fit(cifar_module,\n                  datamodule=cifar_dm)\n\nGPU available: True (cuda), used: True\nTPU available: False, using: 0 TPU cores\nIPU available: False, using: 0 IPUs\nHPU available: False, using: 0 HPUs\nLOCAL_RANK: 0 - CUDA_VISIBLE_DEVICES: [0]\n\n  | Name  | Type             | Params\n-------------------------------------------\n0 | model | CIFARModel       | 964 K \n1 | loss  | CrossEntropyLoss | 0     \n-------------------------------------------\n964 K     Trainable params\n0         Non-trainable params\n964 K     Total params\n3.858     Total estimated model params size (MB)\nCould not load library libcudnn_cnn_train.so.8. Error: /usr/lib/x86_64-linux-gnu/libcudnn_cnn_train.so.8: undefined symbol: _ZN5cudnn3cnn34layerNormFwd_execute_internal_implERKNS_7backend11VariantPackEP11CUstream_stRNS0_18LayerNormFwdParamsERKNS1_20NormForwardOperationEmb, version libcudnn_cnn_infer.so.8\nCould not load library libcudnn_cnn_train.so.8. Error: /usr/lib/x86_64-linux-gnu/libcudnn_cnn_train.so.8: undefined symbol: _ZN5cudnn3cnn34layerNormFwd_execute_internal_implERKNS_7backend11VariantPackEP11CUstream_stRNS0_18LayerNormFwdParamsERKNS1_20NormForwardOperationEmb, version libcudnn_cnn_infer.so.8\nCould not load library libcudnn_cnn_train.so.8. Error: /usr/lib/x86_64-linux-gnu/libcudnn_cnn_train.so.8: undefined symbol: _ZN5cudnn3cnn34layerNormFwd_execute_internal_implERKNS_7backend11VariantPackEP11CUstream_stRNS0_18LayerNormFwdParamsERKNS1_20NormForwardOperationEmb, version libcudnn_cnn_infer.so.8\nCould not load library libcudnn_cnn_train.so.8. Error: /usr/lib/x86_64-linux-gnu/libcudnn_cnn_train.so.8: undefined symbol: _ZN5cudnn3cnn34layerNormFwd_execute_internal_implERKNS_7backend11VariantPackEP11CUstream_stRNS0_18LayerNormFwdParamsERKNS1_20NormForwardOperationEmb, version libcudnn_cnn_infer.so.8\nCould not load library libcudnn_cnn_train.so.8. Error: /usr/lib/x86_64-linux-gnu/libcudnn_cnn_train.so.8: undefined symbol: _ZN5cudnn3cnn34layerNormFwd_execute_internal_implERKNS_7backend11VariantPackEP11CUstream_stRNS0_18LayerNormFwdParamsERKNS1_20NormForwardOperationEmb, version libcudnn_cnn_infer.so.8\nCould not load library libcudnn_cnn_train.so.8. Error: /usr/lib/x86_64-linux-gnu/libcudnn_cnn_train.so.8: undefined symbol: _ZN5cudnn3cnn34layerNormFwd_execute_internal_implERKNS_7backend11VariantPackEP11CUstream_stRNS0_18LayerNormFwdParamsERKNS1_20NormForwardOperationEmb, version libcudnn_cnn_infer.so.8\nCould not load library libcudnn_cnn_train.so.8. Error: /usr/lib/x86_64-linux-gnu/libcudnn_cnn_train.so.8: undefined symbol: _ZN5cudnn3cnn34layerNormFwd_execute_internal_implERKNS_7backend11VariantPackEP11CUstream_stRNS0_18LayerNormFwdParamsERKNS1_20NormForwardOperationEmb, version libcudnn_cnn_infer.so.8\nCould not load library libcudnn_cnn_train.so.8. Error: /usr/lib/x86_64-linux-gnu/libcudnn_cnn_train.so.8: undefined symbol: _ZN5cudnn3cnn34layerNormFwd_execute_internal_implERKNS_7backend11VariantPackEP11CUstream_stRNS0_18LayerNormFwdParamsERKNS1_20NormForwardOperationEmb, version libcudnn_cnn_infer.so.8\nCould not load library libcudnn_cnn_train.so.8. Error: /usr/lib/x86_64-linux-gnu/libcudnn_cnn_train.so.8: undefined symbol: _ZN5cudnn3cnn34layerNormFwd_execute_internal_implERKNS_7backend11VariantPackEP11CUstream_stRNS0_18LayerNormFwdParamsERKNS1_20NormForwardOperationEmb, version libcudnn_cnn_infer.so.8\nCould not load library libcudnn_cnn_train.so.8. Error: /usr/lib/x86_64-linux-gnu/libcudnn_cnn_train.so.8: undefined symbol: _ZN5cudnn3cnn34layerNormFwd_execute_internal_implERKNS_7backend11VariantPackEP11CUstream_stRNS0_18LayerNormFwdParamsERKNS1_20NormForwardOperationEmb, version libcudnn_cnn_infer.so.8\nCould not load library libcudnn_cnn_train.so.8. Error: /usr/lib/x86_64-linux-gnu/libcudnn_cnn_train.so.8: undefined symbol: _ZN5cudnn3cnn34layerNormFwd_execute_internal_implERKNS_7backend11VariantPackEP11CUstream_stRNS0_18LayerNormFwdParamsERKNS1_20NormForwardOperationEmb, version libcudnn_cnn_infer.so.8\nCould not load library libcudnn_cnn_train.so.8. Error: /usr/lib/x86_64-linux-gnu/libcudnn_cnn_train.so.8: undefined symbol: _ZN5cudnn3cnn34layerNormFwd_execute_internal_implERKNS_7backend11VariantPackEP11CUstream_stRNS0_18LayerNormFwdParamsERKNS1_20NormForwardOperationEmb, version libcudnn_cnn_infer.so.8\nCould not load library libcudnn_cnn_train.so.8. Error: /usr/lib/x86_64-linux-gnu/libcudnn_cnn_train.so.8: undefined symbol: _ZN5cudnn3cnn34layerNormFwd_execute_internal_implERKNS_7backend11VariantPackEP11CUstream_stRNS0_18LayerNormFwdParamsERKNS1_20NormForwardOperationEmb, version libcudnn_cnn_infer.so.8\nCould not load library libcudnn_cnn_train.so.8. Error: /usr/lib/x86_64-linux-gnu/libcudnn_cnn_train.so.8: undefined symbol: _ZN5cudnn3cnn34layerNormFwd_execute_internal_implERKNS_7backend11VariantPackEP11CUstream_stRNS0_18LayerNormFwdParamsERKNS1_20NormForwardOperationEmb, version libcudnn_cnn_infer.so.8\nCould not load library libcudnn_cnn_train.so.8. Error: /usr/lib/x86_64-linux-gnu/libcudnn_cnn_train.so.8: undefined symbol: _ZN5cudnn3cnn34layerNormFwd_execute_internal_implERKNS_7backend11VariantPackEP11CUstream_stRNS0_18LayerNormFwdParamsERKNS1_20NormForwardOperationEmb, version libcudnn_cnn_infer.so.8\nCould not load library libcudnn_cnn_train.so.8. Error: /usr/lib/x86_64-linux-gnu/libcudnn_cnn_train.so.8: undefined symbol: _ZN5cudnn3cnn34layerNormFwd_execute_internal_implERKNS_7backend11VariantPackEP11CUstream_stRNS0_18LayerNormFwdParamsERKNS1_20NormForwardOperationEmb, version libcudnn_cnn_infer.so.8\nCould not load library libcudnn_cnn_train.so.8. Error: /usr/lib/x86_64-linux-gnu/libcudnn_cnn_train.so.8: undefined symbol: _ZN5cudnn3cnn34layerNormFwd_execute_internal_implERKNS_7backend11VariantPackEP11CUstream_stRNS0_18LayerNormFwdParamsERKNS1_20NormForwardOperationEmb, version libcudnn_cnn_infer.so.8\nCould not load library libcudnn_cnn_train.so.8. Error: /usr/lib/x86_64-linux-gnu/libcudnn_cnn_train.so.8: undefined symbol: _ZN5cudnn3cnn34layerNormFwd_execute_internal_implERKNS_7backend11VariantPackEP11CUstream_stRNS0_18LayerNormFwdParamsERKNS1_20NormForwardOperationEmb, version libcudnn_cnn_infer.so.8\nCould not load library libcudnn_cnn_train.so.8. Error: /usr/lib/x86_64-linux-gnu/libcudnn_cnn_train.so.8: undefined symbol: _ZN5cudnn3cnn34layerNormFwd_execute_internal_implERKNS_7backend11VariantPackEP11CUstream_stRNS0_18LayerNormFwdParamsERKNS1_20NormForwardOperationEmb, version libcudnn_cnn_infer.so.8\nCould not load library libcudnn_cnn_train.so.8. Error: /usr/lib/x86_64-linux-gnu/libcudnn_cnn_train.so.8: undefined symbol: _ZN5cudnn3cnn34layerNormFwd_execute_internal_implERKNS_7backend11VariantPackEP11CUstream_stRNS0_18LayerNormFwdParamsERKNS1_20NormForwardOperationEmb, version libcudnn_cnn_infer.so.8\nCould not load library libcudnn_cnn_train.so.8. Error: /usr/lib/x86_64-linux-gnu/libcudnn_cnn_train.so.8: undefined symbol: _ZN5cudnn3cnn34layerNormFwd_execute_internal_implERKNS_7backend11VariantPackEP11CUstream_stRNS0_18LayerNormFwdParamsERKNS1_20NormForwardOperationEmb, version libcudnn_cnn_infer.so.8\nCould not load library libcudnn_cnn_train.so.8. Error: /usr/lib/x86_64-linux-gnu/libcudnn_cnn_train.so.8: undefined symbol: _ZN5cudnn3cnn34layerNormFwd_execute_internal_implERKNS_7backend11VariantPackEP11CUstream_stRNS0_18LayerNormFwdParamsERKNS1_20NormForwardOperationEmb, version libcudnn_cnn_infer.so.8\nCould not load library libcudnn_cnn_train.so.8. Error: /usr/lib/x86_64-linux-gnu/libcudnn_cnn_train.so.8: undefined symbol: _ZN5cudnn3cnn34layerNormFwd_execute_internal_implERKNS_7backend11VariantPackEP11CUstream_stRNS0_18LayerNormFwdParamsERKNS1_20NormForwardOperationEmb, version libcudnn_cnn_infer.so.8\nCould not load library libcudnn_cnn_train.so.8. Error: /usr/lib/x86_64-linux-gnu/libcudnn_cnn_train.so.8: undefined symbol: _ZN5cudnn3cnn34layerNormFwd_execute_internal_implERKNS_7backend11VariantPackEP11CUstream_stRNS0_18LayerNormFwdParamsERKNS1_20NormForwardOperationEmb, version libcudnn_cnn_infer.so.8\nCould not load library libcudnn_cnn_train.so.8. Error: /usr/lib/x86_64-linux-gnu/libcudnn_cnn_train.so.8: undefined symbol: _ZN5cudnn3cnn34layerNormFwd_execute_internal_implERKNS_7backend11VariantPackEP11CUstream_stRNS0_18LayerNormFwdParamsERKNS1_20NormForwardOperationEmb, version libcudnn_cnn_infer.so.8\nCould not load library libcudnn_cnn_train.so.8. Error: /usr/lib/x86_64-linux-gnu/libcudnn_cnn_train.so.8: undefined symbol: _ZN5cudnn3cnn34layerNormFwd_execute_internal_implERKNS_7backend11VariantPackEP11CUstream_stRNS0_18LayerNormFwdParamsERKNS1_20NormForwardOperationEmb, version libcudnn_cnn_infer.so.8\nCould not load library libcudnn_cnn_train.so.8. Error: /usr/lib/x86_64-linux-gnu/libcudnn_cnn_train.so.8: undefined symbol: _ZN5cudnn3cnn34layerNormFwd_execute_internal_implERKNS_7backend11VariantPackEP11CUstream_stRNS0_18LayerNormFwdParamsERKNS1_20NormForwardOperationEmb, version libcudnn_cnn_infer.so.8\nCould not load library libcudnn_cnn_train.so.8. Error: /usr/lib/x86_64-linux-gnu/libcudnn_cnn_train.so.8: undefined symbol: _ZN5cudnn3cnn34layerNormFwd_execute_internal_implERKNS_7backend11VariantPackEP11CUstream_stRNS0_18LayerNormFwdParamsERKNS1_20NormForwardOperationEmb, version libcudnn_cnn_infer.so.8\nCould not load library libcudnn_cnn_train.so.8. Error: /usr/lib/x86_64-linux-gnu/libcudnn_cnn_train.so.8: undefined symbol: _ZN5cudnn3cnn34layerNormFwd_execute_internal_implERKNS_7backend11VariantPackEP11CUstream_stRNS0_18LayerNormFwdParamsERKNS1_20NormForwardOperationEmb, version libcudnn_cnn_infer.so.8\nCould not load library libcudnn_cnn_train.so.8. Error: /usr/lib/x86_64-linux-gnu/libcudnn_cnn_train.so.8: undefined symbol: _ZN5cudnn3cnn34layerNormFwd_execute_internal_implERKNS_7backend11VariantPackEP11CUstream_stRNS0_18LayerNormFwdParamsERKNS1_20NormForwardOperationEmb, version libcudnn_cnn_infer.so.8\nCould not load library libcudnn_cnn_train.so.8. Error: /usr/lib/x86_64-linux-gnu/libcudnn_cnn_train.so.8: undefined symbol: _ZN5cudnn3cnn34layerNormFwd_execute_internal_implERKNS_7backend11VariantPackEP11CUstream_stRNS0_18LayerNormFwdParamsERKNS1_20NormForwardOperationEmb, version libcudnn_cnn_infer.so.8\nCould not load library libcudnn_cnn_train.so.8. Error: /usr/lib/x86_64-linux-gnu/libcudnn_cnn_train.so.8: undefined symbol: _ZN5cudnn3cnn34layerNormFwd_execute_internal_implERKNS_7backend11VariantPackEP11CUstream_stRNS0_18LayerNormFwdParamsERKNS1_20NormForwardOperationEmb, version libcudnn_cnn_infer.so.8\nCould not load library libcudnn_cnn_train.so.8. Error: /usr/lib/x86_64-linux-gnu/libcudnn_cnn_train.so.8: undefined symbol: _ZN5cudnn3cnn34layerNormFwd_execute_internal_implERKNS_7backend11VariantPackEP11CUstream_stRNS0_18LayerNormFwdParamsERKNS1_20NormForwardOperationEmb, version libcudnn_cnn_infer.so.8\nCould not load library libcudnn_cnn_train.so.8. Error: /usr/lib/x86_64-linux-gnu/libcudnn_cnn_train.so.8: undefined symbol: _ZN5cudnn3cnn34layerNormFwd_execute_internal_implERKNS_7backend11VariantPackEP11CUstream_stRNS0_18LayerNormFwdParamsERKNS1_20NormForwardOperationEmb, version libcudnn_cnn_infer.so.8\nCould not load library libcudnn_cnn_train.so.8. Error: /usr/lib/x86_64-linux-gnu/libcudnn_cnn_train.so.8: undefined symbol: _ZN5cudnn3cnn34layerNormFwd_execute_internal_implERKNS_7backend11VariantPackEP11CUstream_stRNS0_18LayerNormFwdParamsERKNS1_20NormForwardOperationEmb, version libcudnn_cnn_infer.so.8\nCould not load library libcudnn_cnn_train.so.8. Error: /usr/lib/x86_64-linux-gnu/libcudnn_cnn_train.so.8: undefined symbol: _ZN5cudnn3cnn34layerNormFwd_execute_internal_implERKNS_7backend11VariantPackEP11CUstream_stRNS0_18LayerNormFwdParamsERKNS1_20NormForwardOperationEmb, version libcudnn_cnn_infer.so.8\nCould not load library libcudnn_cnn_train.so.8. Error: /usr/lib/x86_64-linux-gnu/libcudnn_cnn_train.so.8: undefined symbol: _ZN5cudnn3cnn34layerNormFwd_execute_internal_implERKNS_7backend11VariantPackEP11CUstream_stRNS0_18LayerNormFwdParamsERKNS1_20NormForwardOperationEmb, version libcudnn_cnn_infer.so.8\nCould not load library libcudnn_cnn_train.so.8. Error: /usr/lib/x86_64-linux-gnu/libcudnn_cnn_train.so.8: undefined symbol: _ZN5cudnn3cnn34layerNormFwd_execute_internal_implERKNS_7backend11VariantPackEP11CUstream_stRNS0_18LayerNormFwdParamsERKNS1_20NormForwardOperationEmb, version libcudnn_cnn_infer.so.8\nCould not load library libcudnn_cnn_train.so.8. Error: /usr/lib/x86_64-linux-gnu/libcudnn_cnn_train.so.8: undefined symbol: _ZN5cudnn3cnn34layerNormFwd_execute_internal_implERKNS_7backend11VariantPackEP11CUstream_stRNS0_18LayerNormFwdParamsERKNS1_20NormForwardOperationEmb, version libcudnn_cnn_infer.so.8\nCould not load library libcudnn_cnn_train.so.8. Error: /usr/lib/x86_64-linux-gnu/libcudnn_cnn_train.so.8: undefined symbol: _ZN5cudnn3cnn34layerNormFwd_execute_internal_implERKNS_7backend11VariantPackEP11CUstream_stRNS0_18LayerNormFwdParamsERKNS1_20NormForwardOperationEmb, version libcudnn_cnn_infer.so.8\nCould not load library libcudnn_cnn_train.so.8. Error: /usr/lib/x86_64-linux-gnu/libcudnn_cnn_train.so.8: undefined symbol: _ZN5cudnn3cnn34layerNormFwd_execute_internal_implERKNS_7backend11VariantPackEP11CUstream_stRNS0_18LayerNormFwdParamsERKNS1_20NormForwardOperationEmb, version libcudnn_cnn_infer.so.8\nCould not load library libcudnn_cnn_train.so.8. Error: /usr/lib/x86_64-linux-gnu/libcudnn_cnn_train.so.8: undefined symbol: _ZN5cudnn3cnn34layerNormFwd_execute_internal_implERKNS_7backend11VariantPackEP11CUstream_stRNS0_18LayerNormFwdParamsERKNS1_20NormForwardOperationEmb, version libcudnn_cnn_infer.so.8\nCould not load library libcudnn_cnn_train.so.8. Error: /usr/lib/x86_64-linux-gnu/libcudnn_cnn_train.so.8: undefined symbol: _ZN5cudnn3cnn34layerNormFwd_execute_internal_implERKNS_7backend11VariantPackEP11CUstream_stRNS0_18LayerNormFwdParamsERKNS1_20NormForwardOperationEmb, version libcudnn_cnn_infer.so.8\n\n\n\n---------------------------------------------------------------------------\nRuntimeError                              Traceback (most recent call last)\nCell In[58], line 6\n      1 cifar_trainer = Trainer(deterministic=False,#True\n      2                         max_epochs=30,\n      3                         logger=cifar_logger,\n      4                         enable_progress_bar=False,\n      5                         callbacks=[ErrorTracker()])\n----&gt; 6 cifar_trainer.fit(cifar_module,\n      7                   datamodule=cifar_dm)\n\nFile ~/work/notes/notes-islr-py/.venv/lib/python3.10/site-packages/pytorch_lightning/trainer/trainer.py:544, in Trainer.fit(self, model, train_dataloaders, val_dataloaders, datamodule, ckpt_path)\n    542 self.state.status = TrainerStatus.RUNNING\n    543 self.training = True\n--&gt; 544 call._call_and_handle_interrupt(\n    545     self, self._fit_impl, model, train_dataloaders, val_dataloaders, datamodule, ckpt_path\n    546 )\n\nFile ~/work/notes/notes-islr-py/.venv/lib/python3.10/site-packages/pytorch_lightning/trainer/call.py:44, in _call_and_handle_interrupt(trainer, trainer_fn, *args, **kwargs)\n     42     if trainer.strategy.launcher is not None:\n     43         return trainer.strategy.launcher.launch(trainer_fn, *args, trainer=trainer, **kwargs)\n---&gt; 44     return trainer_fn(*args, **kwargs)\n     46 except _TunerExitException:\n     47     _call_teardown_hook(trainer)\n\nFile ~/work/notes/notes-islr-py/.venv/lib/python3.10/site-packages/pytorch_lightning/trainer/trainer.py:580, in Trainer._fit_impl(self, model, train_dataloaders, val_dataloaders, datamodule, ckpt_path)\n    573 assert self.state.fn is not None\n    574 ckpt_path = self._checkpoint_connector._select_ckpt_path(\n    575     self.state.fn,\n    576     ckpt_path,\n    577     model_provided=True,\n    578     model_connected=self.lightning_module is not None,\n    579 )\n--&gt; 580 self._run(model, ckpt_path=ckpt_path)\n    582 assert self.state.stopped\n    583 self.training = False\n\nFile ~/work/notes/notes-islr-py/.venv/lib/python3.10/site-packages/pytorch_lightning/trainer/trainer.py:987, in Trainer._run(self, model, ckpt_path)\n    982 self._signal_connector.register_signal_handlers()\n    984 # ----------------------------\n    985 # RUN THE TRAINER\n    986 # ----------------------------\n--&gt; 987 results = self._run_stage()\n    989 # ----------------------------\n    990 # POST-Training CLEAN UP\n    991 # ----------------------------\n    992 log.debug(f\"{self.__class__.__name__}: trainer tearing down\")\n\nFile ~/work/notes/notes-islr-py/.venv/lib/python3.10/site-packages/pytorch_lightning/trainer/trainer.py:1033, in Trainer._run_stage(self)\n   1031         self._run_sanity_check()\n   1032     with torch.autograd.set_detect_anomaly(self._detect_anomaly):\n-&gt; 1033         self.fit_loop.run()\n   1034     return None\n   1035 raise RuntimeError(f\"Unexpected state {self.state}\")\n\nFile ~/work/notes/notes-islr-py/.venv/lib/python3.10/site-packages/pytorch_lightning/loops/fit_loop.py:205, in _FitLoop.run(self)\n    203 try:\n    204     self.on_advance_start()\n--&gt; 205     self.advance()\n    206     self.on_advance_end()\n    207     self._restarting = False\n\nFile ~/work/notes/notes-islr-py/.venv/lib/python3.10/site-packages/pytorch_lightning/loops/fit_loop.py:363, in _FitLoop.advance(self)\n    361 with self.trainer.profiler.profile(\"run_training_epoch\"):\n    362     assert self._data_fetcher is not None\n--&gt; 363     self.epoch_loop.run(self._data_fetcher)\n\nFile ~/work/notes/notes-islr-py/.venv/lib/python3.10/site-packages/pytorch_lightning/loops/training_epoch_loop.py:140, in _TrainingEpochLoop.run(self, data_fetcher)\n    138 while not self.done:\n    139     try:\n--&gt; 140         self.advance(data_fetcher)\n    141         self.on_advance_end(data_fetcher)\n    142         self._restarting = False\n\nFile ~/work/notes/notes-islr-py/.venv/lib/python3.10/site-packages/pytorch_lightning/loops/training_epoch_loop.py:250, in _TrainingEpochLoop.advance(self, data_fetcher)\n    247 with trainer.profiler.profile(\"run_training_batch\"):\n    248     if trainer.lightning_module.automatic_optimization:\n    249         # in automatic optimization, there can only be one optimizer\n--&gt; 250         batch_output = self.automatic_optimization.run(trainer.optimizers[0], batch_idx, kwargs)\n    251     else:\n    252         batch_output = self.manual_optimization.run(kwargs)\n\nFile ~/work/notes/notes-islr-py/.venv/lib/python3.10/site-packages/pytorch_lightning/loops/optimization/automatic.py:190, in _AutomaticOptimization.run(self, optimizer, batch_idx, kwargs)\n    183         closure()\n    185 # ------------------------------\n    186 # BACKWARD PASS\n    187 # ------------------------------\n    188 # gradient update with accumulated gradients\n    189 else:\n--&gt; 190     self._optimizer_step(batch_idx, closure)\n    192 result = closure.consume_result()\n    193 if result.loss is None:\n\nFile ~/work/notes/notes-islr-py/.venv/lib/python3.10/site-packages/pytorch_lightning/loops/optimization/automatic.py:268, in _AutomaticOptimization._optimizer_step(self, batch_idx, train_step_and_backward_closure)\n    265     self.optim_progress.optimizer.step.increment_ready()\n    267 # model hook\n--&gt; 268 call._call_lightning_module_hook(\n    269     trainer,\n    270     \"optimizer_step\",\n    271     trainer.current_epoch,\n    272     batch_idx,\n    273     optimizer,\n    274     train_step_and_backward_closure,\n    275 )\n    277 if not should_accumulate:\n    278     self.optim_progress.optimizer.step.increment_completed()\n\nFile ~/work/notes/notes-islr-py/.venv/lib/python3.10/site-packages/pytorch_lightning/trainer/call.py:157, in _call_lightning_module_hook(trainer, hook_name, pl_module, *args, **kwargs)\n    154 pl_module._current_fx_name = hook_name\n    156 with trainer.profiler.profile(f\"[LightningModule]{pl_module.__class__.__name__}.{hook_name}\"):\n--&gt; 157     output = fn(*args, **kwargs)\n    159 # restore current_fx when nested context\n    160 pl_module._current_fx_name = prev_fx_name\n\nFile ~/work/notes/notes-islr-py/.venv/lib/python3.10/site-packages/pytorch_lightning/core/module.py:1303, in LightningModule.optimizer_step(self, epoch, batch_idx, optimizer, optimizer_closure)\n   1264 def optimizer_step(\n   1265     self,\n   1266     epoch: int,\n   (...)\n   1269     optimizer_closure: Optional[Callable[[], Any]] = None,\n   1270 ) -&gt; None:\n   1271     r\"\"\"Override this method to adjust the default way the :class:`~pytorch_lightning.trainer.trainer.Trainer` calls\n   1272     the optimizer.\n   1273 \n   (...)\n   1301 \n   1302     \"\"\"\n-&gt; 1303     optimizer.step(closure=optimizer_closure)\n\nFile ~/work/notes/notes-islr-py/.venv/lib/python3.10/site-packages/pytorch_lightning/core/optimizer.py:152, in LightningOptimizer.step(self, closure, **kwargs)\n    149     raise MisconfigurationException(\"When `optimizer.step(closure)` is called, the closure should be callable\")\n    151 assert self._strategy is not None\n--&gt; 152 step_output = self._strategy.optimizer_step(self._optimizer, closure, **kwargs)\n    154 self._on_after_step()\n    156 return step_output\n\nFile ~/work/notes/notes-islr-py/.venv/lib/python3.10/site-packages/pytorch_lightning/strategies/strategy.py:239, in Strategy.optimizer_step(self, optimizer, closure, model, **kwargs)\n    237 # TODO(fabric): remove assertion once strategy's optimizer_step typing is fixed\n    238 assert isinstance(model, pl.LightningModule)\n--&gt; 239 return self.precision_plugin.optimizer_step(optimizer, model=model, closure=closure, **kwargs)\n\nFile ~/work/notes/notes-islr-py/.venv/lib/python3.10/site-packages/pytorch_lightning/plugins/precision/precision.py:122, in Precision.optimizer_step(self, optimizer, model, closure, **kwargs)\n    120 \"\"\"Hook to run the optimizer step.\"\"\"\n    121 closure = partial(self._wrap_closure, model, optimizer, closure)\n--&gt; 122 return optimizer.step(closure=closure, **kwargs)\n\nFile ~/work/notes/notes-islr-py/.venv/lib/python3.10/site-packages/torch/optim/optimizer.py:391, in Optimizer.profile_hook_step.&lt;locals&gt;.wrapper(*args, **kwargs)\n    386         else:\n    387             raise RuntimeError(\n    388                 f\"{func} must return None or a tuple of (new_args, new_kwargs), but got {result}.\"\n    389             )\n--&gt; 391 out = func(*args, **kwargs)\n    392 self._optimizer_step_code()\n    394 # call optimizer step post hooks\n\nFile ~/work/notes/notes-islr-py/.venv/lib/python3.10/site-packages/torch/optim/optimizer.py:76, in _use_grad_for_differentiable.&lt;locals&gt;._use_grad(self, *args, **kwargs)\n     74     torch.set_grad_enabled(self.defaults['differentiable'])\n     75     torch._dynamo.graph_break()\n---&gt; 76     ret = func(self, *args, **kwargs)\n     77 finally:\n     78     torch._dynamo.graph_break()\n\nFile ~/work/notes/notes-islr-py/.venv/lib/python3.10/site-packages/torch/optim/rmsprop.py:109, in RMSprop.step(self, closure)\n    107 if closure is not None:\n    108     with torch.enable_grad():\n--&gt; 109         loss = closure()\n    111 for group in self.param_groups:\n    112     params_with_grad = []\n\nFile ~/work/notes/notes-islr-py/.venv/lib/python3.10/site-packages/pytorch_lightning/plugins/precision/precision.py:108, in Precision._wrap_closure(self, model, optimizer, closure)\n     95 def _wrap_closure(\n     96     self,\n     97     model: \"pl.LightningModule\",\n     98     optimizer: Optimizer,\n     99     closure: Callable[[], Any],\n    100 ) -&gt; Any:\n    101     \"\"\"This double-closure allows makes sure the ``closure`` is executed before the ``on_before_optimizer_step``\n    102     hook is called.\n    103 \n   (...)\n    106 \n    107     \"\"\"\n--&gt; 108     closure_result = closure()\n    109     self._after_closure(model, optimizer)\n    110     return closure_result\n\nFile ~/work/notes/notes-islr-py/.venv/lib/python3.10/site-packages/pytorch_lightning/loops/optimization/automatic.py:144, in Closure.__call__(self, *args, **kwargs)\n    142 @override\n    143 def __call__(self, *args: Any, **kwargs: Any) -&gt; Optional[Tensor]:\n--&gt; 144     self._result = self.closure(*args, **kwargs)\n    145     return self._result.loss\n\nFile ~/work/notes/notes-islr-py/.venv/lib/python3.10/site-packages/torch/utils/_contextlib.py:115, in context_decorator.&lt;locals&gt;.decorate_context(*args, **kwargs)\n    112 @functools.wraps(func)\n    113 def decorate_context(*args, **kwargs):\n    114     with ctx_factory():\n--&gt; 115         return func(*args, **kwargs)\n\nFile ~/work/notes/notes-islr-py/.venv/lib/python3.10/site-packages/pytorch_lightning/loops/optimization/automatic.py:138, in Closure.closure(self, *args, **kwargs)\n    135     self._zero_grad_fn()\n    137 if self._backward_fn is not None and step_output.closure_loss is not None:\n--&gt; 138     self._backward_fn(step_output.closure_loss)\n    140 return step_output\n\nFile ~/work/notes/notes-islr-py/.venv/lib/python3.10/site-packages/pytorch_lightning/loops/optimization/automatic.py:239, in _AutomaticOptimization._make_backward_fn.&lt;locals&gt;.backward_fn(loss)\n    238 def backward_fn(loss: Tensor) -&gt; None:\n--&gt; 239     call._call_strategy_hook(self.trainer, \"backward\", loss, optimizer)\n\nFile ~/work/notes/notes-islr-py/.venv/lib/python3.10/site-packages/pytorch_lightning/trainer/call.py:309, in _call_strategy_hook(trainer, hook_name, *args, **kwargs)\n    306     return None\n    308 with trainer.profiler.profile(f\"[Strategy]{trainer.strategy.__class__.__name__}.{hook_name}\"):\n--&gt; 309     output = fn(*args, **kwargs)\n    311 # restore current_fx when nested context\n    312 pl_module._current_fx_name = prev_fx_name\n\nFile ~/work/notes/notes-islr-py/.venv/lib/python3.10/site-packages/pytorch_lightning/strategies/strategy.py:213, in Strategy.backward(self, closure_loss, optimizer, *args, **kwargs)\n    210 assert self.lightning_module is not None\n    211 closure_loss = self.precision_plugin.pre_backward(closure_loss, self.lightning_module)\n--&gt; 213 self.precision_plugin.backward(closure_loss, self.lightning_module, optimizer, *args, **kwargs)\n    215 closure_loss = self.precision_plugin.post_backward(closure_loss, self.lightning_module)\n    216 self.post_backward(closure_loss)\n\nFile ~/work/notes/notes-islr-py/.venv/lib/python3.10/site-packages/pytorch_lightning/plugins/precision/precision.py:72, in Precision.backward(self, tensor, model, optimizer, *args, **kwargs)\n     52 @override\n     53 def backward(  # type: ignore[override]\n     54     self,\n   (...)\n     59     **kwargs: Any,\n     60 ) -&gt; None:\n     61     r\"\"\"Performs the actual backpropagation.\n     62 \n     63     Args:\n   (...)\n     70 \n     71     \"\"\"\n---&gt; 72     model.backward(tensor, *args, **kwargs)\n\nFile ~/work/notes/notes-islr-py/.venv/lib/python3.10/site-packages/pytorch_lightning/core/module.py:1090, in LightningModule.backward(self, loss, *args, **kwargs)\n   1088     self._fabric.backward(loss, *args, **kwargs)\n   1089 else:\n-&gt; 1090     loss.backward(*args, **kwargs)\n\nFile ~/work/notes/notes-islr-py/.venv/lib/python3.10/site-packages/torch/_tensor.py:525, in Tensor.backward(self, gradient, retain_graph, create_graph, inputs)\n    515 if has_torch_function_unary(self):\n    516     return handle_torch_function(\n    517         Tensor.backward,\n    518         (self,),\n   (...)\n    523         inputs=inputs,\n    524     )\n--&gt; 525 torch.autograd.backward(\n    526     self, gradient, retain_graph, create_graph, inputs=inputs\n    527 )\n\nFile ~/work/notes/notes-islr-py/.venv/lib/python3.10/site-packages/torch/autograd/__init__.py:267, in backward(tensors, grad_tensors, retain_graph, create_graph, grad_variables, inputs)\n    262     retain_graph = create_graph\n    264 # The reason we repeat the same comment below is that\n    265 # some Python versions print out the first line of a multi-line function\n    266 # calls in the traceback and some print out the last line\n--&gt; 267 _engine_run_backward(\n    268     tensors,\n    269     grad_tensors_,\n    270     retain_graph,\n    271     create_graph,\n    272     inputs,\n    273     allow_unreachable=True,\n    274     accumulate_grad=True,\n    275 )\n\nFile ~/work/notes/notes-islr-py/.venv/lib/python3.10/site-packages/torch/autograd/graph.py:744, in _engine_run_backward(t_outputs, *args, **kwargs)\n    742     unregister_hooks = _register_logging_hooks_on_whole_graph(t_outputs)\n    743 try:\n--&gt; 744     return Variable._execution_engine.run_backward(  # Calls into the C++ engine to run the backward pass\n    745         t_outputs, *args, **kwargs\n    746     )  # Calls into the C++ engine to run the backward pass\n    747 finally:\n    748     if attach_logging_hooks:\n\nRuntimeError: GET was unable to find an engine to execute this computation\n\n\n\nThis model can take 10 minutes or more to run and achieves about 42% accuracy on the test data. Although this is not terrible for 100-class data (a random classifier gets 1% accuracy), searching the web we see results around 75%. Typically it takes a lot of architecture carpentry, fiddling with regularization, and time, to achieve such results.\nLet’s take a look at the validation and training accuracy across epochs.\n\nlog_path = cifar_logger.experiment.metrics_file_path\ncifar_results = pd.read_csv(log_path)\nfig, ax = subplots(1, 1, figsize=(6, 6))\nsummary_plot(cifar_results,\n             ax,\n             col='accuracy',\n             ylabel='Accuracy')\nax.set_xticks(np.linspace(0, 10, 6).astype(int))\nax.set_ylabel('Accuracy')\nax.set_ylim([0, 1]);\n\n\n---------------------------------------------------------------------------\nFileNotFoundError                         Traceback (most recent call last)\nCell In[59], line 2\n      1 log_path = cifar_logger.experiment.metrics_file_path\n----&gt; 2 cifar_results = pd.read_csv(log_path)\n      3 fig, ax = subplots(1, 1, figsize=(6, 6))\n      4 summary_plot(cifar_results,\n      5              ax,\n      6              col='accuracy',\n      7              ylabel='Accuracy')\n\nFile ~/work/notes/notes-islr-py/.venv/lib/python3.10/site-packages/pandas/io/parsers/readers.py:1026, in read_csv(filepath_or_buffer, sep, delimiter, header, names, index_col, usecols, dtype, engine, converters, true_values, false_values, skipinitialspace, skiprows, skipfooter, nrows, na_values, keep_default_na, na_filter, verbose, skip_blank_lines, parse_dates, infer_datetime_format, keep_date_col, date_parser, date_format, dayfirst, cache_dates, iterator, chunksize, compression, thousands, decimal, lineterminator, quotechar, quoting, doublequote, escapechar, comment, encoding, encoding_errors, dialect, on_bad_lines, delim_whitespace, low_memory, memory_map, float_precision, storage_options, dtype_backend)\n   1013 kwds_defaults = _refine_defaults_read(\n   1014     dialect,\n   1015     delimiter,\n   (...)\n   1022     dtype_backend=dtype_backend,\n   1023 )\n   1024 kwds.update(kwds_defaults)\n-&gt; 1026 return _read(filepath_or_buffer, kwds)\n\nFile ~/work/notes/notes-islr-py/.venv/lib/python3.10/site-packages/pandas/io/parsers/readers.py:620, in _read(filepath_or_buffer, kwds)\n    617 _validate_names(kwds.get(\"names\", None))\n    619 # Create the parser.\n--&gt; 620 parser = TextFileReader(filepath_or_buffer, **kwds)\n    622 if chunksize or iterator:\n    623     return parser\n\nFile ~/work/notes/notes-islr-py/.venv/lib/python3.10/site-packages/pandas/io/parsers/readers.py:1620, in TextFileReader.__init__(self, f, engine, **kwds)\n   1617     self.options[\"has_index_names\"] = kwds[\"has_index_names\"]\n   1619 self.handles: IOHandles | None = None\n-&gt; 1620 self._engine = self._make_engine(f, self.engine)\n\nFile ~/work/notes/notes-islr-py/.venv/lib/python3.10/site-packages/pandas/io/parsers/readers.py:1880, in TextFileReader._make_engine(self, f, engine)\n   1878     if \"b\" not in mode:\n   1879         mode += \"b\"\n-&gt; 1880 self.handles = get_handle(\n   1881     f,\n   1882     mode,\n   1883     encoding=self.options.get(\"encoding\", None),\n   1884     compression=self.options.get(\"compression\", None),\n   1885     memory_map=self.options.get(\"memory_map\", False),\n   1886     is_text=is_text,\n   1887     errors=self.options.get(\"encoding_errors\", \"strict\"),\n   1888     storage_options=self.options.get(\"storage_options\", None),\n   1889 )\n   1890 assert self.handles is not None\n   1891 f = self.handles.handle\n\nFile ~/work/notes/notes-islr-py/.venv/lib/python3.10/site-packages/pandas/io/common.py:873, in get_handle(path_or_buf, mode, encoding, compression, memory_map, is_text, errors, storage_options)\n    868 elif isinstance(handle, str):\n    869     # Check whether the filename is to be opened in binary mode.\n    870     # Binary mode does not support 'encoding' and 'newline'.\n    871     if ioargs.encoding and \"b\" not in ioargs.mode:\n    872         # Encoding\n--&gt; 873         handle = open(\n    874             handle,\n    875             ioargs.mode,\n    876             encoding=ioargs.encoding,\n    877             errors=errors,\n    878             newline=\"\",\n    879         )\n    880     else:\n    881         # Binary mode\n    882         handle = open(handle, ioargs.mode)\n\nFileNotFoundError: [Errno 2] No such file or directory: 'logs/CIFAR100/version_11/metrics.csv'\n\n\n\nFinally, we evaluate our model on our test data.\n\ncifar_trainer.test(cifar_module,\n                   datamodule=cifar_dm)\n\nLOCAL_RANK: 0 - CUDA_VISIBLE_DEVICES: [0]\n\n\n────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────\n       Test metric             DataLoader 0\n────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────\n      test_accuracy        0.009999999776482582\n        test_loss            4.605414390563965\n────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────\n\n\n[{'test_loss': 4.605414390563965, 'test_accuracy': 0.009999999776482582}]\n\n\n\n\nAs deep learning has become ubiquitous in machine learning, hardware manufacturers have produced special libraries that can often speed up the gradient-descent steps.\nFor instance, Mac OS devices with the M1 chip may have the Metal programming framework enabled, which can speed up the torch computations. We present an example of how to use this acceleration.\nThe main changes are to the Trainer() call as well as to the metrics that will be evaluated on the data. These metrics must be told where the data will be located at evaluation time. This is accomplished with a call to the to() method of the metrics.\n\ntry:\n    for name, metric in cifar_module.metrics.items():\n        cifar_module.metrics[name] = metric.to('mps')\n    cifar_trainer_mps = Trainer(accelerator='mps',\n                                deterministic=False,#True\n                                enable_progress_bar=False,\n                                max_epochs=30)\n    cifar_trainer_mps.fit(cifar_module,\n                          datamodule=cifar_dm)\n    cifar_trainer_mps.test(cifar_module,\n                          datamodule=cifar_dm)\nexcept:\n    pass\n\nThis yields approximately two- or three-fold acceleration for each epoch. We have protected this code block using try: and except: clauses; if it works, we get the speedup, if it fails, nothing happens."
  },
  {
    "objectID": "posts/ch10-deep-learning/Ch10-deeplearning-lab.html#using-pretrained-cnn-models",
    "href": "posts/ch10-deep-learning/Ch10-deeplearning-lab.html#using-pretrained-cnn-models",
    "title": "Chapter 10: Deep Learning",
    "section": "",
    "text": "We now show how to use a CNN pretrained on the imagenet database to classify natural images, and demonstrate how we produced Figure~. We copied six JPEG images from a digital photo album into the directory book_images. These images are available from the data section of &lt;www.statlearning.com&gt;, the ISLP book website. Download book_images.zip; when clicked it creates the book_images directory.\nThe pretrained network we use is called resnet50; specification details can be found on the web. We will read in the images, and convert them into the array format expected by the torch software to match the specifications in resnet50. The conversion involves a resize, a crop and then a predefined standardization for each of the three channels. We now read in the images and preprocess them.\n\nresize = Resize((232,232), antialias=True)\ncrop = CenterCrop(224)\nnormalize = Normalize([0.485,0.456,0.406],\n                      [0.229,0.224,0.225])\nimgfiles = sorted([f for f in glob('book_images/*')])\nimgs = torch.stack([torch.div(crop(resize(read_image(f))), 255)\n                    for f in imgfiles])\nimgs = normalize(imgs)\nimgs.size()\n\n\n---------------------------------------------------------------------------\nRuntimeError                              Traceback (most recent call last)\nCell In[62], line 6\n      3 normalize = Normalize([0.485,0.456,0.406],\n      4                       [0.229,0.224,0.225])\n      5 imgfiles = sorted([f for f in glob('book_images/*')])\n----&gt; 6 imgs = torch.stack([torch.div(crop(resize(read_image(f))), 255)\n      7                     for f in imgfiles])\n      8 imgs = normalize(imgs)\n      9 imgs.size()\n\nRuntimeError: stack expects a non-empty TensorList\n\n\n\nWe now set up the trained network with the weights we read in code block~6. The model has 50 layers, with a fair bit of complexity.\n\nresnet_model = resnet50(weights=ResNet50_Weights.DEFAULT)\nsummary(resnet_model,\n        input_data=imgs,\n        col_names=['input_size',\n                   'output_size',\n                   'num_params'])\n\n\n---------------------------------------------------------------------------\nNameError                                 Traceback (most recent call last)\nCell In[63], line 3\n      1 resnet_model = resnet50(weights=ResNet50_Weights.DEFAULT)\n      2 summary(resnet_model,\n----&gt; 3         input_data=imgs,\n      4         col_names=['input_size',\n      5                    'output_size',\n      6                    'num_params'])\n\nNameError: name 'imgs' is not defined\n\n\n\nWe set the mode to eval() to ensure that the model is ready to predict on new data.\n\nresnet_model.eval()\n\nResNet(\n  (conv1): Conv2d(3, 64, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3), bias=False)\n  (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n  (relu): ReLU(inplace=True)\n  (maxpool): MaxPool2d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)\n  (layer1): Sequential(\n    (0): Bottleneck(\n      (conv1): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)\n      (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n      (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\n      (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n      (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)\n      (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n      (relu): ReLU(inplace=True)\n      (downsample): Sequential(\n        (0): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)\n        (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n      )\n    )\n    (1): Bottleneck(\n      (conv1): Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)\n      (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n      (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\n      (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n      (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)\n      (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n      (relu): ReLU(inplace=True)\n    )\n    (2): Bottleneck(\n      (conv1): Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)\n      (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n      (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\n      (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n      (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)\n      (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n      (relu): ReLU(inplace=True)\n    )\n  )\n  (layer2): Sequential(\n    (0): Bottleneck(\n      (conv1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)\n      (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n      (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)\n      (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n      (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)\n      (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n      (relu): ReLU(inplace=True)\n      (downsample): Sequential(\n        (0): Conv2d(256, 512, kernel_size=(1, 1), stride=(2, 2), bias=False)\n        (1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n      )\n    )\n    (1): Bottleneck(\n      (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)\n      (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n      (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\n      (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n      (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)\n      (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n      (relu): ReLU(inplace=True)\n    )\n    (2): Bottleneck(\n      (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)\n      (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n      (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\n      (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n      (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)\n      (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n      (relu): ReLU(inplace=True)\n    )\n    (3): Bottleneck(\n      (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)\n      (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n      (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\n      (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n      (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)\n      (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n      (relu): ReLU(inplace=True)\n    )\n  )\n  (layer3): Sequential(\n    (0): Bottleneck(\n      (conv1): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)\n      (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n      (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)\n      (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n      (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)\n      (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n      (relu): ReLU(inplace=True)\n      (downsample): Sequential(\n        (0): Conv2d(512, 1024, kernel_size=(1, 1), stride=(2, 2), bias=False)\n        (1): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n      )\n    )\n    (1): Bottleneck(\n      (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)\n      (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n      (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\n      (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n      (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)\n      (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n      (relu): ReLU(inplace=True)\n    )\n    (2): Bottleneck(\n      (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)\n      (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n      (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\n      (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n      (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)\n      (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n      (relu): ReLU(inplace=True)\n    )\n    (3): Bottleneck(\n      (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)\n      (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n      (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\n      (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n      (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)\n      (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n      (relu): ReLU(inplace=True)\n    )\n    (4): Bottleneck(\n      (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)\n      (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n      (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\n      (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n      (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)\n      (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n      (relu): ReLU(inplace=True)\n    )\n    (5): Bottleneck(\n      (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)\n      (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n      (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\n      (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n      (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)\n      (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n      (relu): ReLU(inplace=True)\n    )\n  )\n  (layer4): Sequential(\n    (0): Bottleneck(\n      (conv1): Conv2d(1024, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)\n      (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n      (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)\n      (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n      (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)\n      (bn3): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n      (relu): ReLU(inplace=True)\n      (downsample): Sequential(\n        (0): Conv2d(1024, 2048, kernel_size=(1, 1), stride=(2, 2), bias=False)\n        (1): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n      )\n    )\n    (1): Bottleneck(\n      (conv1): Conv2d(2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)\n      (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n      (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\n      (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n      (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)\n      (bn3): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n      (relu): ReLU(inplace=True)\n    )\n    (2): Bottleneck(\n      (conv1): Conv2d(2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)\n      (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n      (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\n      (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n      (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)\n      (bn3): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n      (relu): ReLU(inplace=True)\n    )\n  )\n  (avgpool): AdaptiveAvgPool2d(output_size=(1, 1))\n  (fc): Linear(in_features=2048, out_features=1000, bias=True)\n)\n\n\nInspecting the output above, we see that when setting up the resnet_model, the authors defined a Bottleneck, much like our BuildingBlock module.\nWe now feed our six images through the fitted network.\n\nimg_preds = resnet_model(imgs)\n\n\n---------------------------------------------------------------------------\nNameError                                 Traceback (most recent call last)\nCell In[65], line 1\n----&gt; 1 img_preds = resnet_model(imgs)\n\nNameError: name 'imgs' is not defined\n\n\n\nLet’s look at the predicted probabilities for each of the top 3 choices. First we compute the probabilities by applying the softmax to the logits in img_preds. Note that we have had to call the detach() method on the tensor img_preds in order to convert it to our a more familiar ndarray.\n\nimg_probs = np.exp(np.asarray(img_preds.detach()))\nimg_probs /= img_probs.sum(1)[:,None]\n\n\n---------------------------------------------------------------------------\nNameError                                 Traceback (most recent call last)\nCell In[66], line 1\n----&gt; 1 img_probs = np.exp(np.asarray(img_preds.detach()))\n      2 img_probs /= img_probs.sum(1)[:,None]\n\nNameError: name 'img_preds' is not defined\n\n\n\nIn order to see the class labels, we must download the index file associated with imagenet. {This is avalable from the book website and s3.amazonaws.com/deep-learning-models/image-models/imagenet_class_index.json.}\n\nlabs = json.load(open('imagenet_class_index.json'))\nclass_labels = pd.DataFrame([(int(k), v[1]) for k, v in \n                           labs.items()],\n                           columns=['idx', 'label'])\nclass_labels = class_labels.set_index('idx')\nclass_labels = class_labels.sort_index()\n\n\n---------------------------------------------------------------------------\nFileNotFoundError                         Traceback (most recent call last)\nCell In[67], line 1\n----&gt; 1 labs = json.load(open('imagenet_class_index.json'))\n      2 class_labels = pd.DataFrame([(int(k), v[1]) for k, v in \n      3                            labs.items()],\n      4                            columns=['idx', 'label'])\n      5 class_labels = class_labels.set_index('idx')\n\nFile ~/work/notes/notes-islr-py/.venv/lib/python3.10/site-packages/IPython/core/interactiveshell.py:324, in _modified_open(file, *args, **kwargs)\n    317 if file in {0, 1, 2}:\n    318     raise ValueError(\n    319         f\"IPython won't let you open fd={file} by default \"\n    320         \"as it is likely to crash IPython. If you know what you are doing, \"\n    321         \"you can use builtins' open.\"\n    322     )\n--&gt; 324 return io_open(file, *args, **kwargs)\n\nFileNotFoundError: [Errno 2] No such file or directory: 'imagenet_class_index.json'\n\n\n\nWe’ll now construct a data frame for each image file with the labels with the three highest probabilities as estimated by the model above.\n\nfor i, imgfile in enumerate(imgfiles):\n    img_df = class_labels.copy()\n    img_df['prob'] = img_probs[i]\n    img_df = img_df.sort_values(by='prob', ascending=False)[:3]\n    print(f'Image: {imgfile}')\n    print(img_df.reset_index().drop(columns=['idx']))\n\nWe see that the model is quite confident about Flamingo.jpg, but a little less so for the other images.\nWe end this section with our usual cleanup.\n\ndel(cifar_test,\n    cifar_train,\n    cifar_dm,\n    cifar_module,\n    cifar_logger,\n    cifar_optimizer,\n    cifar_trainer)"
  },
  {
    "objectID": "posts/ch10-deep-learning/Ch10-deeplearning-lab.html#imdb-document-classification",
    "href": "posts/ch10-deep-learning/Ch10-deeplearning-lab.html#imdb-document-classification",
    "title": "Chapter 10: Deep Learning",
    "section": "",
    "text": "We now implement models for sentiment classification (Section~) on the IMDB dataset. As mentioned above code block~8, we are using a preprocessed version of the IMDB dataset found in the keras package. As keras uses tensorflow, a different tensor and deep learning library, we have converted the data to be suitable for torch. The code used to convert from keras is available in the module ISLP.torch._make_imdb. It requires some of the keras packages to run. These data use a dictionary of size 10,000.\nWe have stored three different representations of the review data for this lab:\n\nload_tensor(), a sparse tensor version usable by torch;\nload_sparse(), a sparse matrix version usable by sklearn, since we will compare with a lasso fit;\nload_sequential(), a padded version of the original sequence representation, limited to the last 500 words of each review.\n\n\n(imdb_seq_train,\n imdb_seq_test) = load_sequential(root='data/IMDB')\npadded_sample = np.asarray(imdb_seq_train.tensors[0][0])\nsample_review = padded_sample[padded_sample &gt; 0][:12]\nsample_review[:12]\n\narray([   1,   14,   22,   16,   43,  530,  973, 1622, 1385,   65,  458,\n       4468], dtype=int32)\n\n\nThe datasets imdb_seq_train and imdb_seq_test are both instances of the class TensorDataset. The tensors used to construct them can be found in the tensors attribute, with the first tensor the features X and the second the outcome Y. We have taken the first row of features and stored it as padded_sample. In the preprocessing used to form these data, sequences were padded with 0s in the beginning if they were not long enough, hence we remove this padding by restricting to entries where padded_sample &gt; 0. We then provide the first 12 words of the sample review.\nWe can find these words in the lookup dictionary from the ISLP.torch.imdb module.\n\nlookup = load_lookup(root='data/IMDB')\n' '.join(lookup[i] for i in sample_review)\n\n\"&lt;START&gt; this film was just brilliant casting location scenery story direction everyone's\"\n\n\nFor our first model, we have created a binary feature for each of the 10,000 possible words in the dataset, with an entry of one in the i,j entry if word j appears in review i. As most reviews are quite short, such a feature matrix has over 98% zeros. These data are accessed using load_tensor() from the ISLP library.\n\nmax_num_workers=10\n(imdb_train,\n imdb_test) = load_tensor(root='data/IMDB')\nimdb_dm = SimpleDataModule(imdb_train,\n                           imdb_test,\n                           validation=2000,\n                           num_workers=min(6, max_num_workers),\n                           batch_size=512)\n\nWe’ll use a two-layer model for our first model.\n\nclass IMDBModel(nn.Module):\n\n    def __init__(self, input_size):\n        super(IMDBModel, self).__init__()\n        self.dense1 = nn.Linear(input_size, 16)\n        self.activation = nn.ReLU()\n        self.dense2 = nn.Linear(16, 16)\n        self.output = nn.Linear(16, 1)\n\n    def forward(self, x):\n        val = x\n        for _map in [self.dense1,\n                     self.activation,\n                     self.dense2,\n                     self.activation,\n                     self.output]:\n            val = _map(val)\n        return torch.flatten(val)\n\nWe now instantiate our model and look at a summary.\n\nimdb_model = IMDBModel(imdb_test.tensors[0].size()[1])\nsummary(imdb_model,\n        input_size=imdb_test.tensors[0].size(),\n        col_names=['input_size',\n                   'output_size',\n                   'num_params'])\n\n===================================================================================================================\nLayer (type:depth-idx)                   Input Shape               Output Shape              Param #\n===================================================================================================================\nIMDBModel                                [25000, 10003]            [25000]                   --\n├─Linear: 1-1                            [25000, 10003]            [25000, 16]               160,064\n├─ReLU: 1-2                              [25000, 16]               [25000, 16]               --\n├─Linear: 1-3                            [25000, 16]               [25000, 16]               272\n├─ReLU: 1-4                              [25000, 16]               [25000, 16]               --\n├─Linear: 1-5                            [25000, 16]               [25000, 1]                17\n===================================================================================================================\nTotal params: 160,353\nTrainable params: 160,353\nNon-trainable params: 0\nTotal mult-adds (G): 4.01\n===================================================================================================================\nInput size (MB): 1000.30\nForward/backward pass size (MB): 6.60\nParams size (MB): 0.64\nEstimated Total Size (MB): 1007.54\n===================================================================================================================\n\n\nWe’ll again usea smaller learning rate for these data, hence we pass an optimizer to the SimpleModule. Since the reviews are classified into positive or negative sentiment, we use SimpleModule.binary_classification(). {Our use of binary_classification() instead of classification() is due to some subtlety in how torchmetrics.Accuracy() works, as well as the data type of the targets.}\n\nimdb_optimizer = RMSprop(imdb_model.parameters(), lr=0.001)\nimdb_module = SimpleModule.binary_classification(\n                         imdb_model,\n                         optimizer=imdb_optimizer)\n\nHaving loaded the datasets into a data module and created a SimpleModule, the remaining steps are familiar.\n\nimdb_logger = CSVLogger('logs', name='IMDB')\nimdb_trainer = Trainer(deterministic=False,#True\n                       max_epochs=30,\n                       logger=imdb_logger,\n                       enable_progress_bar=False,\n                       callbacks=[ErrorTracker()])\nimdb_trainer.fit(imdb_module,\n                 datamodule=imdb_dm)\n\nGPU available: True (cuda), used: True\nTPU available: False, using: 0 TPU cores\nIPU available: False, using: 0 IPUs\nHPU available: False, using: 0 HPUs\nLOCAL_RANK: 0 - CUDA_VISIBLE_DEVICES: [0]\n\n  | Name  | Type              | Params\n--------------------------------------------\n0 | model | IMDBModel         | 160 K \n1 | loss  | BCEWithLogitsLoss | 0     \n--------------------------------------------\n160 K     Trainable params\n0         Non-trainable params\n160 K     Total params\n0.641     Total estimated model params size (MB)\n/home/oren/work/notes/notes-islr-py/.venv/lib/python3.10/site-packages/pytorch_lightning/loops/fit_loop.py:298: The number of training batches (45) is smaller than the logging interval Trainer(log_every_n_steps=50). Set a lower value for log_every_n_steps if you want to see logs for the training epoch.\n`Trainer.fit` stopped: `max_epochs=30` reached.\n\n\nEvaluating the test error yields roughly 86% accuracy.\n\ntest_results = imdb_trainer.test(imdb_module, datamodule=imdb_dm)\ntest_results\n\nLOCAL_RANK: 0 - CUDA_VISIBLE_DEVICES: [0]\n\n\n────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────\n       Test metric             DataLoader 0\n────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────\n      test_accuracy          0.85316002368927\n        test_loss           1.1613209247589111\n────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────\n\n\n[{'test_loss': 1.1613209247589111, 'test_accuracy': 0.85316002368927}]\n\n\n\n\nWe now fit a lasso logistic regression model using LogisticRegression() from sklearn. Since sklearn does not recognize the sparse tensors of torch, we use a sparse matrix that is recognized by sklearn.\n\n((X_train, Y_train),\n (X_valid, Y_valid),\n (X_test, Y_test)) = load_sparse(validation=2000,\n                                 random_state=0,\n                                 root='data/IMDB')\n\nSimilar to what we did in Section~, we construct a series of 50 values for the lasso reguralization parameter \\lambda.\n\nlam_max = np.abs(X_train.T * (Y_train - Y_train.mean())).max()\nlam_val = lam_max * np.exp(np.linspace(np.log(1),\n                                       np.log(1e-4), 50))\n\nWith LogisticRegression() the regularization parameter C is specified as the inverse of \\lambda. There are several solvers for logistic regression; here we use liblinear which works well with the sparse input format.\n\nlogit = LogisticRegression(penalty='l1', \n                           C=1/lam_max,\n                           solver='liblinear',\n                           warm_start=True,\n                           fit_intercept=True)\n\nThe path of 50 values takes approximately 40 seconds to run.\n\ncoefs = []\nintercepts = []\n\nfor l in lam_val:\n    logit.C = 1/l\n    logit.fit(X_train, Y_train)\n    coefs.append(logit.coef_.copy())\n    intercepts.append(logit.intercept_)\n\nLogisticRegression(C=0.0007489236279827927, penalty='l1', solver='liblinear',\n                   warm_start=True)In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.  LogisticRegression?Documentation for LogisticRegressioniFittedLogisticRegression(C=0.0007489236279827927, penalty='l1', solver='liblinear',\n                   warm_start=True) \n\n\nLogisticRegression(C=0.0009037955226505406, penalty='l1', solver='liblinear',\n                   warm_start=True)In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.  LogisticRegression?Documentation for LogisticRegressioniFittedLogisticRegression(C=0.0009037955226505406, penalty='l1', solver='liblinear',\n                   warm_start=True) \n\n\nLogisticRegression(C=0.001090693785377448, penalty='l1', solver='liblinear',\n                   warm_start=True)In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.  LogisticRegression?Documentation for LogisticRegressioniFittedLogisticRegression(C=0.001090693785377448, penalty='l1', solver='liblinear',\n                   warm_start=True) \n\n\nLogisticRegression(C=0.0013162412333845557, penalty='l1', solver='liblinear',\n                   warm_start=True)In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.  LogisticRegression?Documentation for LogisticRegressioniFittedLogisticRegression(C=0.0013162412333845557, penalty='l1', solver='liblinear',\n                   warm_start=True) \n\n\nLogisticRegression(C=0.0015884302337545147, penalty='l1', solver='liblinear',\n                   warm_start=True)In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.  LogisticRegression?Documentation for LogisticRegressioniFittedLogisticRegression(C=0.0015884302337545147, penalty='l1', solver='liblinear',\n                   warm_start=True) \n\n\nLogisticRegression(C=0.001916905916263957, penalty='l1', solver='liblinear',\n                   warm_start=True)In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.  LogisticRegression?Documentation for LogisticRegressioniFittedLogisticRegression(C=0.001916905916263957, penalty='l1', solver='liblinear',\n                   warm_start=True) \n\n\nLogisticRegression(C=0.0023133079525453322, penalty='l1', solver='liblinear',\n                   warm_start=True)In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.  LogisticRegression?Documentation for LogisticRegressioniFittedLogisticRegression(C=0.0023133079525453322, penalty='l1', solver='liblinear',\n                   warm_start=True) \n\n\nLogisticRegression(C=0.0027916830126641402, penalty='l1', solver='liblinear',\n                   warm_start=True)In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.  LogisticRegression?Documentation for LogisticRegressioniFittedLogisticRegression(C=0.0027916830126641402, penalty='l1', solver='liblinear',\n                   warm_start=True) \n\n\nLogisticRegression(C=0.003368982514680914, penalty='l1', solver='liblinear',\n                   warm_start=True)In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.  LogisticRegression?Documentation for LogisticRegressioniFittedLogisticRegression(C=0.003368982514680914, penalty='l1', solver='liblinear',\n                   warm_start=True) \n\n\nLogisticRegression(C=0.004065663305159506, penalty='l1', solver='liblinear',\n                   warm_start=True)In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.  LogisticRegression?Documentation for LogisticRegressioniFittedLogisticRegression(C=0.004065663305159506, penalty='l1', solver='liblinear',\n                   warm_start=True) \n\n\nLogisticRegression(C=0.00490641255598386, penalty='l1', solver='liblinear',\n                   warm_start=True)In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.  LogisticRegression?Documentation for LogisticRegressioniFittedLogisticRegression(C=0.00490641255598386, penalty='l1', solver='liblinear',\n                   warm_start=True) \n\n\nLogisticRegression(C=0.00592102256450172, penalty='l1', solver='liblinear',\n                   warm_start=True)In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.  LogisticRegression?Documentation for LogisticRegressioniFittedLogisticRegression(C=0.00592102256450172, penalty='l1', solver='liblinear',\n                   warm_start=True) \n\n\nLogisticRegression(C=0.007145446455900081, penalty='l1', solver='liblinear',\n                   warm_start=True)In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.  LogisticRegression?Documentation for LogisticRegressioniFittedLogisticRegression(C=0.007145446455900081, penalty='l1', solver='liblinear',\n                   warm_start=True) \n\n\nLogisticRegression(C=0.008623072197062593, penalty='l1', solver='liblinear',\n                   warm_start=True)In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.  LogisticRegression?Documentation for LogisticRegressioniFittedLogisticRegression(C=0.008623072197062593, penalty='l1', solver='liblinear',\n                   warm_start=True) \n\n\nLogisticRegression(C=0.01040626006711674, penalty='l1', solver='liblinear',\n                   warm_start=True)In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.  LogisticRegression?Documentation for LogisticRegressioniFittedLogisticRegression(C=0.01040626006711674, penalty='l1', solver='liblinear',\n                   warm_start=True) \n\n\nLogisticRegression(C=0.012558198065575408, penalty='l1', solver='liblinear',\n                   warm_start=True)In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.  LogisticRegression?Documentation for LogisticRegressioniFittedLogisticRegression(C=0.012558198065575408, penalty='l1', solver='liblinear',\n                   warm_start=True) \n\n\nLogisticRegression(C=0.015155141005227458, penalty='l1', solver='liblinear',\n                   warm_start=True)In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.  LogisticRegression?Documentation for LogisticRegressioniFittedLogisticRegression(C=0.015155141005227458, penalty='l1', solver='liblinear',\n                   warm_start=True) \n\n\nLogisticRegression(C=0.018289112632959816, penalty='l1', solver='liblinear',\n                   warm_start=True)In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.  LogisticRegression?Documentation for LogisticRegressioniFittedLogisticRegression(C=0.018289112632959816, penalty='l1', solver='liblinear',\n                   warm_start=True) \n\n\nLogisticRegression(C=0.022071166529279682, penalty='l1', solver='liblinear',\n                   warm_start=True)In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.  LogisticRegression?Documentation for LogisticRegressioniFittedLogisticRegression(C=0.022071166529279682, penalty='l1', solver='liblinear',\n                   warm_start=True) \n\n\nLogisticRegression(C=0.026635321337859782, penalty='l1', solver='liblinear',\n                   warm_start=True)In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.  LogisticRegression?Documentation for LogisticRegressioniFittedLogisticRegression(C=0.026635321337859782, penalty='l1', solver='liblinear',\n                   warm_start=True) \n\n\nLogisticRegression(C=0.03214330977159287, penalty='l1', solver='liblinear',\n                   warm_start=True)In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.  LogisticRegression?Documentation for LogisticRegressioniFittedLogisticRegression(C=0.03214330977159287, penalty='l1', solver='liblinear',\n                   warm_start=True) \n\n\nLogisticRegression(C=0.03879030967814849, penalty='l1', solver='liblinear',\n                   warm_start=True)In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.  LogisticRegression?Documentation for LogisticRegressioniFittedLogisticRegression(C=0.03879030967814849, penalty='l1', solver='liblinear',\n                   warm_start=True) \n\n\nLogisticRegression(C=0.04681186024771011, penalty='l1', solver='liblinear',\n                   warm_start=True)In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.  LogisticRegression?Documentation for LogisticRegressioniFittedLogisticRegression(C=0.04681186024771011, penalty='l1', solver='liblinear',\n                   warm_start=True) \n\n\nLogisticRegression(C=0.05649220844157334, penalty='l1', solver='liblinear',\n                   warm_start=True)In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.  LogisticRegression?Documentation for LogisticRegressioniFittedLogisticRegression(C=0.05649220844157334, penalty='l1', solver='liblinear',\n                   warm_start=True) \n\n\nLogisticRegression(C=0.06817438140075363, penalty='l1', solver='liblinear',\n                   warm_start=True)In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.  LogisticRegression?Documentation for LogisticRegressioniFittedLogisticRegression(C=0.06817438140075363, penalty='l1', solver='liblinear',\n                   warm_start=True) \n\n\nLogisticRegression(C=0.08227234175456818, penalty='l1', solver='liblinear',\n                   warm_start=True)In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.  LogisticRegression?Documentation for LogisticRegressioniFittedLogisticRegression(C=0.08227234175456818, penalty='l1', solver='liblinear',\n                   warm_start=True) \n\n\nLogisticRegression(C=0.09928565655757668, penalty='l1', solver='liblinear',\n                   warm_start=True)In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.  LogisticRegression?Documentation for LogisticRegressioniFittedLogisticRegression(C=0.09928565655757668, penalty='l1', solver='liblinear',\n                   warm_start=True) \n\n\nLogisticRegression(C=0.1198171996547274, penalty='l1', solver='liblinear',\n                   warm_start=True)In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.  LogisticRegression?Documentation for LogisticRegressioniFittedLogisticRegression(C=0.1198171996547274, penalty='l1', solver='liblinear',\n                   warm_start=True) \n\n\nLogisticRegression(C=0.14459451476533808, penalty='l1', solver='liblinear',\n                   warm_start=True)In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.  LogisticRegression?Documentation for LogisticRegressioniFittedLogisticRegression(C=0.14459451476533808, penalty='l1', solver='liblinear',\n                   warm_start=True) \n\n\nLogisticRegression(C=0.17449559629562483, penalty='l1', solver='liblinear',\n                   warm_start=True)In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.  LogisticRegression?Documentation for LogisticRegressioniFittedLogisticRegression(C=0.17449559629562483, penalty='l1', solver='liblinear',\n                   warm_start=True) \n\n\nLogisticRegression(C=0.21058000143353128, penalty='l1', solver='liblinear',\n                   warm_start=True)In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.  LogisticRegression?Documentation for LogisticRegressioniFittedLogisticRegression(C=0.21058000143353128, penalty='l1', solver='liblinear',\n                   warm_start=True) \n\n\nLogisticRegression(C=0.25412639599580494, penalty='l1', solver='liblinear',\n                   warm_start=True)In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.  LogisticRegression?Documentation for LogisticRegressioniFittedLogisticRegression(C=0.25412639599580494, penalty='l1', solver='liblinear',\n                   warm_start=True) \n\n\nLogisticRegression(C=0.30667786447993306, penalty='l1', solver='liblinear',\n                   warm_start=True)In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.  LogisticRegression?Documentation for LogisticRegressioniFittedLogisticRegression(C=0.30667786447993306, penalty='l1', solver='liblinear',\n                   warm_start=True) \n\n\nLogisticRegression(C=0.37009658990136846, penalty='l1', solver='liblinear',\n                   warm_start=True)In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.  LogisticRegression?Documentation for LogisticRegressioniFittedLogisticRegression(C=0.37009658990136846, penalty='l1', solver='liblinear',\n                   warm_start=True) \n\n\nLogisticRegression(C=0.4466298410186834, penalty='l1', solver='liblinear',\n                   warm_start=True)In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.  LogisticRegression?Documentation for LogisticRegressioniFittedLogisticRegression(C=0.4466298410186834, penalty='l1', solver='liblinear',\n                   warm_start=True) \n\n\nLogisticRegression(C=0.5389896052312603, penalty='l1', solver='liblinear',\n                   warm_start=True)In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.  LogisticRegression?Documentation for LogisticRegressioniFittedLogisticRegression(C=0.5389896052312603, penalty='l1', solver='liblinear',\n                   warm_start=True) \n\n\nLogisticRegression(C=0.6504486889741823, penalty='l1', solver='liblinear',\n                   warm_start=True)In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.  LogisticRegression?Documentation for LogisticRegressioniFittedLogisticRegression(C=0.6504486889741823, penalty='l1', solver='liblinear',\n                   warm_start=True) \n\n\nLogisticRegression(C=0.7849566909675425, penalty='l1', solver='liblinear',\n                   warm_start=True)In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.  LogisticRegression?Documentation for LogisticRegressioniFittedLogisticRegression(C=0.7849566909675425, penalty='l1', solver='liblinear',\n                   warm_start=True) \n\n\nLogisticRegression(C=0.9472799578802298, penalty='l1', solver='liblinear',\n                   warm_start=True)In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.  LogisticRegression?Documentation for LogisticRegressioniFittedLogisticRegression(C=0.9472799578802298, penalty='l1', solver='liblinear',\n                   warm_start=True) \n\n\nLogisticRegression(C=1.143170481794995, penalty='l1', solver='liblinear',\n                   warm_start=True)In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.  LogisticRegression?Documentation for LogisticRegressioniFittedLogisticRegression(C=1.143170481794995, penalty='l1', solver='liblinear',\n                   warm_start=True) \n\n\nLogisticRegression(C=1.3795697244263152, penalty='l1', solver='liblinear',\n                   warm_start=True)In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.  LogisticRegression?Documentation for LogisticRegressioniFittedLogisticRegression(C=1.3795697244263152, penalty='l1', solver='liblinear',\n                   warm_start=True) \n\n\nLogisticRegression(C=1.664854590686503, penalty='l1', solver='liblinear',\n                   warm_start=True)In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.  LogisticRegression?Documentation for LogisticRegressioniFittedLogisticRegression(C=1.664854590686503, penalty='l1', solver='liblinear',\n                   warm_start=True) \n\n\nLogisticRegression(C=2.009134267775075, penalty='l1', solver='liblinear',\n                   warm_start=True)In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.  LogisticRegression?Documentation for LogisticRegressioniFittedLogisticRegression(C=2.009134267775075, penalty='l1', solver='liblinear',\n                   warm_start=True) \n\n\nLogisticRegression(C=2.424608448407246, penalty='l1', solver='liblinear',\n                   warm_start=True)In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.  LogisticRegression?Documentation for LogisticRegressioniFittedLogisticRegression(C=2.424608448407246, penalty='l1', solver='liblinear',\n                   warm_start=True) \n\n\nLogisticRegression(C=2.9259996319698045, penalty='l1', solver='liblinear',\n                   warm_start=True)In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.  LogisticRegression?Documentation for LogisticRegressioniFittedLogisticRegression(C=2.9259996319698045, penalty='l1', solver='liblinear',\n                   warm_start=True) \n\n\nLogisticRegression(C=3.5310748223745434, penalty='l1', solver='liblinear',\n                   warm_start=True)In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.  LogisticRegression?Documentation for LogisticRegressioniFittedLogisticRegression(C=3.5310748223745434, penalty='l1', solver='liblinear',\n                   warm_start=True) \n\n\nLogisticRegression(C=4.2612751091884284, penalty='l1', solver='liblinear',\n                   warm_start=True)In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.  LogisticRegression?Documentation for LogisticRegressioniFittedLogisticRegression(C=4.2612751091884284, penalty='l1', solver='liblinear',\n                   warm_start=True) \n\n\nLogisticRegression(C=5.142475441508147, penalty='l1', solver='liblinear',\n                   warm_start=True)In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.  LogisticRegression?Documentation for LogisticRegressioniFittedLogisticRegression(C=5.142475441508147, penalty='l1', solver='liblinear',\n                   warm_start=True) \n\n\nLogisticRegression(C=6.20590151748051, penalty='l1', solver='liblinear',\n                   warm_start=True)In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.  LogisticRegression?Documentation for LogisticRegressioniFittedLogisticRegression(C=6.20590151748051, penalty='l1', solver='liblinear',\n                   warm_start=True) \n\n\nLogisticRegression(C=7.48923627982792, penalty='l1', solver='liblinear',\n                   warm_start=True)In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.  LogisticRegression?Documentation for LogisticRegressioniFittedLogisticRegression(C=7.48923627982792, penalty='l1', solver='liblinear',\n                   warm_start=True) \n\n\nThe coefficient and intercepts have an extraneous dimension which can be removed by the np.squeeze() function.\n\ncoefs = np.squeeze(coefs)\nintercepts = np.squeeze(intercepts)\n\nWe’ll now make a plot to compare our neural network results with the lasso.\n\n%%capture\nfig, axes = subplots(1, 2, figsize=(16, 8), sharey=True)\nfor ((X_, Y_),\n     data_,\n     color) in zip([(X_train, Y_train),\n                    (X_valid, Y_valid),\n                    (X_test, Y_test)],\n                    ['Training', 'Validation', 'Test'],\n                    ['black', 'red', 'blue']):\n    linpred_ = X_ * coefs.T + intercepts[None,:]\n    label_ = np.array(linpred_ &gt; 0)\n    accuracy_ = np.array([np.mean(Y_ == l) for l in label_.T])\n    axes[0].plot(-np.log(lam_val / X_train.shape[0]),\n                 accuracy_,\n                 '.--',\n                 color=color,\n                 markersize=13,\n                 linewidth=2,\n                 label=data_)\naxes[0].legend()\naxes[0].set_xlabel(r'$-\\log(\\lambda)$', fontsize=20)\naxes[0].set_ylabel('Accuracy', fontsize=20)\n\nNotice the use of %%capture, which suppresses the displaying of the partially completed figure. This is useful when making a complex figure, since the steps can be spread across two or more cells. We now add a plot of the lasso accuracy, and display the composed figure by simply entering its name at the end of the cell.\n\nimdb_results = pd.read_csv(imdb_logger.experiment.metrics_file_path)\nsummary_plot(imdb_results,\n             axes[1],\n             col='accuracy',\n             ylabel='Accuracy')\naxes[1].set_xticks(np.linspace(0, 30, 7).astype(int))\naxes[1].set_ylabel('Accuracy', fontsize=20)\naxes[1].set_xlabel('Epoch', fontsize=20)\naxes[1].set_ylim([0.5, 1]);\naxes[1].axhline(test_results[0]['test_accuracy'],\n                color='blue',\n                linestyle='--',\n                linewidth=3)\nfig\n\nText(1421.526515151515, 0.5, 'Accuracy')\n\n\nText(0.5, 75.19999999999999, 'Epoch')\n\n\n\n\n\n\n\n\n\nFrom the graphs we see that the accuracy of the lasso logistic regression peaks at about 0.88, as it does for the neural network.\nOnce again, we end with a cleanup.\n\ndel(imdb_model,\n    imdb_trainer,\n    imdb_logger,\n    imdb_dm,\n    imdb_train,\n    imdb_test)"
  },
  {
    "objectID": "posts/ch10-deep-learning/Ch10-deeplearning-lab.html#recurrent-neural-networks",
    "href": "posts/ch10-deep-learning/Ch10-deeplearning-lab.html#recurrent-neural-networks",
    "title": "Chapter 10: Deep Learning",
    "section": "",
    "text": "In this lab we fit the models illustrated in Section~.\n\n\nHere we fit a simple LSTM RNN for sentiment prediction to the IMDb movie-review data, as discussed in Section~. For an RNN we use the sequence of words in a document, taking their order into account. We loaded the preprocessed data at the beginning of Section~. A script that details the preprocessing can be found in the ISLP library. Notably, since more than 90% of the documents had fewer than 500 words, we set the document length to 500. For longer documents, we used the last 500 words, and for shorter documents, we padded the front with blanks.\n\nimdb_seq_dm = SimpleDataModule(imdb_seq_train,\n                               imdb_seq_test,\n                               validation=2000,\n                               batch_size=300,\n                               num_workers=min(6, max_num_workers)\n                               )\n\nThe first layer of the RNN is an embedding layer of size 32, which will be learned during training. This layer one-hot encodes each document as a matrix of dimension 500 \\times 10,003, and then maps these 10,003 dimensions down to 32. {The extra 3 dimensions correspond to commonly occurring non-word entries in the reviews.} Since each word is represented by an integer, this is effectively achieved by the creation of an embedding matrix of size 10,003\\times 32; each of the 500 integers in the document are then mapped to the appropriate 32 real numbers by indexing the appropriate rows of this matrix.\nThe second layer is an LSTM with 32 units, and the output layer is a single logit for the binary classification task. In the last line of the forward() method below, we take the last 32-dimensional output of the LSTM and map it to our response.\n\nclass LSTMModel(nn.Module):\n    def __init__(self, input_size):\n        super(LSTMModel, self).__init__()\n        self.embedding = nn.Embedding(input_size, 32)\n        self.lstm = nn.LSTM(input_size=32,\n                            hidden_size=32,\n                            batch_first=True)\n        self.dense = nn.Linear(32, 1)\n    def forward(self, x):\n        val, (h_n, c_n) = self.lstm(self.embedding(x))\n        return torch.flatten(self.dense(val[:,-1]))\n\nWe instantiate and take a look at the summary of the model, using the first 10 documents in the corpus.\n\nlstm_model = LSTMModel(X_test.shape[-1])\nsummary(lstm_model,\n        input_data=imdb_seq_train.tensors[0][:10],\n        col_names=['input_size',\n                   'output_size',\n                   'num_params'])\n\n===================================================================================================================\nLayer (type:depth-idx)                   Input Shape               Output Shape              Param #\n===================================================================================================================\nLSTMModel                                [10, 500]                 [10]                      --\n├─Embedding: 1-1                         [10, 500]                 [10, 500, 32]             320,096\n├─LSTM: 1-2                              [10, 500, 32]             [10, 500, 32]             8,448\n├─Linear: 1-3                            [10, 32]                  [10, 1]                   33\n===================================================================================================================\nTotal params: 328,577\nTrainable params: 328,577\nNon-trainable params: 0\nTotal mult-adds (M): 45.44\n===================================================================================================================\nInput size (MB): 50.00\nForward/backward pass size (MB): 2.56\nParams size (MB): 1.31\nEstimated Total Size (MB): 53.87\n===================================================================================================================\n\n\nThe 10,003 is suppressed in the summary, but we see it in the parameter count, since 10,003\\times 32=320,096.\n\nlstm_module = SimpleModule.binary_classification(lstm_model)\nlstm_logger = CSVLogger('logs', name='IMDB_LSTM')\n\n\nlstm_trainer = Trainer(deterministic=False,#True\n                       max_epochs=20,\n                       logger=lstm_logger,\n                       enable_progress_bar=False,\n                       callbacks=[ErrorTracker()])\nlstm_trainer.fit(lstm_module,\n                 datamodule=imdb_seq_dm)\n\nGPU available: True (cuda), used: True\nTPU available: False, using: 0 TPU cores\nIPU available: False, using: 0 IPUs\nHPU available: False, using: 0 HPUs\nLOCAL_RANK: 0 - CUDA_VISIBLE_DEVICES: [0]\n\n  | Name  | Type              | Params\n--------------------------------------------\n0 | model | LSTMModel         | 328 K \n1 | loss  | BCEWithLogitsLoss | 0     \n--------------------------------------------\n328 K     Trainable params\n0         Non-trainable params\n328 K     Total params\n1.314     Total estimated model params size (MB)\n`Trainer.fit` stopped: `max_epochs=20` reached.\n\n\nThe rest is now similar to other networks we have fit. We track the test performance as the network is fit, and see that it attains 85% accuracy.\n\nlstm_trainer.test(lstm_module, datamodule=imdb_seq_dm)\n\nLOCAL_RANK: 0 - CUDA_VISIBLE_DEVICES: [0]\n\n\n────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────\n       Test metric             DataLoader 0\n────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────\n      test_accuracy         0.8395199775695801\n        test_loss           0.8458924889564514\n────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────\n\n\n[{'test_loss': 0.8458924889564514, 'test_accuracy': 0.8395199775695801}]\n\n\nWe once again show the learning progress, followed by cleanup.\n\nlstm_results = pd.read_csv(lstm_logger.experiment.metrics_file_path)\nfig, ax = subplots(1, 1, figsize=(6, 6))\nsummary_plot(lstm_results,\n             ax,\n             col='accuracy',\n             ylabel='Accuracy')\nax.set_xticks(np.linspace(0, 20, 5).astype(int))\nax.set_ylabel('Accuracy')\nax.set_ylim([0.5, 1])\n\nText(0, 0.5, 'Accuracy')\n\n\n\n\n\n\n\n\n\n\ndel(lstm_model,\n    lstm_trainer,\n    lstm_logger,\n    imdb_seq_dm,\n    imdb_seq_train,\n    imdb_seq_test)\n\n\n\n\nWe now show how to fit the models in Section~ for time series prediction. We first load and standardize the data.\n\nNYSE = load_data('NYSE')\ncols = ['DJ_return', 'log_volume', 'log_volatility']\nX = pd.DataFrame(StandardScaler(\n                     with_mean=True,\n                     with_std=True).fit_transform(NYSE[cols]),\n                 columns=NYSE[cols].columns,\n                 index=NYSE.index)\n\nNext we set up the lagged versions of the data, dropping any rows with missing values using the dropna() method.\n\nfor lag in range(1, 6):\n    for col in cols:\n        newcol = np.zeros(X.shape[0]) * np.nan\n        newcol[lag:] = X[col].values[:-lag]\n        X.insert(len(X.columns), \"{0}_{1}\".format(col, lag), newcol)\nX.insert(len(X.columns), 'train', NYSE['train'])\nX = X.dropna()\n\nFinally, we extract the response, training indicator, and drop the current day’s DJ_return and log_volatility to predict only from previous day’s data.\n\nY, train = X['log_volume'], X['train']\nX = X.drop(columns=['train'] + cols)\nX.columns\n\nIndex(['DJ_return_1', 'log_volume_1', 'log_volatility_1', 'DJ_return_2',\n       'log_volume_2', 'log_volatility_2', 'DJ_return_3', 'log_volume_3',\n       'log_volatility_3', 'DJ_return_4', 'log_volume_4', 'log_volatility_4',\n       'DJ_return_5', 'log_volume_5', 'log_volatility_5'],\n      dtype='object')\n\n\nWe first fit a simple linear model and compute the R^2 on the test data using the score() method.\n\nM = LinearRegression()\nM.fit(X[train], Y[train])\nM.score(X[~train], Y[~train])\n\nLinearRegression()In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.  LinearRegression?Documentation for LinearRegressioniFittedLinearRegression() \n\n\n0.4128912938562521\n\n\nWe refit this model, including the factor variable day_of_week. For a categorical series in pandas, we can form the indicators using the get_dummies() method.\n\nX_day = pd.concat([X, \n                  pd.get_dummies(NYSE['day_of_week'])],\n                  axis=1).dropna()\n\nNote that we do not have to reinstantiate the linear regression model as its fit() method accepts a design matrix and a response directly.\n\nM.fit(X_day[train], Y[train])\nM.score(X_day[~train], Y[~train])\n\nLinearRegression()In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.  LinearRegression?Documentation for LinearRegressioniFittedLinearRegression() \n\n\n0.4595563133053274\n\n\nThis model achieves an R^2 of about 46%.\nTo fit the RNN, we must reshape the data, as it will expect 5 lagged versions of each feature as indicated by the input_shape argument to the layer nn.RNN() below. We first ensure the columns of our data frame are such that a reshaped matrix will have the variables correctly lagged. We use the reindex() method to do this.\nFor an input shape (5,3), each row represents a lagged version of the three variables. The nn.RNN() layer also expects the first row of each observation to be earliest in time, so we must reverse the current order. Hence we loop over range(5,0,-1) below, which is an example of using a slice() to index iterable objects. The general notation is start:end:step.\n\nordered_cols = []\nfor lag in range(5,0,-1):\n    for col in cols:\n        ordered_cols.append('{0}_{1}'.format(col, lag))\nX = X.reindex(columns=ordered_cols)\nX.columns\n\nIndex(['DJ_return_5', 'log_volume_5', 'log_volatility_5', 'DJ_return_4',\n       'log_volume_4', 'log_volatility_4', 'DJ_return_3', 'log_volume_3',\n       'log_volatility_3', 'DJ_return_2', 'log_volume_2', 'log_volatility_2',\n       'DJ_return_1', 'log_volume_1', 'log_volatility_1'],\n      dtype='object')\n\n\nWe now reshape the data.\n\nX_rnn = X.to_numpy().reshape((-1,5,3))\nX_rnn.shape\n\n(6046, 5, 3)\n\n\nBy specifying the first size as -1, numpy.reshape() deduces its size based on the remaining arguments.\nNow we are ready to proceed with the RNN, which uses 12 hidden units, and 10% dropout. After passing through the RNN, we extract the final time point as val[:,-1] in forward() below. This gets passed through a 10% dropout and then flattened through a linear layer.\n\nclass NYSEModel(nn.Module):\n    def __init__(self):\n        super(NYSEModel, self).__init__()\n        self.rnn = nn.RNN(3,\n                          12,\n                          batch_first=True)\n        self.dense = nn.Linear(12, 1)\n        self.dropout = nn.Dropout(0.1)\n    def forward(self, x):\n        val, h_n = self.rnn(x)\n        val = self.dense(self.dropout(val[:,-1]))\n        return torch.flatten(val)\nnyse_model = NYSEModel()\n\nWe fit the model in a similar fashion to previous networks. We supply the fit function with test data as validation data, so that when we monitor its progress and plot the history function we can see the progress on the test data. Of course we should not use this as a basis for early stopping, since then the test performance would be biased.\nWe form the training dataset similar to our Hitters example.\n\ndatasets = []\nfor mask in [train, ~train]:\n    X_rnn_t = torch.tensor(X_rnn[mask].astype(np.float32))\n    Y_t = torch.tensor(Y[mask].astype(np.float32))\n    datasets.append(TensorDataset(X_rnn_t, Y_t))\nnyse_train, nyse_test = datasets\n\n/tmp/ipykernel_29829/2100042546.py:4: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`\n  Y_t = torch.tensor(Y[mask].astype(np.float32))\n/tmp/ipykernel_29829/2100042546.py:4: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`\n  Y_t = torch.tensor(Y[mask].astype(np.float32))\n\n\nFollowing our usual pattern, we inspect the summary.\n\nsummary(nyse_model,\n        input_data=X_rnn_t,\n        col_names=['input_size',\n                   'output_size',\n                   'num_params'])\n\n===================================================================================================================\nLayer (type:depth-idx)                   Input Shape               Output Shape              Param #\n===================================================================================================================\nNYSEModel                                [1770, 5, 3]              [1770]                    --\n├─RNN: 1-1                               [1770, 5, 3]              [1770, 5, 12]             204\n├─Dropout: 1-2                           [1770, 12]                [1770, 12]                --\n├─Linear: 1-3                            [1770, 12]                [1770, 1]                 13\n===================================================================================================================\nTotal params: 217\nTrainable params: 217\nNon-trainable params: 0\nTotal mult-adds (M): 1.83\n===================================================================================================================\nInput size (MB): 0.11\nForward/backward pass size (MB): 0.86\nParams size (MB): 0.00\nEstimated Total Size (MB): 0.97\n===================================================================================================================\n\n\nWe again put the two datasets into a data module, with a batch size of 64.\n\nnyse_dm = SimpleDataModule(nyse_train,\n                           nyse_test,\n                           num_workers=min(4, max_num_workers),\n                           validation=nyse_test,\n                           batch_size=64)\n\nWe run some data through our model to be sure the sizes match up correctly.\n\nfor idx, (x, y) in enumerate(nyse_dm.train_dataloader()):\n    out = nyse_model(x)\n    print(y.size(), out.size())\n    if idx &gt;= 2:\n        break\n\ntorch.Size([64]) torch.Size([64])\ntorch.Size([64]) torch.Size([64])\ntorch.Size([64]) torch.Size([64])\n\n\nWe follow our previous example for setting up a trainer for a regression problem, requesting the R^2 metric to be be computed at each epoch.\n\nnyse_optimizer = RMSprop(nyse_model.parameters(),\n                         lr=0.001)\nnyse_module = SimpleModule.regression(nyse_model,\n                                      optimizer=nyse_optimizer,\n                                      metrics={'r2':R2Score()})\n\nFitting the model should by now be familiar. The results on the test data are very similar to the linear AR model.\n\nnyse_trainer = Trainer(deterministic=False,#True,\n                       max_epochs=200,\n                       enable_progress_bar=False,\n                       callbacks=[ErrorTracker()])\nnyse_trainer.fit(nyse_module,\n                 datamodule=nyse_dm)\nnyse_trainer.test(nyse_module,\n                  datamodule=nyse_dm)\n\nGPU available: True (cuda), used: True\nTPU available: False, using: 0 TPU cores\nIPU available: False, using: 0 IPUs\nHPU available: False, using: 0 HPUs\nLOCAL_RANK: 0 - CUDA_VISIBLE_DEVICES: [0]\n\n  | Name  | Type      | Params\n------------------------------------\n0 | model | NYSEModel | 217   \n1 | loss  | MSELoss   | 0     \n------------------------------------\n217       Trainable params\n0         Non-trainable params\n217       Total params\n0.001     Total estimated model params size (MB)\n`Trainer.fit` stopped: `max_epochs=200` reached.\nLOCAL_RANK: 0 - CUDA_VISIBLE_DEVICES: [0]\n\n\n────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────\n       Test metric             DataLoader 0\n────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────\n        test_loss           0.6162289977073669\n         test_r2            0.4151685833930969\n────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────\n\n\n[{'test_loss': 0.6162289977073669, 'test_r2': 0.4151685833930969}]\n\n\nWe could also fit a model without the nn.RNN() layer by just using a nn.Flatten() layer instead. This would be a nonlinear AR model. If in addition we excluded the hidden layer, this would be equivalent to our earlier linear AR model.\nInstead we will fit a nonlinear AR model using the feature set X_day that includes the day_of_week indicators. To do so, we must first create our test and training datasets and a corresponding data module. This may seem a little burdensome, but is part of the general pipeline for torch.\n\ndatasets = []\nfor mask in [train, ~train]:\n    X_day_t = torch.tensor(\n                   np.asarray(X_day[mask]).astype(np.float32))\n    Y_t = torch.tensor(np.asarray(Y[mask]).astype(np.float32))\n    datasets.append(TensorDataset(X_day_t, Y_t))\nday_train, day_test = datasets\n\nCreating a data module follows a familiar pattern.\n\nday_dm = SimpleDataModule(day_train,\n                          day_test,\n                          num_workers=min(4, max_num_workers),\n                          validation=day_test,\n                          batch_size=64)\n\nWe build a NonLinearARModel() that takes as input the 20 features and a hidden layer with 32 units. The remaining steps are familiar.\n\nclass NonLinearARModel(nn.Module):\n    def __init__(self):\n        super(NonLinearARModel, self).__init__()\n        self._forward = nn.Sequential(nn.Flatten(),\n                                      nn.Linear(20, 32),\n                                      nn.ReLU(),\n                                      nn.Dropout(0.5),\n                                      nn.Linear(32, 1))\n    def forward(self, x):\n        return torch.flatten(self._forward(x))\n\n\nnl_model = NonLinearARModel()\nnl_optimizer = RMSprop(nl_model.parameters(),\n                           lr=0.001)\nnl_module = SimpleModule.regression(nl_model,\n                                        optimizer=nl_optimizer,\n                                        metrics={'r2':R2Score()})\n\nWe continue with the usual training steps, fit the model, and evaluate the test error. We see the test R^2 is a slight improvement over the linear AR model that also includes day_of_week.\n\nnl_trainer = Trainer(deterministic=False,#True,\n                     max_epochs=20,\n                     enable_progress_bar=False,\n                     callbacks=[ErrorTracker()])\nnl_trainer.fit(nl_module, datamodule=day_dm)\nnl_trainer.test(nl_module, datamodule=day_dm) \n\nGPU available: True (cuda), used: True\nTPU available: False, using: 0 TPU cores\nIPU available: False, using: 0 IPUs\nHPU available: False, using: 0 HPUs\nLOCAL_RANK: 0 - CUDA_VISIBLE_DEVICES: [0]\n\n  | Name  | Type             | Params\n-------------------------------------------\n0 | model | NonLinearARModel | 705   \n1 | loss  | MSELoss          | 0     \n-------------------------------------------\n705       Trainable params\n0         Non-trainable params\n705       Total params\n0.003     Total estimated model params size (MB)\n`Trainer.fit` stopped: `max_epochs=20` reached.\nLOCAL_RANK: 0 - CUDA_VISIBLE_DEVICES: [0]\n\n\n────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────\n       Test metric             DataLoader 0\n────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────\n        test_loss           0.5651618838310242\n         test_r2            0.46363383531570435\n────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────\n\n\n[{'test_loss': 0.5651618838310242, 'test_r2': 0.46363383531570435}]"
  },
  {
    "objectID": "posts/ch03-linear-regression/Ch03-linreg-lab.html",
    "href": "posts/ch03-linear-regression/Ch03-linreg-lab.html",
    "title": "Chapter 3: Linear Regression - Lab",
    "section": "",
    "text": "We import our standard libraries at this top level.\n\nimport numpy as np\nimport pandas as pd\nfrom matplotlib.pyplot import subplots\n\n\n\nThroughout this lab we will introduce new functions and libraries. However, we will import them here to emphasize these are the new code objects in this lab. Keeping imports near the top of a notebook makes the code more readable, since scanning the first few lines tells us what libraries are used.\n\nimport statsmodels.api as sm\n\nWe will provide relevant details about the functions below as they are needed.\nBesides importing whole modules, it is also possible to import only a few items from a given module. This will help keep the namespace clean. We will use a few specific objects from the statsmodels package which we import here.\n\nfrom statsmodels.stats.outliers_influence \\\n     import variance_inflation_factor as VIF\nfrom statsmodels.stats.anova import anova_lm\n\nAs one of the import statements above is quite a long line, we inserted a line break \\ to ease readability.\nWe will also use some functions written for the labs in this book in the ISLP package.\n\nfrom ISLP import load_data\nfrom ISLP.models import (ModelSpec as MS,\n                         summarize,\n                         poly)\n\n\n\n\nThe function dir() provides a list of objects in a namespace.\n\ndir()\n\n['In',\n 'MS',\n 'Out',\n 'VIF',\n '__builtin__',\n '__builtins__',\n '__name__',\n '__spec__',\n '_dh',\n '_i',\n '_i1',\n '_i2',\n '_i3',\n '_i4',\n '_i5',\n '_ih',\n '_ii',\n '_iii',\n '_oh',\n 'anova_lm',\n 'exit',\n 'get_ipython',\n 'load_data',\n 'np',\n 'ojs_define',\n 'open',\n 'pd',\n 'poly',\n 'quit',\n 'sm',\n 'subplots',\n 'summarize']\n\n\nThis shows you everything that Python can find at the top level. There are certain objects like __builtins__ that contain references to built-in functions like print().\nEvery python object has its own notion of namespace, also accessible with dir(). This will include both the attributes of the object as well as any methods associated with it. For instance, we see 'sum' in the listing for an array.\n\nA = np.array([3,5,11])\ndir(A)\n\n['T',\n '__abs__',\n '__add__',\n '__and__',\n '__array__',\n '__array_finalize__',\n '__array_function__',\n '__array_interface__',\n '__array_prepare__',\n '__array_priority__',\n '__array_struct__',\n '__array_ufunc__',\n '__array_wrap__',\n '__bool__',\n '__class__',\n '__class_getitem__',\n '__complex__',\n '__contains__',\n '__copy__',\n '__deepcopy__',\n '__delattr__',\n '__delitem__',\n '__dir__',\n '__divmod__',\n '__dlpack__',\n '__dlpack_device__',\n '__doc__',\n '__eq__',\n '__float__',\n '__floordiv__',\n '__format__',\n '__ge__',\n '__getattribute__',\n '__getitem__',\n '__gt__',\n '__hash__',\n '__iadd__',\n '__iand__',\n '__ifloordiv__',\n '__ilshift__',\n '__imatmul__',\n '__imod__',\n '__imul__',\n '__index__',\n '__init__',\n '__init_subclass__',\n '__int__',\n '__invert__',\n '__ior__',\n '__ipow__',\n '__irshift__',\n '__isub__',\n '__iter__',\n '__itruediv__',\n '__ixor__',\n '__le__',\n '__len__',\n '__lshift__',\n '__lt__',\n '__matmul__',\n '__mod__',\n '__mul__',\n '__ne__',\n '__neg__',\n '__new__',\n '__or__',\n '__pos__',\n '__pow__',\n '__radd__',\n '__rand__',\n '__rdivmod__',\n '__reduce__',\n '__reduce_ex__',\n '__repr__',\n '__rfloordiv__',\n '__rlshift__',\n '__rmatmul__',\n '__rmod__',\n '__rmul__',\n '__ror__',\n '__rpow__',\n '__rrshift__',\n '__rshift__',\n '__rsub__',\n '__rtruediv__',\n '__rxor__',\n '__setattr__',\n '__setitem__',\n '__setstate__',\n '__sizeof__',\n '__str__',\n '__sub__',\n '__subclasshook__',\n '__truediv__',\n '__xor__',\n 'all',\n 'any',\n 'argmax',\n 'argmin',\n 'argpartition',\n 'argsort',\n 'astype',\n 'base',\n 'byteswap',\n 'choose',\n 'clip',\n 'compress',\n 'conj',\n 'conjugate',\n 'copy',\n 'ctypes',\n 'cumprod',\n 'cumsum',\n 'data',\n 'diagonal',\n 'dot',\n 'dtype',\n 'dump',\n 'dumps',\n 'fill',\n 'flags',\n 'flat',\n 'flatten',\n 'getfield',\n 'imag',\n 'item',\n 'itemset',\n 'itemsize',\n 'max',\n 'mean',\n 'min',\n 'nbytes',\n 'ndim',\n 'newbyteorder',\n 'nonzero',\n 'partition',\n 'prod',\n 'ptp',\n 'put',\n 'ravel',\n 'real',\n 'repeat',\n 'reshape',\n 'resize',\n 'round',\n 'searchsorted',\n 'setfield',\n 'setflags',\n 'shape',\n 'size',\n 'sort',\n 'squeeze',\n 'std',\n 'strides',\n 'sum',\n 'swapaxes',\n 'take',\n 'tobytes',\n 'tofile',\n 'tolist',\n 'tostring',\n 'trace',\n 'transpose',\n 'var',\n 'view']\n\n\nThis indicates that the object A.sum exists. In this case it is a method that can be used to compute the sum of the array A as can be seen by typing A.sum?.\n\nA.sum()\n\n19\n\n\n\n\n\n\nIn this section we will construct model matrices (also called design matrices) using the ModelSpec() transform from ISLP.models.\nWe will use the Boston housing data set, which is contained in the ISLP package. The Boston dataset records medv (median house value) for 506 neighborhoods around Boston. We will build a regression model to predict medv using 13 predictors such as rmvar (average number of rooms per house), age (proportion of owner-occupied units built prior to 1940), and lstat (percent of households with low socioeconomic status). We will use statsmodels for this task, a Python package that implements several commonly used regression methods.\nWe have included a simple loading function load_data() in the ISLP package:\n\nBoston = load_data(\"Boston\")\nBoston.columns\n\nIndex(['crim', 'zn', 'indus', 'chas', 'nox', 'rm', 'age', 'dis', 'rad', 'tax',\n       'ptratio', 'lstat', 'medv'],\n      dtype='object')\n\n\nType Boston? to find out more about these data.\nWe start by using the sm.OLS() function to fit a simple linear regression model. Our response will be medv and lstat will be the single predictor. For this model, we can create the model matrix by hand.\n\nX = pd.DataFrame({'intercept': np.ones(Boston.shape[0]),\n                  'lstat': Boston['lstat']})\nX[:4]\n\n\n\n\n\n\n\n\nintercept\nlstat\n\n\n\n\n0\n1.0\n4.98\n\n\n1\n1.0\n9.14\n\n\n2\n1.0\n4.03\n\n\n3\n1.0\n2.94\n\n\n\n\n\n\n\nWe extract the response, and fit the model.\n\ny = Boston['medv']\nmodel = sm.OLS(y, X)\nresults = model.fit()\n\nNote that sm.OLS() does not fit the model; it specifies the model, and then model.fit() does the actual fitting.\nOur ISLP function summarize() produces a simple table of the parameter estimates, their standard errors, t-statistics and p-values. The function takes a single argument, such as the object results returned here by the fit method, and returns such a summary.\n\nsummarize(results)\n\n\n\n\n\n\n\n\ncoef\nstd err\nt\nP&gt;|t|\n\n\n\n\nintercept\n34.5538\n0.563\n61.415\n0.0\n\n\nlstat\n-0.9500\n0.039\n-24.528\n0.0\n\n\n\n\n\n\n\nBefore we describe other methods for working with fitted models, we outline a more useful and general framework for constructing a model matrix~X. ### Using Transformations: Fit and Transform Our model above has a single predictor, and constructing X was straightforward. In practice we often fit models with more than one predictor, typically selected from an array or data frame. We may wish to introduce transformations to the variables before fitting the model, specify interactions between variables, and expand some particular variables into sets of variables (e.g. polynomials). The sklearn package has a particular notion for this type of task: a transform. A transform is an object that is created with some parameters as arguments. The object has two main methods: fit() and transform().\nWe provide a general approach for specifying models and constructing the model matrix through the transform ModelSpec() in the ISLP library. ModelSpec() (renamed MS() in the preamble) creates a transform object, and then a pair of methods transform() and fit() are used to construct a corresponding model matrix.\nWe first describe this process for our simple regression model using a single predictor lstat in the Boston data frame, but will use it repeatedly in more complex tasks in this and other labs in this book. In our case the transform is created by the expression design = MS(['lstat']).\nThe fit() method takes the original array and may do some initial computations on it, as specified in the transform object. For example, it may compute means and standard deviations for centering and scaling. The transform() method applies the fitted transformation to the array of data, and produces the model matrix.\n\ndesign = MS(['lstat'])\ndesign = design.fit(Boston)\nX = design.transform(Boston)\nX[:4]\n\n\n\n\n\n\n\n\nintercept\nlstat\n\n\n\n\n0\n1.0\n4.98\n\n\n1\n1.0\n9.14\n\n\n2\n1.0\n4.03\n\n\n3\n1.0\n2.94\n\n\n\n\n\n\n\nIn this simple case, the fit() method does very little; it simply checks that the variable 'lstat' specified in design exists in Boston. Then transform() constructs the model matrix with two columns: an intercept and the variable lstat.\nThese two operations can be combined with the fit_transform() method.\n\ndesign = MS(['lstat'])\nX = design.fit_transform(Boston)\nX[:4]\n\n\n\n\n\n\n\n\nintercept\nlstat\n\n\n\n\n0\n1.0\n4.98\n\n\n1\n1.0\n9.14\n\n\n2\n1.0\n4.03\n\n\n3\n1.0\n2.94\n\n\n\n\n\n\n\nNote that, as in the previous code chunk when the two steps were done separately, the design object is changed as a result of the fit() operation. The power of this pipeline will become clearer when we fit more complex models that involve interactions and transformations.\nLet’s return to our fitted regression model. The object results has several methods that can be used for inference. We already presented a function summarize() for showing the essentials of the fit. For a full and somewhat exhaustive summary of the fit, we can use the summary() method.\n\nresults.summary()\n\n\nOLS Regression Results\n\n\nDep. Variable:\nmedv\nR-squared:\n0.544\n\n\nModel:\nOLS\nAdj. R-squared:\n0.543\n\n\nMethod:\nLeast Squares\nF-statistic:\n601.6\n\n\nDate:\nMon, 20 Jan 2025\nProb (F-statistic):\n5.08e-88\n\n\nTime:\n02:40:58\nLog-Likelihood:\n-1641.5\n\n\nNo. Observations:\n506\nAIC:\n3287.\n\n\nDf Residuals:\n504\nBIC:\n3295.\n\n\nDf Model:\n1\n\n\n\n\nCovariance Type:\nnonrobust\n\n\n\n\n\n\n\n\n\n\n\ncoef\nstd err\nt\nP&gt;|t|\n[0.025\n0.975]\n\n\nintercept\n34.5538\n0.563\n61.415\n0.000\n33.448\n35.659\n\n\nlstat\n-0.9500\n0.039\n-24.528\n0.000\n-1.026\n-0.874\n\n\n\n\n\n\n\n\nOmnibus:\n137.043\nDurbin-Watson:\n0.892\n\n\nProb(Omnibus):\n0.000\nJarque-Bera (JB):\n291.373\n\n\nSkew:\n1.453\nProb(JB):\n5.36e-64\n\n\nKurtosis:\n5.319\nCond. No.\n29.7\n\n\n\nNotes:[1] Standard Errors assume that the covariance matrix of the errors is correctly specified.\n\n\nThe fitted coefficients can also be retrieved as the params attribute of results.\n\nresults.params\n\nintercept    34.553841\nlstat        -0.950049\ndtype: float64\n\n\nThe get_prediction() method can be used to obtain predictions, and produce confidence intervals and prediction intervals for the prediction of medv for given values of lstat.\nWe first create a new data frame, in this case containing only the variable lstat, with the values for this variable at which we wish to make predictions. We then use the transform() method of design to create the corresponding model matrix.\n\nnew_df = pd.DataFrame({'lstat':[5, 10, 15]})\nnewX = design.transform(new_df)\nnewX\n\n\n\n\n\n\n\n\nintercept\nlstat\n\n\n\n\n0\n1.0\n5\n\n\n1\n1.0\n10\n\n\n2\n1.0\n15\n\n\n\n\n\n\n\nNext we compute the predictions at newX, and view them by extracting the predicted_mean attribute.\n\nnew_predictions = results.get_prediction(newX);\nnew_predictions.predicted_mean\n\narray([29.80359411, 25.05334734, 20.30310057])\n\n\nWe can produce confidence intervals for the predicted values.\n\nnew_predictions.conf_int(alpha=0.05)\n\narray([[29.00741194, 30.59977628],\n       [24.47413202, 25.63256267],\n       [19.73158815, 20.87461299]])\n\n\nPrediction intervals are computing by setting obs=True:\n\nnew_predictions.conf_int(obs=True, alpha=0.05)\n\narray([[17.56567478, 42.04151344],\n       [12.82762635, 37.27906833],\n       [ 8.0777421 , 32.52845905]])\n\n\nFor instance, the 95% confidence interval associated with an lstat value of 10 is (24.47, 25.63), and the 95% prediction interval is (12.82, 37.28). As expected, the confidence and prediction intervals are centered around the same point (a predicted value of 25.05 for medv when lstat equals 10), but the latter are substantially wider.\nNext we will plot medv and lstat using DataFrame.plot.scatter(), and wish to add the regression line to the resulting plot.\n\n\nWhile there is a function within the ISLP package that adds a line to an existing plot, we take this opportunity to define our first function to do so.\n\ndef abline(ax, b, m):\n    \"Add a line with slope m and intercept b to ax\"\n    xlim = ax.get_xlim()\n    ylim = [m * xlim[0] + b, m * xlim[1] + b]\n    ax.plot(xlim, ylim)\n\nA few things are illustrated above. First we see the syntax for defining a function: def funcname(...). The function has arguments ax, b, m where ax is an axis object for an exisiting plot, b is the intercept and m is the slope of the desired line. Other plotting options can be passed on to ax.plot by including additional optional arguments as follows:\n\ndef abline(ax, b, m, *args, **kwargs):\n    \"Add a line with slope m and intercept b to ax\"\n    xlim = ax.get_xlim()\n    ylim = [m * xlim[0] + b, m * xlim[1] + b]\n    ax.plot(xlim, ylim, *args, **kwargs)\n\nThe addition of *args allows any number of non-named arguments to abline, while *kwargs allows any number of named arguments (such as linewidth=3) to abline. In our function, we pass these arguments verbatim to ax.plot above. Readers interested in learning more about functions are referred to the section on defining functions in docs.python.org/tutorial.\nLet’s use our new function to add this regression line to a plot of medv vs. lstat.\n\nax = Boston.plot.scatter('lstat', 'medv')\nabline(ax,\n       results.params[0],\n       results.params[1],\n       'r--',\n       linewidth=3)\n\n/tmp/ipykernel_116819/1198889689.py:3: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`\n  results.params[0],\n/tmp/ipykernel_116819/1198889689.py:4: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`\n  results.params[1],\n\n\n\n\n\n\n\n\n\nThus, the final call to ax.plot() is ax.plot(xlim, ylim, 'r--', linewidth=3). We have used the argument 'r--' to produce a red dashed line, and added an argument to make it of width 3. There is some evidence for non-linearity in the relationship between lstat and medv. We will explore this issue later in this lab.\nAs mentioned above, there is an existing function to add a line to a plot — ax.axline() — but knowing how to write such functions empowers us to create more expressive displays.\nNext we examine some diagnostic plots, several of which were discussed in Section~. We can find the fitted values and residuals of the fit as attributes of the results object. Various influence measures describing the regression model are computed with the get_influence() method. As we will not use the fig component returned as the first value from subplots(), we simply capture the second returned value in ax below.\n\nax = subplots(figsize=(8,8))[1]\nax.scatter(results.fittedvalues, results.resid)\nax.set_xlabel('Fitted value')\nax.set_ylabel('Residual')\nax.axhline(0, c='k', ls='--');\n\n\n\n\n\n\n\n\nWe add a horizontal line at 0 for reference using the ax.axhline() method, indicating it should be black (c='k') and have a dashed linestyle (ls='--').\nOn the basis of the residual plot, there is some evidence of non-linearity. Leverage statistics can be computed for any number of predictors using the hat_matrix_diag attribute of the value returned by the get_influence() method.\n\ninfl = results.get_influence()\nax = subplots(figsize=(8,8))[1]\nax.scatter(np.arange(X.shape[0]), infl.hat_matrix_diag)\nax.set_xlabel('Index')\nax.set_ylabel('Leverage')\nnp.argmax(infl.hat_matrix_diag)\n\n374\n\n\n\n\n\n\n\n\n\nThe np.argmax() function identifies the index of the largest element of an array, optionally computed over an axis of the array. In this case, we maximized over the entire array to determine which observation has the largest leverage statistic.\n\n\n\n\nIn order to fit a multiple linear regression model using least squares, we again use the ModelSpec() transform to construct the required model matrix and response. The arguments to ModelSpec() can be quite general, but in this case a list of column names suffice. We consider a fit here with the two variables lstat and age.\n\nX = MS(['lstat', 'age']).fit_transform(Boston)\nmodel1 = sm.OLS(y, X)\nresults1 = model1.fit()\nsummarize(results1)\n\n\n\n\n\n\n\n\ncoef\nstd err\nt\nP&gt;|t|\n\n\n\n\nintercept\n33.2228\n0.731\n45.458\n0.000\n\n\nlstat\n-1.0321\n0.048\n-21.416\n0.000\n\n\nage\n0.0345\n0.012\n2.826\n0.005\n\n\n\n\n\n\n\nNotice how we have compacted the first line into a succinct expression describing the construction of X.\nThe Boston data set contains 12 variables, and so it would be cumbersome to have to type all of these in order to perform a regression using all of the predictors. Instead, we can use the following short-hand:\n\nterms = Boston.columns.drop('medv')\nterms\n\nIndex(['crim', 'zn', 'indus', 'chas', 'nox', 'rm', 'age', 'dis', 'rad', 'tax',\n       'ptratio', 'lstat'],\n      dtype='object')\n\n\nWe can now fit the model with all the variables in terms using the same model matrix builder.\n\nX = MS(terms).fit_transform(Boston)\nmodel = sm.OLS(y, X)\nresults = model.fit()\nsummarize(results)\n\n\n\n\n\n\n\n\ncoef\nstd err\nt\nP&gt;|t|\n\n\n\n\nintercept\n41.6173\n4.936\n8.431\n0.000\n\n\ncrim\n-0.1214\n0.033\n-3.678\n0.000\n\n\nzn\n0.0470\n0.014\n3.384\n0.001\n\n\nindus\n0.0135\n0.062\n0.217\n0.829\n\n\nchas\n2.8400\n0.870\n3.264\n0.001\n\n\nnox\n-18.7580\n3.851\n-4.870\n0.000\n\n\nrm\n3.6581\n0.420\n8.705\n0.000\n\n\nage\n0.0036\n0.013\n0.271\n0.787\n\n\ndis\n-1.4908\n0.202\n-7.394\n0.000\n\n\nrad\n0.2894\n0.067\n4.325\n0.000\n\n\ntax\n-0.0127\n0.004\n-3.337\n0.001\n\n\nptratio\n-0.9375\n0.132\n-7.091\n0.000\n\n\nlstat\n-0.5520\n0.051\n-10.897\n0.000\n\n\n\n\n\n\n\nWhat if we would like to perform a regression using all of the variables but one? For example, in the above regression output, age has a high p-value. So we may wish to run a regression excluding this predictor. The following syntax results in a regression using all predictors except age.\n\nminus_age = Boston.columns.drop(['medv', 'age']) \nXma = MS(minus_age).fit_transform(Boston)\nmodel1 = sm.OLS(y, Xma)\nsummarize(model1.fit())\n\n\n\n\n\n\n\n\ncoef\nstd err\nt\nP&gt;|t|\n\n\n\n\nintercept\n41.5251\n4.920\n8.441\n0.000\n\n\ncrim\n-0.1214\n0.033\n-3.683\n0.000\n\n\nzn\n0.0465\n0.014\n3.379\n0.001\n\n\nindus\n0.0135\n0.062\n0.217\n0.829\n\n\nchas\n2.8528\n0.868\n3.287\n0.001\n\n\nnox\n-18.4851\n3.714\n-4.978\n0.000\n\n\nrm\n3.6811\n0.411\n8.951\n0.000\n\n\ndis\n-1.5068\n0.193\n-7.825\n0.000\n\n\nrad\n0.2879\n0.067\n4.322\n0.000\n\n\ntax\n-0.0127\n0.004\n-3.333\n0.001\n\n\nptratio\n-0.9346\n0.132\n-7.099\n0.000\n\n\nlstat\n-0.5474\n0.048\n-11.483\n0.000\n\n\n\n\n\n\n\n\n\n\nWe can access the individual components of results by name (dir(results) shows us what is available). Hence results.rsquared gives us the R^2, and np.sqrt(results.scale) gives us the RSE.\nVariance inflation factors (section~) are sometimes useful to assess the effect of collinearity in the model matrix of a regression model. We will compute the VIFs in our multiple regression fit, and use the opportunity to introduce the idea of list comprehension.\n\n\nOften we encounter a sequence of objects which we would like to transform for some other task. Below, we compute the VIF for each feature in our X matrix and produce a data frame whose index agrees with the columns of X. The notion of list comprehension can often make such a task easier.\nList comprehensions are simple and powerful ways to form lists of Python objects. The language also supports dictionary and generator comprehension, though these are beyond our scope here. Let’s look at an example. We compute the VIF for each of the variables in the model matrix X, using the function variance_inflation_factor().\n\nvals = [VIF(X, i)\n        for i in range(1, X.shape[1])]\nvif = pd.DataFrame({'vif':vals},\n                   index=X.columns[1:])\nvif\n\n\n\n\n\n\n\n\nvif\n\n\n\n\ncrim\n1.767486\n\n\nzn\n2.298459\n\n\nindus\n3.987181\n\n\nchas\n1.071168\n\n\nnox\n4.369093\n\n\nrm\n1.912532\n\n\nage\n3.088232\n\n\ndis\n3.954037\n\n\nrad\n7.445301\n\n\ntax\n9.002158\n\n\nptratio\n1.797060\n\n\nlstat\n2.870777\n\n\n\n\n\n\n\nThe function VIF() takes two arguments: a dataframe or array, and a variable column index. In the code above we call VIF() on the fly for all columns in X.\nWe have excluded column 0 above (the intercept), which is not of interest. In this case the VIFs are not that exciting.\nThe object vals above could have been constructed with the following for loop:\n\nvals = []\nfor i in range(1, X.values.shape[1]):\n    vals.append(VIF(X.values, i))\n\nList comprehension allows us to perform such repetitive operations in a more straightforward way. ## Interaction Terms It is easy to include interaction terms in a linear model using ModelSpec(). Including a tuple (\"lstat\",\"age\") tells the model matrix builder to include an interaction term between lstat and age.\n\nX = MS(['lstat',\n        'age',\n        ('lstat', 'age')]).fit_transform(Boston)\nmodel2 = sm.OLS(y, X)\nsummarize(model2.fit())\n\n\n\n\n\n\n\n\ncoef\nstd err\nt\nP&gt;|t|\n\n\n\n\nintercept\n36.0885\n1.470\n24.553\n0.000\n\n\nlstat\n-1.3921\n0.167\n-8.313\n0.000\n\n\nage\n-0.0007\n0.020\n-0.036\n0.971\n\n\nlstat:age\n0.0042\n0.002\n2.244\n0.025\n\n\n\n\n\n\n\n\n\n\n\nThe model matrix builder can include terms beyond just column names and interactions. For instance, the poly() function supplied in ISLP specifies that columns representing polynomial functions of its first argument are added to the model matrix.\n\nX = MS([poly('lstat', degree=2), 'age']).fit_transform(Boston)\nmodel3 = sm.OLS(y, X)\nresults3 = model3.fit()\nsummarize(results3)\n\n\n\n\n\n\n\n\ncoef\nstd err\nt\nP&gt;|t|\n\n\n\n\nintercept\n17.7151\n0.781\n22.681\n0.0\n\n\npoly(lstat, degree=2)[0]\n-179.2279\n6.733\n-26.620\n0.0\n\n\npoly(lstat, degree=2)[1]\n72.9908\n5.482\n13.315\n0.0\n\n\nage\n0.0703\n0.011\n6.471\n0.0\n\n\n\n\n\n\n\nThe effectively zero p-value associated with the quadratic term (i.e. the third row above) suggests that it leads to an improved model.\nBy default, poly() creates a basis matrix for inclusion in the model matrix whose columns are orthogonal polynomials, which are designed for stable least squares computations. {Actually, poly() is a wrapper for the workhorse and standalone function Poly() that does the work in building the model matrix.} Alternatively, had we included an argument raw=True in the above call to poly(), the basis matrix would consist simply of lstat and lstat**2. Since either of these bases represent quadratic polynomials, the fitted values would not change in this case, just the polynomial coefficients. Also by default, the columns created by poly() do not include an intercept column as that is automatically added by MS().\nWe use the anova_lm() function to further quantify the extent to which the quadratic fit is superior to the linear fit.\n\nanova_lm(results1, results3)\n\n\n\n\n\n\n\n\ndf_resid\nssr\ndf_diff\nss_diff\nF\nPr(&gt;F)\n\n\n\n\n0\n503.0\n19168.128609\n0.0\nNaN\nNaN\nNaN\n\n\n1\n502.0\n14165.613251\n1.0\n5002.515357\n177.278785\n7.468491e-35\n\n\n\n\n\n\n\nHere results1 represents the linear submodel containing predictors lstat and age, while results3 corresponds to the larger model above with a quadratic term in lstat. The anova_lm() function performs a hypothesis test comparing the two models. The null hypothesis is that the quadratic term in the bigger model is not needed, and the alternative hypothesis is that the bigger model is superior. Here the F-statistic is 177.28 and the associated p-value is zero. In this case the F-statistic is the square of the t-statistic for the quadratic term in the linear model summary for results3 — a consequence of the fact that these nested models differ by one degree of freedom. This provides very clear evidence that the quadratic polynomial in lstat improves the linear model. This is not surprising, since earlier we saw evidence for non-linearity in the relationship between medv and lstat.\nThe function anova_lm() can take more than two nested models as input, in which case it compares every successive pair of models. That also explains why their are NaNs in the first row above, since there is no previous model with which to compare the first.\n\nax = subplots(figsize=(8,8))[1]\nax.scatter(results3.fittedvalues, results3.resid)\nax.set_xlabel('Fitted value')\nax.set_ylabel('Residual')\nax.axhline(0, c='k', ls='--');\n\n\n\n\n\n\n\n\nWe see that when the quadratic term is included in the model, there is little discernible pattern in the residuals. In order to create a cubic or higher-degree polynomial fit, we can simply change the degree argument to poly().\n\n\n\nHere we use the Carseats data, which is included in the ISLP package. We will attempt to predict Sales (child car seat sales) in 400 locations based on a number of predictors.\n\nCarseats = load_data('Carseats')\nCarseats.columns\n\nIndex(['Sales', 'CompPrice', 'Income', 'Advertising', 'Population', 'Price',\n       'ShelveLoc', 'Age', 'Education', 'Urban', 'US'],\n      dtype='object')\n\n\nThe Carseats\ndata includes qualitative predictors such as ShelveLoc, an indicator of the quality of the shelving location — that is, the space within a store in which the car seat is displayed. The predictor ShelveLoc takes on three possible values, Bad, Medium, and Good. Given a qualitative variable such as ShelveLoc, ModelSpec() generates dummy variables automatically. These variables are often referred to as a one-hot encoding of the categorical feature. Their columns sum to one, so to avoid collinearity with an intercept, the first column is dropped. Below we see the column ShelveLoc[Bad] has been dropped, since Bad is the first level of ShelveLoc. Below we fit a multiple regression model that includes some interaction terms.\n\nallvars = list(Carseats.columns.drop('Sales'))\ny = Carseats['Sales']\nfinal = allvars + [('Income', 'Advertising'),\n                   ('Price', 'Age')]\nX = MS(final).fit_transform(Carseats)\nmodel = sm.OLS(y, X)\nsummarize(model.fit())\n\n\n\n\n\n\n\n\ncoef\nstd err\nt\nP&gt;|t|\n\n\n\n\nintercept\n6.5756\n1.009\n6.519\n0.000\n\n\nCompPrice\n0.0929\n0.004\n22.567\n0.000\n\n\nIncome\n0.0109\n0.003\n4.183\n0.000\n\n\nAdvertising\n0.0702\n0.023\n3.107\n0.002\n\n\nPopulation\n0.0002\n0.000\n0.433\n0.665\n\n\nPrice\n-0.1008\n0.007\n-13.549\n0.000\n\n\nShelveLoc[Good]\n4.8487\n0.153\n31.724\n0.000\n\n\nShelveLoc[Medium]\n1.9533\n0.126\n15.531\n0.000\n\n\nAge\n-0.0579\n0.016\n-3.633\n0.000\n\n\nEducation\n-0.0209\n0.020\n-1.063\n0.288\n\n\nUrban[Yes]\n0.1402\n0.112\n1.247\n0.213\n\n\nUS[Yes]\n-0.1576\n0.149\n-1.058\n0.291\n\n\nIncome:Advertising\n0.0008\n0.000\n2.698\n0.007\n\n\nPrice:Age\n0.0001\n0.000\n0.801\n0.424\n\n\n\n\n\n\n\nIn the first line above, we made allvars a list, so that we could add the interaction terms two lines down. Our model-matrix builder has created a ShelveLoc[Good] dummy variable that takes on a value of 1 if the shelving location is good, and 0 otherwise. It has also created a ShelveLoc[Medium] dummy variable that equals 1 if the shelving location is medium, and 0 otherwise. A bad shelving location corresponds to a zero for each of the two dummy variables. The fact that the coefficient for ShelveLoc[Good] in the regression output is positive indicates that a good shelving location is associated with high sales (relative to a bad location). And ShelveLoc[Medium] has a smaller positive coefficient, indicating that a medium shelving location leads to higher sales than a bad shelving location, but lower sales than a good shelving location."
  },
  {
    "objectID": "posts/ch03-linear-regression/Ch03-linreg-lab.html#importing-packages",
    "href": "posts/ch03-linear-regression/Ch03-linreg-lab.html#importing-packages",
    "title": "Chapter 3: Linear Regression - Lab",
    "section": "",
    "text": "We import our standard libraries at this top level.\n\nimport numpy as np\nimport pandas as pd\nfrom matplotlib.pyplot import subplots\n\n\n\nThroughout this lab we will introduce new functions and libraries. However, we will import them here to emphasize these are the new code objects in this lab. Keeping imports near the top of a notebook makes the code more readable, since scanning the first few lines tells us what libraries are used.\n\nimport statsmodels.api as sm\n\nWe will provide relevant details about the functions below as they are needed.\nBesides importing whole modules, it is also possible to import only a few items from a given module. This will help keep the namespace clean. We will use a few specific objects from the statsmodels package which we import here.\n\nfrom statsmodels.stats.outliers_influence \\\n     import variance_inflation_factor as VIF\nfrom statsmodels.stats.anova import anova_lm\n\nAs one of the import statements above is quite a long line, we inserted a line break \\ to ease readability.\nWe will also use some functions written for the labs in this book in the ISLP package.\n\nfrom ISLP import load_data\nfrom ISLP.models import (ModelSpec as MS,\n                         summarize,\n                         poly)\n\n\n\n\nThe function dir() provides a list of objects in a namespace.\n\ndir()\n\n['In',\n 'MS',\n 'Out',\n 'VIF',\n '__builtin__',\n '__builtins__',\n '__name__',\n '__spec__',\n '_dh',\n '_i',\n '_i1',\n '_i2',\n '_i3',\n '_i4',\n '_i5',\n '_ih',\n '_ii',\n '_iii',\n '_oh',\n 'anova_lm',\n 'exit',\n 'get_ipython',\n 'load_data',\n 'np',\n 'ojs_define',\n 'open',\n 'pd',\n 'poly',\n 'quit',\n 'sm',\n 'subplots',\n 'summarize']\n\n\nThis shows you everything that Python can find at the top level. There are certain objects like __builtins__ that contain references to built-in functions like print().\nEvery python object has its own notion of namespace, also accessible with dir(). This will include both the attributes of the object as well as any methods associated with it. For instance, we see 'sum' in the listing for an array.\n\nA = np.array([3,5,11])\ndir(A)\n\n['T',\n '__abs__',\n '__add__',\n '__and__',\n '__array__',\n '__array_finalize__',\n '__array_function__',\n '__array_interface__',\n '__array_prepare__',\n '__array_priority__',\n '__array_struct__',\n '__array_ufunc__',\n '__array_wrap__',\n '__bool__',\n '__class__',\n '__class_getitem__',\n '__complex__',\n '__contains__',\n '__copy__',\n '__deepcopy__',\n '__delattr__',\n '__delitem__',\n '__dir__',\n '__divmod__',\n '__dlpack__',\n '__dlpack_device__',\n '__doc__',\n '__eq__',\n '__float__',\n '__floordiv__',\n '__format__',\n '__ge__',\n '__getattribute__',\n '__getitem__',\n '__gt__',\n '__hash__',\n '__iadd__',\n '__iand__',\n '__ifloordiv__',\n '__ilshift__',\n '__imatmul__',\n '__imod__',\n '__imul__',\n '__index__',\n '__init__',\n '__init_subclass__',\n '__int__',\n '__invert__',\n '__ior__',\n '__ipow__',\n '__irshift__',\n '__isub__',\n '__iter__',\n '__itruediv__',\n '__ixor__',\n '__le__',\n '__len__',\n '__lshift__',\n '__lt__',\n '__matmul__',\n '__mod__',\n '__mul__',\n '__ne__',\n '__neg__',\n '__new__',\n '__or__',\n '__pos__',\n '__pow__',\n '__radd__',\n '__rand__',\n '__rdivmod__',\n '__reduce__',\n '__reduce_ex__',\n '__repr__',\n '__rfloordiv__',\n '__rlshift__',\n '__rmatmul__',\n '__rmod__',\n '__rmul__',\n '__ror__',\n '__rpow__',\n '__rrshift__',\n '__rshift__',\n '__rsub__',\n '__rtruediv__',\n '__rxor__',\n '__setattr__',\n '__setitem__',\n '__setstate__',\n '__sizeof__',\n '__str__',\n '__sub__',\n '__subclasshook__',\n '__truediv__',\n '__xor__',\n 'all',\n 'any',\n 'argmax',\n 'argmin',\n 'argpartition',\n 'argsort',\n 'astype',\n 'base',\n 'byteswap',\n 'choose',\n 'clip',\n 'compress',\n 'conj',\n 'conjugate',\n 'copy',\n 'ctypes',\n 'cumprod',\n 'cumsum',\n 'data',\n 'diagonal',\n 'dot',\n 'dtype',\n 'dump',\n 'dumps',\n 'fill',\n 'flags',\n 'flat',\n 'flatten',\n 'getfield',\n 'imag',\n 'item',\n 'itemset',\n 'itemsize',\n 'max',\n 'mean',\n 'min',\n 'nbytes',\n 'ndim',\n 'newbyteorder',\n 'nonzero',\n 'partition',\n 'prod',\n 'ptp',\n 'put',\n 'ravel',\n 'real',\n 'repeat',\n 'reshape',\n 'resize',\n 'round',\n 'searchsorted',\n 'setfield',\n 'setflags',\n 'shape',\n 'size',\n 'sort',\n 'squeeze',\n 'std',\n 'strides',\n 'sum',\n 'swapaxes',\n 'take',\n 'tobytes',\n 'tofile',\n 'tolist',\n 'tostring',\n 'trace',\n 'transpose',\n 'var',\n 'view']\n\n\nThis indicates that the object A.sum exists. In this case it is a method that can be used to compute the sum of the array A as can be seen by typing A.sum?.\n\nA.sum()\n\n19"
  },
  {
    "objectID": "posts/ch03-linear-regression/Ch03-linreg-lab.html#simple-linear-regression",
    "href": "posts/ch03-linear-regression/Ch03-linreg-lab.html#simple-linear-regression",
    "title": "Chapter 3: Linear Regression - Lab",
    "section": "",
    "text": "In this section we will construct model matrices (also called design matrices) using the ModelSpec() transform from ISLP.models.\nWe will use the Boston housing data set, which is contained in the ISLP package. The Boston dataset records medv (median house value) for 506 neighborhoods around Boston. We will build a regression model to predict medv using 13 predictors such as rmvar (average number of rooms per house), age (proportion of owner-occupied units built prior to 1940), and lstat (percent of households with low socioeconomic status). We will use statsmodels for this task, a Python package that implements several commonly used regression methods.\nWe have included a simple loading function load_data() in the ISLP package:\n\nBoston = load_data(\"Boston\")\nBoston.columns\n\nIndex(['crim', 'zn', 'indus', 'chas', 'nox', 'rm', 'age', 'dis', 'rad', 'tax',\n       'ptratio', 'lstat', 'medv'],\n      dtype='object')\n\n\nType Boston? to find out more about these data.\nWe start by using the sm.OLS() function to fit a simple linear regression model. Our response will be medv and lstat will be the single predictor. For this model, we can create the model matrix by hand.\n\nX = pd.DataFrame({'intercept': np.ones(Boston.shape[0]),\n                  'lstat': Boston['lstat']})\nX[:4]\n\n\n\n\n\n\n\n\nintercept\nlstat\n\n\n\n\n0\n1.0\n4.98\n\n\n1\n1.0\n9.14\n\n\n2\n1.0\n4.03\n\n\n3\n1.0\n2.94\n\n\n\n\n\n\n\nWe extract the response, and fit the model.\n\ny = Boston['medv']\nmodel = sm.OLS(y, X)\nresults = model.fit()\n\nNote that sm.OLS() does not fit the model; it specifies the model, and then model.fit() does the actual fitting.\nOur ISLP function summarize() produces a simple table of the parameter estimates, their standard errors, t-statistics and p-values. The function takes a single argument, such as the object results returned here by the fit method, and returns such a summary.\n\nsummarize(results)\n\n\n\n\n\n\n\n\ncoef\nstd err\nt\nP&gt;|t|\n\n\n\n\nintercept\n34.5538\n0.563\n61.415\n0.0\n\n\nlstat\n-0.9500\n0.039\n-24.528\n0.0\n\n\n\n\n\n\n\nBefore we describe other methods for working with fitted models, we outline a more useful and general framework for constructing a model matrix~X. ### Using Transformations: Fit and Transform Our model above has a single predictor, and constructing X was straightforward. In practice we often fit models with more than one predictor, typically selected from an array or data frame. We may wish to introduce transformations to the variables before fitting the model, specify interactions between variables, and expand some particular variables into sets of variables (e.g. polynomials). The sklearn package has a particular notion for this type of task: a transform. A transform is an object that is created with some parameters as arguments. The object has two main methods: fit() and transform().\nWe provide a general approach for specifying models and constructing the model matrix through the transform ModelSpec() in the ISLP library. ModelSpec() (renamed MS() in the preamble) creates a transform object, and then a pair of methods transform() and fit() are used to construct a corresponding model matrix.\nWe first describe this process for our simple regression model using a single predictor lstat in the Boston data frame, but will use it repeatedly in more complex tasks in this and other labs in this book. In our case the transform is created by the expression design = MS(['lstat']).\nThe fit() method takes the original array and may do some initial computations on it, as specified in the transform object. For example, it may compute means and standard deviations for centering and scaling. The transform() method applies the fitted transformation to the array of data, and produces the model matrix.\n\ndesign = MS(['lstat'])\ndesign = design.fit(Boston)\nX = design.transform(Boston)\nX[:4]\n\n\n\n\n\n\n\n\nintercept\nlstat\n\n\n\n\n0\n1.0\n4.98\n\n\n1\n1.0\n9.14\n\n\n2\n1.0\n4.03\n\n\n3\n1.0\n2.94\n\n\n\n\n\n\n\nIn this simple case, the fit() method does very little; it simply checks that the variable 'lstat' specified in design exists in Boston. Then transform() constructs the model matrix with two columns: an intercept and the variable lstat.\nThese two operations can be combined with the fit_transform() method.\n\ndesign = MS(['lstat'])\nX = design.fit_transform(Boston)\nX[:4]\n\n\n\n\n\n\n\n\nintercept\nlstat\n\n\n\n\n0\n1.0\n4.98\n\n\n1\n1.0\n9.14\n\n\n2\n1.0\n4.03\n\n\n3\n1.0\n2.94\n\n\n\n\n\n\n\nNote that, as in the previous code chunk when the two steps were done separately, the design object is changed as a result of the fit() operation. The power of this pipeline will become clearer when we fit more complex models that involve interactions and transformations.\nLet’s return to our fitted regression model. The object results has several methods that can be used for inference. We already presented a function summarize() for showing the essentials of the fit. For a full and somewhat exhaustive summary of the fit, we can use the summary() method.\n\nresults.summary()\n\n\nOLS Regression Results\n\n\nDep. Variable:\nmedv\nR-squared:\n0.544\n\n\nModel:\nOLS\nAdj. R-squared:\n0.543\n\n\nMethod:\nLeast Squares\nF-statistic:\n601.6\n\n\nDate:\nMon, 20 Jan 2025\nProb (F-statistic):\n5.08e-88\n\n\nTime:\n02:40:58\nLog-Likelihood:\n-1641.5\n\n\nNo. Observations:\n506\nAIC:\n3287.\n\n\nDf Residuals:\n504\nBIC:\n3295.\n\n\nDf Model:\n1\n\n\n\n\nCovariance Type:\nnonrobust\n\n\n\n\n\n\n\n\n\n\n\ncoef\nstd err\nt\nP&gt;|t|\n[0.025\n0.975]\n\n\nintercept\n34.5538\n0.563\n61.415\n0.000\n33.448\n35.659\n\n\nlstat\n-0.9500\n0.039\n-24.528\n0.000\n-1.026\n-0.874\n\n\n\n\n\n\n\n\nOmnibus:\n137.043\nDurbin-Watson:\n0.892\n\n\nProb(Omnibus):\n0.000\nJarque-Bera (JB):\n291.373\n\n\nSkew:\n1.453\nProb(JB):\n5.36e-64\n\n\nKurtosis:\n5.319\nCond. No.\n29.7\n\n\n\nNotes:[1] Standard Errors assume that the covariance matrix of the errors is correctly specified.\n\n\nThe fitted coefficients can also be retrieved as the params attribute of results.\n\nresults.params\n\nintercept    34.553841\nlstat        -0.950049\ndtype: float64\n\n\nThe get_prediction() method can be used to obtain predictions, and produce confidence intervals and prediction intervals for the prediction of medv for given values of lstat.\nWe first create a new data frame, in this case containing only the variable lstat, with the values for this variable at which we wish to make predictions. We then use the transform() method of design to create the corresponding model matrix.\n\nnew_df = pd.DataFrame({'lstat':[5, 10, 15]})\nnewX = design.transform(new_df)\nnewX\n\n\n\n\n\n\n\n\nintercept\nlstat\n\n\n\n\n0\n1.0\n5\n\n\n1\n1.0\n10\n\n\n2\n1.0\n15\n\n\n\n\n\n\n\nNext we compute the predictions at newX, and view them by extracting the predicted_mean attribute.\n\nnew_predictions = results.get_prediction(newX);\nnew_predictions.predicted_mean\n\narray([29.80359411, 25.05334734, 20.30310057])\n\n\nWe can produce confidence intervals for the predicted values.\n\nnew_predictions.conf_int(alpha=0.05)\n\narray([[29.00741194, 30.59977628],\n       [24.47413202, 25.63256267],\n       [19.73158815, 20.87461299]])\n\n\nPrediction intervals are computing by setting obs=True:\n\nnew_predictions.conf_int(obs=True, alpha=0.05)\n\narray([[17.56567478, 42.04151344],\n       [12.82762635, 37.27906833],\n       [ 8.0777421 , 32.52845905]])\n\n\nFor instance, the 95% confidence interval associated with an lstat value of 10 is (24.47, 25.63), and the 95% prediction interval is (12.82, 37.28). As expected, the confidence and prediction intervals are centered around the same point (a predicted value of 25.05 for medv when lstat equals 10), but the latter are substantially wider.\nNext we will plot medv and lstat using DataFrame.plot.scatter(), and wish to add the regression line to the resulting plot.\n\n\nWhile there is a function within the ISLP package that adds a line to an existing plot, we take this opportunity to define our first function to do so.\n\ndef abline(ax, b, m):\n    \"Add a line with slope m and intercept b to ax\"\n    xlim = ax.get_xlim()\n    ylim = [m * xlim[0] + b, m * xlim[1] + b]\n    ax.plot(xlim, ylim)\n\nA few things are illustrated above. First we see the syntax for defining a function: def funcname(...). The function has arguments ax, b, m where ax is an axis object for an exisiting plot, b is the intercept and m is the slope of the desired line. Other plotting options can be passed on to ax.plot by including additional optional arguments as follows:\n\ndef abline(ax, b, m, *args, **kwargs):\n    \"Add a line with slope m and intercept b to ax\"\n    xlim = ax.get_xlim()\n    ylim = [m * xlim[0] + b, m * xlim[1] + b]\n    ax.plot(xlim, ylim, *args, **kwargs)\n\nThe addition of *args allows any number of non-named arguments to abline, while *kwargs allows any number of named arguments (such as linewidth=3) to abline. In our function, we pass these arguments verbatim to ax.plot above. Readers interested in learning more about functions are referred to the section on defining functions in docs.python.org/tutorial.\nLet’s use our new function to add this regression line to a plot of medv vs. lstat.\n\nax = Boston.plot.scatter('lstat', 'medv')\nabline(ax,\n       results.params[0],\n       results.params[1],\n       'r--',\n       linewidth=3)\n\n/tmp/ipykernel_116819/1198889689.py:3: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`\n  results.params[0],\n/tmp/ipykernel_116819/1198889689.py:4: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`\n  results.params[1],\n\n\n\n\n\n\n\n\n\nThus, the final call to ax.plot() is ax.plot(xlim, ylim, 'r--', linewidth=3). We have used the argument 'r--' to produce a red dashed line, and added an argument to make it of width 3. There is some evidence for non-linearity in the relationship between lstat and medv. We will explore this issue later in this lab.\nAs mentioned above, there is an existing function to add a line to a plot — ax.axline() — but knowing how to write such functions empowers us to create more expressive displays.\nNext we examine some diagnostic plots, several of which were discussed in Section~. We can find the fitted values and residuals of the fit as attributes of the results object. Various influence measures describing the regression model are computed with the get_influence() method. As we will not use the fig component returned as the first value from subplots(), we simply capture the second returned value in ax below.\n\nax = subplots(figsize=(8,8))[1]\nax.scatter(results.fittedvalues, results.resid)\nax.set_xlabel('Fitted value')\nax.set_ylabel('Residual')\nax.axhline(0, c='k', ls='--');\n\n\n\n\n\n\n\n\nWe add a horizontal line at 0 for reference using the ax.axhline() method, indicating it should be black (c='k') and have a dashed linestyle (ls='--').\nOn the basis of the residual plot, there is some evidence of non-linearity. Leverage statistics can be computed for any number of predictors using the hat_matrix_diag attribute of the value returned by the get_influence() method.\n\ninfl = results.get_influence()\nax = subplots(figsize=(8,8))[1]\nax.scatter(np.arange(X.shape[0]), infl.hat_matrix_diag)\nax.set_xlabel('Index')\nax.set_ylabel('Leverage')\nnp.argmax(infl.hat_matrix_diag)\n\n374\n\n\n\n\n\n\n\n\n\nThe np.argmax() function identifies the index of the largest element of an array, optionally computed over an axis of the array. In this case, we maximized over the entire array to determine which observation has the largest leverage statistic."
  },
  {
    "objectID": "posts/ch03-linear-regression/Ch03-linreg-lab.html#multiple-linear-regression",
    "href": "posts/ch03-linear-regression/Ch03-linreg-lab.html#multiple-linear-regression",
    "title": "Chapter 3: Linear Regression - Lab",
    "section": "",
    "text": "In order to fit a multiple linear regression model using least squares, we again use the ModelSpec() transform to construct the required model matrix and response. The arguments to ModelSpec() can be quite general, but in this case a list of column names suffice. We consider a fit here with the two variables lstat and age.\n\nX = MS(['lstat', 'age']).fit_transform(Boston)\nmodel1 = sm.OLS(y, X)\nresults1 = model1.fit()\nsummarize(results1)\n\n\n\n\n\n\n\n\ncoef\nstd err\nt\nP&gt;|t|\n\n\n\n\nintercept\n33.2228\n0.731\n45.458\n0.000\n\n\nlstat\n-1.0321\n0.048\n-21.416\n0.000\n\n\nage\n0.0345\n0.012\n2.826\n0.005\n\n\n\n\n\n\n\nNotice how we have compacted the first line into a succinct expression describing the construction of X.\nThe Boston data set contains 12 variables, and so it would be cumbersome to have to type all of these in order to perform a regression using all of the predictors. Instead, we can use the following short-hand:\n\nterms = Boston.columns.drop('medv')\nterms\n\nIndex(['crim', 'zn', 'indus', 'chas', 'nox', 'rm', 'age', 'dis', 'rad', 'tax',\n       'ptratio', 'lstat'],\n      dtype='object')\n\n\nWe can now fit the model with all the variables in terms using the same model matrix builder.\n\nX = MS(terms).fit_transform(Boston)\nmodel = sm.OLS(y, X)\nresults = model.fit()\nsummarize(results)\n\n\n\n\n\n\n\n\ncoef\nstd err\nt\nP&gt;|t|\n\n\n\n\nintercept\n41.6173\n4.936\n8.431\n0.000\n\n\ncrim\n-0.1214\n0.033\n-3.678\n0.000\n\n\nzn\n0.0470\n0.014\n3.384\n0.001\n\n\nindus\n0.0135\n0.062\n0.217\n0.829\n\n\nchas\n2.8400\n0.870\n3.264\n0.001\n\n\nnox\n-18.7580\n3.851\n-4.870\n0.000\n\n\nrm\n3.6581\n0.420\n8.705\n0.000\n\n\nage\n0.0036\n0.013\n0.271\n0.787\n\n\ndis\n-1.4908\n0.202\n-7.394\n0.000\n\n\nrad\n0.2894\n0.067\n4.325\n0.000\n\n\ntax\n-0.0127\n0.004\n-3.337\n0.001\n\n\nptratio\n-0.9375\n0.132\n-7.091\n0.000\n\n\nlstat\n-0.5520\n0.051\n-10.897\n0.000\n\n\n\n\n\n\n\nWhat if we would like to perform a regression using all of the variables but one? For example, in the above regression output, age has a high p-value. So we may wish to run a regression excluding this predictor. The following syntax results in a regression using all predictors except age.\n\nminus_age = Boston.columns.drop(['medv', 'age']) \nXma = MS(minus_age).fit_transform(Boston)\nmodel1 = sm.OLS(y, Xma)\nsummarize(model1.fit())\n\n\n\n\n\n\n\n\ncoef\nstd err\nt\nP&gt;|t|\n\n\n\n\nintercept\n41.5251\n4.920\n8.441\n0.000\n\n\ncrim\n-0.1214\n0.033\n-3.683\n0.000\n\n\nzn\n0.0465\n0.014\n3.379\n0.001\n\n\nindus\n0.0135\n0.062\n0.217\n0.829\n\n\nchas\n2.8528\n0.868\n3.287\n0.001\n\n\nnox\n-18.4851\n3.714\n-4.978\n0.000\n\n\nrm\n3.6811\n0.411\n8.951\n0.000\n\n\ndis\n-1.5068\n0.193\n-7.825\n0.000\n\n\nrad\n0.2879\n0.067\n4.322\n0.000\n\n\ntax\n-0.0127\n0.004\n-3.333\n0.001\n\n\nptratio\n-0.9346\n0.132\n-7.099\n0.000\n\n\nlstat\n-0.5474\n0.048\n-11.483\n0.000"
  },
  {
    "objectID": "posts/ch03-linear-regression/Ch03-linreg-lab.html#multivariate-goodness-of-fit",
    "href": "posts/ch03-linear-regression/Ch03-linreg-lab.html#multivariate-goodness-of-fit",
    "title": "Chapter 3: Linear Regression - Lab",
    "section": "",
    "text": "We can access the individual components of results by name (dir(results) shows us what is available). Hence results.rsquared gives us the R^2, and np.sqrt(results.scale) gives us the RSE.\nVariance inflation factors (section~) are sometimes useful to assess the effect of collinearity in the model matrix of a regression model. We will compute the VIFs in our multiple regression fit, and use the opportunity to introduce the idea of list comprehension.\n\n\nOften we encounter a sequence of objects which we would like to transform for some other task. Below, we compute the VIF for each feature in our X matrix and produce a data frame whose index agrees with the columns of X. The notion of list comprehension can often make such a task easier.\nList comprehensions are simple and powerful ways to form lists of Python objects. The language also supports dictionary and generator comprehension, though these are beyond our scope here. Let’s look at an example. We compute the VIF for each of the variables in the model matrix X, using the function variance_inflation_factor().\n\nvals = [VIF(X, i)\n        for i in range(1, X.shape[1])]\nvif = pd.DataFrame({'vif':vals},\n                   index=X.columns[1:])\nvif\n\n\n\n\n\n\n\n\nvif\n\n\n\n\ncrim\n1.767486\n\n\nzn\n2.298459\n\n\nindus\n3.987181\n\n\nchas\n1.071168\n\n\nnox\n4.369093\n\n\nrm\n1.912532\n\n\nage\n3.088232\n\n\ndis\n3.954037\n\n\nrad\n7.445301\n\n\ntax\n9.002158\n\n\nptratio\n1.797060\n\n\nlstat\n2.870777\n\n\n\n\n\n\n\nThe function VIF() takes two arguments: a dataframe or array, and a variable column index. In the code above we call VIF() on the fly for all columns in X.\nWe have excluded column 0 above (the intercept), which is not of interest. In this case the VIFs are not that exciting.\nThe object vals above could have been constructed with the following for loop:\n\nvals = []\nfor i in range(1, X.values.shape[1]):\n    vals.append(VIF(X.values, i))\n\nList comprehension allows us to perform such repetitive operations in a more straightforward way. ## Interaction Terms It is easy to include interaction terms in a linear model using ModelSpec(). Including a tuple (\"lstat\",\"age\") tells the model matrix builder to include an interaction term between lstat and age.\n\nX = MS(['lstat',\n        'age',\n        ('lstat', 'age')]).fit_transform(Boston)\nmodel2 = sm.OLS(y, X)\nsummarize(model2.fit())\n\n\n\n\n\n\n\n\ncoef\nstd err\nt\nP&gt;|t|\n\n\n\n\nintercept\n36.0885\n1.470\n24.553\n0.000\n\n\nlstat\n-1.3921\n0.167\n-8.313\n0.000\n\n\nage\n-0.0007\n0.020\n-0.036\n0.971\n\n\nlstat:age\n0.0042\n0.002\n2.244\n0.025"
  },
  {
    "objectID": "posts/ch03-linear-regression/Ch03-linreg-lab.html#non-linear-transformations-of-the-predictors",
    "href": "posts/ch03-linear-regression/Ch03-linreg-lab.html#non-linear-transformations-of-the-predictors",
    "title": "Chapter 3: Linear Regression - Lab",
    "section": "",
    "text": "The model matrix builder can include terms beyond just column names and interactions. For instance, the poly() function supplied in ISLP specifies that columns representing polynomial functions of its first argument are added to the model matrix.\n\nX = MS([poly('lstat', degree=2), 'age']).fit_transform(Boston)\nmodel3 = sm.OLS(y, X)\nresults3 = model3.fit()\nsummarize(results3)\n\n\n\n\n\n\n\n\ncoef\nstd err\nt\nP&gt;|t|\n\n\n\n\nintercept\n17.7151\n0.781\n22.681\n0.0\n\n\npoly(lstat, degree=2)[0]\n-179.2279\n6.733\n-26.620\n0.0\n\n\npoly(lstat, degree=2)[1]\n72.9908\n5.482\n13.315\n0.0\n\n\nage\n0.0703\n0.011\n6.471\n0.0\n\n\n\n\n\n\n\nThe effectively zero p-value associated with the quadratic term (i.e. the third row above) suggests that it leads to an improved model.\nBy default, poly() creates a basis matrix for inclusion in the model matrix whose columns are orthogonal polynomials, which are designed for stable least squares computations. {Actually, poly() is a wrapper for the workhorse and standalone function Poly() that does the work in building the model matrix.} Alternatively, had we included an argument raw=True in the above call to poly(), the basis matrix would consist simply of lstat and lstat**2. Since either of these bases represent quadratic polynomials, the fitted values would not change in this case, just the polynomial coefficients. Also by default, the columns created by poly() do not include an intercept column as that is automatically added by MS().\nWe use the anova_lm() function to further quantify the extent to which the quadratic fit is superior to the linear fit.\n\nanova_lm(results1, results3)\n\n\n\n\n\n\n\n\ndf_resid\nssr\ndf_diff\nss_diff\nF\nPr(&gt;F)\n\n\n\n\n0\n503.0\n19168.128609\n0.0\nNaN\nNaN\nNaN\n\n\n1\n502.0\n14165.613251\n1.0\n5002.515357\n177.278785\n7.468491e-35\n\n\n\n\n\n\n\nHere results1 represents the linear submodel containing predictors lstat and age, while results3 corresponds to the larger model above with a quadratic term in lstat. The anova_lm() function performs a hypothesis test comparing the two models. The null hypothesis is that the quadratic term in the bigger model is not needed, and the alternative hypothesis is that the bigger model is superior. Here the F-statistic is 177.28 and the associated p-value is zero. In this case the F-statistic is the square of the t-statistic for the quadratic term in the linear model summary for results3 — a consequence of the fact that these nested models differ by one degree of freedom. This provides very clear evidence that the quadratic polynomial in lstat improves the linear model. This is not surprising, since earlier we saw evidence for non-linearity in the relationship between medv and lstat.\nThe function anova_lm() can take more than two nested models as input, in which case it compares every successive pair of models. That also explains why their are NaNs in the first row above, since there is no previous model with which to compare the first.\n\nax = subplots(figsize=(8,8))[1]\nax.scatter(results3.fittedvalues, results3.resid)\nax.set_xlabel('Fitted value')\nax.set_ylabel('Residual')\nax.axhline(0, c='k', ls='--');\n\n\n\n\n\n\n\n\nWe see that when the quadratic term is included in the model, there is little discernible pattern in the residuals. In order to create a cubic or higher-degree polynomial fit, we can simply change the degree argument to poly()."
  },
  {
    "objectID": "posts/ch03-linear-regression/Ch03-linreg-lab.html#qualitative-predictors",
    "href": "posts/ch03-linear-regression/Ch03-linreg-lab.html#qualitative-predictors",
    "title": "Chapter 3: Linear Regression - Lab",
    "section": "",
    "text": "Here we use the Carseats data, which is included in the ISLP package. We will attempt to predict Sales (child car seat sales) in 400 locations based on a number of predictors.\n\nCarseats = load_data('Carseats')\nCarseats.columns\n\nIndex(['Sales', 'CompPrice', 'Income', 'Advertising', 'Population', 'Price',\n       'ShelveLoc', 'Age', 'Education', 'Urban', 'US'],\n      dtype='object')\n\n\nThe Carseats\ndata includes qualitative predictors such as ShelveLoc, an indicator of the quality of the shelving location — that is, the space within a store in which the car seat is displayed. The predictor ShelveLoc takes on three possible values, Bad, Medium, and Good. Given a qualitative variable such as ShelveLoc, ModelSpec() generates dummy variables automatically. These variables are often referred to as a one-hot encoding of the categorical feature. Their columns sum to one, so to avoid collinearity with an intercept, the first column is dropped. Below we see the column ShelveLoc[Bad] has been dropped, since Bad is the first level of ShelveLoc. Below we fit a multiple regression model that includes some interaction terms.\n\nallvars = list(Carseats.columns.drop('Sales'))\ny = Carseats['Sales']\nfinal = allvars + [('Income', 'Advertising'),\n                   ('Price', 'Age')]\nX = MS(final).fit_transform(Carseats)\nmodel = sm.OLS(y, X)\nsummarize(model.fit())\n\n\n\n\n\n\n\n\ncoef\nstd err\nt\nP&gt;|t|\n\n\n\n\nintercept\n6.5756\n1.009\n6.519\n0.000\n\n\nCompPrice\n0.0929\n0.004\n22.567\n0.000\n\n\nIncome\n0.0109\n0.003\n4.183\n0.000\n\n\nAdvertising\n0.0702\n0.023\n3.107\n0.002\n\n\nPopulation\n0.0002\n0.000\n0.433\n0.665\n\n\nPrice\n-0.1008\n0.007\n-13.549\n0.000\n\n\nShelveLoc[Good]\n4.8487\n0.153\n31.724\n0.000\n\n\nShelveLoc[Medium]\n1.9533\n0.126\n15.531\n0.000\n\n\nAge\n-0.0579\n0.016\n-3.633\n0.000\n\n\nEducation\n-0.0209\n0.020\n-1.063\n0.288\n\n\nUrban[Yes]\n0.1402\n0.112\n1.247\n0.213\n\n\nUS[Yes]\n-0.1576\n0.149\n-1.058\n0.291\n\n\nIncome:Advertising\n0.0008\n0.000\n2.698\n0.007\n\n\nPrice:Age\n0.0001\n0.000\n0.801\n0.424\n\n\n\n\n\n\n\nIn the first line above, we made allvars a list, so that we could add the interaction terms two lines down. Our model-matrix builder has created a ShelveLoc[Good] dummy variable that takes on a value of 1 if the shelving location is good, and 0 otherwise. It has also created a ShelveLoc[Medium] dummy variable that equals 1 if the shelving location is medium, and 0 otherwise. A bad shelving location corresponds to a zero for each of the two dummy variables. The fact that the coefficient for ShelveLoc[Good] in the regression output is positive indicates that a good shelving location is associated with high sales (relative to a bad location). And ShelveLoc[Medium] has a smaller positive coefficient, indicating that a medium shelving location leads to higher sales than a bad shelving location, but lower sales than a good shelving location."
  },
  {
    "objectID": "posts/ch02-statistical-learning/Ch02-statlearn-lab.html",
    "href": "posts/ch02-statistical-learning/Ch02-statlearn-lab.html",
    "title": "Chapter 2: Introduction to Python",
    "section": "",
    "text": "To run the labs in this book, you will need two things:\n\nAn installation of Python3, which is the specific version of Python used in the labs.\nAccess to Jupyter, a very popular Python interface that runs code through a file called a notebook.\n\nYou can download and install Python3 by following the instructions available at anaconda.com.\nThere are a number of ways to get access to Jupyter. Here are just a few:\n\nUsing Google’s Colaboratory service: colab.research.google.com/.\nUsing JupyterHub, available at jupyter.org/hub.\nUsing your own jupyter installation. Installation instructions are available at jupyter.org/install.\n\nPlease see the Python resources page on the book website statlearning.com for up-to-date information about getting Python and Jupyter working on your computer.\nYou will need to install the ISLP package, which provides access to the datasets and custom-built functions that we provide. Inside a macOS or Linux terminal type pip install ISLP; this also installs most other packages needed in the labs. The Python resources page has a link to the ISLP documentation website.\nTo run this lab, download the file Ch2-statlearn-lab.ipynb from the Python resources page. Now run the following code at the command line: jupyter lab Ch2-statlearn-lab.ipynb.\nIf you’re using Windows, you can use the start menu to access anaconda, and follow the links. For example, to install ISLP and run this lab, you can run the same code above in an anaconda shell.\n\n\n\nIn this lab, we will introduce some simple Python commands. For more resources about Python in general, readers may want to consult the tutorial at docs.python.org/3/tutorial/.\nLike most programming languages, Python uses functions to perform operations. To run a function called fun, we type fun(input1,input2), where the inputs (or arguments) input1 and input2 tell Python how to run the function. A function can have any number of inputs. For example, the print() function outputs a text representation of all of its arguments to the console.\n\nprint('fit a model with', 11, 'variables')\n\nfit a model with 11 variables\n\n\nThe following command will provide information about the print() function.\n\nprint?\n\nAdding two integers in Python is pretty intuitive.\n\n3 + 5\n\n8\n\n\nIn Python, textual data is handled using strings. For instance, \"hello\" and 'hello' are strings. We can concatenate them using the addition + symbol.\n\n\"hello\" + \" \" + \"world\"\n\n'hello world'\n\n\nA string is actually a type of sequence: this is a generic term for an ordered list. The three most important types of sequences are lists, tuples, and strings.\nWe introduce lists now.\nThe following command instructs Python to join together the numbers 3, 4, and 5, and to save them as a list named x. When we type x, it gives us back the list.\n\nx = [3, 4, 5]\nx\n\n[3, 4, 5]\n\n\nNote that we used the brackets [] to construct this list.\nWe will often want to add two sets of numbers together. It is reasonable to try the following code, though it will not produce the desired results.\n\ny = [4, 9, 7]\nx + y\n\n[3, 4, 5, 4, 9, 7]\n\n\nThe result may appear slightly counterintuitive: why did Python not add the entries of the lists element-by-element? In Python, lists hold arbitrary objects, and are added using concatenation. In fact, concatenation is the behavior that we saw earlier when we entered \"hello\" + \" \" + \"world\".\nThis example reflects the fact that Python is a general-purpose programming language. Much of Python’s data-specific functionality comes from other packages, notably numpy and pandas. In the next section, we will introduce the numpy package. See docs.scipy.org/doc/numpy/user/quickstart.html for more information about numpy.\n\n\n\nAs mentioned earlier, this book makes use of functionality that is contained in the numpy library, or package. A package is a collection of modules that are not necessarily included in the base Python distribution. The name numpy is an abbreviation for numerical Python.\nTo access numpy, we must first import it.\n\nimport numpy as np \n\nIn the previous line, we named the numpy module np; an abbreviation for easier referencing.\nIn numpy, an array is a generic term for a multidimensional set of numbers. We use the np.array() function to define x and y, which are one-dimensional arrays, i.e. vectors.\n\nx = np.array([3, 4, 5])\ny = np.array([4, 9, 7])\n\nNote that if you forgot to run the import numpy as np command earlier, then you will encounter an error in calling the np.array() function in the previous line. The syntax np.array() indicates that the function being called is part of the numpy package, which we have abbreviated as np.\nSince x and y have been defined using np.array(), we get a sensible result when we add them together. Compare this to our results in the previous section, when we tried to add two lists without using numpy.\n\nx + y\n\narray([ 7, 13, 12])\n\n\nIn numpy, matrices are typically represented as two-dimensional arrays, and vectors as one-dimensional arrays. {While it is also possible to create matrices using np.matrix(), we will use np.array() throughout the labs in this book.} We can create a two-dimensional array as follows.\n\nx = np.array([[1, 2], [3, 4]])\nx\n\narray([[1, 2],\n       [3, 4]])\n\n\nThe object x has several attributes, or associated objects. To access an attribute of x, we type x.attribute, where we replace attribute with the name of the attribute. For instance, we can access the ndim attribute of x as follows.\n\nx.ndim\n\n2\n\n\nThe output indicates that x is a two-dimensional array.\nSimilarly, x.dtype is the data type attribute of the object x. This indicates that x is comprised of 64-bit integers:\n\nx.dtype\n\ndtype('int64')\n\n\nWhy is x comprised of integers? This is because we created x by passing in exclusively integers to the np.array() function. If we had passed in any decimals, then we would have obtained an array of floating point numbers (i.e. real-valued numbers).\n\nnp.array([[1, 2], [3.0, 4]]).dtype\n\ndtype('float64')\n\n\nTyping fun? will cause Python to display documentation associated with the function fun, if it exists. We can try this for np.array().\n\nnp.array?\n\nThis documentation indicates that we could create a floating point array by passing a dtype argument into np.array().\n\nnp.array([[1, 2], [3, 4]], float).dtype\n\ndtype('float64')\n\n\nThe array x is two-dimensional. We can find out the number of rows and columns by looking at its shape attribute.\n\nx.shape\n\n(2, 2)\n\n\nA method is a function that is associated with an object. For instance, given an array x, the expression x.sum() sums all of its elements, using the sum() method for arrays. The call x.sum() automatically provides x as the first argument to its sum() method.\n\nx = np.array([1, 2, 3, 4])\nx.sum()\n\n10\n\n\nWe could also sum the elements of x by passing in x as an argument to the np.sum() function.\n\nx = np.array([1, 2, 3, 4])\nnp.sum(x)\n\n10\n\n\nAs another example, the reshape() method returns a new array with the same elements as x, but a different shape. We do this by passing in a tuple in our call to reshape(), in this case (2, 3). This tuple specifies that we would like to create a two-dimensional array with 2 rows and 3 columns. {Like lists, tuples represent a sequence of objects. Why do we need more than one way to create a sequence? There are a few differences between tuples and lists, but perhaps the most important is that elements of a tuple cannot be modified, whereas elements of a list can be.}\nIn what follows, the \\n character creates a new line.\n\nx = np.array([1, 2, 3, 4, 5, 6])\nprint('beginning x:\\n', x)\nx_reshape = x.reshape((2, 3))\nprint('reshaped x:\\n', x_reshape)\n\nbeginning x:\n [1 2 3 4 5 6]\nreshaped x:\n [[1 2 3]\n [4 5 6]]\n\n\nThe previous output reveals that numpy arrays are specified as a sequence of rows. This is called row-major ordering, as opposed to column-major ordering.\nPython (and hence numpy) uses 0-based indexing. This means that to access the top left element of x_reshape, we type in x_reshape[0,0].\n\nx_reshape[0, 0] \n\n1\n\n\nSimilarly, x_reshape[1,2] yields the element in the second row and the third column of x_reshape.\n\nx_reshape[1, 2] \n\n6\n\n\nSimilarly, x[2] yields the third entry of x.\nNow, let’s modify the top left element of x_reshape. To our surprise, we discover that the first element of x has been modified as well!\n\nprint('x before we modify x_reshape:\\n', x)\nprint('x_reshape before we modify x_reshape:\\n', x_reshape)\nx_reshape[0, 0] = 5\nprint('x_reshape after we modify its top left element:\\n', x_reshape)\nprint('x after we modify top left element of x_reshape:\\n', x)\n\nx before we modify x_reshape:\n [1 2 3 4 5 6]\nx_reshape before we modify x_reshape:\n [[1 2 3]\n [4 5 6]]\nx_reshape after we modify its top left element:\n [[5 2 3]\n [4 5 6]]\nx after we modify top left element of x_reshape:\n [5 2 3 4 5 6]\n\n\nModifying x_reshape also modified x because the two objects occupy the same space in memory.\nWe just saw that we can modify an element of an array. Can we also modify a tuple? It turns out that we cannot — and trying to do so introduces an exception, or error.\n\nmy_tuple = (3, 4, 5)\nmy_tuple[0] = 2\n\n\n---------------------------------------------------------------------------\nTypeError                                 Traceback (most recent call last)\nCell In[23], line 2\n      1 my_tuple = (3, 4, 5)\n----&gt; 2 my_tuple[0] = 2\n\nTypeError: 'tuple' object does not support item assignment\n\n\n\nWe now briefly mention some attributes of arrays that will come in handy. An array’s shape attribute contains its dimension; this is always a tuple. The ndim attribute yields the number of dimensions, and T provides its transpose.\n\nx_reshape.shape, x_reshape.ndim, x_reshape.T\n\n((2, 3),\n 2,\n array([[5, 4],\n        [2, 5],\n        [3, 6]]))\n\n\nNotice that the three individual outputs (2,3), 2, and array([[5, 4],[2, 5], [3,6]]) are themselves output as a tuple.\nWe will often want to apply functions to arrays. For instance, we can compute the square root of the entries using the np.sqrt() function:\n\nnp.sqrt(x)\n\narray([2.23606798, 1.41421356, 1.73205081, 2.        , 2.23606798,\n       2.44948974])\n\n\nWe can also square the elements:\n\nx**2\n\narray([25,  4,  9, 16, 25, 36])\n\n\nWe can compute the square roots using the same notation, raising to the power of 1/2 instead of 2.\n\nx**0.5\n\narray([2.23606798, 1.41421356, 1.73205081, 2.        , 2.23606798,\n       2.44948974])\n\n\nThroughout this book, we will often want to generate random data. The np.random.normal() function generates a vector of random normal variables. We can learn more about this function by looking at the help page, via a call to np.random.normal?. The first line of the help page reads normal(loc=0.0, scale=1.0, size=None). This signature line tells us that the function’s arguments are loc, scale, and size. These are keyword arguments, which means that when they are passed into the function, they can be referred to by name (in any order). {Python also uses positional arguments. Positional arguments do not need to use a keyword. To see an example, type in np.sum?. We see that a is a positional argument, i.e. this function assumes that the first unnamed argument that it receives is the array to be summed. By contrast, axis and dtype are keyword arguments: the position in which these arguments are entered into np.sum() does not matter.} By default, this function will generate random normal variable(s) with mean (loc) 0 and standard deviation (scale) 1; furthermore, a single random variable will be generated unless the argument to size is changed.\nWe now generate 50 independent random variables from a N(0,1) distribution.\n\nx = np.random.normal(size=50)\nx\n\narray([ 2.17030041,  1.71170017,  0.72847949,  0.93966694, -1.1480785 ,\n        0.75434066, -0.57484423, -0.32130848,  2.05296668,  0.24949327,\n        0.02881639,  0.95272842, -0.33974506, -0.12977814, -1.47989099,\n       -1.13401345,  0.88028112,  0.93388325,  0.98929649, -0.10508831,\n       -0.44337386, -0.31018588,  0.8730601 , -0.6429277 ,  2.08238407,\n       -0.70217249,  0.99403647,  0.58294926,  1.39995453, -0.52925884,\n       -0.85855133, -0.22609025,  0.60207586, -0.77332272,  3.04543919,\n       -0.04105949,  0.33714973,  0.07071815, -0.47618398, -1.21672748,\n        0.05673077,  0.32489449, -0.4481223 ,  0.47967377, -0.86134873,\n       -1.47898739, -1.24258321, -0.25466507, -0.4865819 , -0.44858063])\n\n\nWe create an array y by adding an independent N(50,1) random variable to each element of x.\n\ny = x + np.random.normal(loc=50, scale=1, size=50)\n\nThe np.corrcoef() function computes the correlation matrix between x and y. The off-diagonal elements give the correlation between x and y.\n\nnp.corrcoef(x, y)\n\narray([[1.        , 0.74725094],\n       [0.74725094, 1.        ]])\n\n\nIf you’re following along in your own Jupyter notebook, then you probably noticed that you got a different set of results when you ran the past few commands. In particular, each time we call np.random.normal(), we will get a different answer, as shown in the following example.\n\nprint(np.random.normal(scale=5, size=2))\nprint(np.random.normal(scale=5, size=2)) \n\n[-8.13106346  4.38081042]\n[-7.08021424 -0.85361414]\n\n\nIn order to ensure that our code provides exactly the same results each time it is run, we can set a random seed using the np.random.default_rng() function. This function takes an arbitrary, user-specified integer argument. If we set a random seed before generating random data, then re-running our code will yield the same results. The object rng has essentially all the random number generating methods found in np.random. Hence, to generate normal data we use rng.normal().\n\nrng = np.random.default_rng(1303)\nprint(rng.normal(scale=5, size=2))\nrng2 = np.random.default_rng(1303)\nprint(rng2.normal(scale=5, size=2)) \n\n[ 4.09482632 -1.07485605]\n[ 4.09482632 -1.07485605]\n\n\nThroughout the labs in this book, we use np.random.default_rng() whenever we perform calculations involving random quantities within numpy. In principle, this should enable the reader to exactly reproduce the stated results. However, as new versions of numpy become available, it is possible that some small discrepancies may occur between the output in the labs and the output from numpy.\nThe np.mean(), np.var(), and np.std() functions can be used to compute the mean, variance, and standard deviation of arrays. These functions are also available as methods on the arrays.\n\nrng = np.random.default_rng(3)\ny = rng.standard_normal(10)\nnp.mean(y), y.mean()\n\n(-0.1126795190952861, -0.1126795190952861)\n\n\n\nnp.var(y), y.var(), np.mean((y - y.mean())**2)\n\n(2.7243406406465125, 2.7243406406465125, 2.7243406406465125)\n\n\nNotice that by default np.var() divides by the sample size n rather than n-1; see the ddof argument in np.var?.\n\nnp.sqrt(np.var(y)), np.std(y)\n\n(1.6505576756498128, 1.6505576756498128)\n\n\nThe np.mean(), np.var(), and np.std() functions can also be applied to the rows and columns of a matrix. To see this, we construct a 10 \\times 3 matrix of N(0,1) random variables, and consider computing its row sums.\n\nX = rng.standard_normal((10, 3))\nX\n\narray([[ 0.22578661, -0.35263079, -0.28128742],\n       [-0.66804635, -1.05515055, -0.39080098],\n       [ 0.48194539, -0.23855361,  0.9577587 ],\n       [-0.19980213,  0.02425957,  1.54582085],\n       [ 0.54510552, -0.50522874, -0.18283897],\n       [ 0.54052513,  1.93508803, -0.26962033],\n       [-0.24355868,  1.0023136 , -0.88645994],\n       [-0.29172023,  0.88253897,  0.58035002],\n       [ 0.0915167 ,  0.67010435, -2.82816231],\n       [ 1.02130682, -0.95964476, -1.66861984]])\n\n\nSince arrays are row-major ordered, the first axis, i.e. axis=0, refers to its rows. We pass this argument into the mean() method for the object X.\n\nX.mean(axis=0)\n\narray([ 0.15030588,  0.14030961, -0.34238602])\n\n\nThe following yields the same result.\n\nX.mean(0)\n\narray([ 0.15030588,  0.14030961, -0.34238602])\n\n\n\n\n\nIn Python, common practice is to use the library matplotlib for graphics. However, since Python was not written with data analysis in mind, the notion of plotting is not intrinsic to the language. We will use the subplots() function from matplotlib.pyplot to create a figure and the axes onto which we plot our data. For many more examples of how to make plots in Python, readers are encouraged to visit matplotlib.org/stable/gallery/.\nIn matplotlib, a plot consists of a figure and one or more axes. You can think of the figure as the blank canvas upon which one or more plots will be displayed: it is the entire plotting window. The axes contain important information about each plot, such as its x- and y-axis labels, title, and more. (Note that in matplotlib, the word axes is not the plural of axis: a plot’s axes contains much more information than just the x-axis and the y-axis.)\nWe begin by importing the subplots() function from matplotlib. We use this function throughout when creating figures. The function returns a tuple of length two: a figure object as well as the relevant axes object. We will typically pass figsize as a keyword argument. Having created our axes, we attempt our first plot using its plot() method. To learn more about it, type ax.plot?.\n\nfrom matplotlib.pyplot import subplots\nfig, ax = subplots(figsize=(8, 8))\nx = rng.standard_normal(100)\ny = rng.standard_normal(100)\nax.plot(x, y);\n\n\n\n\n\n\n\n\nWe pause here to note that we have unpacked the tuple of length two returned by subplots() into the two distinct variables fig and ax. Unpacking is typically preferred to the following equivalent but slightly more verbose code:\n\noutput = subplots(figsize=(8, 8))\nfig = output[0]\nax = output[1]\n\n\n\n\n\n\n\n\nWe see that our earlier cell produced a line plot, which is the default. To create a scatterplot, we provide an additional argument to ax.plot(), indicating that circles should be displayed.\n\nfig, ax = subplots(figsize=(8, 8))\nax.plot(x, y, 'o');\n\n\n\n\n\n\n\n\nDifferent values of this additional argument can be used to produce different colored lines as well as different linestyles.\nAs an alternative, we could use the ax.scatter() function to create a scatterplot.\n\nfig, ax = subplots(figsize=(8, 8))\nax.scatter(x, y, marker='o');\n\n\n\n\n\n\n\n\nNotice that in the code blocks above, we have ended the last line with a semicolon. This prevents ax.plot(x, y) from printing text to the notebook. However, it does not prevent a plot from being produced. If we omit the trailing semi-colon, then we obtain the following output:\n\nfig, ax = subplots(figsize=(8, 8))\nax.scatter(x, y, marker='o')\n\n\n\n\n\n\n\n\nIn what follows, we will use trailing semicolons whenever the text that would be output is not germane to the discussion at hand.\nTo label our plot, we make use of the set_xlabel(), set_ylabel(), and set_title() methods of ax.\n\nfig, ax = subplots(figsize=(8, 8))\nax.scatter(x, y, marker='o')\nax.set_xlabel(\"this is the x-axis\")\nax.set_ylabel(\"this is the y-axis\")\nax.set_title(\"Plot of X vs Y\");\n\n\n\n\n\n\n\n\nHaving access to the figure object fig itself means that we can go in and change some aspects and then redisplay it. Here, we change the size from (8, 8) to (12, 3).\n\nfig.set_size_inches(12,3)\nfig\n\n\n\n\n\n\n\n\nOccasionally we will want to create several plots within a figure. This can be achieved by passing additional arguments to subplots(). Below, we create a 2 \\times 3 grid of plots in a figure of size determined by the figsize argument. In such situations, there is often a relationship between the axes in the plots. For example, all plots may have a common x-axis. The subplots() function can automatically handle this situation when passed the keyword argument sharex=True. The axes object below is an array pointing to different plots in the figure.\n\nfig, axes = subplots(nrows=2,\n                     ncols=3,\n                     figsize=(15, 5))\n\n\n\n\n\n\n\n\nWe now produce a scatter plot with 'o' in the second column of the first row and a scatter plot with '+' in the third column of the second row.\n\naxes[0,1].plot(x, y, 'o')\naxes[1,2].scatter(x, y, marker='+')\nfig\n\n\n\n\n\n\n\n\nType subplots? to learn more about subplots().\nTo save the output of fig, we call its savefig() method. The argument dpi is the dots per inch, used to determine how large the figure will be in pixels.\n\nfig.savefig(\"Figure.png\", dpi=400)\nfig.savefig(\"Figure.pdf\", dpi=200);\n\nWe can continue to modify fig using step-by-step updates; for example, we can modify the range of the x-axis, re-save the figure, and even re-display it.\n\naxes[0,1].set_xlim([-1,1])\nfig.savefig(\"Figure_updated.jpg\")\nfig\n\n\n\n\n\n\n\n\nWe now create some more sophisticated plots. The ax.contour() method produces a contour plot in order to represent three-dimensional data, similar to a topographical map. It takes three arguments:\n\nA vector of x values (the first dimension),\nA vector of y values (the second dimension), and\nA matrix whose elements correspond to the z value (the third dimension) for each pair of (x,y) coordinates.\n\nTo create x and y, we’ll use the command np.linspace(a, b, n), which returns a vector of n numbers starting at a and ending at b.\n\nfig, ax = subplots(figsize=(8, 8))\nx = np.linspace(-np.pi, np.pi, 50)\ny = x\nf = np.multiply.outer(np.cos(y), 1 / (1 + x**2))\nax.contour(x, y, f);\n\n\n\n\n\n\n\n\nWe can increase the resolution by adding more levels to the image.\n\nfig, ax = subplots(figsize=(8, 8))\nax.contour(x, y, f, levels=45);\n\n\n\n\n\n\n\n\nTo fine-tune the output of the ax.contour() function, take a look at the help file by typing ?plt.contour.\nThe ax.imshow() method is similar to ax.contour(), except that it produces a color-coded plot whose colors depend on the z value. This is known as a heatmap, and is sometimes used to plot temperature in weather forecasts.\n\nfig, ax = subplots(figsize=(8, 8))\nax.imshow(f);\n\n\n\n\n\n\n\n\n\n\n\nAs seen above, the function np.linspace() can be used to create a sequence of numbers.\n\nseq1 = np.linspace(0, 10, 11)\nseq1\n\narray([ 0.,  1.,  2.,  3.,  4.,  5.,  6.,  7.,  8.,  9., 10.])\n\n\nThe function np.arange() returns a sequence of numbers spaced out by step. If step is not specified, then a default value of 1 is used. Let’s create a sequence that starts at 0 and ends at 10.\n\nseq2 = np.arange(0, 10)\nseq2\n\narray([0, 1, 2, 3, 4, 5, 6, 7, 8, 9])\n\n\nWhy isn’t 10 output above? This has to do with slice notation in Python. Slice notation\nis used to index sequences such as lists, tuples and arrays. Suppose we want to retrieve the fourth through sixth (inclusive) entries of a string. We obtain a slice of the string using the indexing notation [3:6].\n\n\"hello world\"[3:6]\n\n'lo '\n\n\nIn the code block above, the notation 3:6 is shorthand for slice(3,6) when used inside [].\n\n\"hello world\"[slice(3,6)]\n\n'lo '\n\n\nYou might have expected slice(3,6) to output the fourth through seventh characters in the text string (recalling that Python begins its indexing at zero), but instead it output the fourth through sixth. This also explains why the earlier np.arange(0, 10) command output only the integers from 0 to 9. See the documentation slice? for useful options in creating slices.\n\n\n\nTo begin, we create a two-dimensional numpy array.\n\nA = np.array(np.arange(16)).reshape((4, 4))\nA\n\narray([[ 0,  1,  2,  3],\n       [ 4,  5,  6,  7],\n       [ 8,  9, 10, 11],\n       [12, 13, 14, 15]])\n\n\nTyping A[1,2] retrieves the element corresponding to the second row and third column. (As usual, Python indexes from 0.)\n\nA[1,2]\n\n6\n\n\nThe first number after the open-bracket symbol [ refers to the row, and the second number refers to the column.\n\n\nTo select multiple rows at a time, we can pass in a list specifying our selection. For instance, [1,3] will retrieve the second and fourth rows:\n\nA[[1,3]]\n\narray([[ 4,  5,  6,  7],\n       [12, 13, 14, 15]])\n\n\nTo select the first and third columns, we pass in [0,2] as the second argument in the square brackets. In this case we need to supply the first argument : which selects all rows.\n\nA[:,[0,2]]\n\narray([[ 0,  2],\n       [ 4,  6],\n       [ 8, 10],\n       [12, 14]])\n\n\nNow, suppose that we want to select the submatrix made up of the second and fourth rows as well as the first and third columns. This is where indexing gets slightly tricky. It is natural to try to use lists to retrieve the rows and columns:\n\nA[[1,3],[0,2]]\n\narray([ 4, 14])\n\n\nOops — what happened? We got a one-dimensional array of length two identical to\n\nnp.array([A[1,0],A[3,2]])\n\narray([ 4, 14])\n\n\nSimilarly, the following code fails to extract the submatrix comprised of the second and fourth rows and the first, third, and fourth columns:\n\nA[[1,3],[0,2,3]]\n\n\n---------------------------------------------------------------------------\nIndexError                                Traceback (most recent call last)\nCell In[63], line 1\n----&gt; 1 A[[1,3],[0,2,3]]\n\nIndexError: shape mismatch: indexing arrays could not be broadcast together with shapes (2,) (3,) \n\n\n\nWe can see what has gone wrong here. When supplied with two indexing lists, the numpy interpretation is that these provide pairs of i,j indices for a series of entries. That is why the pair of lists must have the same length. However, that was not our intent, since we are looking for a submatrix.\nOne easy way to do this is as follows. We first create a submatrix by subsetting the rows of A, and then on the fly we make a further submatrix by subsetting its columns.\n\nA[[1,3]][:,[0,2]]\n\narray([[ 4,  6],\n       [12, 14]])\n\n\nThere are more efficient ways of achieving the same result.\nThe convenience function np.ix_() allows us to extract a submatrix using lists, by creating an intermediate mesh object.\n\nidx = np.ix_([1,3],[0,2,3])\nA[idx]\n\narray([[ 4,  6,  7],\n       [12, 14, 15]])\n\n\nAlternatively, we can subset matrices efficiently using slices.\nThe slice 1:4:2 captures the second and fourth items of a sequence, while the slice 0:3:2 captures the first and third items (the third element in a slice sequence is the step size).\n\nA[1:4:2,0:3:2]\n\narray([[ 4,  6],\n       [12, 14]])\n\n\nWhy are we able to retrieve a submatrix directly using slices but not using lists? Its because they are different Python types, and are treated differently by numpy. Slices can be used to extract objects from arbitrary sequences, such as strings, lists, and tuples, while the use of lists for indexing is more limited.\n\n\n\nIn numpy, a Boolean is a type that equals either True or False (also represented as 1 and 0, respectively). The next line creates a vector of 0’s, represented as Booleans, of length equal to the first dimension of A.\n\nkeep_rows = np.zeros(A.shape[0], bool)\nkeep_rows\n\narray([False, False, False, False])\n\n\nWe now set two of the elements to True.\n\nkeep_rows[[1,3]] = True\nkeep_rows\n\narray([False,  True, False,  True])\n\n\nNote that the elements of keep_rows, when viewed as integers, are the same as the values of np.array([0,1,0,1]). Below, we use == to verify their equality. When applied to two arrays, the == operation is applied elementwise.\n\nnp.all(keep_rows == np.array([0,1,0,1]))\n\nTrue\n\n\n(Here, the function np.all() has checked whether all entries of an array are True. A similar function, np.any(), can be used to check whether any entries of an array are True.)\nHowever, even though np.array([0,1,0,1]) and keep_rows are equal according to ==, they index different sets of rows! The former retrieves the first, second, first, and second rows of A.\n\nA[np.array([0,1,0,1])]\n\narray([[0, 1, 2, 3],\n       [4, 5, 6, 7],\n       [0, 1, 2, 3],\n       [4, 5, 6, 7]])\n\n\nBy contrast, keep_rows retrieves only the second and fourth rows of A — i.e. the rows for which the Boolean equals TRUE.\n\nA[keep_rows]\n\narray([[ 4,  5,  6,  7],\n       [12, 13, 14, 15]])\n\n\nThis example shows that Booleans and integers are treated differently by numpy.\nWe again make use of the np.ix_() function to create a mesh containing the second and fourth rows, and the first, third, and fourth columns. This time, we apply the function to Booleans, rather than lists.\n\nkeep_cols = np.zeros(A.shape[1], bool)\nkeep_cols[[0, 2, 3]] = True\nidx_bool = np.ix_(keep_rows, keep_cols)\nA[idx_bool]\n\narray([[ 4,  6,  7],\n       [12, 14, 15]])\n\n\nWe can also mix a list with an array of Booleans in the arguments to np.ix_():\n\nidx_mixed = np.ix_([1,3], keep_cols)\nA[idx_mixed]\n\narray([[ 4,  6,  7],\n       [12, 14, 15]])\n\n\nFor more details on indexing in numpy, readers are referred to the numpy tutorial mentioned earlier.\n\n\n\n\nData sets often contain different types of data, and may have names associated with the rows or columns. For these reasons, they typically are best accommodated using a data frame. We can think of a data frame as a sequence of arrays of identical length; these are the columns. Entries in the different arrays can be combined to form a row. The pandas library can be used to create and work with data frame objects.\n\n\nThe first step of most analyses involves importing a data set into Python.\nBefore attempting to load a data set, we must make sure that Python knows where to find the file containing it. If the file is in the same location as this notebook file, then we are all set. Otherwise, the command os.chdir() can be used to change directory. (You will need to call import os before calling os.chdir().)\nWe will begin by reading in Auto.csv, available on the book website. This is a comma-separated file, and can be read in using pd.read_csv():\n\nimport pandas as pd\nAuto = pd.read_csv('Auto.csv')\nAuto\n\n\n---------------------------------------------------------------------------\nFileNotFoundError                         Traceback (most recent call last)\nCell In[74], line 2\n      1 import pandas as pd\n----&gt; 2 Auto = pd.read_csv('Auto.csv')\n      3 Auto\n\nFile ~/work/notes/notes-islr-py/.venv/lib/python3.10/site-packages/pandas/io/parsers/readers.py:1026, in read_csv(filepath_or_buffer, sep, delimiter, header, names, index_col, usecols, dtype, engine, converters, true_values, false_values, skipinitialspace, skiprows, skipfooter, nrows, na_values, keep_default_na, na_filter, verbose, skip_blank_lines, parse_dates, infer_datetime_format, keep_date_col, date_parser, date_format, dayfirst, cache_dates, iterator, chunksize, compression, thousands, decimal, lineterminator, quotechar, quoting, doublequote, escapechar, comment, encoding, encoding_errors, dialect, on_bad_lines, delim_whitespace, low_memory, memory_map, float_precision, storage_options, dtype_backend)\n   1013 kwds_defaults = _refine_defaults_read(\n   1014     dialect,\n   1015     delimiter,\n   (...)\n   1022     dtype_backend=dtype_backend,\n   1023 )\n   1024 kwds.update(kwds_defaults)\n-&gt; 1026 return _read(filepath_or_buffer, kwds)\n\nFile ~/work/notes/notes-islr-py/.venv/lib/python3.10/site-packages/pandas/io/parsers/readers.py:620, in _read(filepath_or_buffer, kwds)\n    617 _validate_names(kwds.get(\"names\", None))\n    619 # Create the parser.\n--&gt; 620 parser = TextFileReader(filepath_or_buffer, **kwds)\n    622 if chunksize or iterator:\n    623     return parser\n\nFile ~/work/notes/notes-islr-py/.venv/lib/python3.10/site-packages/pandas/io/parsers/readers.py:1620, in TextFileReader.__init__(self, f, engine, **kwds)\n   1617     self.options[\"has_index_names\"] = kwds[\"has_index_names\"]\n   1619 self.handles: IOHandles | None = None\n-&gt; 1620 self._engine = self._make_engine(f, self.engine)\n\nFile ~/work/notes/notes-islr-py/.venv/lib/python3.10/site-packages/pandas/io/parsers/readers.py:1880, in TextFileReader._make_engine(self, f, engine)\n   1878     if \"b\" not in mode:\n   1879         mode += \"b\"\n-&gt; 1880 self.handles = get_handle(\n   1881     f,\n   1882     mode,\n   1883     encoding=self.options.get(\"encoding\", None),\n   1884     compression=self.options.get(\"compression\", None),\n   1885     memory_map=self.options.get(\"memory_map\", False),\n   1886     is_text=is_text,\n   1887     errors=self.options.get(\"encoding_errors\", \"strict\"),\n   1888     storage_options=self.options.get(\"storage_options\", None),\n   1889 )\n   1890 assert self.handles is not None\n   1891 f = self.handles.handle\n\nFile ~/work/notes/notes-islr-py/.venv/lib/python3.10/site-packages/pandas/io/common.py:873, in get_handle(path_or_buf, mode, encoding, compression, memory_map, is_text, errors, storage_options)\n    868 elif isinstance(handle, str):\n    869     # Check whether the filename is to be opened in binary mode.\n    870     # Binary mode does not support 'encoding' and 'newline'.\n    871     if ioargs.encoding and \"b\" not in ioargs.mode:\n    872         # Encoding\n--&gt; 873         handle = open(\n    874             handle,\n    875             ioargs.mode,\n    876             encoding=ioargs.encoding,\n    877             errors=errors,\n    878             newline=\"\",\n    879         )\n    880     else:\n    881         # Binary mode\n    882         handle = open(handle, ioargs.mode)\n\nFileNotFoundError: [Errno 2] No such file or directory: 'Auto.csv'\n\n\n\nThe book website also has a whitespace-delimited version of this data, called Auto.data. This can be read in as follows:\n\nAuto = pd.read_csv('Auto.data', delim_whitespace=True)\n\n/tmp/ipykernel_100019/2891344115.py:1: FutureWarning: The 'delim_whitespace' keyword in pd.read_csv is deprecated and will be removed in a future version. Use ``sep='\\s+'`` instead\n  Auto = pd.read_csv('Auto.data', delim_whitespace=True)\n\n\n\n---------------------------------------------------------------------------\nFileNotFoundError                         Traceback (most recent call last)\nCell In[75], line 1\n----&gt; 1 Auto = pd.read_csv('Auto.data', delim_whitespace=True)\n\nFile ~/work/notes/notes-islr-py/.venv/lib/python3.10/site-packages/pandas/io/parsers/readers.py:1026, in read_csv(filepath_or_buffer, sep, delimiter, header, names, index_col, usecols, dtype, engine, converters, true_values, false_values, skipinitialspace, skiprows, skipfooter, nrows, na_values, keep_default_na, na_filter, verbose, skip_blank_lines, parse_dates, infer_datetime_format, keep_date_col, date_parser, date_format, dayfirst, cache_dates, iterator, chunksize, compression, thousands, decimal, lineterminator, quotechar, quoting, doublequote, escapechar, comment, encoding, encoding_errors, dialect, on_bad_lines, delim_whitespace, low_memory, memory_map, float_precision, storage_options, dtype_backend)\n   1013 kwds_defaults = _refine_defaults_read(\n   1014     dialect,\n   1015     delimiter,\n   (...)\n   1022     dtype_backend=dtype_backend,\n   1023 )\n   1024 kwds.update(kwds_defaults)\n-&gt; 1026 return _read(filepath_or_buffer, kwds)\n\nFile ~/work/notes/notes-islr-py/.venv/lib/python3.10/site-packages/pandas/io/parsers/readers.py:620, in _read(filepath_or_buffer, kwds)\n    617 _validate_names(kwds.get(\"names\", None))\n    619 # Create the parser.\n--&gt; 620 parser = TextFileReader(filepath_or_buffer, **kwds)\n    622 if chunksize or iterator:\n    623     return parser\n\nFile ~/work/notes/notes-islr-py/.venv/lib/python3.10/site-packages/pandas/io/parsers/readers.py:1620, in TextFileReader.__init__(self, f, engine, **kwds)\n   1617     self.options[\"has_index_names\"] = kwds[\"has_index_names\"]\n   1619 self.handles: IOHandles | None = None\n-&gt; 1620 self._engine = self._make_engine(f, self.engine)\n\nFile ~/work/notes/notes-islr-py/.venv/lib/python3.10/site-packages/pandas/io/parsers/readers.py:1880, in TextFileReader._make_engine(self, f, engine)\n   1878     if \"b\" not in mode:\n   1879         mode += \"b\"\n-&gt; 1880 self.handles = get_handle(\n   1881     f,\n   1882     mode,\n   1883     encoding=self.options.get(\"encoding\", None),\n   1884     compression=self.options.get(\"compression\", None),\n   1885     memory_map=self.options.get(\"memory_map\", False),\n   1886     is_text=is_text,\n   1887     errors=self.options.get(\"encoding_errors\", \"strict\"),\n   1888     storage_options=self.options.get(\"storage_options\", None),\n   1889 )\n   1890 assert self.handles is not None\n   1891 f = self.handles.handle\n\nFile ~/work/notes/notes-islr-py/.venv/lib/python3.10/site-packages/pandas/io/common.py:873, in get_handle(path_or_buf, mode, encoding, compression, memory_map, is_text, errors, storage_options)\n    868 elif isinstance(handle, str):\n    869     # Check whether the filename is to be opened in binary mode.\n    870     # Binary mode does not support 'encoding' and 'newline'.\n    871     if ioargs.encoding and \"b\" not in ioargs.mode:\n    872         # Encoding\n--&gt; 873         handle = open(\n    874             handle,\n    875             ioargs.mode,\n    876             encoding=ioargs.encoding,\n    877             errors=errors,\n    878             newline=\"\",\n    879         )\n    880     else:\n    881         # Binary mode\n    882         handle = open(handle, ioargs.mode)\n\nFileNotFoundError: [Errno 2] No such file or directory: 'Auto.data'\n\n\n\nBoth Auto.csv and Auto.data are simply text files. Before loading data into Python, it is a good idea to view it using a text editor or other software, such as Microsoft Excel.\nWe now take a look at the column of Auto corresponding to the variable horsepower:\n\nAuto['horsepower']\n\n\n---------------------------------------------------------------------------\nNameError                                 Traceback (most recent call last)\nCell In[76], line 1\n----&gt; 1 Auto['horsepower']\n\nNameError: name 'Auto' is not defined\n\n\n\nWe see that the dtype of this column is object. It turns out that all values of the horsepower column were interpreted as strings when reading in the data. We can find out why by looking at the unique values.\n\nnp.unique(Auto['horsepower'])\n\n\n---------------------------------------------------------------------------\nNameError                                 Traceback (most recent call last)\nCell In[77], line 1\n----&gt; 1 np.unique(Auto['horsepower'])\n\nNameError: name 'Auto' is not defined\n\n\n\nWe see the culprit is the value ?, which is being used to encode missing values.\nTo fix the problem, we must provide pd.read_csv() with an argument called na_values. Now, each instance of ? in the file is replaced with the value np.nan, which means not a number:\n\nAuto = pd.read_csv('Auto.data',\n                   na_values=['?'],\n                   delim_whitespace=True)\nAuto['horsepower'].sum()\n\n/tmp/ipykernel_100019/931034241.py:1: FutureWarning: The 'delim_whitespace' keyword in pd.read_csv is deprecated and will be removed in a future version. Use ``sep='\\s+'`` instead\n  Auto = pd.read_csv('Auto.data',\n\n\n\n---------------------------------------------------------------------------\nFileNotFoundError                         Traceback (most recent call last)\nCell In[78], line 1\n----&gt; 1 Auto = pd.read_csv('Auto.data',\n      2                    na_values=['?'],\n      3                    delim_whitespace=True)\n      4 Auto['horsepower'].sum()\n\nFile ~/work/notes/notes-islr-py/.venv/lib/python3.10/site-packages/pandas/io/parsers/readers.py:1026, in read_csv(filepath_or_buffer, sep, delimiter, header, names, index_col, usecols, dtype, engine, converters, true_values, false_values, skipinitialspace, skiprows, skipfooter, nrows, na_values, keep_default_na, na_filter, verbose, skip_blank_lines, parse_dates, infer_datetime_format, keep_date_col, date_parser, date_format, dayfirst, cache_dates, iterator, chunksize, compression, thousands, decimal, lineterminator, quotechar, quoting, doublequote, escapechar, comment, encoding, encoding_errors, dialect, on_bad_lines, delim_whitespace, low_memory, memory_map, float_precision, storage_options, dtype_backend)\n   1013 kwds_defaults = _refine_defaults_read(\n   1014     dialect,\n   1015     delimiter,\n   (...)\n   1022     dtype_backend=dtype_backend,\n   1023 )\n   1024 kwds.update(kwds_defaults)\n-&gt; 1026 return _read(filepath_or_buffer, kwds)\n\nFile ~/work/notes/notes-islr-py/.venv/lib/python3.10/site-packages/pandas/io/parsers/readers.py:620, in _read(filepath_or_buffer, kwds)\n    617 _validate_names(kwds.get(\"names\", None))\n    619 # Create the parser.\n--&gt; 620 parser = TextFileReader(filepath_or_buffer, **kwds)\n    622 if chunksize or iterator:\n    623     return parser\n\nFile ~/work/notes/notes-islr-py/.venv/lib/python3.10/site-packages/pandas/io/parsers/readers.py:1620, in TextFileReader.__init__(self, f, engine, **kwds)\n   1617     self.options[\"has_index_names\"] = kwds[\"has_index_names\"]\n   1619 self.handles: IOHandles | None = None\n-&gt; 1620 self._engine = self._make_engine(f, self.engine)\n\nFile ~/work/notes/notes-islr-py/.venv/lib/python3.10/site-packages/pandas/io/parsers/readers.py:1880, in TextFileReader._make_engine(self, f, engine)\n   1878     if \"b\" not in mode:\n   1879         mode += \"b\"\n-&gt; 1880 self.handles = get_handle(\n   1881     f,\n   1882     mode,\n   1883     encoding=self.options.get(\"encoding\", None),\n   1884     compression=self.options.get(\"compression\", None),\n   1885     memory_map=self.options.get(\"memory_map\", False),\n   1886     is_text=is_text,\n   1887     errors=self.options.get(\"encoding_errors\", \"strict\"),\n   1888     storage_options=self.options.get(\"storage_options\", None),\n   1889 )\n   1890 assert self.handles is not None\n   1891 f = self.handles.handle\n\nFile ~/work/notes/notes-islr-py/.venv/lib/python3.10/site-packages/pandas/io/common.py:873, in get_handle(path_or_buf, mode, encoding, compression, memory_map, is_text, errors, storage_options)\n    868 elif isinstance(handle, str):\n    869     # Check whether the filename is to be opened in binary mode.\n    870     # Binary mode does not support 'encoding' and 'newline'.\n    871     if ioargs.encoding and \"b\" not in ioargs.mode:\n    872         # Encoding\n--&gt; 873         handle = open(\n    874             handle,\n    875             ioargs.mode,\n    876             encoding=ioargs.encoding,\n    877             errors=errors,\n    878             newline=\"\",\n    879         )\n    880     else:\n    881         # Binary mode\n    882         handle = open(handle, ioargs.mode)\n\nFileNotFoundError: [Errno 2] No such file or directory: 'Auto.data'\n\n\n\nThe Auto.shape attribute tells us that the data has 397 observations, or rows, and nine variables, or columns.\n\nAuto.shape\n\n\n---------------------------------------------------------------------------\nNameError                                 Traceback (most recent call last)\nCell In[79], line 1\n----&gt; 1 Auto.shape\n\nNameError: name 'Auto' is not defined\n\n\n\nThere are various ways to deal with missing data. In this case, since only five of the rows contain missing observations, we choose to use the Auto.dropna() method to simply remove these rows.\n\nAuto_new = Auto.dropna()\nAuto_new.shape\n\n\n---------------------------------------------------------------------------\nNameError                                 Traceback (most recent call last)\nCell In[80], line 1\n----&gt; 1 Auto_new = Auto.dropna()\n      2 Auto_new.shape\n\nNameError: name 'Auto' is not defined\n\n\n\n\n\n\nWe can use Auto.columns to check the variable names.\n\nAuto = Auto_new # overwrite the previous value\nAuto.columns\n\n\n---------------------------------------------------------------------------\nNameError                                 Traceback (most recent call last)\nCell In[81], line 1\n----&gt; 1 Auto = Auto_new # overwrite the previous value\n      2 Auto.columns\n\nNameError: name 'Auto_new' is not defined\n\n\n\nAccessing the rows and columns of a data frame is similar, but not identical, to accessing the rows and columns of an array. Recall that the first argument to the [] method is always applied to the rows of the array.\nSimilarly, passing in a slice to the [] method creates a data frame whose rows are determined by the slice:\n\nAuto[:3]\n\n\n---------------------------------------------------------------------------\nNameError                                 Traceback (most recent call last)\nCell In[82], line 1\n----&gt; 1 Auto[:3]\n\nNameError: name 'Auto' is not defined\n\n\n\nSimilarly, an array of Booleans can be used to subset the rows:\n\nidx_80 = Auto['year'] &gt; 80\nAuto[idx_80]\n\n\n---------------------------------------------------------------------------\nNameError                                 Traceback (most recent call last)\nCell In[83], line 1\n----&gt; 1 idx_80 = Auto['year'] &gt; 80\n      2 Auto[idx_80]\n\nNameError: name 'Auto' is not defined\n\n\n\nHowever, if we pass in a list of strings to the [] method, then we obtain a data frame containing the corresponding set of columns.\n\nAuto[['mpg', 'horsepower']]\n\n\n---------------------------------------------------------------------------\nNameError                                 Traceback (most recent call last)\nCell In[84], line 1\n----&gt; 1 Auto[['mpg', 'horsepower']]\n\nNameError: name 'Auto' is not defined\n\n\n\nSince we did not specify an index column when we loaded our data frame, the rows are labeled using integers 0 to 396.\n\nAuto.index\n\n\n---------------------------------------------------------------------------\nNameError                                 Traceback (most recent call last)\nCell In[85], line 1\n----&gt; 1 Auto.index\n\nNameError: name 'Auto' is not defined\n\n\n\nWe can use the set_index() method to re-name the rows using the contents of Auto['name'].\n\nAuto_re = Auto.set_index('name')\nAuto_re\n\n\n---------------------------------------------------------------------------\nNameError                                 Traceback (most recent call last)\nCell In[86], line 1\n----&gt; 1 Auto_re = Auto.set_index('name')\n      2 Auto_re\n\nNameError: name 'Auto' is not defined\n\n\n\n\nAuto_re.columns\n\n\n---------------------------------------------------------------------------\nNameError                                 Traceback (most recent call last)\nCell In[87], line 1\n----&gt; 1 Auto_re.columns\n\nNameError: name 'Auto_re' is not defined\n\n\n\nWe see that the column 'name' is no longer there.\nNow that the index has been set to name, we can access rows of the data frame by name using the {loc[]} method of Auto:\n\nrows = ['amc rebel sst', 'ford torino']\nAuto_re.loc[rows]\n\n\n---------------------------------------------------------------------------\nNameError                                 Traceback (most recent call last)\nCell In[88], line 2\n      1 rows = ['amc rebel sst', 'ford torino']\n----&gt; 2 Auto_re.loc[rows]\n\nNameError: name 'Auto_re' is not defined\n\n\n\nAs an alternative to using the index name, we could retrieve the 4th and 5th rows of Auto using the {iloc[]} method:\n\nAuto_re.iloc[[3,4]]\n\n\n---------------------------------------------------------------------------\nNameError                                 Traceback (most recent call last)\nCell In[89], line 1\n----&gt; 1 Auto_re.iloc[[3,4]]\n\nNameError: name 'Auto_re' is not defined\n\n\n\nWe can also use it to retrieve the 1st, 3rd and and 4th columns of Auto_re:\n\nAuto_re.iloc[:,[0,2,3]]\n\n\n---------------------------------------------------------------------------\nNameError                                 Traceback (most recent call last)\nCell In[90], line 1\n----&gt; 1 Auto_re.iloc[:,[0,2,3]]\n\nNameError: name 'Auto_re' is not defined\n\n\n\nWe can extract the 4th and 5th rows, as well as the 1st, 3rd and 4th columns, using a single call to iloc[]:\n\nAuto_re.iloc[[3,4],[0,2,3]]\n\n\n---------------------------------------------------------------------------\nNameError                                 Traceback (most recent call last)\nCell In[91], line 1\n----&gt; 1 Auto_re.iloc[[3,4],[0,2,3]]\n\nNameError: name 'Auto_re' is not defined\n\n\n\nIndex entries need not be unique: there are several cars in the data frame named ford galaxie 500.\n\nAuto_re.loc['ford galaxie 500', ['mpg', 'origin']]\n\n\n---------------------------------------------------------------------------\nNameError                                 Traceback (most recent call last)\nCell In[92], line 1\n----&gt; 1 Auto_re.loc['ford galaxie 500', ['mpg', 'origin']]\n\nNameError: name 'Auto_re' is not defined\n\n\n\n\n\n\nSuppose now that we want to create a data frame consisting of the weight and origin of the subset of cars with year greater than 80 — i.e. those built after 1980. To do this, we first create a Boolean array that indexes the rows. The loc[] method allows for Boolean entries as well as strings:\n\nidx_80 = Auto_re['year'] &gt; 80\nAuto_re.loc[idx_80, ['weight', 'origin']]\n\n\n---------------------------------------------------------------------------\nNameError                                 Traceback (most recent call last)\nCell In[93], line 1\n----&gt; 1 idx_80 = Auto_re['year'] &gt; 80\n      2 Auto_re.loc[idx_80, ['weight', 'origin']]\n\nNameError: name 'Auto_re' is not defined\n\n\n\nTo do this more concisely, we can use an anonymous function called a lambda:\n\nAuto_re.loc[lambda df: df['year'] &gt; 80, ['weight', 'origin']]\n\n\n---------------------------------------------------------------------------\nNameError                                 Traceback (most recent call last)\nCell In[94], line 1\n----&gt; 1 Auto_re.loc[lambda df: df['year'] &gt; 80, ['weight', 'origin']]\n\nNameError: name 'Auto_re' is not defined\n\n\n\nThe lambda call creates a function that takes a single argument, here df, and returns df['year']&gt;80. Since it is created inside the loc[] method for the dataframe Auto_re, that dataframe will be the argument supplied. As another example of using a lambda, suppose that we want all cars built after 1980 that achieve greater than 30 miles per gallon:\n\nAuto_re.loc[lambda df: (df['year'] &gt; 80) & (df['mpg'] &gt; 30),\n            ['weight', 'origin']\n           ]\n\n\n---------------------------------------------------------------------------\nNameError                                 Traceback (most recent call last)\nCell In[95], line 1\n----&gt; 1 Auto_re.loc[lambda df: (df['year'] &gt; 80) & (df['mpg'] &gt; 30),\n      2             ['weight', 'origin']\n      3            ]\n\nNameError: name 'Auto_re' is not defined\n\n\n\nThe symbol & computes an element-wise and operation. As another example, suppose that we want to retrieve all Ford and Datsun cars with displacement less than 300. We check whether each name entry contains either the string ford or datsun using the str.contains() method of the index attribute of of the dataframe:\n\nAuto_re.loc[lambda df: (df['displacement'] &lt; 300)\n                       & (df.index.str.contains('ford')\n                       | df.index.str.contains('datsun')),\n            ['weight', 'origin']\n           ]\n\n\n---------------------------------------------------------------------------\nNameError                                 Traceback (most recent call last)\nCell In[96], line 1\n----&gt; 1 Auto_re.loc[lambda df: (df['displacement'] &lt; 300)\n      2                        & (df.index.str.contains('ford')\n      3                        | df.index.str.contains('datsun')),\n      4             ['weight', 'origin']\n      5            ]\n\nNameError: name 'Auto_re' is not defined\n\n\n\nHere, the symbol | computes an element-wise or operation.\nIn summary, a powerful set of operations is available to index the rows and columns of data frames. For integer based queries, use the iloc[] method. For string and Boolean selections, use the loc[] method. For functional queries that filter rows, use the loc[] method with a function (typically a lambda) in the rows argument.\n\n\n\n\nA for loop is a standard tool in many languages that repeatedly evaluates some chunk of code while varying different values inside the code. For example, suppose we loop over elements of a list and compute their sum.\n\ntotal = 0\nfor value in [3,2,19]:\n    total += value\nprint('Total is: {0}'.format(total))\n\nTotal is: 24\n\n\nThe indented code beneath the line with the for statement is run for each value in the sequence specified in the for statement. The loop ends either when the cell ends or when code is indented at the same level as the original for statement. We see that the final line above which prints the total is executed only once after the for loop has terminated. Loops can be nested by additional indentation.\n\ntotal = 0\nfor value in [2,3,19]:\n    for weight in [3, 2, 1]:\n        total += value * weight\nprint('Total is: {0}'.format(total))\n\nTotal is: 144\n\n\nAbove, we summed over each combination of value and weight. We also took advantage of the increment notation in Python: the expression a += b is equivalent to a = a + b. Besides being a convenient notation, this can save time in computationally heavy tasks in which the intermediate value of a+b need not be explicitly created.\nPerhaps a more common task would be to sum over (value, weight) pairs. For instance, to compute the average value of a random variable that takes on possible values 2, 3 or 19 with probability 0.2, 0.3, 0.5 respectively we would compute the weighted sum. Tasks such as this can often be accomplished using the zip() function that loops over a sequence of tuples.\n\ntotal = 0\nfor value, weight in zip([2,3,19],\n                         [0.2,0.3,0.5]):\n    total += weight * value\nprint('Weighted average is: {0}'.format(total))\n\nWeighted average is: 10.8\n\n\n\n\nIn the code chunk above we also printed a string displaying the total. However, the object total is an integer and not a string. Inserting the value of something into a string is a common task, made simple using some of the powerful string formatting tools in Python. Many data cleaning tasks involve manipulating and programmatically producing strings.\nFor example we may want to loop over the columns of a data frame and print the percent missing in each column. Let’s create a data frame D with columns in which 20% of the entries are missing i.e. set to np.nan. We’ll create the values in D from a normal distribution with mean 0 and variance 1 using rng.standard_normal() and then overwrite some random entries using rng.choice().\n\nrng = np.random.default_rng(1)\nA = rng.standard_normal((127, 5))\nM = rng.choice([0, np.nan], p=[0.8,0.2], size=A.shape)\nA += M\nD = pd.DataFrame(A, columns=['food',\n                             'bar',\n                             'pickle',\n                             'snack',\n                             'popcorn'])\nD[:3]\n\n\n\n\n\n\n\n\nfood\nbar\npickle\nsnack\npopcorn\n\n\n\n\n0\n0.345584\n0.821618\n0.330437\n-1.303157\nNaN\n\n\n1\nNaN\n-0.536953\n0.581118\n0.364572\n0.294132\n\n\n2\nNaN\n0.546713\nNaN\n-0.162910\n-0.482119\n\n\n\n\n\n\n\n\nfor col in D.columns:\n    template = 'Column \"{0}\" has {1:.2%} missing values'\n    print(template.format(col,\n          np.isnan(D[col]).mean()))\n\nColumn \"food\" has 16.54% missing values\nColumn \"bar\" has 25.98% missing values\nColumn \"pickle\" has 29.13% missing values\nColumn \"snack\" has 21.26% missing values\nColumn \"popcorn\" has 22.83% missing values\n\n\nWe see that the template.format() method expects two arguments {0} and {1:.2%}, and the latter includes some formatting information. In particular, it specifies that the second argument should be expressed as a percent with two decimal digits.\nThe reference docs.python.org/3/library/string.html includes many helpful and more complex examples.\n\n\n\n\nWe can use the ax.plot() or ax.scatter() functions to display the quantitative variables. However, simply typing the variable names will produce an error message, because Python does not know to look in the Auto data set for those variables.\n\nfig, ax = subplots(figsize=(8, 8))\nax.plot(horsepower, mpg, 'o');\n\n\n---------------------------------------------------------------------------\nNameError                                 Traceback (most recent call last)\nCell In[102], line 2\n      1 fig, ax = subplots(figsize=(8, 8))\n----&gt; 2 ax.plot(horsepower, mpg, 'o');\n\nNameError: name 'horsepower' is not defined\n\n\n\n\n\n\n\n\n\n\nWe can address this by accessing the columns directly:\n\nfig, ax = subplots(figsize=(8, 8))\nax.plot(Auto['horsepower'], Auto['mpg'], 'o');\n\n\n---------------------------------------------------------------------------\nNameError                                 Traceback (most recent call last)\nCell In[103], line 2\n      1 fig, ax = subplots(figsize=(8, 8))\n----&gt; 2 ax.plot(Auto['horsepower'], Auto['mpg'], 'o');\n\nNameError: name 'Auto' is not defined\n\n\n\n\n\n\n\n\n\n\nAlternatively, we can use the plot() method with the call Auto.plot(). Using this method, the variables can be accessed by name. The plot methods of a data frame return a familiar object: an axes. We can use it to update the plot as we did previously:\n\nax = Auto.plot.scatter('horsepower', 'mpg')\nax.set_title('Horsepower vs. MPG');\n\n\n---------------------------------------------------------------------------\nNameError                                 Traceback (most recent call last)\nCell In[104], line 1\n----&gt; 1 ax = Auto.plot.scatter('horsepower', 'mpg')\n      2 ax.set_title('Horsepower vs. MPG');\n\nNameError: name 'Auto' is not defined\n\n\n\nIf we want to save the figure that contains a given axes, we can find the relevant figure by accessing the figure attribute:\n\nfig = ax.figure\nfig.savefig('horsepower_mpg.png');\n\nWe can further instruct the data frame to plot to a particular axes object. In this case the corresponding plot() method will return the modified axes we passed in as an argument. Note that when we request a one-dimensional grid of plots, the object axes is similarly one-dimensional. We place our scatter plot in the middle plot of a row of three plots within a figure.\n\nfig, axes = subplots(ncols=3, figsize=(15, 5))\nAuto.plot.scatter('horsepower', 'mpg', ax=axes[1]);\n\n\n---------------------------------------------------------------------------\nNameError                                 Traceback (most recent call last)\nCell In[106], line 2\n      1 fig, axes = subplots(ncols=3, figsize=(15, 5))\n----&gt; 2 Auto.plot.scatter('horsepower', 'mpg', ax=axes[1]);\n\nNameError: name 'Auto' is not defined\n\n\n\n\n\n\n\n\n\n\nNote also that the columns of a data frame can be accessed as attributes: try typing in Auto.horsepower.\nWe now consider the cylinders variable. Typing in Auto.cylinders.dtype reveals that it is being treated as a quantitative variable. However, since there is only a small number of possible values for this variable, we may wish to treat it as qualitative. Below, we replace the cylinders column with a categorical version of Auto.cylinders. The function pd.Series() owes its name to the fact that pandas is often used in time series applications.\n\nAuto.cylinders = pd.Series(Auto.cylinders, dtype='category')\nAuto.cylinders.dtype\n\n\n---------------------------------------------------------------------------\nNameError                                 Traceback (most recent call last)\nCell In[107], line 1\n----&gt; 1 Auto.cylinders = pd.Series(Auto.cylinders, dtype='category')\n      2 Auto.cylinders.dtype\n\nNameError: name 'Auto' is not defined\n\n\n\nNow that cylinders is qualitative, we can display it using the boxplot() method.\n\nfig, ax = subplots(figsize=(8, 8))\nAuto.boxplot('mpg', by='cylinders', ax=ax);\n\n\n---------------------------------------------------------------------------\nNameError                                 Traceback (most recent call last)\nCell In[108], line 2\n      1 fig, ax = subplots(figsize=(8, 8))\n----&gt; 2 Auto.boxplot('mpg', by='cylinders', ax=ax);\n\nNameError: name 'Auto' is not defined\n\n\n\n\n\n\n\n\n\n\nThe hist() method can be used to plot a histogram.\n\nfig, ax = subplots(figsize=(8, 8))\nAuto.hist('mpg', ax=ax);\n\n\n---------------------------------------------------------------------------\nNameError                                 Traceback (most recent call last)\nCell In[109], line 2\n      1 fig, ax = subplots(figsize=(8, 8))\n----&gt; 2 Auto.hist('mpg', ax=ax);\n\nNameError: name 'Auto' is not defined\n\n\n\n\n\n\n\n\n\n\nThe color of the bars and the number of bins can be changed:\n\nfig, ax = subplots(figsize=(8, 8))\nAuto.hist('mpg', color='red', bins=12, ax=ax);\n\n\n---------------------------------------------------------------------------\nNameError                                 Traceback (most recent call last)\nCell In[110], line 2\n      1 fig, ax = subplots(figsize=(8, 8))\n----&gt; 2 Auto.hist('mpg', color='red', bins=12, ax=ax);\n\nNameError: name 'Auto' is not defined\n\n\n\n\n\n\n\n\n\n\nSee Auto.hist? for more plotting options.\nWe can use the pd.plotting.scatter_matrix() function to create a scatterplot matrix to visualize all of the pairwise relationships between the columns in a data frame.\n\npd.plotting.scatter_matrix(Auto);\n\n\n---------------------------------------------------------------------------\nNameError                                 Traceback (most recent call last)\nCell In[111], line 1\n----&gt; 1 pd.plotting.scatter_matrix(Auto);\n\nNameError: name 'Auto' is not defined\n\n\n\nWe can also produce scatterplots for a subset of the variables.\n\npd.plotting.scatter_matrix(Auto[['mpg',\n                                 'displacement',\n                                 'weight']]);\n\n\n---------------------------------------------------------------------------\nNameError                                 Traceback (most recent call last)\nCell In[112], line 1\n----&gt; 1 pd.plotting.scatter_matrix(Auto[['mpg',\n      2                                  'displacement',\n      3                                  'weight']]);\n\nNameError: name 'Auto' is not defined\n\n\n\nThe describe() method produces a numerical summary of each column in a data frame.\n\nAuto[['mpg', 'weight']].describe()\n\n\n---------------------------------------------------------------------------\nNameError                                 Traceback (most recent call last)\nCell In[113], line 1\n----&gt; 1 Auto[['mpg', 'weight']].describe()\n\nNameError: name 'Auto' is not defined\n\n\n\nWe can also produce a summary of just a single column.\n\nAuto['cylinders'].describe()\nAuto['mpg'].describe()\n\n\n---------------------------------------------------------------------------\nNameError                                 Traceback (most recent call last)\nCell In[114], line 1\n----&gt; 1 Auto['cylinders'].describe()\n      2 Auto['mpg'].describe()\n\nNameError: name 'Auto' is not defined\n\n\n\nTo exit Jupyter, select File / Shut Down."
  },
  {
    "objectID": "posts/ch02-statistical-learning/Ch02-statlearn-lab.html#getting-started",
    "href": "posts/ch02-statistical-learning/Ch02-statlearn-lab.html#getting-started",
    "title": "Chapter 2: Introduction to Python",
    "section": "",
    "text": "To run the labs in this book, you will need two things:\n\nAn installation of Python3, which is the specific version of Python used in the labs.\nAccess to Jupyter, a very popular Python interface that runs code through a file called a notebook.\n\nYou can download and install Python3 by following the instructions available at anaconda.com.\nThere are a number of ways to get access to Jupyter. Here are just a few:\n\nUsing Google’s Colaboratory service: colab.research.google.com/.\nUsing JupyterHub, available at jupyter.org/hub.\nUsing your own jupyter installation. Installation instructions are available at jupyter.org/install.\n\nPlease see the Python resources page on the book website statlearning.com for up-to-date information about getting Python and Jupyter working on your computer.\nYou will need to install the ISLP package, which provides access to the datasets and custom-built functions that we provide. Inside a macOS or Linux terminal type pip install ISLP; this also installs most other packages needed in the labs. The Python resources page has a link to the ISLP documentation website.\nTo run this lab, download the file Ch2-statlearn-lab.ipynb from the Python resources page. Now run the following code at the command line: jupyter lab Ch2-statlearn-lab.ipynb.\nIf you’re using Windows, you can use the start menu to access anaconda, and follow the links. For example, to install ISLP and run this lab, you can run the same code above in an anaconda shell."
  },
  {
    "objectID": "posts/ch02-statistical-learning/Ch02-statlearn-lab.html#basic-commands",
    "href": "posts/ch02-statistical-learning/Ch02-statlearn-lab.html#basic-commands",
    "title": "Chapter 2: Introduction to Python",
    "section": "",
    "text": "In this lab, we will introduce some simple Python commands. For more resources about Python in general, readers may want to consult the tutorial at docs.python.org/3/tutorial/.\nLike most programming languages, Python uses functions to perform operations. To run a function called fun, we type fun(input1,input2), where the inputs (or arguments) input1 and input2 tell Python how to run the function. A function can have any number of inputs. For example, the print() function outputs a text representation of all of its arguments to the console.\n\nprint('fit a model with', 11, 'variables')\n\nfit a model with 11 variables\n\n\nThe following command will provide information about the print() function.\n\nprint?\n\nAdding two integers in Python is pretty intuitive.\n\n3 + 5\n\n8\n\n\nIn Python, textual data is handled using strings. For instance, \"hello\" and 'hello' are strings. We can concatenate them using the addition + symbol.\n\n\"hello\" + \" \" + \"world\"\n\n'hello world'\n\n\nA string is actually a type of sequence: this is a generic term for an ordered list. The three most important types of sequences are lists, tuples, and strings.\nWe introduce lists now.\nThe following command instructs Python to join together the numbers 3, 4, and 5, and to save them as a list named x. When we type x, it gives us back the list.\n\nx = [3, 4, 5]\nx\n\n[3, 4, 5]\n\n\nNote that we used the brackets [] to construct this list.\nWe will often want to add two sets of numbers together. It is reasonable to try the following code, though it will not produce the desired results.\n\ny = [4, 9, 7]\nx + y\n\n[3, 4, 5, 4, 9, 7]\n\n\nThe result may appear slightly counterintuitive: why did Python not add the entries of the lists element-by-element? In Python, lists hold arbitrary objects, and are added using concatenation. In fact, concatenation is the behavior that we saw earlier when we entered \"hello\" + \" \" + \"world\".\nThis example reflects the fact that Python is a general-purpose programming language. Much of Python’s data-specific functionality comes from other packages, notably numpy and pandas. In the next section, we will introduce the numpy package. See docs.scipy.org/doc/numpy/user/quickstart.html for more information about numpy."
  },
  {
    "objectID": "posts/ch02-statistical-learning/Ch02-statlearn-lab.html#introduction-to-numerical-python",
    "href": "posts/ch02-statistical-learning/Ch02-statlearn-lab.html#introduction-to-numerical-python",
    "title": "Chapter 2: Introduction to Python",
    "section": "",
    "text": "As mentioned earlier, this book makes use of functionality that is contained in the numpy library, or package. A package is a collection of modules that are not necessarily included in the base Python distribution. The name numpy is an abbreviation for numerical Python.\nTo access numpy, we must first import it.\n\nimport numpy as np \n\nIn the previous line, we named the numpy module np; an abbreviation for easier referencing.\nIn numpy, an array is a generic term for a multidimensional set of numbers. We use the np.array() function to define x and y, which are one-dimensional arrays, i.e. vectors.\n\nx = np.array([3, 4, 5])\ny = np.array([4, 9, 7])\n\nNote that if you forgot to run the import numpy as np command earlier, then you will encounter an error in calling the np.array() function in the previous line. The syntax np.array() indicates that the function being called is part of the numpy package, which we have abbreviated as np.\nSince x and y have been defined using np.array(), we get a sensible result when we add them together. Compare this to our results in the previous section, when we tried to add two lists without using numpy.\n\nx + y\n\narray([ 7, 13, 12])\n\n\nIn numpy, matrices are typically represented as two-dimensional arrays, and vectors as one-dimensional arrays. {While it is also possible to create matrices using np.matrix(), we will use np.array() throughout the labs in this book.} We can create a two-dimensional array as follows.\n\nx = np.array([[1, 2], [3, 4]])\nx\n\narray([[1, 2],\n       [3, 4]])\n\n\nThe object x has several attributes, or associated objects. To access an attribute of x, we type x.attribute, where we replace attribute with the name of the attribute. For instance, we can access the ndim attribute of x as follows.\n\nx.ndim\n\n2\n\n\nThe output indicates that x is a two-dimensional array.\nSimilarly, x.dtype is the data type attribute of the object x. This indicates that x is comprised of 64-bit integers:\n\nx.dtype\n\ndtype('int64')\n\n\nWhy is x comprised of integers? This is because we created x by passing in exclusively integers to the np.array() function. If we had passed in any decimals, then we would have obtained an array of floating point numbers (i.e. real-valued numbers).\n\nnp.array([[1, 2], [3.0, 4]]).dtype\n\ndtype('float64')\n\n\nTyping fun? will cause Python to display documentation associated with the function fun, if it exists. We can try this for np.array().\n\nnp.array?\n\nThis documentation indicates that we could create a floating point array by passing a dtype argument into np.array().\n\nnp.array([[1, 2], [3, 4]], float).dtype\n\ndtype('float64')\n\n\nThe array x is two-dimensional. We can find out the number of rows and columns by looking at its shape attribute.\n\nx.shape\n\n(2, 2)\n\n\nA method is a function that is associated with an object. For instance, given an array x, the expression x.sum() sums all of its elements, using the sum() method for arrays. The call x.sum() automatically provides x as the first argument to its sum() method.\n\nx = np.array([1, 2, 3, 4])\nx.sum()\n\n10\n\n\nWe could also sum the elements of x by passing in x as an argument to the np.sum() function.\n\nx = np.array([1, 2, 3, 4])\nnp.sum(x)\n\n10\n\n\nAs another example, the reshape() method returns a new array with the same elements as x, but a different shape. We do this by passing in a tuple in our call to reshape(), in this case (2, 3). This tuple specifies that we would like to create a two-dimensional array with 2 rows and 3 columns. {Like lists, tuples represent a sequence of objects. Why do we need more than one way to create a sequence? There are a few differences between tuples and lists, but perhaps the most important is that elements of a tuple cannot be modified, whereas elements of a list can be.}\nIn what follows, the \\n character creates a new line.\n\nx = np.array([1, 2, 3, 4, 5, 6])\nprint('beginning x:\\n', x)\nx_reshape = x.reshape((2, 3))\nprint('reshaped x:\\n', x_reshape)\n\nbeginning x:\n [1 2 3 4 5 6]\nreshaped x:\n [[1 2 3]\n [4 5 6]]\n\n\nThe previous output reveals that numpy arrays are specified as a sequence of rows. This is called row-major ordering, as opposed to column-major ordering.\nPython (and hence numpy) uses 0-based indexing. This means that to access the top left element of x_reshape, we type in x_reshape[0,0].\n\nx_reshape[0, 0] \n\n1\n\n\nSimilarly, x_reshape[1,2] yields the element in the second row and the third column of x_reshape.\n\nx_reshape[1, 2] \n\n6\n\n\nSimilarly, x[2] yields the third entry of x.\nNow, let’s modify the top left element of x_reshape. To our surprise, we discover that the first element of x has been modified as well!\n\nprint('x before we modify x_reshape:\\n', x)\nprint('x_reshape before we modify x_reshape:\\n', x_reshape)\nx_reshape[0, 0] = 5\nprint('x_reshape after we modify its top left element:\\n', x_reshape)\nprint('x after we modify top left element of x_reshape:\\n', x)\n\nx before we modify x_reshape:\n [1 2 3 4 5 6]\nx_reshape before we modify x_reshape:\n [[1 2 3]\n [4 5 6]]\nx_reshape after we modify its top left element:\n [[5 2 3]\n [4 5 6]]\nx after we modify top left element of x_reshape:\n [5 2 3 4 5 6]\n\n\nModifying x_reshape also modified x because the two objects occupy the same space in memory.\nWe just saw that we can modify an element of an array. Can we also modify a tuple? It turns out that we cannot — and trying to do so introduces an exception, or error.\n\nmy_tuple = (3, 4, 5)\nmy_tuple[0] = 2\n\n\n---------------------------------------------------------------------------\nTypeError                                 Traceback (most recent call last)\nCell In[23], line 2\n      1 my_tuple = (3, 4, 5)\n----&gt; 2 my_tuple[0] = 2\n\nTypeError: 'tuple' object does not support item assignment\n\n\n\nWe now briefly mention some attributes of arrays that will come in handy. An array’s shape attribute contains its dimension; this is always a tuple. The ndim attribute yields the number of dimensions, and T provides its transpose.\n\nx_reshape.shape, x_reshape.ndim, x_reshape.T\n\n((2, 3),\n 2,\n array([[5, 4],\n        [2, 5],\n        [3, 6]]))\n\n\nNotice that the three individual outputs (2,3), 2, and array([[5, 4],[2, 5], [3,6]]) are themselves output as a tuple.\nWe will often want to apply functions to arrays. For instance, we can compute the square root of the entries using the np.sqrt() function:\n\nnp.sqrt(x)\n\narray([2.23606798, 1.41421356, 1.73205081, 2.        , 2.23606798,\n       2.44948974])\n\n\nWe can also square the elements:\n\nx**2\n\narray([25,  4,  9, 16, 25, 36])\n\n\nWe can compute the square roots using the same notation, raising to the power of 1/2 instead of 2.\n\nx**0.5\n\narray([2.23606798, 1.41421356, 1.73205081, 2.        , 2.23606798,\n       2.44948974])\n\n\nThroughout this book, we will often want to generate random data. The np.random.normal() function generates a vector of random normal variables. We can learn more about this function by looking at the help page, via a call to np.random.normal?. The first line of the help page reads normal(loc=0.0, scale=1.0, size=None). This signature line tells us that the function’s arguments are loc, scale, and size. These are keyword arguments, which means that when they are passed into the function, they can be referred to by name (in any order). {Python also uses positional arguments. Positional arguments do not need to use a keyword. To see an example, type in np.sum?. We see that a is a positional argument, i.e. this function assumes that the first unnamed argument that it receives is the array to be summed. By contrast, axis and dtype are keyword arguments: the position in which these arguments are entered into np.sum() does not matter.} By default, this function will generate random normal variable(s) with mean (loc) 0 and standard deviation (scale) 1; furthermore, a single random variable will be generated unless the argument to size is changed.\nWe now generate 50 independent random variables from a N(0,1) distribution.\n\nx = np.random.normal(size=50)\nx\n\narray([ 2.17030041,  1.71170017,  0.72847949,  0.93966694, -1.1480785 ,\n        0.75434066, -0.57484423, -0.32130848,  2.05296668,  0.24949327,\n        0.02881639,  0.95272842, -0.33974506, -0.12977814, -1.47989099,\n       -1.13401345,  0.88028112,  0.93388325,  0.98929649, -0.10508831,\n       -0.44337386, -0.31018588,  0.8730601 , -0.6429277 ,  2.08238407,\n       -0.70217249,  0.99403647,  0.58294926,  1.39995453, -0.52925884,\n       -0.85855133, -0.22609025,  0.60207586, -0.77332272,  3.04543919,\n       -0.04105949,  0.33714973,  0.07071815, -0.47618398, -1.21672748,\n        0.05673077,  0.32489449, -0.4481223 ,  0.47967377, -0.86134873,\n       -1.47898739, -1.24258321, -0.25466507, -0.4865819 , -0.44858063])\n\n\nWe create an array y by adding an independent N(50,1) random variable to each element of x.\n\ny = x + np.random.normal(loc=50, scale=1, size=50)\n\nThe np.corrcoef() function computes the correlation matrix between x and y. The off-diagonal elements give the correlation between x and y.\n\nnp.corrcoef(x, y)\n\narray([[1.        , 0.74725094],\n       [0.74725094, 1.        ]])\n\n\nIf you’re following along in your own Jupyter notebook, then you probably noticed that you got a different set of results when you ran the past few commands. In particular, each time we call np.random.normal(), we will get a different answer, as shown in the following example.\n\nprint(np.random.normal(scale=5, size=2))\nprint(np.random.normal(scale=5, size=2)) \n\n[-8.13106346  4.38081042]\n[-7.08021424 -0.85361414]\n\n\nIn order to ensure that our code provides exactly the same results each time it is run, we can set a random seed using the np.random.default_rng() function. This function takes an arbitrary, user-specified integer argument. If we set a random seed before generating random data, then re-running our code will yield the same results. The object rng has essentially all the random number generating methods found in np.random. Hence, to generate normal data we use rng.normal().\n\nrng = np.random.default_rng(1303)\nprint(rng.normal(scale=5, size=2))\nrng2 = np.random.default_rng(1303)\nprint(rng2.normal(scale=5, size=2)) \n\n[ 4.09482632 -1.07485605]\n[ 4.09482632 -1.07485605]\n\n\nThroughout the labs in this book, we use np.random.default_rng() whenever we perform calculations involving random quantities within numpy. In principle, this should enable the reader to exactly reproduce the stated results. However, as new versions of numpy become available, it is possible that some small discrepancies may occur between the output in the labs and the output from numpy.\nThe np.mean(), np.var(), and np.std() functions can be used to compute the mean, variance, and standard deviation of arrays. These functions are also available as methods on the arrays.\n\nrng = np.random.default_rng(3)\ny = rng.standard_normal(10)\nnp.mean(y), y.mean()\n\n(-0.1126795190952861, -0.1126795190952861)\n\n\n\nnp.var(y), y.var(), np.mean((y - y.mean())**2)\n\n(2.7243406406465125, 2.7243406406465125, 2.7243406406465125)\n\n\nNotice that by default np.var() divides by the sample size n rather than n-1; see the ddof argument in np.var?.\n\nnp.sqrt(np.var(y)), np.std(y)\n\n(1.6505576756498128, 1.6505576756498128)\n\n\nThe np.mean(), np.var(), and np.std() functions can also be applied to the rows and columns of a matrix. To see this, we construct a 10 \\times 3 matrix of N(0,1) random variables, and consider computing its row sums.\n\nX = rng.standard_normal((10, 3))\nX\n\narray([[ 0.22578661, -0.35263079, -0.28128742],\n       [-0.66804635, -1.05515055, -0.39080098],\n       [ 0.48194539, -0.23855361,  0.9577587 ],\n       [-0.19980213,  0.02425957,  1.54582085],\n       [ 0.54510552, -0.50522874, -0.18283897],\n       [ 0.54052513,  1.93508803, -0.26962033],\n       [-0.24355868,  1.0023136 , -0.88645994],\n       [-0.29172023,  0.88253897,  0.58035002],\n       [ 0.0915167 ,  0.67010435, -2.82816231],\n       [ 1.02130682, -0.95964476, -1.66861984]])\n\n\nSince arrays are row-major ordered, the first axis, i.e. axis=0, refers to its rows. We pass this argument into the mean() method for the object X.\n\nX.mean(axis=0)\n\narray([ 0.15030588,  0.14030961, -0.34238602])\n\n\nThe following yields the same result.\n\nX.mean(0)\n\narray([ 0.15030588,  0.14030961, -0.34238602])"
  },
  {
    "objectID": "posts/ch02-statistical-learning/Ch02-statlearn-lab.html#graphics",
    "href": "posts/ch02-statistical-learning/Ch02-statlearn-lab.html#graphics",
    "title": "Chapter 2: Introduction to Python",
    "section": "",
    "text": "In Python, common practice is to use the library matplotlib for graphics. However, since Python was not written with data analysis in mind, the notion of plotting is not intrinsic to the language. We will use the subplots() function from matplotlib.pyplot to create a figure and the axes onto which we plot our data. For many more examples of how to make plots in Python, readers are encouraged to visit matplotlib.org/stable/gallery/.\nIn matplotlib, a plot consists of a figure and one or more axes. You can think of the figure as the blank canvas upon which one or more plots will be displayed: it is the entire plotting window. The axes contain important information about each plot, such as its x- and y-axis labels, title, and more. (Note that in matplotlib, the word axes is not the plural of axis: a plot’s axes contains much more information than just the x-axis and the y-axis.)\nWe begin by importing the subplots() function from matplotlib. We use this function throughout when creating figures. The function returns a tuple of length two: a figure object as well as the relevant axes object. We will typically pass figsize as a keyword argument. Having created our axes, we attempt our first plot using its plot() method. To learn more about it, type ax.plot?.\n\nfrom matplotlib.pyplot import subplots\nfig, ax = subplots(figsize=(8, 8))\nx = rng.standard_normal(100)\ny = rng.standard_normal(100)\nax.plot(x, y);\n\n\n\n\n\n\n\n\nWe pause here to note that we have unpacked the tuple of length two returned by subplots() into the two distinct variables fig and ax. Unpacking is typically preferred to the following equivalent but slightly more verbose code:\n\noutput = subplots(figsize=(8, 8))\nfig = output[0]\nax = output[1]\n\n\n\n\n\n\n\n\nWe see that our earlier cell produced a line plot, which is the default. To create a scatterplot, we provide an additional argument to ax.plot(), indicating that circles should be displayed.\n\nfig, ax = subplots(figsize=(8, 8))\nax.plot(x, y, 'o');\n\n\n\n\n\n\n\n\nDifferent values of this additional argument can be used to produce different colored lines as well as different linestyles.\nAs an alternative, we could use the ax.scatter() function to create a scatterplot.\n\nfig, ax = subplots(figsize=(8, 8))\nax.scatter(x, y, marker='o');\n\n\n\n\n\n\n\n\nNotice that in the code blocks above, we have ended the last line with a semicolon. This prevents ax.plot(x, y) from printing text to the notebook. However, it does not prevent a plot from being produced. If we omit the trailing semi-colon, then we obtain the following output:\n\nfig, ax = subplots(figsize=(8, 8))\nax.scatter(x, y, marker='o')\n\n\n\n\n\n\n\n\nIn what follows, we will use trailing semicolons whenever the text that would be output is not germane to the discussion at hand.\nTo label our plot, we make use of the set_xlabel(), set_ylabel(), and set_title() methods of ax.\n\nfig, ax = subplots(figsize=(8, 8))\nax.scatter(x, y, marker='o')\nax.set_xlabel(\"this is the x-axis\")\nax.set_ylabel(\"this is the y-axis\")\nax.set_title(\"Plot of X vs Y\");\n\n\n\n\n\n\n\n\nHaving access to the figure object fig itself means that we can go in and change some aspects and then redisplay it. Here, we change the size from (8, 8) to (12, 3).\n\nfig.set_size_inches(12,3)\nfig\n\n\n\n\n\n\n\n\nOccasionally we will want to create several plots within a figure. This can be achieved by passing additional arguments to subplots(). Below, we create a 2 \\times 3 grid of plots in a figure of size determined by the figsize argument. In such situations, there is often a relationship between the axes in the plots. For example, all plots may have a common x-axis. The subplots() function can automatically handle this situation when passed the keyword argument sharex=True. The axes object below is an array pointing to different plots in the figure.\n\nfig, axes = subplots(nrows=2,\n                     ncols=3,\n                     figsize=(15, 5))\n\n\n\n\n\n\n\n\nWe now produce a scatter plot with 'o' in the second column of the first row and a scatter plot with '+' in the third column of the second row.\n\naxes[0,1].plot(x, y, 'o')\naxes[1,2].scatter(x, y, marker='+')\nfig\n\n\n\n\n\n\n\n\nType subplots? to learn more about subplots().\nTo save the output of fig, we call its savefig() method. The argument dpi is the dots per inch, used to determine how large the figure will be in pixels.\n\nfig.savefig(\"Figure.png\", dpi=400)\nfig.savefig(\"Figure.pdf\", dpi=200);\n\nWe can continue to modify fig using step-by-step updates; for example, we can modify the range of the x-axis, re-save the figure, and even re-display it.\n\naxes[0,1].set_xlim([-1,1])\nfig.savefig(\"Figure_updated.jpg\")\nfig\n\n\n\n\n\n\n\n\nWe now create some more sophisticated plots. The ax.contour() method produces a contour plot in order to represent three-dimensional data, similar to a topographical map. It takes three arguments:\n\nA vector of x values (the first dimension),\nA vector of y values (the second dimension), and\nA matrix whose elements correspond to the z value (the third dimension) for each pair of (x,y) coordinates.\n\nTo create x and y, we’ll use the command np.linspace(a, b, n), which returns a vector of n numbers starting at a and ending at b.\n\nfig, ax = subplots(figsize=(8, 8))\nx = np.linspace(-np.pi, np.pi, 50)\ny = x\nf = np.multiply.outer(np.cos(y), 1 / (1 + x**2))\nax.contour(x, y, f);\n\n\n\n\n\n\n\n\nWe can increase the resolution by adding more levels to the image.\n\nfig, ax = subplots(figsize=(8, 8))\nax.contour(x, y, f, levels=45);\n\n\n\n\n\n\n\n\nTo fine-tune the output of the ax.contour() function, take a look at the help file by typing ?plt.contour.\nThe ax.imshow() method is similar to ax.contour(), except that it produces a color-coded plot whose colors depend on the z value. This is known as a heatmap, and is sometimes used to plot temperature in weather forecasts.\n\nfig, ax = subplots(figsize=(8, 8))\nax.imshow(f);"
  },
  {
    "objectID": "posts/ch02-statistical-learning/Ch02-statlearn-lab.html#sequences-and-slice-notation",
    "href": "posts/ch02-statistical-learning/Ch02-statlearn-lab.html#sequences-and-slice-notation",
    "title": "Chapter 2: Introduction to Python",
    "section": "",
    "text": "As seen above, the function np.linspace() can be used to create a sequence of numbers.\n\nseq1 = np.linspace(0, 10, 11)\nseq1\n\narray([ 0.,  1.,  2.,  3.,  4.,  5.,  6.,  7.,  8.,  9., 10.])\n\n\nThe function np.arange() returns a sequence of numbers spaced out by step. If step is not specified, then a default value of 1 is used. Let’s create a sequence that starts at 0 and ends at 10.\n\nseq2 = np.arange(0, 10)\nseq2\n\narray([0, 1, 2, 3, 4, 5, 6, 7, 8, 9])\n\n\nWhy isn’t 10 output above? This has to do with slice notation in Python. Slice notation\nis used to index sequences such as lists, tuples and arrays. Suppose we want to retrieve the fourth through sixth (inclusive) entries of a string. We obtain a slice of the string using the indexing notation [3:6].\n\n\"hello world\"[3:6]\n\n'lo '\n\n\nIn the code block above, the notation 3:6 is shorthand for slice(3,6) when used inside [].\n\n\"hello world\"[slice(3,6)]\n\n'lo '\n\n\nYou might have expected slice(3,6) to output the fourth through seventh characters in the text string (recalling that Python begins its indexing at zero), but instead it output the fourth through sixth. This also explains why the earlier np.arange(0, 10) command output only the integers from 0 to 9. See the documentation slice? for useful options in creating slices."
  },
  {
    "objectID": "posts/ch02-statistical-learning/Ch02-statlearn-lab.html#indexing-data",
    "href": "posts/ch02-statistical-learning/Ch02-statlearn-lab.html#indexing-data",
    "title": "Chapter 2: Introduction to Python",
    "section": "",
    "text": "To begin, we create a two-dimensional numpy array.\n\nA = np.array(np.arange(16)).reshape((4, 4))\nA\n\narray([[ 0,  1,  2,  3],\n       [ 4,  5,  6,  7],\n       [ 8,  9, 10, 11],\n       [12, 13, 14, 15]])\n\n\nTyping A[1,2] retrieves the element corresponding to the second row and third column. (As usual, Python indexes from 0.)\n\nA[1,2]\n\n6\n\n\nThe first number after the open-bracket symbol [ refers to the row, and the second number refers to the column.\n\n\nTo select multiple rows at a time, we can pass in a list specifying our selection. For instance, [1,3] will retrieve the second and fourth rows:\n\nA[[1,3]]\n\narray([[ 4,  5,  6,  7],\n       [12, 13, 14, 15]])\n\n\nTo select the first and third columns, we pass in [0,2] as the second argument in the square brackets. In this case we need to supply the first argument : which selects all rows.\n\nA[:,[0,2]]\n\narray([[ 0,  2],\n       [ 4,  6],\n       [ 8, 10],\n       [12, 14]])\n\n\nNow, suppose that we want to select the submatrix made up of the second and fourth rows as well as the first and third columns. This is where indexing gets slightly tricky. It is natural to try to use lists to retrieve the rows and columns:\n\nA[[1,3],[0,2]]\n\narray([ 4, 14])\n\n\nOops — what happened? We got a one-dimensional array of length two identical to\n\nnp.array([A[1,0],A[3,2]])\n\narray([ 4, 14])\n\n\nSimilarly, the following code fails to extract the submatrix comprised of the second and fourth rows and the first, third, and fourth columns:\n\nA[[1,3],[0,2,3]]\n\n\n---------------------------------------------------------------------------\nIndexError                                Traceback (most recent call last)\nCell In[63], line 1\n----&gt; 1 A[[1,3],[0,2,3]]\n\nIndexError: shape mismatch: indexing arrays could not be broadcast together with shapes (2,) (3,) \n\n\n\nWe can see what has gone wrong here. When supplied with two indexing lists, the numpy interpretation is that these provide pairs of i,j indices for a series of entries. That is why the pair of lists must have the same length. However, that was not our intent, since we are looking for a submatrix.\nOne easy way to do this is as follows. We first create a submatrix by subsetting the rows of A, and then on the fly we make a further submatrix by subsetting its columns.\n\nA[[1,3]][:,[0,2]]\n\narray([[ 4,  6],\n       [12, 14]])\n\n\nThere are more efficient ways of achieving the same result.\nThe convenience function np.ix_() allows us to extract a submatrix using lists, by creating an intermediate mesh object.\n\nidx = np.ix_([1,3],[0,2,3])\nA[idx]\n\narray([[ 4,  6,  7],\n       [12, 14, 15]])\n\n\nAlternatively, we can subset matrices efficiently using slices.\nThe slice 1:4:2 captures the second and fourth items of a sequence, while the slice 0:3:2 captures the first and third items (the third element in a slice sequence is the step size).\n\nA[1:4:2,0:3:2]\n\narray([[ 4,  6],\n       [12, 14]])\n\n\nWhy are we able to retrieve a submatrix directly using slices but not using lists? Its because they are different Python types, and are treated differently by numpy. Slices can be used to extract objects from arbitrary sequences, such as strings, lists, and tuples, while the use of lists for indexing is more limited.\n\n\n\nIn numpy, a Boolean is a type that equals either True or False (also represented as 1 and 0, respectively). The next line creates a vector of 0’s, represented as Booleans, of length equal to the first dimension of A.\n\nkeep_rows = np.zeros(A.shape[0], bool)\nkeep_rows\n\narray([False, False, False, False])\n\n\nWe now set two of the elements to True.\n\nkeep_rows[[1,3]] = True\nkeep_rows\n\narray([False,  True, False,  True])\n\n\nNote that the elements of keep_rows, when viewed as integers, are the same as the values of np.array([0,1,0,1]). Below, we use == to verify their equality. When applied to two arrays, the == operation is applied elementwise.\n\nnp.all(keep_rows == np.array([0,1,0,1]))\n\nTrue\n\n\n(Here, the function np.all() has checked whether all entries of an array are True. A similar function, np.any(), can be used to check whether any entries of an array are True.)\nHowever, even though np.array([0,1,0,1]) and keep_rows are equal according to ==, they index different sets of rows! The former retrieves the first, second, first, and second rows of A.\n\nA[np.array([0,1,0,1])]\n\narray([[0, 1, 2, 3],\n       [4, 5, 6, 7],\n       [0, 1, 2, 3],\n       [4, 5, 6, 7]])\n\n\nBy contrast, keep_rows retrieves only the second and fourth rows of A — i.e. the rows for which the Boolean equals TRUE.\n\nA[keep_rows]\n\narray([[ 4,  5,  6,  7],\n       [12, 13, 14, 15]])\n\n\nThis example shows that Booleans and integers are treated differently by numpy.\nWe again make use of the np.ix_() function to create a mesh containing the second and fourth rows, and the first, third, and fourth columns. This time, we apply the function to Booleans, rather than lists.\n\nkeep_cols = np.zeros(A.shape[1], bool)\nkeep_cols[[0, 2, 3]] = True\nidx_bool = np.ix_(keep_rows, keep_cols)\nA[idx_bool]\n\narray([[ 4,  6,  7],\n       [12, 14, 15]])\n\n\nWe can also mix a list with an array of Booleans in the arguments to np.ix_():\n\nidx_mixed = np.ix_([1,3], keep_cols)\nA[idx_mixed]\n\narray([[ 4,  6,  7],\n       [12, 14, 15]])\n\n\nFor more details on indexing in numpy, readers are referred to the numpy tutorial mentioned earlier."
  },
  {
    "objectID": "posts/ch02-statistical-learning/Ch02-statlearn-lab.html#loading-data",
    "href": "posts/ch02-statistical-learning/Ch02-statlearn-lab.html#loading-data",
    "title": "Chapter 2: Introduction to Python",
    "section": "",
    "text": "Data sets often contain different types of data, and may have names associated with the rows or columns. For these reasons, they typically are best accommodated using a data frame. We can think of a data frame as a sequence of arrays of identical length; these are the columns. Entries in the different arrays can be combined to form a row. The pandas library can be used to create and work with data frame objects.\n\n\nThe first step of most analyses involves importing a data set into Python.\nBefore attempting to load a data set, we must make sure that Python knows where to find the file containing it. If the file is in the same location as this notebook file, then we are all set. Otherwise, the command os.chdir() can be used to change directory. (You will need to call import os before calling os.chdir().)\nWe will begin by reading in Auto.csv, available on the book website. This is a comma-separated file, and can be read in using pd.read_csv():\n\nimport pandas as pd\nAuto = pd.read_csv('Auto.csv')\nAuto\n\n\n---------------------------------------------------------------------------\nFileNotFoundError                         Traceback (most recent call last)\nCell In[74], line 2\n      1 import pandas as pd\n----&gt; 2 Auto = pd.read_csv('Auto.csv')\n      3 Auto\n\nFile ~/work/notes/notes-islr-py/.venv/lib/python3.10/site-packages/pandas/io/parsers/readers.py:1026, in read_csv(filepath_or_buffer, sep, delimiter, header, names, index_col, usecols, dtype, engine, converters, true_values, false_values, skipinitialspace, skiprows, skipfooter, nrows, na_values, keep_default_na, na_filter, verbose, skip_blank_lines, parse_dates, infer_datetime_format, keep_date_col, date_parser, date_format, dayfirst, cache_dates, iterator, chunksize, compression, thousands, decimal, lineterminator, quotechar, quoting, doublequote, escapechar, comment, encoding, encoding_errors, dialect, on_bad_lines, delim_whitespace, low_memory, memory_map, float_precision, storage_options, dtype_backend)\n   1013 kwds_defaults = _refine_defaults_read(\n   1014     dialect,\n   1015     delimiter,\n   (...)\n   1022     dtype_backend=dtype_backend,\n   1023 )\n   1024 kwds.update(kwds_defaults)\n-&gt; 1026 return _read(filepath_or_buffer, kwds)\n\nFile ~/work/notes/notes-islr-py/.venv/lib/python3.10/site-packages/pandas/io/parsers/readers.py:620, in _read(filepath_or_buffer, kwds)\n    617 _validate_names(kwds.get(\"names\", None))\n    619 # Create the parser.\n--&gt; 620 parser = TextFileReader(filepath_or_buffer, **kwds)\n    622 if chunksize or iterator:\n    623     return parser\n\nFile ~/work/notes/notes-islr-py/.venv/lib/python3.10/site-packages/pandas/io/parsers/readers.py:1620, in TextFileReader.__init__(self, f, engine, **kwds)\n   1617     self.options[\"has_index_names\"] = kwds[\"has_index_names\"]\n   1619 self.handles: IOHandles | None = None\n-&gt; 1620 self._engine = self._make_engine(f, self.engine)\n\nFile ~/work/notes/notes-islr-py/.venv/lib/python3.10/site-packages/pandas/io/parsers/readers.py:1880, in TextFileReader._make_engine(self, f, engine)\n   1878     if \"b\" not in mode:\n   1879         mode += \"b\"\n-&gt; 1880 self.handles = get_handle(\n   1881     f,\n   1882     mode,\n   1883     encoding=self.options.get(\"encoding\", None),\n   1884     compression=self.options.get(\"compression\", None),\n   1885     memory_map=self.options.get(\"memory_map\", False),\n   1886     is_text=is_text,\n   1887     errors=self.options.get(\"encoding_errors\", \"strict\"),\n   1888     storage_options=self.options.get(\"storage_options\", None),\n   1889 )\n   1890 assert self.handles is not None\n   1891 f = self.handles.handle\n\nFile ~/work/notes/notes-islr-py/.venv/lib/python3.10/site-packages/pandas/io/common.py:873, in get_handle(path_or_buf, mode, encoding, compression, memory_map, is_text, errors, storage_options)\n    868 elif isinstance(handle, str):\n    869     # Check whether the filename is to be opened in binary mode.\n    870     # Binary mode does not support 'encoding' and 'newline'.\n    871     if ioargs.encoding and \"b\" not in ioargs.mode:\n    872         # Encoding\n--&gt; 873         handle = open(\n    874             handle,\n    875             ioargs.mode,\n    876             encoding=ioargs.encoding,\n    877             errors=errors,\n    878             newline=\"\",\n    879         )\n    880     else:\n    881         # Binary mode\n    882         handle = open(handle, ioargs.mode)\n\nFileNotFoundError: [Errno 2] No such file or directory: 'Auto.csv'\n\n\n\nThe book website also has a whitespace-delimited version of this data, called Auto.data. This can be read in as follows:\n\nAuto = pd.read_csv('Auto.data', delim_whitespace=True)\n\n/tmp/ipykernel_100019/2891344115.py:1: FutureWarning: The 'delim_whitespace' keyword in pd.read_csv is deprecated and will be removed in a future version. Use ``sep='\\s+'`` instead\n  Auto = pd.read_csv('Auto.data', delim_whitespace=True)\n\n\n\n---------------------------------------------------------------------------\nFileNotFoundError                         Traceback (most recent call last)\nCell In[75], line 1\n----&gt; 1 Auto = pd.read_csv('Auto.data', delim_whitespace=True)\n\nFile ~/work/notes/notes-islr-py/.venv/lib/python3.10/site-packages/pandas/io/parsers/readers.py:1026, in read_csv(filepath_or_buffer, sep, delimiter, header, names, index_col, usecols, dtype, engine, converters, true_values, false_values, skipinitialspace, skiprows, skipfooter, nrows, na_values, keep_default_na, na_filter, verbose, skip_blank_lines, parse_dates, infer_datetime_format, keep_date_col, date_parser, date_format, dayfirst, cache_dates, iterator, chunksize, compression, thousands, decimal, lineterminator, quotechar, quoting, doublequote, escapechar, comment, encoding, encoding_errors, dialect, on_bad_lines, delim_whitespace, low_memory, memory_map, float_precision, storage_options, dtype_backend)\n   1013 kwds_defaults = _refine_defaults_read(\n   1014     dialect,\n   1015     delimiter,\n   (...)\n   1022     dtype_backend=dtype_backend,\n   1023 )\n   1024 kwds.update(kwds_defaults)\n-&gt; 1026 return _read(filepath_or_buffer, kwds)\n\nFile ~/work/notes/notes-islr-py/.venv/lib/python3.10/site-packages/pandas/io/parsers/readers.py:620, in _read(filepath_or_buffer, kwds)\n    617 _validate_names(kwds.get(\"names\", None))\n    619 # Create the parser.\n--&gt; 620 parser = TextFileReader(filepath_or_buffer, **kwds)\n    622 if chunksize or iterator:\n    623     return parser\n\nFile ~/work/notes/notes-islr-py/.venv/lib/python3.10/site-packages/pandas/io/parsers/readers.py:1620, in TextFileReader.__init__(self, f, engine, **kwds)\n   1617     self.options[\"has_index_names\"] = kwds[\"has_index_names\"]\n   1619 self.handles: IOHandles | None = None\n-&gt; 1620 self._engine = self._make_engine(f, self.engine)\n\nFile ~/work/notes/notes-islr-py/.venv/lib/python3.10/site-packages/pandas/io/parsers/readers.py:1880, in TextFileReader._make_engine(self, f, engine)\n   1878     if \"b\" not in mode:\n   1879         mode += \"b\"\n-&gt; 1880 self.handles = get_handle(\n   1881     f,\n   1882     mode,\n   1883     encoding=self.options.get(\"encoding\", None),\n   1884     compression=self.options.get(\"compression\", None),\n   1885     memory_map=self.options.get(\"memory_map\", False),\n   1886     is_text=is_text,\n   1887     errors=self.options.get(\"encoding_errors\", \"strict\"),\n   1888     storage_options=self.options.get(\"storage_options\", None),\n   1889 )\n   1890 assert self.handles is not None\n   1891 f = self.handles.handle\n\nFile ~/work/notes/notes-islr-py/.venv/lib/python3.10/site-packages/pandas/io/common.py:873, in get_handle(path_or_buf, mode, encoding, compression, memory_map, is_text, errors, storage_options)\n    868 elif isinstance(handle, str):\n    869     # Check whether the filename is to be opened in binary mode.\n    870     # Binary mode does not support 'encoding' and 'newline'.\n    871     if ioargs.encoding and \"b\" not in ioargs.mode:\n    872         # Encoding\n--&gt; 873         handle = open(\n    874             handle,\n    875             ioargs.mode,\n    876             encoding=ioargs.encoding,\n    877             errors=errors,\n    878             newline=\"\",\n    879         )\n    880     else:\n    881         # Binary mode\n    882         handle = open(handle, ioargs.mode)\n\nFileNotFoundError: [Errno 2] No such file or directory: 'Auto.data'\n\n\n\nBoth Auto.csv and Auto.data are simply text files. Before loading data into Python, it is a good idea to view it using a text editor or other software, such as Microsoft Excel.\nWe now take a look at the column of Auto corresponding to the variable horsepower:\n\nAuto['horsepower']\n\n\n---------------------------------------------------------------------------\nNameError                                 Traceback (most recent call last)\nCell In[76], line 1\n----&gt; 1 Auto['horsepower']\n\nNameError: name 'Auto' is not defined\n\n\n\nWe see that the dtype of this column is object. It turns out that all values of the horsepower column were interpreted as strings when reading in the data. We can find out why by looking at the unique values.\n\nnp.unique(Auto['horsepower'])\n\n\n---------------------------------------------------------------------------\nNameError                                 Traceback (most recent call last)\nCell In[77], line 1\n----&gt; 1 np.unique(Auto['horsepower'])\n\nNameError: name 'Auto' is not defined\n\n\n\nWe see the culprit is the value ?, which is being used to encode missing values.\nTo fix the problem, we must provide pd.read_csv() with an argument called na_values. Now, each instance of ? in the file is replaced with the value np.nan, which means not a number:\n\nAuto = pd.read_csv('Auto.data',\n                   na_values=['?'],\n                   delim_whitespace=True)\nAuto['horsepower'].sum()\n\n/tmp/ipykernel_100019/931034241.py:1: FutureWarning: The 'delim_whitespace' keyword in pd.read_csv is deprecated and will be removed in a future version. Use ``sep='\\s+'`` instead\n  Auto = pd.read_csv('Auto.data',\n\n\n\n---------------------------------------------------------------------------\nFileNotFoundError                         Traceback (most recent call last)\nCell In[78], line 1\n----&gt; 1 Auto = pd.read_csv('Auto.data',\n      2                    na_values=['?'],\n      3                    delim_whitespace=True)\n      4 Auto['horsepower'].sum()\n\nFile ~/work/notes/notes-islr-py/.venv/lib/python3.10/site-packages/pandas/io/parsers/readers.py:1026, in read_csv(filepath_or_buffer, sep, delimiter, header, names, index_col, usecols, dtype, engine, converters, true_values, false_values, skipinitialspace, skiprows, skipfooter, nrows, na_values, keep_default_na, na_filter, verbose, skip_blank_lines, parse_dates, infer_datetime_format, keep_date_col, date_parser, date_format, dayfirst, cache_dates, iterator, chunksize, compression, thousands, decimal, lineterminator, quotechar, quoting, doublequote, escapechar, comment, encoding, encoding_errors, dialect, on_bad_lines, delim_whitespace, low_memory, memory_map, float_precision, storage_options, dtype_backend)\n   1013 kwds_defaults = _refine_defaults_read(\n   1014     dialect,\n   1015     delimiter,\n   (...)\n   1022     dtype_backend=dtype_backend,\n   1023 )\n   1024 kwds.update(kwds_defaults)\n-&gt; 1026 return _read(filepath_or_buffer, kwds)\n\nFile ~/work/notes/notes-islr-py/.venv/lib/python3.10/site-packages/pandas/io/parsers/readers.py:620, in _read(filepath_or_buffer, kwds)\n    617 _validate_names(kwds.get(\"names\", None))\n    619 # Create the parser.\n--&gt; 620 parser = TextFileReader(filepath_or_buffer, **kwds)\n    622 if chunksize or iterator:\n    623     return parser\n\nFile ~/work/notes/notes-islr-py/.venv/lib/python3.10/site-packages/pandas/io/parsers/readers.py:1620, in TextFileReader.__init__(self, f, engine, **kwds)\n   1617     self.options[\"has_index_names\"] = kwds[\"has_index_names\"]\n   1619 self.handles: IOHandles | None = None\n-&gt; 1620 self._engine = self._make_engine(f, self.engine)\n\nFile ~/work/notes/notes-islr-py/.venv/lib/python3.10/site-packages/pandas/io/parsers/readers.py:1880, in TextFileReader._make_engine(self, f, engine)\n   1878     if \"b\" not in mode:\n   1879         mode += \"b\"\n-&gt; 1880 self.handles = get_handle(\n   1881     f,\n   1882     mode,\n   1883     encoding=self.options.get(\"encoding\", None),\n   1884     compression=self.options.get(\"compression\", None),\n   1885     memory_map=self.options.get(\"memory_map\", False),\n   1886     is_text=is_text,\n   1887     errors=self.options.get(\"encoding_errors\", \"strict\"),\n   1888     storage_options=self.options.get(\"storage_options\", None),\n   1889 )\n   1890 assert self.handles is not None\n   1891 f = self.handles.handle\n\nFile ~/work/notes/notes-islr-py/.venv/lib/python3.10/site-packages/pandas/io/common.py:873, in get_handle(path_or_buf, mode, encoding, compression, memory_map, is_text, errors, storage_options)\n    868 elif isinstance(handle, str):\n    869     # Check whether the filename is to be opened in binary mode.\n    870     # Binary mode does not support 'encoding' and 'newline'.\n    871     if ioargs.encoding and \"b\" not in ioargs.mode:\n    872         # Encoding\n--&gt; 873         handle = open(\n    874             handle,\n    875             ioargs.mode,\n    876             encoding=ioargs.encoding,\n    877             errors=errors,\n    878             newline=\"\",\n    879         )\n    880     else:\n    881         # Binary mode\n    882         handle = open(handle, ioargs.mode)\n\nFileNotFoundError: [Errno 2] No such file or directory: 'Auto.data'\n\n\n\nThe Auto.shape attribute tells us that the data has 397 observations, or rows, and nine variables, or columns.\n\nAuto.shape\n\n\n---------------------------------------------------------------------------\nNameError                                 Traceback (most recent call last)\nCell In[79], line 1\n----&gt; 1 Auto.shape\n\nNameError: name 'Auto' is not defined\n\n\n\nThere are various ways to deal with missing data. In this case, since only five of the rows contain missing observations, we choose to use the Auto.dropna() method to simply remove these rows.\n\nAuto_new = Auto.dropna()\nAuto_new.shape\n\n\n---------------------------------------------------------------------------\nNameError                                 Traceback (most recent call last)\nCell In[80], line 1\n----&gt; 1 Auto_new = Auto.dropna()\n      2 Auto_new.shape\n\nNameError: name 'Auto' is not defined\n\n\n\n\n\n\nWe can use Auto.columns to check the variable names.\n\nAuto = Auto_new # overwrite the previous value\nAuto.columns\n\n\n---------------------------------------------------------------------------\nNameError                                 Traceback (most recent call last)\nCell In[81], line 1\n----&gt; 1 Auto = Auto_new # overwrite the previous value\n      2 Auto.columns\n\nNameError: name 'Auto_new' is not defined\n\n\n\nAccessing the rows and columns of a data frame is similar, but not identical, to accessing the rows and columns of an array. Recall that the first argument to the [] method is always applied to the rows of the array.\nSimilarly, passing in a slice to the [] method creates a data frame whose rows are determined by the slice:\n\nAuto[:3]\n\n\n---------------------------------------------------------------------------\nNameError                                 Traceback (most recent call last)\nCell In[82], line 1\n----&gt; 1 Auto[:3]\n\nNameError: name 'Auto' is not defined\n\n\n\nSimilarly, an array of Booleans can be used to subset the rows:\n\nidx_80 = Auto['year'] &gt; 80\nAuto[idx_80]\n\n\n---------------------------------------------------------------------------\nNameError                                 Traceback (most recent call last)\nCell In[83], line 1\n----&gt; 1 idx_80 = Auto['year'] &gt; 80\n      2 Auto[idx_80]\n\nNameError: name 'Auto' is not defined\n\n\n\nHowever, if we pass in a list of strings to the [] method, then we obtain a data frame containing the corresponding set of columns.\n\nAuto[['mpg', 'horsepower']]\n\n\n---------------------------------------------------------------------------\nNameError                                 Traceback (most recent call last)\nCell In[84], line 1\n----&gt; 1 Auto[['mpg', 'horsepower']]\n\nNameError: name 'Auto' is not defined\n\n\n\nSince we did not specify an index column when we loaded our data frame, the rows are labeled using integers 0 to 396.\n\nAuto.index\n\n\n---------------------------------------------------------------------------\nNameError                                 Traceback (most recent call last)\nCell In[85], line 1\n----&gt; 1 Auto.index\n\nNameError: name 'Auto' is not defined\n\n\n\nWe can use the set_index() method to re-name the rows using the contents of Auto['name'].\n\nAuto_re = Auto.set_index('name')\nAuto_re\n\n\n---------------------------------------------------------------------------\nNameError                                 Traceback (most recent call last)\nCell In[86], line 1\n----&gt; 1 Auto_re = Auto.set_index('name')\n      2 Auto_re\n\nNameError: name 'Auto' is not defined\n\n\n\n\nAuto_re.columns\n\n\n---------------------------------------------------------------------------\nNameError                                 Traceback (most recent call last)\nCell In[87], line 1\n----&gt; 1 Auto_re.columns\n\nNameError: name 'Auto_re' is not defined\n\n\n\nWe see that the column 'name' is no longer there.\nNow that the index has been set to name, we can access rows of the data frame by name using the {loc[]} method of Auto:\n\nrows = ['amc rebel sst', 'ford torino']\nAuto_re.loc[rows]\n\n\n---------------------------------------------------------------------------\nNameError                                 Traceback (most recent call last)\nCell In[88], line 2\n      1 rows = ['amc rebel sst', 'ford torino']\n----&gt; 2 Auto_re.loc[rows]\n\nNameError: name 'Auto_re' is not defined\n\n\n\nAs an alternative to using the index name, we could retrieve the 4th and 5th rows of Auto using the {iloc[]} method:\n\nAuto_re.iloc[[3,4]]\n\n\n---------------------------------------------------------------------------\nNameError                                 Traceback (most recent call last)\nCell In[89], line 1\n----&gt; 1 Auto_re.iloc[[3,4]]\n\nNameError: name 'Auto_re' is not defined\n\n\n\nWe can also use it to retrieve the 1st, 3rd and and 4th columns of Auto_re:\n\nAuto_re.iloc[:,[0,2,3]]\n\n\n---------------------------------------------------------------------------\nNameError                                 Traceback (most recent call last)\nCell In[90], line 1\n----&gt; 1 Auto_re.iloc[:,[0,2,3]]\n\nNameError: name 'Auto_re' is not defined\n\n\n\nWe can extract the 4th and 5th rows, as well as the 1st, 3rd and 4th columns, using a single call to iloc[]:\n\nAuto_re.iloc[[3,4],[0,2,3]]\n\n\n---------------------------------------------------------------------------\nNameError                                 Traceback (most recent call last)\nCell In[91], line 1\n----&gt; 1 Auto_re.iloc[[3,4],[0,2,3]]\n\nNameError: name 'Auto_re' is not defined\n\n\n\nIndex entries need not be unique: there are several cars in the data frame named ford galaxie 500.\n\nAuto_re.loc['ford galaxie 500', ['mpg', 'origin']]\n\n\n---------------------------------------------------------------------------\nNameError                                 Traceback (most recent call last)\nCell In[92], line 1\n----&gt; 1 Auto_re.loc['ford galaxie 500', ['mpg', 'origin']]\n\nNameError: name 'Auto_re' is not defined\n\n\n\n\n\n\nSuppose now that we want to create a data frame consisting of the weight and origin of the subset of cars with year greater than 80 — i.e. those built after 1980. To do this, we first create a Boolean array that indexes the rows. The loc[] method allows for Boolean entries as well as strings:\n\nidx_80 = Auto_re['year'] &gt; 80\nAuto_re.loc[idx_80, ['weight', 'origin']]\n\n\n---------------------------------------------------------------------------\nNameError                                 Traceback (most recent call last)\nCell In[93], line 1\n----&gt; 1 idx_80 = Auto_re['year'] &gt; 80\n      2 Auto_re.loc[idx_80, ['weight', 'origin']]\n\nNameError: name 'Auto_re' is not defined\n\n\n\nTo do this more concisely, we can use an anonymous function called a lambda:\n\nAuto_re.loc[lambda df: df['year'] &gt; 80, ['weight', 'origin']]\n\n\n---------------------------------------------------------------------------\nNameError                                 Traceback (most recent call last)\nCell In[94], line 1\n----&gt; 1 Auto_re.loc[lambda df: df['year'] &gt; 80, ['weight', 'origin']]\n\nNameError: name 'Auto_re' is not defined\n\n\n\nThe lambda call creates a function that takes a single argument, here df, and returns df['year']&gt;80. Since it is created inside the loc[] method for the dataframe Auto_re, that dataframe will be the argument supplied. As another example of using a lambda, suppose that we want all cars built after 1980 that achieve greater than 30 miles per gallon:\n\nAuto_re.loc[lambda df: (df['year'] &gt; 80) & (df['mpg'] &gt; 30),\n            ['weight', 'origin']\n           ]\n\n\n---------------------------------------------------------------------------\nNameError                                 Traceback (most recent call last)\nCell In[95], line 1\n----&gt; 1 Auto_re.loc[lambda df: (df['year'] &gt; 80) & (df['mpg'] &gt; 30),\n      2             ['weight', 'origin']\n      3            ]\n\nNameError: name 'Auto_re' is not defined\n\n\n\nThe symbol & computes an element-wise and operation. As another example, suppose that we want to retrieve all Ford and Datsun cars with displacement less than 300. We check whether each name entry contains either the string ford or datsun using the str.contains() method of the index attribute of of the dataframe:\n\nAuto_re.loc[lambda df: (df['displacement'] &lt; 300)\n                       & (df.index.str.contains('ford')\n                       | df.index.str.contains('datsun')),\n            ['weight', 'origin']\n           ]\n\n\n---------------------------------------------------------------------------\nNameError                                 Traceback (most recent call last)\nCell In[96], line 1\n----&gt; 1 Auto_re.loc[lambda df: (df['displacement'] &lt; 300)\n      2                        & (df.index.str.contains('ford')\n      3                        | df.index.str.contains('datsun')),\n      4             ['weight', 'origin']\n      5            ]\n\nNameError: name 'Auto_re' is not defined\n\n\n\nHere, the symbol | computes an element-wise or operation.\nIn summary, a powerful set of operations is available to index the rows and columns of data frames. For integer based queries, use the iloc[] method. For string and Boolean selections, use the loc[] method. For functional queries that filter rows, use the loc[] method with a function (typically a lambda) in the rows argument."
  },
  {
    "objectID": "posts/ch02-statistical-learning/Ch02-statlearn-lab.html#for-loops",
    "href": "posts/ch02-statistical-learning/Ch02-statlearn-lab.html#for-loops",
    "title": "Chapter 2: Introduction to Python",
    "section": "",
    "text": "A for loop is a standard tool in many languages that repeatedly evaluates some chunk of code while varying different values inside the code. For example, suppose we loop over elements of a list and compute their sum.\n\ntotal = 0\nfor value in [3,2,19]:\n    total += value\nprint('Total is: {0}'.format(total))\n\nTotal is: 24\n\n\nThe indented code beneath the line with the for statement is run for each value in the sequence specified in the for statement. The loop ends either when the cell ends or when code is indented at the same level as the original for statement. We see that the final line above which prints the total is executed only once after the for loop has terminated. Loops can be nested by additional indentation.\n\ntotal = 0\nfor value in [2,3,19]:\n    for weight in [3, 2, 1]:\n        total += value * weight\nprint('Total is: {0}'.format(total))\n\nTotal is: 144\n\n\nAbove, we summed over each combination of value and weight. We also took advantage of the increment notation in Python: the expression a += b is equivalent to a = a + b. Besides being a convenient notation, this can save time in computationally heavy tasks in which the intermediate value of a+b need not be explicitly created.\nPerhaps a more common task would be to sum over (value, weight) pairs. For instance, to compute the average value of a random variable that takes on possible values 2, 3 or 19 with probability 0.2, 0.3, 0.5 respectively we would compute the weighted sum. Tasks such as this can often be accomplished using the zip() function that loops over a sequence of tuples.\n\ntotal = 0\nfor value, weight in zip([2,3,19],\n                         [0.2,0.3,0.5]):\n    total += weight * value\nprint('Weighted average is: {0}'.format(total))\n\nWeighted average is: 10.8\n\n\n\n\nIn the code chunk above we also printed a string displaying the total. However, the object total is an integer and not a string. Inserting the value of something into a string is a common task, made simple using some of the powerful string formatting tools in Python. Many data cleaning tasks involve manipulating and programmatically producing strings.\nFor example we may want to loop over the columns of a data frame and print the percent missing in each column. Let’s create a data frame D with columns in which 20% of the entries are missing i.e. set to np.nan. We’ll create the values in D from a normal distribution with mean 0 and variance 1 using rng.standard_normal() and then overwrite some random entries using rng.choice().\n\nrng = np.random.default_rng(1)\nA = rng.standard_normal((127, 5))\nM = rng.choice([0, np.nan], p=[0.8,0.2], size=A.shape)\nA += M\nD = pd.DataFrame(A, columns=['food',\n                             'bar',\n                             'pickle',\n                             'snack',\n                             'popcorn'])\nD[:3]\n\n\n\n\n\n\n\n\nfood\nbar\npickle\nsnack\npopcorn\n\n\n\n\n0\n0.345584\n0.821618\n0.330437\n-1.303157\nNaN\n\n\n1\nNaN\n-0.536953\n0.581118\n0.364572\n0.294132\n\n\n2\nNaN\n0.546713\nNaN\n-0.162910\n-0.482119\n\n\n\n\n\n\n\n\nfor col in D.columns:\n    template = 'Column \"{0}\" has {1:.2%} missing values'\n    print(template.format(col,\n          np.isnan(D[col]).mean()))\n\nColumn \"food\" has 16.54% missing values\nColumn \"bar\" has 25.98% missing values\nColumn \"pickle\" has 29.13% missing values\nColumn \"snack\" has 21.26% missing values\nColumn \"popcorn\" has 22.83% missing values\n\n\nWe see that the template.format() method expects two arguments {0} and {1:.2%}, and the latter includes some formatting information. In particular, it specifies that the second argument should be expressed as a percent with two decimal digits.\nThe reference docs.python.org/3/library/string.html includes many helpful and more complex examples."
  },
  {
    "objectID": "posts/ch02-statistical-learning/Ch02-statlearn-lab.html#additional-graphical-and-numerical-summaries",
    "href": "posts/ch02-statistical-learning/Ch02-statlearn-lab.html#additional-graphical-and-numerical-summaries",
    "title": "Chapter 2: Introduction to Python",
    "section": "",
    "text": "We can use the ax.plot() or ax.scatter() functions to display the quantitative variables. However, simply typing the variable names will produce an error message, because Python does not know to look in the Auto data set for those variables.\n\nfig, ax = subplots(figsize=(8, 8))\nax.plot(horsepower, mpg, 'o');\n\n\n---------------------------------------------------------------------------\nNameError                                 Traceback (most recent call last)\nCell In[102], line 2\n      1 fig, ax = subplots(figsize=(8, 8))\n----&gt; 2 ax.plot(horsepower, mpg, 'o');\n\nNameError: name 'horsepower' is not defined\n\n\n\n\n\n\n\n\n\n\nWe can address this by accessing the columns directly:\n\nfig, ax = subplots(figsize=(8, 8))\nax.plot(Auto['horsepower'], Auto['mpg'], 'o');\n\n\n---------------------------------------------------------------------------\nNameError                                 Traceback (most recent call last)\nCell In[103], line 2\n      1 fig, ax = subplots(figsize=(8, 8))\n----&gt; 2 ax.plot(Auto['horsepower'], Auto['mpg'], 'o');\n\nNameError: name 'Auto' is not defined\n\n\n\n\n\n\n\n\n\n\nAlternatively, we can use the plot() method with the call Auto.plot(). Using this method, the variables can be accessed by name. The plot methods of a data frame return a familiar object: an axes. We can use it to update the plot as we did previously:\n\nax = Auto.plot.scatter('horsepower', 'mpg')\nax.set_title('Horsepower vs. MPG');\n\n\n---------------------------------------------------------------------------\nNameError                                 Traceback (most recent call last)\nCell In[104], line 1\n----&gt; 1 ax = Auto.plot.scatter('horsepower', 'mpg')\n      2 ax.set_title('Horsepower vs. MPG');\n\nNameError: name 'Auto' is not defined\n\n\n\nIf we want to save the figure that contains a given axes, we can find the relevant figure by accessing the figure attribute:\n\nfig = ax.figure\nfig.savefig('horsepower_mpg.png');\n\nWe can further instruct the data frame to plot to a particular axes object. In this case the corresponding plot() method will return the modified axes we passed in as an argument. Note that when we request a one-dimensional grid of plots, the object axes is similarly one-dimensional. We place our scatter plot in the middle plot of a row of three plots within a figure.\n\nfig, axes = subplots(ncols=3, figsize=(15, 5))\nAuto.plot.scatter('horsepower', 'mpg', ax=axes[1]);\n\n\n---------------------------------------------------------------------------\nNameError                                 Traceback (most recent call last)\nCell In[106], line 2\n      1 fig, axes = subplots(ncols=3, figsize=(15, 5))\n----&gt; 2 Auto.plot.scatter('horsepower', 'mpg', ax=axes[1]);\n\nNameError: name 'Auto' is not defined\n\n\n\n\n\n\n\n\n\n\nNote also that the columns of a data frame can be accessed as attributes: try typing in Auto.horsepower.\nWe now consider the cylinders variable. Typing in Auto.cylinders.dtype reveals that it is being treated as a quantitative variable. However, since there is only a small number of possible values for this variable, we may wish to treat it as qualitative. Below, we replace the cylinders column with a categorical version of Auto.cylinders. The function pd.Series() owes its name to the fact that pandas is often used in time series applications.\n\nAuto.cylinders = pd.Series(Auto.cylinders, dtype='category')\nAuto.cylinders.dtype\n\n\n---------------------------------------------------------------------------\nNameError                                 Traceback (most recent call last)\nCell In[107], line 1\n----&gt; 1 Auto.cylinders = pd.Series(Auto.cylinders, dtype='category')\n      2 Auto.cylinders.dtype\n\nNameError: name 'Auto' is not defined\n\n\n\nNow that cylinders is qualitative, we can display it using the boxplot() method.\n\nfig, ax = subplots(figsize=(8, 8))\nAuto.boxplot('mpg', by='cylinders', ax=ax);\n\n\n---------------------------------------------------------------------------\nNameError                                 Traceback (most recent call last)\nCell In[108], line 2\n      1 fig, ax = subplots(figsize=(8, 8))\n----&gt; 2 Auto.boxplot('mpg', by='cylinders', ax=ax);\n\nNameError: name 'Auto' is not defined\n\n\n\n\n\n\n\n\n\n\nThe hist() method can be used to plot a histogram.\n\nfig, ax = subplots(figsize=(8, 8))\nAuto.hist('mpg', ax=ax);\n\n\n---------------------------------------------------------------------------\nNameError                                 Traceback (most recent call last)\nCell In[109], line 2\n      1 fig, ax = subplots(figsize=(8, 8))\n----&gt; 2 Auto.hist('mpg', ax=ax);\n\nNameError: name 'Auto' is not defined\n\n\n\n\n\n\n\n\n\n\nThe color of the bars and the number of bins can be changed:\n\nfig, ax = subplots(figsize=(8, 8))\nAuto.hist('mpg', color='red', bins=12, ax=ax);\n\n\n---------------------------------------------------------------------------\nNameError                                 Traceback (most recent call last)\nCell In[110], line 2\n      1 fig, ax = subplots(figsize=(8, 8))\n----&gt; 2 Auto.hist('mpg', color='red', bins=12, ax=ax);\n\nNameError: name 'Auto' is not defined\n\n\n\n\n\n\n\n\n\n\nSee Auto.hist? for more plotting options.\nWe can use the pd.plotting.scatter_matrix() function to create a scatterplot matrix to visualize all of the pairwise relationships between the columns in a data frame.\n\npd.plotting.scatter_matrix(Auto);\n\n\n---------------------------------------------------------------------------\nNameError                                 Traceback (most recent call last)\nCell In[111], line 1\n----&gt; 1 pd.plotting.scatter_matrix(Auto);\n\nNameError: name 'Auto' is not defined\n\n\n\nWe can also produce scatterplots for a subset of the variables.\n\npd.plotting.scatter_matrix(Auto[['mpg',\n                                 'displacement',\n                                 'weight']]);\n\n\n---------------------------------------------------------------------------\nNameError                                 Traceback (most recent call last)\nCell In[112], line 1\n----&gt; 1 pd.plotting.scatter_matrix(Auto[['mpg',\n      2                                  'displacement',\n      3                                  'weight']]);\n\nNameError: name 'Auto' is not defined\n\n\n\nThe describe() method produces a numerical summary of each column in a data frame.\n\nAuto[['mpg', 'weight']].describe()\n\n\n---------------------------------------------------------------------------\nNameError                                 Traceback (most recent call last)\nCell In[113], line 1\n----&gt; 1 Auto[['mpg', 'weight']].describe()\n\nNameError: name 'Auto' is not defined\n\n\n\nWe can also produce a summary of just a single column.\n\nAuto['cylinders'].describe()\nAuto['mpg'].describe()\n\n\n---------------------------------------------------------------------------\nNameError                                 Traceback (most recent call last)\nCell In[114], line 1\n----&gt; 1 Auto['cylinders'].describe()\n      2 Auto['mpg'].describe()\n\nNameError: name 'Auto' is not defined\n\n\n\nTo exit Jupyter, select File / Shut Down."
  },
  {
    "objectID": "posts/ch06-model-selection-and-regularization/Ch06-varselect-lab.html",
    "href": "posts/ch06-model-selection-and-regularization/Ch06-varselect-lab.html",
    "title": "Chapter 6: Linear Models and Regularization Methods Lab",
    "section": "",
    "text": "In this lab we implement many of the techniques discussed in this chapter. We import some of our libraries at this top level.\n\nimport numpy as np\nimport pandas as pd\nfrom matplotlib.pyplot import subplots\nfrom statsmodels.api import OLS\nimport sklearn.model_selection as skm\nimport sklearn.linear_model as skl\nfrom sklearn.preprocessing import StandardScaler\nfrom ISLP import load_data\nfrom ISLP.models import ModelSpec as MS\nfrom functools import partial\n\nWe again collect the new imports needed for this lab. Readers will also have to have installed l0bnb using pip install l0bnb.\n\nfrom sklearn.pipeline import Pipeline\nfrom sklearn.decomposition import PCA\nfrom sklearn.cross_decomposition import PLSRegression\nfrom ISLP.models import \\\n     (Stepwise,\n      sklearn_selected,\n      sklearn_selection_path)\nfrom l0bnb import fit_path\n\n\n\nHere we implement methods that reduce the number of parameters in a model by restricting the model to a subset of the input variables.\n\n\nWe will apply the forward-selection approach to the Hitters data. We wish to predict a baseball player’s Salary on the basis of various statistics associated with performance in the previous year.\nFirst of all, we note that the Salary variable is missing for some of the players. The np.isnan() function can be used to identify the missing observations. It returns an array of the same shape as the input vector, with a True for any elements that are missing, and a False for non-missing elements. The sum() method can then be used to count all of the missing elements.\n\nHitters = load_data('Hitters')\nnp.isnan(Hitters['Salary']).sum()\n\n59\n\n\nWe see that Salary is missing for 59 players. The dropna() method of data frames removes all of the rows that have missing values in any variable (by default — see Hitters.dropna?).\n\nHitters = Hitters.dropna();\nHitters.shape\n\n(263, 20)\n\n\nWe first choose the best model using forward selection based on C_p (). This score is not built in as a metric to sklearn. We therefore define a function to compute it ourselves, and use it as a scorer. By default, sklearn tries to maximize a score, hence our scoring function computes the negative C_p statistic.\n\ndef nCp(sigma2, estimator, X, Y):\n    \"Negative Cp statistic\"\n    n, p = X.shape\n    Yhat = estimator.predict(X)\n    RSS = np.sum((Y - Yhat)**2)\n    return -(RSS + 2 * p * sigma2) / n \n\nWe need to estimate the residual variance \\sigma^2, which is the first argument in our scoring function above. We will fit the biggest model, using all the variables, and estimate \\sigma^2 based on its MSE.\n\ndesign = MS(Hitters.columns.drop('Salary')).fit(Hitters)\nY = np.array(Hitters['Salary'])\nX = design.transform(Hitters)\nsigma2 = OLS(Y,X).fit().scale\n\nThe function sklearn_selected() expects a scorer with just three arguments — the last three in the definition of nCp() above. We use the function partial() first seen in Section~ to freeze the first argument with our estimate of \\sigma^2.\n\nneg_Cp = partial(nCp, sigma2)\n\nWe can now use neg_Cp() as a scorer for model selection.\nAlong with a score we need to specify the search strategy. This is done through the object Stepwise() in the ISLP.models package. The method Stepwise.first_peak() runs forward stepwise until any further additions to the model do not result in an improvement in the evaluation score. Similarly, the method Stepwise.fixed_steps() runs a fixed number of steps of stepwise search.\n\nstrategy = Stepwise.first_peak(design,\n                               direction='forward',\n                               max_terms=len(design.terms))\n\nWe now fit a linear regression model with Salary as outcome using forward selection. To do so, we use the function sklearn_selected() from the ISLP.models package. This takes a model from statsmodels along with a search strategy and selects a model with its fit method. Without specifying a scoring argument, the score defaults to MSE, and so all 19 variables will be selected.\n\nhitters_MSE = sklearn_selected(OLS,\n                               strategy)\nhitters_MSE.fit(Hitters, Y)\nhitters_MSE.selected_state_\n\n('Assists',\n 'AtBat',\n 'CAtBat',\n 'CHits',\n 'CHmRun',\n 'CRBI',\n 'CRuns',\n 'CWalks',\n 'Division',\n 'Errors',\n 'Hits',\n 'HmRun',\n 'League',\n 'NewLeague',\n 'PutOuts',\n 'RBI',\n 'Runs',\n 'Walks',\n 'Years')\n\n\nUsing neg_Cp results in a smaller model, as expected, with just 10 variables selected.\n\nhitters_Cp = sklearn_selected(OLS,\n                               strategy,\n                               scoring=neg_Cp)\nhitters_Cp.fit(Hitters, Y)\nhitters_Cp.selected_state_\n\n('Assists',\n 'AtBat',\n 'CAtBat',\n 'CRBI',\n 'CRuns',\n 'CWalks',\n 'Division',\n 'Hits',\n 'PutOuts',\n 'Walks')\n\n\n\n\n\nAs an alternative to using C_p, we might try cross-validation to select a model in forward selection. For this, we need a method that stores the full path of models found in forward selection, and allows predictions for each of these. This can be done with the sklearn_selection_path() estimator from ISLP.models. The function cross_val_predict() from ISLP.models computes the cross-validated predictions for each of the models along the path, which we can use to evaluate the cross-validated MSE along the path.\nHere we define a strategy that fits the full forward selection path. While there are various parameter choices for sklearn_selection_path(), we use the defaults here, which selects the model at each step based on the biggest reduction in RSS.\n\nstrategy = Stepwise.fixed_steps(design,\n                                len(design.terms),\n                                direction='forward')\nfull_path = sklearn_selection_path(OLS, strategy)\n\nWe now fit the full forward-selection path on the Hitters data and compute the fitted values.\n\nfull_path.fit(Hitters, Y)\nYhat_in = full_path.predict(Hitters)\nYhat_in.shape\n\n(263, 20)\n\n\nThis gives us an array of fitted values — 20 steps in all, including the fitted mean for the null model — which we can use to evaluate in-sample MSE. As expected, the in-sample MSE improves each step we take, indicating we must use either the validation or cross-validation approach to select the number of steps. We fix the y-axis to range from 50,000 to 250,000 to compare to the cross-validation and validation set MSE below, as well as other methods such as ridge regression, lasso and principal components regression.\n\nmse_fig, ax = subplots(figsize=(8,8))\ninsample_mse = ((Yhat_in - Y[:,None])**2).mean(0)\nn_steps = insample_mse.shape[0]\nax.plot(np.arange(n_steps),\n        insample_mse,\n        'k', # color black\n        label='In-sample')\nax.set_ylabel('MSE',\n              fontsize=20)\nax.set_xlabel('# steps of forward stepwise',\n              fontsize=20)\nax.set_xticks(np.arange(n_steps)[::2])\nax.legend()\nax.set_ylim([50000,250000]);\n\n\n\n\n\n\n\n\nNotice the expression None in Y[:,None] above. This adds an axis (dimension) to the one-dimensional array Y, which allows it to be recycled when subtracted from the two-dimensional Yhat_in.\nWe are now ready to use cross-validation to estimate test error along the model path. We must use only the training observations to perform all aspects of model-fitting — including variable selection. Therefore, the determination of which model of a given size is best must be made using in each training fold. This point is subtle but important. If the full data set is used to select the best subset at each step, then the validation set errors and cross-validation errors that we obtain will not be accurate estimates of the test error.\nWe now compute the cross-validated predicted values using 5-fold cross-validation.\n\nK = 5\nkfold = skm.KFold(K,\n                  random_state=0,\n                  shuffle=True)\nYhat_cv = skm.cross_val_predict(full_path,\n                                Hitters,\n                                Y,\n                                cv=kfold)\nYhat_cv.shape\n\n(263, 20)\n\n\nskm.cross_val_predict() The prediction matrix Yhat_cv is the same shape as Yhat_in; the difference is that the predictions in each row, corresponding to a particular sample index, were made from models fit on a training fold that did not include that row.\nAt each model along the path, we compute the MSE in each of the cross-validation folds. These we will average to get the mean MSE, and can also use the individual values to compute a crude estimate of the standard error of the mean. {The estimate is crude because the five error estimates are based on overlapping training sets, and hence are not independent.} Hence we must know the test indices for each cross-validation split. This can be found by using the split() method of kfold. Because we fixed the random state above, whenever we split any array with the same number of rows as Y we recover the same training and test indices, though we simply ignore the training indices below.\n\ncv_mse = []\nfor train_idx, test_idx in kfold.split(Y):\n    errors = (Yhat_cv[test_idx] - Y[test_idx,None])**2\n    cv_mse.append(errors.mean(0)) # column means\ncv_mse = np.array(cv_mse).T\ncv_mse.shape\n\n(20, 5)\n\n\nWe now add the cross-validation error estimates to our MSE plot. We include the mean error across the five folds, and the estimate of the standard error of the mean.\n\nax.errorbar(np.arange(n_steps), \n            cv_mse.mean(1),\n            cv_mse.std(1) / np.sqrt(K),\n            label='Cross-validated',\n            c='r') # color red\nax.set_ylim([50000,250000])\nax.legend()\nmse_fig\n\n\n\n\n\n\n\n\nTo repeat the above using the validation set approach, we simply change our cv argument to a validation set: one random split of the data into a test and training. We choose a test size of 20%, similar to the size of each test set in 5-fold cross-validation.skm.ShuffleSplit()\n\nvalidation = skm.ShuffleSplit(n_splits=1, \n                              test_size=0.2,\n                              random_state=0)\nfor train_idx, test_idx in validation.split(Y):\n    full_path.fit(Hitters.iloc[train_idx],\n                  Y[train_idx])\n    Yhat_val = full_path.predict(Hitters.iloc[test_idx])\n    errors = (Yhat_val - Y[test_idx,None])**2\n    validation_mse = errors.mean(0)\n\nAs for the in-sample MSE case, the validation set approach does not provide standard errors.\n\nax.plot(np.arange(n_steps), \n        validation_mse,\n        'b--', # color blue, broken line\n        label='Validation')\nax.set_xticks(np.arange(n_steps)[::2])\nax.set_ylim([50000,250000])\nax.legend()\nmse_fig\n\n\n\n\n\n\n\n\n\n\n\nForward stepwise is a greedy selection procedure; at each step it augments the current set by including one additional variable. We now apply best subset selection to the Hitters data, which for every subset size, searches for the best set of predictors.\nWe will use a package called l0bnb to perform best subset selection. Instead of constraining the subset to be a given size, this package produces a path of solutions using the subset size as a penalty rather than a constraint. Although the distinction is subtle, the difference comes when we cross-validate.\n\nD = design.fit_transform(Hitters)\nD = D.drop('intercept', axis=1)\nX = np.asarray(D)\n\nHere we excluded the first column corresponding to the intercept, as l0bnb will fit the intercept separately. We can find a path using the fit_path() function.\n\npath = fit_path(X, \n                Y,\n                max_nonzeros=X.shape[1])\n\nPreprocessing Data.\nBnB Started.\n\n\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/numba/np/ufunc/parallel.py:371: NumbaWarning: The TBB threading layer requires TBB version 2021 update 6 or later i.e., TBB_INTERFACE_VERSION &gt;= 12060. Found TBB_INTERFACE_VERSION = 12050. The TBB threading layer is disabled.\n  warnings.warn(problem)\n\n\nIteration: 1. Number of non-zeros:  1\nIteration: 2. Number of non-zeros:  2\nIteration: 3. Number of non-zeros:  2\nIteration: 4. Number of non-zeros:  2\nIteration: 5. Number of non-zeros:  3\nIteration: 6. Number of non-zeros:  3\nIteration: 7. Number of non-zeros:  4\nIteration: 8. Number of non-zeros:  9\nIteration: 9. Number of non-zeros:  9\nIteration: 10. Number of non-zeros:  9\nIteration: 11. Number of non-zeros:  9\nIteration: 12. Number of non-zeros:  9\nIteration: 13. Number of non-zeros:  9\nIteration: 14. Number of non-zeros:  9\nIteration: 15. Number of non-zeros:  9\nIteration: 16. Number of non-zeros:  9\nIteration: 17. Number of non-zeros:  9\nIteration: 18. Number of non-zeros:  17\nIteration: 19. Number of non-zeros:  19\n\n\nThe function fit_path() returns a list whose values include the fitted coefficients as B, an intercept as B0, as well as a few other attributes related to the particular path algorithm used. Such details are beyond the scope of this book.\n\npath[3]\n\n{'B': array([0.        , 3.25484367, 0.        , 0.        , 0.        ,\n        0.        , 0.        , 0.        , 0.        , 0.        ,\n        0.        , 0.67775265, 0.        , 0.        , 0.        ,\n        0.        , 0.        , 0.        , 0.        ]),\n 'B0': -38.98216739555505,\n 'lambda_0': 0.011416248027450187,\n 'M': 0.5829861733382012,\n 'Time_exceeded': False}\n\n\nIn the example above, we see that at the fourth step in the path, we have two nonzero coefficients in 'B', corresponding to the value 0.114 for the penalty parameter lambda_0. We could make predictions using this sequence of fits on a validation set as a function of lambda_0, or with more work using cross-validation.\n\n\n\n\nWe will use the sklearn.linear_model package (for which we use skl as shorthand below) to fit ridge and lasso regularized linear models on the Hitters data. We start with the model matrix X (without an intercept) that we computed in the previous section on best subset regression.\n\n\nWe will use the function skl.ElasticNet() to fit both ridge and the lasso. To fit a path of ridge regressions models, we use skl.ElasticNet.path(), which can fit both ridge and lasso, as well as a hybrid mixture; ridge regression corresponds to l1_ratio=0. It is good practice to standardize the columns of X in these applications, if the variables are measured in different units. Since skl.ElasticNet() does no normalization, we have to take care of that ourselves. Since we standardize first, in order to find coefficient estimates on the original scale, we must unstandardize the coefficient estimates. The parameter \\lambda in () and () is called alphas in sklearn. In order to be consistent with the rest of this chapter, we use lambdas rather than alphas in what follows. {At the time of publication, ridge fits like the one in code chunk [22] issue unwarranted convergence warning messages; we expect these to disappear as this package matures.}\n\nXs = X - X.mean(0)[None,:]\nX_scale = X.std(0)\nXs = Xs / X_scale[None,:]\nlambdas = 10**np.linspace(8, -2, 100) / Y.std()\nsoln_array = skl.ElasticNet.path(Xs,\n                                 Y,\n                                 l1_ratio=0.,\n                                 alphas=lambdas)[1]\nsoln_array.shape\n\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 64428165.36474803, tolerance: 12885.7065737425\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 64428069.135193564, tolerance: 12885.7065737425\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 64427947.709570706, tolerance: 12885.7065737425\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 64427794.49147929, tolerance: 12885.7065737425\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 64427601.15801401, tolerance: 12885.7065737425\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 64427357.208145335, tolerance: 12885.7065737425\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 64427049.39312406, tolerance: 12885.7065737425\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 64426660.99818401, tolerance: 12885.7065737425\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 64426170.936871, tolerance: 12885.7065737425\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 64425552.60935727, tolerance: 12885.7065737425\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 64424772.46361481, tolerance: 12885.7065737425\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 64423788.18271286, tolerance: 12885.7065737425\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 64422546.402046196, tolerance: 12885.7065737425\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 64420979.836119056, tolerance: 12885.7065737425\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 64419003.66458898, tolerance: 12885.7065737425\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 64416510.99045885, tolerance: 12885.7065737425\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 64413367.138336174, tolerance: 12885.7065737425\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 64409402.50628651, tolerance: 12885.7065737425\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 64404403.61988451, tolerance: 12885.7065737425\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 64398101.96098537, tolerance: 12885.7065737425\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 64390160.05690916, tolerance: 12885.7065737425\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 64380154.22050254, tolerance: 12885.7065737425\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 64367553.23368757, tolerance: 12885.7065737425\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 64351692.17811265, tolerance: 12885.7065737425\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 64331740.55708714, tolerance: 12885.7065737425\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 64306663.85815487, tolerance: 12885.7065737425\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 64275177.83204634, tolerance: 12885.7065737425\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 64235695.09903011, tolerance: 12885.7065737425\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 64186264.367964305, tolerance: 12885.7065737425\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 64124503.75014188, tolerance: 12885.7065737425\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 64047531.61120446, tolerance: 12885.7065737425\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 63951901.41718617, tolerance: 12885.7065737425\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 63833551.374737374, tolerance: 12885.7065737425\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 63687785.48493876, tolerance: 12885.7065737425\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 63509309.685659595, tolerance: 12885.7065737425\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 63292354.02159835, tolerance: 12885.7065737425\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 63030916.89990266, tolerance: 12885.7065737425\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 62719166.29703928, tolerance: 12885.7065737425\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 62352019.354438685, tolerance: 12885.7065737425\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 61925889.875772476, tolerance: 12885.7065737425\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 61439539.89859062, tolerance: 12885.7065737425\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 60894903.0392198, tolerance: 12885.7065737425\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 60297684.607476555, tolerance: 12885.7065737425\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 59657521.16598571, tolerance: 12885.7065737425\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 58987535.05051082, tolerance: 12885.7065737425\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 58303257.30893663, tolerance: 12885.7065737425\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 57621079.35589412, tolerance: 12885.7065737425\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 56956552.36298917, tolerance: 12885.7065737425\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 56322906.14367992, tolerance: 12885.7065737425\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 55730077.75280342, tolerance: 12885.7065737425\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 55184365.56435659, tolerance: 12885.7065737425\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 54688640.34364891, tolerance: 12885.7065737425\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 54242923.97107168, tolerance: 12885.7065737425\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 53845116.92275897, tolerance: 12885.7065737425\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 53491699.682508625, tolerance: 12885.7065737425\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 53178310.76477922, tolerance: 12885.7065737425\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 52900177.0923312, tolerance: 12885.7065737425\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 52652419.277090184, tolerance: 12885.7065737425\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 52430270.98847021, tolerance: 12885.7065737425\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 52229246.49376922, tolerance: 12885.7065737425\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 52045276.25129579, tolerance: 12885.7065737425\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 51874817.1076159, tolerance: 12885.7065737425\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 51714935.480955794, tolerance: 12885.7065737425\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 51563358.53546296, tolerance: 12885.7065737425\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 51418487.86706321, tolerance: 12885.7065737425\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 51279371.620424494, tolerance: 12885.7065737425\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 51145634.32609811, tolerance: 12885.7065737425\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 51017369.0029908, tolerance: 12885.7065737425\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 50895002.066019125, tolerance: 12885.7065737425\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 50779146.5004749, tolerance: 12885.7065737425\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 50670461.07683647, tolerance: 12885.7065737425\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 50569532.273268186, tolerance: 12885.7065737425\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 50476790.98101036, tolerance: 12885.7065737425\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 50392468.80539258, tolerance: 12885.7065737425\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 50316590.69087266, tolerance: 12885.7065737425\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 50248994.15213535, tolerance: 12885.7065737425\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 50189362.60450388, tolerance: 12885.7065737425\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 50137261.69126276, tolerance: 12885.7065737425\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 50092171.83247441, tolerance: 12885.7065737425\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 50053515.08162336, tolerance: 12885.7065737425\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 50020677.61213047, tolerance: 12885.7065737425\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 49993029.95018282, tolerance: 12885.7065737425\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 49969946.08142674, tolerance: 12885.7065737425\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 49950821.12032736, tolerance: 12885.7065737425\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 49935086.3757958, tolerance: 12885.7065737425\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 49922220.655421816, tolerance: 12885.7065737425\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 49911757.23721764, tolerance: 12885.7065737425\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 49903286.659217976, tolerance: 12885.7065737425\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 49896456.01861018, tolerance: 12885.7065737425\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 49890965.72520974, tolerance: 12885.7065737425\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 49886564.66025484, tolerance: 12885.7065737425\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 49883044.54819704, tolerance: 12885.7065737425\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 49880234.14784603, tolerance: 12885.7065737425\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 49877993.67036287, tolerance: 12885.7065737425\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 49876209.665535495, tolerance: 12885.7065737425\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 49874790.49349924, tolerance: 12885.7065737425\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 49873662.41408353, tolerance: 12885.7065737425\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 49872766.272819825, tolerance: 12885.7065737425\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 49872054.73300084, tolerance: 12885.7065737425\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 49871489.98963819, tolerance: 12885.7065737425\n  model = cd_fast.enet_coordinate_descent_gram(\n\n\n(19, 100)\n\n\nHere we extract the array of coefficients corresponding to the solutions along the regularization path. By default the skl.ElasticNet.path method fits a path along an automatically selected range of \\lambda values, except for the case when l1_ratio=0, which results in ridge regression (as is the case here). {The reason is rather technical; for all models except ridge, we can find the smallest value of \\lambda for which all coefficients are zero. For ridge this value is \\infty.} So here we have chosen to implement the function over a grid of values ranging from \\lambda=10^{8} to \\lambda=10^{-2} scaled by the standard deviation of y, essentially covering the full range of scenarios from the null model containing only the intercept, to the least squares fit.\nAssociated with each value of \\lambda is a vector of ridge regression coefficients, that can be accessed by a column of soln_array. In this case, soln_array is a 19 \\times 100 matrix, with 19 rows (one for each predictor) and 100 columns (one for each value of \\lambda).\nWe transpose this matrix and turn it into a data frame to facilitate viewing and plotting.\n\nsoln_path = pd.DataFrame(soln_array.T,\n                         columns=D.columns,\n                         index=-np.log(lambdas))\nsoln_path.index.name = 'negative log(lambda)'\nsoln_path\n\n\n\n\n\n\n\n\nAtBat\nHits\nHmRun\nRuns\nRBI\nWalks\nYears\nCAtBat\nCHits\nCHmRun\nCRuns\nCRBI\nCWalks\nLeague[N]\nDivision[W]\nPutOuts\nAssists\nErrors\nNewLeague[N]\n\n\nnegative log(lambda)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n-12.310855\n0.000800\n0.000889\n0.000695\n0.000851\n0.000911\n0.000900\n0.000812\n0.001067\n0.001113\n0.001064\n0.001141\n0.001149\n0.000993\n-0.000029\n-0.000390\n0.000609\n0.000052\n-0.000011\n-0.000006\n\n\n-12.078271\n0.001010\n0.001122\n0.000878\n0.001074\n0.001150\n0.001135\n0.001025\n0.001346\n0.001404\n0.001343\n0.001439\n0.001450\n0.001253\n-0.000037\n-0.000492\n0.000769\n0.000065\n-0.000014\n-0.000007\n\n\n-11.845686\n0.001274\n0.001416\n0.001107\n0.001355\n0.001451\n0.001433\n0.001293\n0.001698\n0.001772\n0.001694\n0.001816\n0.001830\n0.001581\n-0.000046\n-0.000621\n0.000970\n0.000082\n-0.000017\n-0.000009\n\n\n-11.613102\n0.001608\n0.001787\n0.001397\n0.001710\n0.001831\n0.001808\n0.001632\n0.002143\n0.002236\n0.002138\n0.002292\n0.002309\n0.001995\n-0.000058\n-0.000784\n0.001224\n0.000104\n-0.000022\n-0.000012\n\n\n-11.380518\n0.002029\n0.002255\n0.001763\n0.002158\n0.002310\n0.002281\n0.002059\n0.002704\n0.002821\n0.002698\n0.002892\n0.002914\n0.002517\n-0.000073\n-0.000990\n0.001544\n0.000131\n-0.000028\n-0.000015\n\n\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n\n\n9.784658\n-290.823989\n336.929968\n37.322686\n-59.748520\n-26.507086\n134.855915\n-17.216195\n-387.775826\n89.573601\n-12.273926\n476.079273\n257.271255\n-213.124780\n31.258215\n-58.457857\n78.761266\n53.622113\n-22.208456\n-12.402891\n\n\n10.017243\n-290.879272\n337.113713\n37.431373\n-59.916820\n-26.606957\n134.900549\n-17.108041\n-388.458404\n89.000707\n-12.661459\n477.031349\n257.966790\n-213.280891\n31.256434\n-58.448850\n78.761240\n53.645147\n-22.198802\n-12.391969\n\n\n10.249827\n-290.923382\n337.260446\n37.518064\n-60.051166\n-26.686604\n134.936136\n-17.022194\n-388.997470\n88.537380\n-12.971603\n477.791860\n258.523025\n-213.405740\n31.254958\n-58.441682\n78.761230\n53.663357\n-22.191071\n-12.383205\n\n\n10.482412\n-290.958537\n337.377455\n37.587122\n-60.158256\n-26.750044\n134.964477\n-16.954081\n-389.423414\n88.164178\n-13.219329\n478.398404\n258.967059\n-213.505412\n31.253747\n-58.435983\n78.761230\n53.677759\n-22.184893\n-12.376191\n\n\n10.714996\n-290.986528\n337.470648\n37.642077\n-60.243522\n-26.800522\n134.987027\n-16.900054\n-389.760135\n87.864551\n-13.416889\n478.881540\n259.321007\n-213.584869\n31.252760\n-58.431454\n78.761235\n53.689152\n-22.179964\n-12.370587\n\n\n\n\n100 rows × 19 columns\n\n\n\nWe plot the paths to get a sense of how the coefficients vary with \\lambda. To control the location of the legend we first set legend to False in the plot method, adding it afterward with the legend() method of ax.\n\npath_fig, ax = subplots(figsize=(8,8))\nsoln_path.plot(ax=ax, legend=False)\nax.set_xlabel('$-\\log(\\lambda)$', fontsize=20)\nax.set_ylabel('Standardized coefficients', fontsize=20)\nax.legend(loc='upper left');\n\n\n\n\n\n\n\n\n(We have used latex formatting in the horizontal label, in order to format the Greek \\lambda appropriately.) We expect the coefficient estimates to be much smaller, in terms of \\ell_2 norm, when a large value of \\lambda is used, as compared to when a small value of \\lambda is used. (Recall that the \\ell_2 norm is the square root of the sum of squared coefficient values.) We display the coefficients at the 40th step, where \\lambda is 25.535.\n\nbeta_hat = soln_path.loc[soln_path.index[39]]\nlambdas[39], beta_hat\n\n(25.53538897200662,\n AtBat           5.433750\n Hits            6.223582\n HmRun           4.585498\n Runs            5.880855\n RBI             6.195921\n Walks           6.277975\n Years           5.299767\n CAtBat          7.147501\n CHits           7.539495\n CHmRun          7.182344\n CRuns           7.728649\n CRBI            7.790702\n CWalks          6.592901\n League[N]       0.042445\n Division[W]    -3.107159\n PutOuts         4.605263\n Assists         0.378371\n Errors         -0.135196\n NewLeague[N]    0.150323\n Name: -3.240065292879872, dtype: float64)\n\n\nLet’s compute the \\ell_2 norm of the standardized coefficients.\n\nnp.linalg.norm(beta_hat)\n\n24.170617201443775\n\n\nIn contrast, here is the \\ell_2 norm when \\lambda is 2.44e-01. Note the much larger \\ell_2 norm of the coefficients associated with this smaller value of \\lambda.\n\nbeta_hat = soln_path.loc[soln_path.index[59]]\nlambdas[59], np.linalg.norm(beta_hat)\n\n(0.2437476613348855, 160.4237101772597)\n\n\nAbove we normalized X upfront, and fit the ridge model using Xs. The Pipeline() object in sklearn provides a clear way to separate feature normalization from the fitting of the ridge model itself.\n\nridge = skl.ElasticNet(alpha=lambdas[59], l1_ratio=0)\nscaler = StandardScaler(with_mean=True,  with_std=True)\npipe = Pipeline(steps=[('scaler', scaler), ('ridge', ridge)])\npipe.fit(X, Y)\n\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.446e+07, tolerance: 5.332e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n\n\nPipeline(steps=[('scaler', StandardScaler()),\n                ('ridge', ElasticNet(alpha=0.2437476613348855, l1_ratio=0))])In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.  Pipeline?Documentation for PipelineiFittedPipeline(steps=[('scaler', StandardScaler()),\n                ('ridge', ElasticNet(alpha=0.2437476613348855, l1_ratio=0))])  StandardScaler?Documentation for StandardScalerStandardScaler()  ElasticNet?Documentation for ElasticNetElasticNet(alpha=0.2437476613348855, l1_ratio=0) \n\n\nWe show that it gives the same \\ell_2 norm as in our previous fit on the standardized data.\n\nnp.linalg.norm(ridge.coef_)\n\n160.42371017725912\n\n\nNotice that the operation pipe.fit(X, Y) above has changed the ridge object, and in particular has added attributes such as coef_ that were not there before. ### Estimating Test Error of Ridge Regression Choosing an a priori value of \\lambda for ridge regression is difficult if not impossible. We will want to use the validation method or cross-validation to select the tuning parameter. The reader may not be surprised that the Pipeline() approach can be used in skm.cross_validate() with either a validation method (i.e. validation) or k-fold cross-validation.\nWe fix the random state of the splitter so that the results obtained will be reproducible.\n\nvalidation = skm.ShuffleSplit(n_splits=1,\n                              test_size=0.5,\n                              random_state=0)\nridge.alpha = 0.01\nresults = skm.cross_validate(ridge,\n                             X,\n                             Y,\n                             scoring='neg_mean_squared_error',\n                             cv=validation)\n-results['test_score']\n\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 5.486e+06, tolerance: 2.272e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n\n\narray([134214.00419204])\n\n\nThe test MSE is 1.342e+05. Note that if we had instead simply fit a model with just an intercept, we would have predicted each test observation using the mean of the training observations. We can get the same result by fitting a ridge regression model with a very large value of \\lambda. Note that 1e10 means 10^{10}.\n\nridge.alpha = 1e10\nresults = skm.cross_validate(ridge,\n                             X,\n                             Y,\n                             scoring='neg_mean_squared_error',\n                             cv=validation)\n-results['test_score']\n\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.136e+07, tolerance: 2.272e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n\n\narray([231788.32155285])\n\n\nObviously choosing \\lambda=0.01 is arbitrary, so we will use cross-validation or the validation-set approach to choose the tuning parameter \\lambda. The object GridSearchCV() allows exhaustive grid search to choose such a parameter.\nWe first use the validation set method to choose \\lambda.\n\nparam_grid = {'ridge__alpha': lambdas}\ngrid = skm.GridSearchCV(pipe,\n                        param_grid,\n                        cv=validation,\n                        scoring='neg_mean_squared_error')\ngrid.fit(X, Y)\ngrid.best_params_['ridge__alpha']\ngrid.best_estimator_\n\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.136e+07, tolerance: 2.272e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.136e+07, tolerance: 2.272e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.136e+07, tolerance: 2.272e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.136e+07, tolerance: 2.272e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.136e+07, tolerance: 2.272e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.136e+07, tolerance: 2.272e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.136e+07, tolerance: 2.272e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.136e+07, tolerance: 2.272e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.136e+07, tolerance: 2.272e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.136e+07, tolerance: 2.272e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.136e+07, tolerance: 2.272e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.136e+07, tolerance: 2.272e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.136e+07, tolerance: 2.272e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.136e+07, tolerance: 2.272e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.136e+07, tolerance: 2.272e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.136e+07, tolerance: 2.272e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.135e+07, tolerance: 2.272e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.135e+07, tolerance: 2.272e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.135e+07, tolerance: 2.272e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.135e+07, tolerance: 2.272e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.135e+07, tolerance: 2.272e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.134e+07, tolerance: 2.272e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.134e+07, tolerance: 2.272e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.133e+07, tolerance: 2.272e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.132e+07, tolerance: 2.272e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.131e+07, tolerance: 2.272e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.130e+07, tolerance: 2.272e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.128e+07, tolerance: 2.272e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.127e+07, tolerance: 2.272e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.124e+07, tolerance: 2.272e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.121e+07, tolerance: 2.272e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.117e+07, tolerance: 2.272e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.113e+07, tolerance: 2.272e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.107e+07, tolerance: 2.272e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.100e+07, tolerance: 2.272e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.091e+07, tolerance: 2.272e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.081e+07, tolerance: 2.272e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.069e+07, tolerance: 2.272e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.055e+07, tolerance: 2.272e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.038e+07, tolerance: 2.272e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.019e+07, tolerance: 2.272e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.977e+06, tolerance: 2.272e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.744e+06, tolerance: 2.272e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.494e+06, tolerance: 2.272e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.234e+06, tolerance: 2.272e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 8.968e+06, tolerance: 2.272e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 8.704e+06, tolerance: 2.272e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 8.448e+06, tolerance: 2.272e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 8.204e+06, tolerance: 2.272e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 7.977e+06, tolerance: 2.272e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 7.769e+06, tolerance: 2.272e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 7.581e+06, tolerance: 2.272e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 7.412e+06, tolerance: 2.272e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 7.261e+06, tolerance: 2.272e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 7.127e+06, tolerance: 2.272e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 7.008e+06, tolerance: 2.272e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 6.900e+06, tolerance: 2.272e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 6.803e+06, tolerance: 2.272e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 6.714e+06, tolerance: 2.272e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 6.632e+06, tolerance: 2.272e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 6.554e+06, tolerance: 2.272e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 6.480e+06, tolerance: 2.272e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 6.409e+06, tolerance: 2.272e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 6.342e+06, tolerance: 2.272e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 6.276e+06, tolerance: 2.272e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 6.214e+06, tolerance: 2.272e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 6.154e+06, tolerance: 2.272e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 6.097e+06, tolerance: 2.272e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 6.043e+06, tolerance: 2.272e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 5.991e+06, tolerance: 2.272e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 5.943e+06, tolerance: 2.272e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 5.898e+06, tolerance: 2.272e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 5.856e+06, tolerance: 2.272e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 5.817e+06, tolerance: 2.272e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 5.780e+06, tolerance: 2.272e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 5.746e+06, tolerance: 2.272e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 5.715e+06, tolerance: 2.272e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 5.687e+06, tolerance: 2.272e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 5.661e+06, tolerance: 2.272e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 5.637e+06, tolerance: 2.272e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 5.616e+06, tolerance: 2.272e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 5.596e+06, tolerance: 2.272e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 5.579e+06, tolerance: 2.272e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 5.563e+06, tolerance: 2.272e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 5.550e+06, tolerance: 2.272e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 5.538e+06, tolerance: 2.272e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 5.528e+06, tolerance: 2.272e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 5.519e+06, tolerance: 2.272e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 5.512e+06, tolerance: 2.272e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 5.506e+06, tolerance: 2.272e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 5.500e+06, tolerance: 2.272e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 5.496e+06, tolerance: 2.272e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 5.493e+06, tolerance: 2.272e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 5.490e+06, tolerance: 2.272e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 5.488e+06, tolerance: 2.272e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 5.486e+06, tolerance: 2.272e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 5.485e+06, tolerance: 2.272e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 5.483e+06, tolerance: 2.272e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 5.483e+06, tolerance: 2.272e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 5.482e+06, tolerance: 2.272e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.248e+07, tolerance: 5.332e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n\n\nGridSearchCV(cv=ShuffleSplit(n_splits=1, random_state=0, test_size=0.5, train_size=None),\n             estimator=Pipeline(steps=[('scaler', StandardScaler()),\n                                       ('ridge',\n                                        ElasticNet(alpha=10000000000.0,\n                                                   l1_ratio=0))]),\n             param_grid={'ridge__alpha': array([2.22093791e+05, 1.76005531e+05, 1.39481373e+05, 1.10536603e+05,\n       8.75983676e+04, 6.94202082e+04, 5.50143278e+04, 4.35979140e+04,\n       3...\n       4.67486141e-03, 3.70474772e-03, 2.93594921e-03, 2.32668954e-03,\n       1.84386167e-03, 1.46122884e-03, 1.15799887e-03, 9.17694298e-04,\n       7.27257037e-04, 5.76338765e-04, 4.56738615e-04, 3.61957541e-04,\n       2.86845161e-04, 2.27319885e-04, 1.80147121e-04, 1.42763513e-04,\n       1.13137642e-04, 8.96596467e-05, 7.10537367e-05, 5.63088712e-05,\n       4.46238174e-05, 3.53636122e-05, 2.80250579e-05, 2.22093791e-05])},\n             scoring='neg_mean_squared_error')In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.  GridSearchCV?Documentation for GridSearchCViFittedGridSearchCV(cv=ShuffleSplit(n_splits=1, random_state=0, test_size=0.5, train_size=None),\n             estimator=Pipeline(steps=[('scaler', StandardScaler()),\n                                       ('ridge',\n                                        ElasticNet(alpha=10000000000.0,\n                                                   l1_ratio=0))]),\n             param_grid={'ridge__alpha': array([2.22093791e+05, 1.76005531e+05, 1.39481373e+05, 1.10536603e+05,\n       8.75983676e+04, 6.94202082e+04, 5.50143278e+04, 4.35979140e+04,\n       3...\n       4.67486141e-03, 3.70474772e-03, 2.93594921e-03, 2.32668954e-03,\n       1.84386167e-03, 1.46122884e-03, 1.15799887e-03, 9.17694298e-04,\n       7.27257037e-04, 5.76338765e-04, 4.56738615e-04, 3.61957541e-04,\n       2.86845161e-04, 2.27319885e-04, 1.80147121e-04, 1.42763513e-04,\n       1.13137642e-04, 8.96596467e-05, 7.10537367e-05, 5.63088712e-05,\n       4.46238174e-05, 3.53636122e-05, 2.80250579e-05, 2.22093791e-05])},\n             scoring='neg_mean_squared_error') best_estimator_: PipelinePipeline(steps=[('scaler', StandardScaler()),\n                ('ridge', ElasticNet(alpha=0.005899006046740854, l1_ratio=0))])  StandardScaler?Documentation for StandardScalerStandardScaler()  ElasticNet?Documentation for ElasticNetElasticNet(alpha=0.005899006046740854, l1_ratio=0) \n\n\n0.005899006046740854\n\n\nPipeline(steps=[('scaler', StandardScaler()),\n                ('ridge', ElasticNet(alpha=0.005899006046740854, l1_ratio=0))])In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.  Pipeline?Documentation for PipelineiFittedPipeline(steps=[('scaler', StandardScaler()),\n                ('ridge', ElasticNet(alpha=0.005899006046740854, l1_ratio=0))])  StandardScaler?Documentation for StandardScalerStandardScaler()  ElasticNet?Documentation for ElasticNetElasticNet(alpha=0.005899006046740854, l1_ratio=0) \n\n\nAlternatively, we can use 5-fold cross-validation.\n\ngrid = skm.GridSearchCV(pipe, \n                        param_grid,\n                        cv=kfold,\n                        scoring='neg_mean_squared_error')\ngrid.fit(X, Y)\ngrid.best_params_['ridge__alpha']\ngrid.best_estimator_\n\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.880e+07, tolerance: 3.759e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.101e+07, tolerance: 4.201e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.233e+07, tolerance: 4.466e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.223e+07, tolerance: 4.445e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.218e+07, tolerance: 4.437e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.880e+07, tolerance: 3.759e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.101e+07, tolerance: 4.201e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.233e+07, tolerance: 4.466e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.223e+07, tolerance: 4.445e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.218e+07, tolerance: 4.437e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.880e+07, tolerance: 3.759e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.101e+07, tolerance: 4.201e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.233e+07, tolerance: 4.466e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.223e+07, tolerance: 4.445e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.218e+07, tolerance: 4.437e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.880e+07, tolerance: 3.759e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.101e+07, tolerance: 4.201e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.233e+07, tolerance: 4.466e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.222e+07, tolerance: 4.445e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.218e+07, tolerance: 4.437e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.879e+07, tolerance: 3.759e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.101e+07, tolerance: 4.201e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.233e+07, tolerance: 4.466e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.222e+07, tolerance: 4.445e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.218e+07, tolerance: 4.437e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.879e+07, tolerance: 3.759e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.101e+07, tolerance: 4.201e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.233e+07, tolerance: 4.466e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.222e+07, tolerance: 4.445e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.218e+07, tolerance: 4.437e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.879e+07, tolerance: 3.759e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.100e+07, tolerance: 4.201e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.233e+07, tolerance: 4.466e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.222e+07, tolerance: 4.445e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.218e+07, tolerance: 4.437e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.879e+07, tolerance: 3.759e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.100e+07, tolerance: 4.201e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.233e+07, tolerance: 4.466e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.222e+07, tolerance: 4.445e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.218e+07, tolerance: 4.437e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.879e+07, tolerance: 3.759e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.100e+07, tolerance: 4.201e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.233e+07, tolerance: 4.466e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.222e+07, tolerance: 4.445e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.218e+07, tolerance: 4.437e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.879e+07, tolerance: 3.759e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.100e+07, tolerance: 4.201e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.233e+07, tolerance: 4.466e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.222e+07, tolerance: 4.445e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.218e+07, tolerance: 4.437e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.879e+07, tolerance: 3.759e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.100e+07, tolerance: 4.201e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.233e+07, tolerance: 4.466e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.222e+07, tolerance: 4.445e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.218e+07, tolerance: 4.437e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.879e+07, tolerance: 3.759e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.100e+07, tolerance: 4.201e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.233e+07, tolerance: 4.466e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.222e+07, tolerance: 4.445e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.218e+07, tolerance: 4.437e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.879e+07, tolerance: 3.759e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.100e+07, tolerance: 4.201e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.233e+07, tolerance: 4.466e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.222e+07, tolerance: 4.445e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.218e+07, tolerance: 4.437e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.879e+07, tolerance: 3.759e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.100e+07, tolerance: 4.201e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.233e+07, tolerance: 4.466e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.222e+07, tolerance: 4.445e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.218e+07, tolerance: 4.437e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.879e+07, tolerance: 3.759e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.100e+07, tolerance: 4.201e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.232e+07, tolerance: 4.466e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.222e+07, tolerance: 4.445e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.217e+07, tolerance: 4.437e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.879e+07, tolerance: 3.759e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.100e+07, tolerance: 4.201e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.232e+07, tolerance: 4.466e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.222e+07, tolerance: 4.445e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.217e+07, tolerance: 4.437e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.879e+07, tolerance: 3.759e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.099e+07, tolerance: 4.201e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.232e+07, tolerance: 4.466e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.221e+07, tolerance: 4.445e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.217e+07, tolerance: 4.437e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.878e+07, tolerance: 3.759e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.099e+07, tolerance: 4.201e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.232e+07, tolerance: 4.466e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.221e+07, tolerance: 4.445e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.216e+07, tolerance: 4.437e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.878e+07, tolerance: 3.759e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.099e+07, tolerance: 4.201e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.231e+07, tolerance: 4.466e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.221e+07, tolerance: 4.445e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.216e+07, tolerance: 4.437e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.878e+07, tolerance: 3.759e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.098e+07, tolerance: 4.201e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.231e+07, tolerance: 4.466e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.220e+07, tolerance: 4.445e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.215e+07, tolerance: 4.437e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.877e+07, tolerance: 3.759e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.098e+07, tolerance: 4.201e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.230e+07, tolerance: 4.466e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.219e+07, tolerance: 4.445e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.215e+07, tolerance: 4.437e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.876e+07, tolerance: 3.759e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.097e+07, tolerance: 4.201e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.229e+07, tolerance: 4.466e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.219e+07, tolerance: 4.445e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.214e+07, tolerance: 4.437e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.876e+07, tolerance: 3.759e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.096e+07, tolerance: 4.201e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.228e+07, tolerance: 4.466e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.218e+07, tolerance: 4.445e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.213e+07, tolerance: 4.437e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.875e+07, tolerance: 3.759e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.095e+07, tolerance: 4.201e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.227e+07, tolerance: 4.466e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.216e+07, tolerance: 4.445e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.211e+07, tolerance: 4.437e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.873e+07, tolerance: 3.759e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.093e+07, tolerance: 4.201e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.225e+07, tolerance: 4.466e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.215e+07, tolerance: 4.445e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.209e+07, tolerance: 4.437e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.872e+07, tolerance: 3.759e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.091e+07, tolerance: 4.201e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.223e+07, tolerance: 4.466e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.212e+07, tolerance: 4.445e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.207e+07, tolerance: 4.437e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.870e+07, tolerance: 3.759e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.089e+07, tolerance: 4.201e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.220e+07, tolerance: 4.466e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.210e+07, tolerance: 4.445e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.204e+07, tolerance: 4.437e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.867e+07, tolerance: 3.759e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.086e+07, tolerance: 4.201e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.217e+07, tolerance: 4.466e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.207e+07, tolerance: 4.445e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.200e+07, tolerance: 4.437e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.864e+07, tolerance: 3.759e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.082e+07, tolerance: 4.201e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.213e+07, tolerance: 4.466e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.203e+07, tolerance: 4.445e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.196e+07, tolerance: 4.437e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.860e+07, tolerance: 3.759e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.077e+07, tolerance: 4.201e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.208e+07, tolerance: 4.466e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.197e+07, tolerance: 4.445e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.190e+07, tolerance: 4.437e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.855e+07, tolerance: 3.759e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.071e+07, tolerance: 4.201e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.201e+07, tolerance: 4.466e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.191e+07, tolerance: 4.445e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.183e+07, tolerance: 4.437e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.849e+07, tolerance: 3.759e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.063e+07, tolerance: 4.201e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.194e+07, tolerance: 4.466e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.183e+07, tolerance: 4.445e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.174e+07, tolerance: 4.437e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.841e+07, tolerance: 3.759e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.054e+07, tolerance: 4.201e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.184e+07, tolerance: 4.466e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.173e+07, tolerance: 4.445e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.163e+07, tolerance: 4.437e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.832e+07, tolerance: 3.759e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.043e+07, tolerance: 4.201e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.172e+07, tolerance: 4.466e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.161e+07, tolerance: 4.445e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.149e+07, tolerance: 4.437e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.820e+07, tolerance: 3.759e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.029e+07, tolerance: 4.201e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.157e+07, tolerance: 4.466e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.146e+07, tolerance: 4.445e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.132e+07, tolerance: 4.437e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.806e+07, tolerance: 3.759e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.012e+07, tolerance: 4.201e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.139e+07, tolerance: 4.466e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.129e+07, tolerance: 4.445e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.112e+07, tolerance: 4.437e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.789e+07, tolerance: 3.759e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.992e+07, tolerance: 4.201e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.117e+07, tolerance: 4.466e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.107e+07, tolerance: 4.445e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.087e+07, tolerance: 4.437e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.769e+07, tolerance: 3.759e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.968e+07, tolerance: 4.201e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.091e+07, tolerance: 4.466e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.081e+07, tolerance: 4.445e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.058e+07, tolerance: 4.437e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.745e+07, tolerance: 3.759e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.939e+07, tolerance: 4.201e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.060e+07, tolerance: 4.466e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.051e+07, tolerance: 4.445e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.024e+07, tolerance: 4.437e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.718e+07, tolerance: 3.759e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.907e+07, tolerance: 4.201e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.024e+07, tolerance: 4.466e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.015e+07, tolerance: 4.445e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.984e+07, tolerance: 4.437e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.686e+07, tolerance: 3.759e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.869e+07, tolerance: 4.201e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.984e+07, tolerance: 4.466e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.975e+07, tolerance: 4.445e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.939e+07, tolerance: 4.437e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.650e+07, tolerance: 3.759e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.828e+07, tolerance: 4.201e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.938e+07, tolerance: 4.466e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.929e+07, tolerance: 4.445e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.888e+07, tolerance: 4.437e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.611e+07, tolerance: 3.759e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.783e+07, tolerance: 4.201e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.888e+07, tolerance: 4.466e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.880e+07, tolerance: 4.445e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.832e+07, tolerance: 4.437e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.568e+07, tolerance: 3.759e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.734e+07, tolerance: 4.201e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.834e+07, tolerance: 4.466e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.826e+07, tolerance: 4.445e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.772e+07, tolerance: 4.437e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.524e+07, tolerance: 3.759e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.684e+07, tolerance: 4.201e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.778e+07, tolerance: 4.466e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.770e+07, tolerance: 4.445e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.710e+07, tolerance: 4.437e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.478e+07, tolerance: 3.759e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.633e+07, tolerance: 4.201e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.721e+07, tolerance: 4.466e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.713e+07, tolerance: 4.445e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.646e+07, tolerance: 4.437e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.432e+07, tolerance: 3.759e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.582e+07, tolerance: 4.201e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.663e+07, tolerance: 4.466e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.655e+07, tolerance: 4.445e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.582e+07, tolerance: 4.437e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.388e+07, tolerance: 3.759e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.533e+07, tolerance: 4.201e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.607e+07, tolerance: 4.466e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.599e+07, tolerance: 4.445e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.520e+07, tolerance: 4.437e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.345e+07, tolerance: 3.759e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.486e+07, tolerance: 4.201e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.554e+07, tolerance: 4.466e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.545e+07, tolerance: 4.445e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.460e+07, tolerance: 4.437e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.305e+07, tolerance: 3.759e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.443e+07, tolerance: 4.201e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.504e+07, tolerance: 4.466e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.494e+07, tolerance: 4.445e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.404e+07, tolerance: 4.437e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.268e+07, tolerance: 3.759e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.403e+07, tolerance: 4.201e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.457e+07, tolerance: 4.466e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.447e+07, tolerance: 4.445e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.352e+07, tolerance: 4.437e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.234e+07, tolerance: 3.759e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.366e+07, tolerance: 4.201e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.415e+07, tolerance: 4.466e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.405e+07, tolerance: 4.445e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.305e+07, tolerance: 4.437e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.204e+07, tolerance: 3.759e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.333e+07, tolerance: 4.201e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.377e+07, tolerance: 4.466e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.366e+07, tolerance: 4.445e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.262e+07, tolerance: 4.437e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.177e+07, tolerance: 3.759e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.304e+07, tolerance: 4.201e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.343e+07, tolerance: 4.466e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.331e+07, tolerance: 4.445e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.224e+07, tolerance: 4.437e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.154e+07, tolerance: 3.759e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.278e+07, tolerance: 4.201e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.312e+07, tolerance: 4.466e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.300e+07, tolerance: 4.445e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.190e+07, tolerance: 4.437e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.133e+07, tolerance: 3.759e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.255e+07, tolerance: 4.201e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.284e+07, tolerance: 4.466e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.272e+07, tolerance: 4.445e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.159e+07, tolerance: 4.437e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.114e+07, tolerance: 3.759e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.234e+07, tolerance: 4.201e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.260e+07, tolerance: 4.466e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.247e+07, tolerance: 4.445e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.132e+07, tolerance: 4.437e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.098e+07, tolerance: 3.759e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.215e+07, tolerance: 4.201e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.237e+07, tolerance: 4.466e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.225e+07, tolerance: 4.445e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.109e+07, tolerance: 4.437e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.083e+07, tolerance: 3.759e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.198e+07, tolerance: 4.201e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.217e+07, tolerance: 4.466e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.204e+07, tolerance: 4.445e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.088e+07, tolerance: 4.437e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.070e+07, tolerance: 3.759e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.182e+07, tolerance: 4.201e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.198e+07, tolerance: 4.466e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.186e+07, tolerance: 4.445e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.069e+07, tolerance: 4.437e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.058e+07, tolerance: 3.759e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.167e+07, tolerance: 4.201e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.181e+07, tolerance: 4.466e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.169e+07, tolerance: 4.445e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.053e+07, tolerance: 4.437e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.047e+07, tolerance: 3.759e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.153e+07, tolerance: 4.201e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.165e+07, tolerance: 4.466e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.153e+07, tolerance: 4.445e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.038e+07, tolerance: 4.437e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.037e+07, tolerance: 3.759e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.139e+07, tolerance: 4.201e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.149e+07, tolerance: 4.466e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.138e+07, tolerance: 4.445e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.024e+07, tolerance: 4.437e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.027e+07, tolerance: 3.759e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.126e+07, tolerance: 4.201e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.135e+07, tolerance: 4.466e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.124e+07, tolerance: 4.445e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.012e+07, tolerance: 4.437e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.017e+07, tolerance: 3.759e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.114e+07, tolerance: 4.201e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.121e+07, tolerance: 4.466e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.110e+07, tolerance: 4.445e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.001e+07, tolerance: 4.437e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.007e+07, tolerance: 3.759e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.102e+07, tolerance: 4.201e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.108e+07, tolerance: 4.466e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.097e+07, tolerance: 4.445e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.902e+06, tolerance: 4.437e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.982e+06, tolerance: 3.759e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.090e+07, tolerance: 4.201e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.095e+07, tolerance: 4.466e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.084e+07, tolerance: 4.445e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.804e+06, tolerance: 4.437e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.894e+06, tolerance: 3.759e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.078e+07, tolerance: 4.201e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.084e+07, tolerance: 4.466e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.071e+07, tolerance: 4.445e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.713e+06, tolerance: 4.437e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.808e+06, tolerance: 3.759e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.067e+07, tolerance: 4.201e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.073e+07, tolerance: 4.466e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.060e+07, tolerance: 4.445e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.627e+06, tolerance: 4.437e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.727e+06, tolerance: 3.759e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.057e+07, tolerance: 4.201e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.062e+07, tolerance: 4.466e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.048e+07, tolerance: 4.445e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.548e+06, tolerance: 4.437e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.650e+06, tolerance: 3.759e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.047e+07, tolerance: 4.201e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.053e+07, tolerance: 4.466e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.038e+07, tolerance: 4.445e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.474e+06, tolerance: 4.437e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.579e+06, tolerance: 3.759e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.037e+07, tolerance: 4.201e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.045e+07, tolerance: 4.466e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.028e+07, tolerance: 4.445e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.406e+06, tolerance: 4.437e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.514e+06, tolerance: 3.759e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.028e+07, tolerance: 4.201e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.037e+07, tolerance: 4.466e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.019e+07, tolerance: 4.445e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.343e+06, tolerance: 4.437e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.454e+06, tolerance: 3.759e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.019e+07, tolerance: 4.201e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.030e+07, tolerance: 4.466e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.011e+07, tolerance: 4.445e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.286e+06, tolerance: 4.437e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.402e+06, tolerance: 3.759e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.011e+07, tolerance: 4.201e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.024e+07, tolerance: 4.466e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.003e+07, tolerance: 4.445e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.234e+06, tolerance: 4.437e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.355e+06, tolerance: 3.759e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.004e+07, tolerance: 4.201e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.019e+07, tolerance: 4.466e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.969e+06, tolerance: 4.445e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.187e+06, tolerance: 4.437e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.314e+06, tolerance: 3.759e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.966e+06, tolerance: 4.201e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.014e+07, tolerance: 4.466e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.914e+06, tolerance: 4.445e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.145e+06, tolerance: 4.437e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.279e+06, tolerance: 3.759e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.902e+06, tolerance: 4.201e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.010e+07, tolerance: 4.466e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.865e+06, tolerance: 4.445e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.108e+06, tolerance: 4.437e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.249e+06, tolerance: 3.759e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.843e+06, tolerance: 4.201e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.007e+07, tolerance: 4.466e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.824e+06, tolerance: 4.445e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.075e+06, tolerance: 4.437e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.223e+06, tolerance: 3.759e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.790e+06, tolerance: 4.201e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.004e+07, tolerance: 4.466e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.790e+06, tolerance: 4.445e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.047e+06, tolerance: 4.437e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.202e+06, tolerance: 3.759e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.743e+06, tolerance: 4.201e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.001e+07, tolerance: 4.466e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.761e+06, tolerance: 4.445e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.022e+06, tolerance: 4.437e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.184e+06, tolerance: 3.759e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.700e+06, tolerance: 4.201e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.990e+06, tolerance: 4.466e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.737e+06, tolerance: 4.445e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.000e+06, tolerance: 4.437e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.169e+06, tolerance: 3.759e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.663e+06, tolerance: 4.201e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.971e+06, tolerance: 4.466e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.717e+06, tolerance: 4.445e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 8.982e+06, tolerance: 4.437e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.156e+06, tolerance: 3.759e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.630e+06, tolerance: 4.201e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.956e+06, tolerance: 4.466e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.701e+06, tolerance: 4.445e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 8.966e+06, tolerance: 4.437e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.146e+06, tolerance: 3.759e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.601e+06, tolerance: 4.201e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.943e+06, tolerance: 4.466e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.688e+06, tolerance: 4.445e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 8.953e+06, tolerance: 4.437e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.138e+06, tolerance: 3.759e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.575e+06, tolerance: 4.201e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.933e+06, tolerance: 4.466e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.677e+06, tolerance: 4.445e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 8.942e+06, tolerance: 4.437e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.132e+06, tolerance: 3.759e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.554e+06, tolerance: 4.201e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.924e+06, tolerance: 4.466e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.668e+06, tolerance: 4.445e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 8.933e+06, tolerance: 4.437e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.126e+06, tolerance: 3.759e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.535e+06, tolerance: 4.201e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.917e+06, tolerance: 4.466e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.661e+06, tolerance: 4.445e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 8.926e+06, tolerance: 4.437e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.122e+06, tolerance: 3.759e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.520e+06, tolerance: 4.201e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.911e+06, tolerance: 4.466e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.655e+06, tolerance: 4.445e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 8.920e+06, tolerance: 4.437e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.119e+06, tolerance: 3.759e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.507e+06, tolerance: 4.201e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.906e+06, tolerance: 4.466e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.651e+06, tolerance: 4.445e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 8.915e+06, tolerance: 4.437e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.116e+06, tolerance: 3.759e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.496e+06, tolerance: 4.201e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.902e+06, tolerance: 4.466e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.647e+06, tolerance: 4.445e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 8.911e+06, tolerance: 4.437e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.114e+06, tolerance: 3.759e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.487e+06, tolerance: 4.201e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.899e+06, tolerance: 4.466e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.644e+06, tolerance: 4.445e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 8.907e+06, tolerance: 4.437e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.112e+06, tolerance: 3.759e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.480e+06, tolerance: 4.201e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.897e+06, tolerance: 4.466e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.642e+06, tolerance: 4.445e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 8.905e+06, tolerance: 4.437e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.111e+06, tolerance: 3.759e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.474e+06, tolerance: 4.201e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.895e+06, tolerance: 4.466e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.640e+06, tolerance: 4.445e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 8.903e+06, tolerance: 4.437e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.110e+06, tolerance: 3.759e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.469e+06, tolerance: 4.201e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.893e+06, tolerance: 4.466e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.639e+06, tolerance: 4.445e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 8.901e+06, tolerance: 4.437e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.109e+06, tolerance: 3.759e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.465e+06, tolerance: 4.201e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.892e+06, tolerance: 4.466e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.638e+06, tolerance: 4.445e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 8.900e+06, tolerance: 4.437e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.108e+06, tolerance: 3.759e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.462e+06, tolerance: 4.201e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.891e+06, tolerance: 4.466e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.637e+06, tolerance: 4.445e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 8.899e+06, tolerance: 4.437e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.108e+06, tolerance: 3.759e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.460e+06, tolerance: 4.201e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.890e+06, tolerance: 4.466e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.636e+06, tolerance: 4.445e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 8.898e+06, tolerance: 4.437e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.107e+06, tolerance: 3.759e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.458e+06, tolerance: 4.201e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.890e+06, tolerance: 4.466e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.636e+06, tolerance: 4.445e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 8.897e+06, tolerance: 4.437e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.107e+06, tolerance: 3.759e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.456e+06, tolerance: 4.201e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.889e+06, tolerance: 4.466e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.635e+06, tolerance: 4.445e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 8.897e+06, tolerance: 4.437e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.271e+07, tolerance: 5.332e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n\n\nGridSearchCV(cv=KFold(n_splits=5, random_state=0, shuffle=True),\n             estimator=Pipeline(steps=[('scaler', StandardScaler()),\n                                       ('ridge',\n                                        ElasticNet(alpha=10000000000.0,\n                                                   l1_ratio=0))]),\n             param_grid={'ridge__alpha': array([2.22093791e+05, 1.76005531e+05, 1.39481373e+05, 1.10536603e+05,\n       8.75983676e+04, 6.94202082e+04, 5.50143278e+04, 4.35979140e+04,\n       3.45506012e+04, 2.73807606...\n       4.67486141e-03, 3.70474772e-03, 2.93594921e-03, 2.32668954e-03,\n       1.84386167e-03, 1.46122884e-03, 1.15799887e-03, 9.17694298e-04,\n       7.27257037e-04, 5.76338765e-04, 4.56738615e-04, 3.61957541e-04,\n       2.86845161e-04, 2.27319885e-04, 1.80147121e-04, 1.42763513e-04,\n       1.13137642e-04, 8.96596467e-05, 7.10537367e-05, 5.63088712e-05,\n       4.46238174e-05, 3.53636122e-05, 2.80250579e-05, 2.22093791e-05])},\n             scoring='neg_mean_squared_error')In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.  GridSearchCV?Documentation for GridSearchCViFittedGridSearchCV(cv=KFold(n_splits=5, random_state=0, shuffle=True),\n             estimator=Pipeline(steps=[('scaler', StandardScaler()),\n                                       ('ridge',\n                                        ElasticNet(alpha=10000000000.0,\n                                                   l1_ratio=0))]),\n             param_grid={'ridge__alpha': array([2.22093791e+05, 1.76005531e+05, 1.39481373e+05, 1.10536603e+05,\n       8.75983676e+04, 6.94202082e+04, 5.50143278e+04, 4.35979140e+04,\n       3.45506012e+04, 2.73807606...\n       4.67486141e-03, 3.70474772e-03, 2.93594921e-03, 2.32668954e-03,\n       1.84386167e-03, 1.46122884e-03, 1.15799887e-03, 9.17694298e-04,\n       7.27257037e-04, 5.76338765e-04, 4.56738615e-04, 3.61957541e-04,\n       2.86845161e-04, 2.27319885e-04, 1.80147121e-04, 1.42763513e-04,\n       1.13137642e-04, 8.96596467e-05, 7.10537367e-05, 5.63088712e-05,\n       4.46238174e-05, 3.53636122e-05, 2.80250579e-05, 2.22093791e-05])},\n             scoring='neg_mean_squared_error') best_estimator_: PipelinePipeline(steps=[('scaler', StandardScaler()),\n                ('ridge', ElasticNet(alpha=0.011852477631442489, l1_ratio=0))])  StandardScaler?Documentation for StandardScalerStandardScaler()  ElasticNet?Documentation for ElasticNetElasticNet(alpha=0.011852477631442489, l1_ratio=0) \n\n\n0.011852477631442489\n\n\nPipeline(steps=[('scaler', StandardScaler()),\n                ('ridge', ElasticNet(alpha=0.011852477631442489, l1_ratio=0))])In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.  Pipeline?Documentation for PipelineiFittedPipeline(steps=[('scaler', StandardScaler()),\n                ('ridge', ElasticNet(alpha=0.011852477631442489, l1_ratio=0))])  StandardScaler?Documentation for StandardScalerStandardScaler()  ElasticNet?Documentation for ElasticNetElasticNet(alpha=0.011852477631442489, l1_ratio=0) \n\n\nRecall we set up the kfold object for 5-fold cross-validation on page~. We now plot the cross-validated MSE as a function of -\\log(\\lambda), which has shrinkage decreasing from left to right.\n\nridge_fig, ax = subplots(figsize=(8,8))\nax.errorbar(-np.log(lambdas),\n            -grid.cv_results_['mean_test_score'],\n            yerr=grid.cv_results_['std_test_score'] / np.sqrt(K))\nax.set_ylim([50000,250000])\nax.set_xlabel('$-\\log(\\lambda)$', fontsize=20)\nax.set_ylabel('Cross-validated MSE', fontsize=20);\n\n\n\n\n\n\n\n\nOne can cross-validate different metrics to choose a parameter. The default metric for skl.ElasticNet() is test R^2. Let’s compare R^2 to MSE for cross-validation here.\n\ngrid_r2 = skm.GridSearchCV(pipe, \n                           param_grid,\n                           cv=kfold)\ngrid_r2.fit(X, Y)\n\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.880e+07, tolerance: 3.759e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.101e+07, tolerance: 4.201e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.233e+07, tolerance: 4.466e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.223e+07, tolerance: 4.445e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.218e+07, tolerance: 4.437e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.880e+07, tolerance: 3.759e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.101e+07, tolerance: 4.201e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.233e+07, tolerance: 4.466e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.223e+07, tolerance: 4.445e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.218e+07, tolerance: 4.437e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.880e+07, tolerance: 3.759e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.101e+07, tolerance: 4.201e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.233e+07, tolerance: 4.466e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.223e+07, tolerance: 4.445e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.218e+07, tolerance: 4.437e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.880e+07, tolerance: 3.759e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.101e+07, tolerance: 4.201e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.233e+07, tolerance: 4.466e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.222e+07, tolerance: 4.445e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.218e+07, tolerance: 4.437e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.879e+07, tolerance: 3.759e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.101e+07, tolerance: 4.201e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.233e+07, tolerance: 4.466e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.222e+07, tolerance: 4.445e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.218e+07, tolerance: 4.437e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.879e+07, tolerance: 3.759e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.101e+07, tolerance: 4.201e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.233e+07, tolerance: 4.466e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.222e+07, tolerance: 4.445e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.218e+07, tolerance: 4.437e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.879e+07, tolerance: 3.759e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.100e+07, tolerance: 4.201e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.233e+07, tolerance: 4.466e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.222e+07, tolerance: 4.445e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.218e+07, tolerance: 4.437e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.879e+07, tolerance: 3.759e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.100e+07, tolerance: 4.201e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.233e+07, tolerance: 4.466e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.222e+07, tolerance: 4.445e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.218e+07, tolerance: 4.437e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.879e+07, tolerance: 3.759e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.100e+07, tolerance: 4.201e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.233e+07, tolerance: 4.466e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.222e+07, tolerance: 4.445e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.218e+07, tolerance: 4.437e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.879e+07, tolerance: 3.759e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.100e+07, tolerance: 4.201e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.233e+07, tolerance: 4.466e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.222e+07, tolerance: 4.445e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.218e+07, tolerance: 4.437e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.879e+07, tolerance: 3.759e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.100e+07, tolerance: 4.201e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.233e+07, tolerance: 4.466e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.222e+07, tolerance: 4.445e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.218e+07, tolerance: 4.437e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.879e+07, tolerance: 3.759e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.100e+07, tolerance: 4.201e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.233e+07, tolerance: 4.466e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.222e+07, tolerance: 4.445e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.218e+07, tolerance: 4.437e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.879e+07, tolerance: 3.759e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.100e+07, tolerance: 4.201e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.233e+07, tolerance: 4.466e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.222e+07, tolerance: 4.445e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.218e+07, tolerance: 4.437e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.879e+07, tolerance: 3.759e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.100e+07, tolerance: 4.201e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.233e+07, tolerance: 4.466e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.222e+07, tolerance: 4.445e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.218e+07, tolerance: 4.437e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.879e+07, tolerance: 3.759e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.100e+07, tolerance: 4.201e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.232e+07, tolerance: 4.466e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.222e+07, tolerance: 4.445e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.217e+07, tolerance: 4.437e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.879e+07, tolerance: 3.759e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.100e+07, tolerance: 4.201e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.232e+07, tolerance: 4.466e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.222e+07, tolerance: 4.445e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.217e+07, tolerance: 4.437e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.879e+07, tolerance: 3.759e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.099e+07, tolerance: 4.201e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.232e+07, tolerance: 4.466e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.221e+07, tolerance: 4.445e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.217e+07, tolerance: 4.437e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.878e+07, tolerance: 3.759e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.099e+07, tolerance: 4.201e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.232e+07, tolerance: 4.466e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.221e+07, tolerance: 4.445e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.216e+07, tolerance: 4.437e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.878e+07, tolerance: 3.759e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.099e+07, tolerance: 4.201e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.231e+07, tolerance: 4.466e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.221e+07, tolerance: 4.445e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.216e+07, tolerance: 4.437e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.878e+07, tolerance: 3.759e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.098e+07, tolerance: 4.201e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.231e+07, tolerance: 4.466e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.220e+07, tolerance: 4.445e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.215e+07, tolerance: 4.437e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.877e+07, tolerance: 3.759e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.098e+07, tolerance: 4.201e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.230e+07, tolerance: 4.466e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.219e+07, tolerance: 4.445e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.215e+07, tolerance: 4.437e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.876e+07, tolerance: 3.759e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.097e+07, tolerance: 4.201e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.229e+07, tolerance: 4.466e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.219e+07, tolerance: 4.445e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.214e+07, tolerance: 4.437e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.876e+07, tolerance: 3.759e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.096e+07, tolerance: 4.201e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.228e+07, tolerance: 4.466e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.218e+07, tolerance: 4.445e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.213e+07, tolerance: 4.437e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.875e+07, tolerance: 3.759e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.095e+07, tolerance: 4.201e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.227e+07, tolerance: 4.466e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.216e+07, tolerance: 4.445e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.211e+07, tolerance: 4.437e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.873e+07, tolerance: 3.759e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.093e+07, tolerance: 4.201e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.225e+07, tolerance: 4.466e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.215e+07, tolerance: 4.445e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.209e+07, tolerance: 4.437e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.872e+07, tolerance: 3.759e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.091e+07, tolerance: 4.201e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.223e+07, tolerance: 4.466e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.212e+07, tolerance: 4.445e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.207e+07, tolerance: 4.437e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.870e+07, tolerance: 3.759e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.089e+07, tolerance: 4.201e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.220e+07, tolerance: 4.466e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.210e+07, tolerance: 4.445e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.204e+07, tolerance: 4.437e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.867e+07, tolerance: 3.759e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.086e+07, tolerance: 4.201e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.217e+07, tolerance: 4.466e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.207e+07, tolerance: 4.445e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.200e+07, tolerance: 4.437e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.864e+07, tolerance: 3.759e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.082e+07, tolerance: 4.201e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.213e+07, tolerance: 4.466e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.203e+07, tolerance: 4.445e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.196e+07, tolerance: 4.437e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.860e+07, tolerance: 3.759e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.077e+07, tolerance: 4.201e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.208e+07, tolerance: 4.466e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.197e+07, tolerance: 4.445e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.190e+07, tolerance: 4.437e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.855e+07, tolerance: 3.759e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.071e+07, tolerance: 4.201e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.201e+07, tolerance: 4.466e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.191e+07, tolerance: 4.445e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.183e+07, tolerance: 4.437e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.849e+07, tolerance: 3.759e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.063e+07, tolerance: 4.201e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.194e+07, tolerance: 4.466e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.183e+07, tolerance: 4.445e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.174e+07, tolerance: 4.437e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.841e+07, tolerance: 3.759e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.054e+07, tolerance: 4.201e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.184e+07, tolerance: 4.466e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.173e+07, tolerance: 4.445e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.163e+07, tolerance: 4.437e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.832e+07, tolerance: 3.759e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.043e+07, tolerance: 4.201e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.172e+07, tolerance: 4.466e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.161e+07, tolerance: 4.445e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.149e+07, tolerance: 4.437e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.820e+07, tolerance: 3.759e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.029e+07, tolerance: 4.201e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.157e+07, tolerance: 4.466e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.146e+07, tolerance: 4.445e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.132e+07, tolerance: 4.437e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.806e+07, tolerance: 3.759e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.012e+07, tolerance: 4.201e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.139e+07, tolerance: 4.466e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.129e+07, tolerance: 4.445e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.112e+07, tolerance: 4.437e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.789e+07, tolerance: 3.759e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.992e+07, tolerance: 4.201e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.117e+07, tolerance: 4.466e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.107e+07, tolerance: 4.445e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.087e+07, tolerance: 4.437e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.769e+07, tolerance: 3.759e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.968e+07, tolerance: 4.201e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.091e+07, tolerance: 4.466e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.081e+07, tolerance: 4.445e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.058e+07, tolerance: 4.437e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.745e+07, tolerance: 3.759e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.939e+07, tolerance: 4.201e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.060e+07, tolerance: 4.466e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.051e+07, tolerance: 4.445e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.024e+07, tolerance: 4.437e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.718e+07, tolerance: 3.759e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.907e+07, tolerance: 4.201e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.024e+07, tolerance: 4.466e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.015e+07, tolerance: 4.445e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.984e+07, tolerance: 4.437e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.686e+07, tolerance: 3.759e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.869e+07, tolerance: 4.201e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.984e+07, tolerance: 4.466e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.975e+07, tolerance: 4.445e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.939e+07, tolerance: 4.437e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.650e+07, tolerance: 3.759e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.828e+07, tolerance: 4.201e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.938e+07, tolerance: 4.466e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.929e+07, tolerance: 4.445e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.888e+07, tolerance: 4.437e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.611e+07, tolerance: 3.759e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.783e+07, tolerance: 4.201e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.888e+07, tolerance: 4.466e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.880e+07, tolerance: 4.445e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.832e+07, tolerance: 4.437e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.568e+07, tolerance: 3.759e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.734e+07, tolerance: 4.201e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.834e+07, tolerance: 4.466e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.826e+07, tolerance: 4.445e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.772e+07, tolerance: 4.437e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.524e+07, tolerance: 3.759e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.684e+07, tolerance: 4.201e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.778e+07, tolerance: 4.466e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.770e+07, tolerance: 4.445e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.710e+07, tolerance: 4.437e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.478e+07, tolerance: 3.759e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.633e+07, tolerance: 4.201e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.721e+07, tolerance: 4.466e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.713e+07, tolerance: 4.445e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.646e+07, tolerance: 4.437e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.432e+07, tolerance: 3.759e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.582e+07, tolerance: 4.201e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.663e+07, tolerance: 4.466e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.655e+07, tolerance: 4.445e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.582e+07, tolerance: 4.437e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.388e+07, tolerance: 3.759e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.533e+07, tolerance: 4.201e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.607e+07, tolerance: 4.466e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.599e+07, tolerance: 4.445e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.520e+07, tolerance: 4.437e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.345e+07, tolerance: 3.759e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.486e+07, tolerance: 4.201e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.554e+07, tolerance: 4.466e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.545e+07, tolerance: 4.445e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.460e+07, tolerance: 4.437e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.305e+07, tolerance: 3.759e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.443e+07, tolerance: 4.201e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.504e+07, tolerance: 4.466e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.494e+07, tolerance: 4.445e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.404e+07, tolerance: 4.437e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.268e+07, tolerance: 3.759e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.403e+07, tolerance: 4.201e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.457e+07, tolerance: 4.466e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.447e+07, tolerance: 4.445e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.352e+07, tolerance: 4.437e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.234e+07, tolerance: 3.759e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.366e+07, tolerance: 4.201e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.415e+07, tolerance: 4.466e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.405e+07, tolerance: 4.445e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.305e+07, tolerance: 4.437e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.204e+07, tolerance: 3.759e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.333e+07, tolerance: 4.201e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.377e+07, tolerance: 4.466e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.366e+07, tolerance: 4.445e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.262e+07, tolerance: 4.437e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.177e+07, tolerance: 3.759e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.304e+07, tolerance: 4.201e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.343e+07, tolerance: 4.466e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.331e+07, tolerance: 4.445e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.224e+07, tolerance: 4.437e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.154e+07, tolerance: 3.759e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.278e+07, tolerance: 4.201e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.312e+07, tolerance: 4.466e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.300e+07, tolerance: 4.445e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.190e+07, tolerance: 4.437e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.133e+07, tolerance: 3.759e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.255e+07, tolerance: 4.201e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.284e+07, tolerance: 4.466e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.272e+07, tolerance: 4.445e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.159e+07, tolerance: 4.437e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.114e+07, tolerance: 3.759e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.234e+07, tolerance: 4.201e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.260e+07, tolerance: 4.466e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.247e+07, tolerance: 4.445e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.132e+07, tolerance: 4.437e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.098e+07, tolerance: 3.759e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.215e+07, tolerance: 4.201e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.237e+07, tolerance: 4.466e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.225e+07, tolerance: 4.445e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.109e+07, tolerance: 4.437e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.083e+07, tolerance: 3.759e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.198e+07, tolerance: 4.201e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.217e+07, tolerance: 4.466e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.204e+07, tolerance: 4.445e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.088e+07, tolerance: 4.437e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.070e+07, tolerance: 3.759e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.182e+07, tolerance: 4.201e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.198e+07, tolerance: 4.466e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.186e+07, tolerance: 4.445e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.069e+07, tolerance: 4.437e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.058e+07, tolerance: 3.759e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.167e+07, tolerance: 4.201e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.181e+07, tolerance: 4.466e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.169e+07, tolerance: 4.445e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.053e+07, tolerance: 4.437e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.047e+07, tolerance: 3.759e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.153e+07, tolerance: 4.201e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.165e+07, tolerance: 4.466e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.153e+07, tolerance: 4.445e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.038e+07, tolerance: 4.437e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.037e+07, tolerance: 3.759e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.139e+07, tolerance: 4.201e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.149e+07, tolerance: 4.466e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.138e+07, tolerance: 4.445e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.024e+07, tolerance: 4.437e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.027e+07, tolerance: 3.759e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.126e+07, tolerance: 4.201e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.135e+07, tolerance: 4.466e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.124e+07, tolerance: 4.445e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.012e+07, tolerance: 4.437e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.017e+07, tolerance: 3.759e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.114e+07, tolerance: 4.201e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.121e+07, tolerance: 4.466e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.110e+07, tolerance: 4.445e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.001e+07, tolerance: 4.437e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.007e+07, tolerance: 3.759e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.102e+07, tolerance: 4.201e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.108e+07, tolerance: 4.466e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.097e+07, tolerance: 4.445e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.902e+06, tolerance: 4.437e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.982e+06, tolerance: 3.759e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.090e+07, tolerance: 4.201e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.095e+07, tolerance: 4.466e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.084e+07, tolerance: 4.445e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.804e+06, tolerance: 4.437e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.894e+06, tolerance: 3.759e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.078e+07, tolerance: 4.201e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.084e+07, tolerance: 4.466e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.071e+07, tolerance: 4.445e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.713e+06, tolerance: 4.437e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.808e+06, tolerance: 3.759e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.067e+07, tolerance: 4.201e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.073e+07, tolerance: 4.466e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.060e+07, tolerance: 4.445e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.627e+06, tolerance: 4.437e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.727e+06, tolerance: 3.759e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.057e+07, tolerance: 4.201e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.062e+07, tolerance: 4.466e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.048e+07, tolerance: 4.445e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.548e+06, tolerance: 4.437e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.650e+06, tolerance: 3.759e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.047e+07, tolerance: 4.201e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.053e+07, tolerance: 4.466e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.038e+07, tolerance: 4.445e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.474e+06, tolerance: 4.437e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.579e+06, tolerance: 3.759e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.037e+07, tolerance: 4.201e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.045e+07, tolerance: 4.466e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.028e+07, tolerance: 4.445e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.406e+06, tolerance: 4.437e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.514e+06, tolerance: 3.759e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.028e+07, tolerance: 4.201e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.037e+07, tolerance: 4.466e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.019e+07, tolerance: 4.445e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.343e+06, tolerance: 4.437e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.454e+06, tolerance: 3.759e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.019e+07, tolerance: 4.201e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.030e+07, tolerance: 4.466e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.011e+07, tolerance: 4.445e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.286e+06, tolerance: 4.437e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.402e+06, tolerance: 3.759e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.011e+07, tolerance: 4.201e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.024e+07, tolerance: 4.466e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.003e+07, tolerance: 4.445e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.234e+06, tolerance: 4.437e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.355e+06, tolerance: 3.759e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.004e+07, tolerance: 4.201e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.019e+07, tolerance: 4.466e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.969e+06, tolerance: 4.445e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.187e+06, tolerance: 4.437e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.314e+06, tolerance: 3.759e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.966e+06, tolerance: 4.201e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.014e+07, tolerance: 4.466e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.914e+06, tolerance: 4.445e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.145e+06, tolerance: 4.437e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.279e+06, tolerance: 3.759e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.902e+06, tolerance: 4.201e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.010e+07, tolerance: 4.466e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.865e+06, tolerance: 4.445e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.108e+06, tolerance: 4.437e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.249e+06, tolerance: 3.759e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.843e+06, tolerance: 4.201e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.007e+07, tolerance: 4.466e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.824e+06, tolerance: 4.445e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.075e+06, tolerance: 4.437e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.223e+06, tolerance: 3.759e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.790e+06, tolerance: 4.201e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.004e+07, tolerance: 4.466e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.790e+06, tolerance: 4.445e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.047e+06, tolerance: 4.437e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.202e+06, tolerance: 3.759e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.743e+06, tolerance: 4.201e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.001e+07, tolerance: 4.466e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.761e+06, tolerance: 4.445e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.022e+06, tolerance: 4.437e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.184e+06, tolerance: 3.759e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.700e+06, tolerance: 4.201e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.990e+06, tolerance: 4.466e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.737e+06, tolerance: 4.445e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.000e+06, tolerance: 4.437e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.169e+06, tolerance: 3.759e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.663e+06, tolerance: 4.201e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.971e+06, tolerance: 4.466e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.717e+06, tolerance: 4.445e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 8.982e+06, tolerance: 4.437e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.156e+06, tolerance: 3.759e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.630e+06, tolerance: 4.201e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.956e+06, tolerance: 4.466e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.701e+06, tolerance: 4.445e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 8.966e+06, tolerance: 4.437e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.146e+06, tolerance: 3.759e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.601e+06, tolerance: 4.201e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.943e+06, tolerance: 4.466e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.688e+06, tolerance: 4.445e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 8.953e+06, tolerance: 4.437e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.138e+06, tolerance: 3.759e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.575e+06, tolerance: 4.201e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.933e+06, tolerance: 4.466e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.677e+06, tolerance: 4.445e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 8.942e+06, tolerance: 4.437e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.132e+06, tolerance: 3.759e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.554e+06, tolerance: 4.201e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.924e+06, tolerance: 4.466e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.668e+06, tolerance: 4.445e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 8.933e+06, tolerance: 4.437e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.126e+06, tolerance: 3.759e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.535e+06, tolerance: 4.201e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.917e+06, tolerance: 4.466e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.661e+06, tolerance: 4.445e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 8.926e+06, tolerance: 4.437e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.122e+06, tolerance: 3.759e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.520e+06, tolerance: 4.201e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.911e+06, tolerance: 4.466e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.655e+06, tolerance: 4.445e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 8.920e+06, tolerance: 4.437e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.119e+06, tolerance: 3.759e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.507e+06, tolerance: 4.201e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.906e+06, tolerance: 4.466e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.651e+06, tolerance: 4.445e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 8.915e+06, tolerance: 4.437e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.116e+06, tolerance: 3.759e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.496e+06, tolerance: 4.201e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.902e+06, tolerance: 4.466e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.647e+06, tolerance: 4.445e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 8.911e+06, tolerance: 4.437e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.114e+06, tolerance: 3.759e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.487e+06, tolerance: 4.201e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.899e+06, tolerance: 4.466e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.644e+06, tolerance: 4.445e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 8.907e+06, tolerance: 4.437e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.112e+06, tolerance: 3.759e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.480e+06, tolerance: 4.201e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.897e+06, tolerance: 4.466e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.642e+06, tolerance: 4.445e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 8.905e+06, tolerance: 4.437e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.111e+06, tolerance: 3.759e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.474e+06, tolerance: 4.201e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.895e+06, tolerance: 4.466e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.640e+06, tolerance: 4.445e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 8.903e+06, tolerance: 4.437e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.110e+06, tolerance: 3.759e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.469e+06, tolerance: 4.201e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.893e+06, tolerance: 4.466e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.639e+06, tolerance: 4.445e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 8.901e+06, tolerance: 4.437e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.109e+06, tolerance: 3.759e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.465e+06, tolerance: 4.201e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.892e+06, tolerance: 4.466e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.638e+06, tolerance: 4.445e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 8.900e+06, tolerance: 4.437e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.108e+06, tolerance: 3.759e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.462e+06, tolerance: 4.201e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.891e+06, tolerance: 4.466e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.637e+06, tolerance: 4.445e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 8.899e+06, tolerance: 4.437e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.108e+06, tolerance: 3.759e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.460e+06, tolerance: 4.201e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.890e+06, tolerance: 4.466e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.636e+06, tolerance: 4.445e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 8.898e+06, tolerance: 4.437e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.107e+06, tolerance: 3.759e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.458e+06, tolerance: 4.201e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.890e+06, tolerance: 4.466e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.636e+06, tolerance: 4.445e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 8.897e+06, tolerance: 4.437e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.107e+06, tolerance: 3.759e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.456e+06, tolerance: 4.201e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.889e+06, tolerance: 4.466e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.635e+06, tolerance: 4.445e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 8.897e+06, tolerance: 4.437e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.271e+07, tolerance: 5.332e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n\n\nGridSearchCV(cv=KFold(n_splits=5, random_state=0, shuffle=True),\n             estimator=Pipeline(steps=[('scaler', StandardScaler()),\n                                       ('ridge',\n                                        ElasticNet(alpha=10000000000.0,\n                                                   l1_ratio=0))]),\n             param_grid={'ridge__alpha': array([2.22093791e+05, 1.76005531e+05, 1.39481373e+05, 1.10536603e+05,\n       8.75983676e+04, 6.94202082e+04, 5.50143278e+04, 4.35979140e+04,\n       3.45506012e+04, 2.73807606...\n       4.67486141e-03, 3.70474772e-03, 2.93594921e-03, 2.32668954e-03,\n       1.84386167e-03, 1.46122884e-03, 1.15799887e-03, 9.17694298e-04,\n       7.27257037e-04, 5.76338765e-04, 4.56738615e-04, 3.61957541e-04,\n       2.86845161e-04, 2.27319885e-04, 1.80147121e-04, 1.42763513e-04,\n       1.13137642e-04, 8.96596467e-05, 7.10537367e-05, 5.63088712e-05,\n       4.46238174e-05, 3.53636122e-05, 2.80250579e-05, 2.22093791e-05])})In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.  GridSearchCV?Documentation for GridSearchCViFittedGridSearchCV(cv=KFold(n_splits=5, random_state=0, shuffle=True),\n             estimator=Pipeline(steps=[('scaler', StandardScaler()),\n                                       ('ridge',\n                                        ElasticNet(alpha=10000000000.0,\n                                                   l1_ratio=0))]),\n             param_grid={'ridge__alpha': array([2.22093791e+05, 1.76005531e+05, 1.39481373e+05, 1.10536603e+05,\n       8.75983676e+04, 6.94202082e+04, 5.50143278e+04, 4.35979140e+04,\n       3.45506012e+04, 2.73807606...\n       4.67486141e-03, 3.70474772e-03, 2.93594921e-03, 2.32668954e-03,\n       1.84386167e-03, 1.46122884e-03, 1.15799887e-03, 9.17694298e-04,\n       7.27257037e-04, 5.76338765e-04, 4.56738615e-04, 3.61957541e-04,\n       2.86845161e-04, 2.27319885e-04, 1.80147121e-04, 1.42763513e-04,\n       1.13137642e-04, 8.96596467e-05, 7.10537367e-05, 5.63088712e-05,\n       4.46238174e-05, 3.53636122e-05, 2.80250579e-05, 2.22093791e-05])}) best_estimator_: PipelinePipeline(steps=[('scaler', StandardScaler()),\n                ('ridge', ElasticNet(alpha=0.011852477631442489, l1_ratio=0))])  StandardScaler?Documentation for StandardScalerStandardScaler()  ElasticNet?Documentation for ElasticNetElasticNet(alpha=0.011852477631442489, l1_ratio=0) \n\n\nFinally, let’s plot the results for cross-validated R^2.\n\nr2_fig, ax = subplots(figsize=(8,8))\nax.errorbar(-np.log(lambdas),\n            grid_r2.cv_results_['mean_test_score'],\n            yerr=grid_r2.cv_results_['std_test_score'] / np.sqrt(K))\nax.set_xlabel('$-\\log(\\lambda)$', fontsize=20)\nax.set_ylabel('Cross-validated $R^2$', fontsize=20);\n\n\n\n\n\n\n\n\n\n\n\nThe ridge, lasso, and elastic net can be efficiently fit along a sequence of \\lambda values, creating what is known as a solution path or regularization path. Hence there is specialized code to fit such paths, and to choose a suitable value of \\lambda using cross-validation. Even with identical splits the results will not agree exactly with our grid above because the standardization of each feature in grid is carried out on each fold, while in pipeCV below it is carried out only once. Nevertheless, the results are similar as the normalization is relatively stable across folds.\n\nridgeCV = skl.ElasticNetCV(alphas=lambdas, \n                           l1_ratio=0,\n                           cv=kfold)\npipeCV = Pipeline(steps=[('scaler', scaler),\n                         ('ridge', ridgeCV)])\npipeCV.fit(X, Y)\n\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 18795326.355502337, tolerance: 3759.1091668691934\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 18795268.88551146, tolerance: 3759.1091668691934\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 18795196.36782501, tolerance: 3759.1091668691934\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 18795104.862821117, tolerance: 3759.1091668691934\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 18794989.3996877, tolerance: 3759.1091668691934\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 18794843.70665096, tolerance: 3759.1091668691934\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 18794659.870711982, tolerance: 3759.1091668691934\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 18794427.90852136, tolerance: 3759.1091668691934\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 18794135.225263473, tolerance: 3759.1091668691934\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 18793765.93244957, tolerance: 3759.1091668691934\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 18793299.988030795, tolerance: 3759.1091668691934\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 18792712.112872537, tolerance: 3759.1091668691934\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 18791970.42593209, tolerance: 3759.1091668691934\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 18791034.725916974, tolerance: 3759.1091668691934\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 18789854.329135813, tolerance: 3759.1091668691934\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 18788365.35095647, tolerance: 3759.1091668691934\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 18786487.290938057, tolerance: 3759.1091668691934\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 18784118.748442676, tolerance: 3759.1091668691934\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 18781132.055533994, tolerance: 3759.1091668691934\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 18777366.566605028, tolerance: 3759.1091668691934\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 18772620.289297037, tolerance: 3759.1091668691934\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 18766639.479676697, tolerance: 3759.1091668691934\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 18759105.7588605, tolerance: 3759.1091668691934\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 18749620.24380315, tolerance: 3759.1091668691934\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 18737684.132153217, tolerance: 3759.1091668691934\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 18722675.15798276, tolerance: 3759.1091668691934\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 18703819.371684063, tolerance: 3759.1091668691934\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 18680157.840679295, tolerance: 3759.1091668691934\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 18650508.189617787, tolerance: 3759.1091668691934\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 18613421.50362849, tolerance: 3759.1091668691934\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 18567136.148713253, tolerance: 3759.1091668691934\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 18509531.699850056, tolerance: 3759.1091668691934\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 18438088.60860051, tolerance: 3759.1091668691934\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 18349862.649110068, tolerance: 3759.1091668691934\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 18241487.55721697, tolerance: 3759.1091668691934\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 18109224.250838783, tolerance: 3759.1091668691934\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 17949079.52302881, tolerance: 3759.1091668691934\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 17757018.994714487, tolerance: 3759.1091668691934\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 17529294.981908157, tolerance: 3759.1091668691934\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 17262895.45770098, tolerance: 3759.1091668691934\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 16956091.88298349, tolerance: 3759.1091668691934\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 16609021.736273045, tolerance: 3759.1091668691934\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 16224194.650997942, tolerance: 3759.1091668691934\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 15806778.14236389, tolerance: 3759.1091668691934\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 15364525.127389485, tolerance: 3759.1091668691934\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 14907268.751873787, tolerance: 3759.1091668691934\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 14446023.624531085, tolerance: 3759.1091668691934\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 13991857.160644894, tolerance: 3759.1091668691934\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 13554773.727504019, tolerance: 3759.1091668691934\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 13142847.182203239, tolerance: 3759.1091668691934\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 12761747.456957735, tolerance: 3759.1091668691934\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 12414679.232309299, tolerance: 3759.1091668691934\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 12102642.724649921, tolerance: 3759.1091668691934\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 11824874.692517482, tolerance: 3759.1091668691934\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 11579334.506306274, tolerance: 3759.1091668691934\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 11363143.416383037, tolerance: 3759.1091668691934\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 11172936.696242262, tolerance: 3759.1091668691934\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 11005127.926431658, tolerance: 3759.1091668691934\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 10856105.032984456, tolerance: 3759.1091668691934\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 10722381.625233077, tolerance: 3759.1091668691934\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 10600721.7355705, tolerance: 3759.1091668691934\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 10488247.552619586, tolerance: 3759.1091668691934\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 10382531.681050971, tolerance: 3759.1091668691934\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 10281669.161078598, tolerance: 3759.1091668691934\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 10184320.545404745, tolerance: 3759.1091668691934\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 10089716.550599052, tolerance: 3759.1091668691934\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 9997617.850835886, tolerance: 3759.1091668691934\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 9908230.155360883, tolerance: 3759.1091668691934\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 9822083.085401058, tolerance: 3759.1091668691934\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 9739888.930170624, tolerance: 3759.1091668691934\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 9662401.66618468, tolerance: 3759.1091668691934\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 9590296.226307368, tolerance: 3759.1091668691934\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 9524082.85469911, tolerance: 3759.1091668691934\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 9464062.902306687, tolerance: 3759.1091668691934\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 9410323.196208721, tolerance: 3759.1091668691934\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 9362759.024991708, tolerance: 3759.1091668691934\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 9321112.75311744, tolerance: 3759.1091668691934\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 9285016.290065197, tolerance: 3759.1091668691934\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 9254029.627395982, tolerance: 3759.1091668691934\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 9227672.214768155, tolerance: 3759.1091668691934\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 9205447.274608817, tolerance: 3759.1091668691934\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 9186860.57809821, tolerance: 3759.1091668691934\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 9171435.130133387, tolerance: 3759.1091668691934\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 9158722.527650401, tolerance: 3759.1091668691934\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 9148311.191396393, tolerance: 3759.1091668691934\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 9139831.50202177, tolerance: 3759.1091668691934\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 9132958.012055092, tolerance: 3759.1091668691934\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 9127409.14540844, tolerance: 3759.1091668691934\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 9122944.972944397, tolerance: 3759.1091668691934\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 9119363.705526387, tolerance: 3759.1091668691934\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 9116497.490587601, tolerance: 3759.1091668691934\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 9114207.980834305, tolerance: 3759.1091668691934\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 9112382.0085927, tolerance: 3759.1091668691934\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 9110927.5756482, tolerance: 3759.1091668691934\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 9109770.26982992, tolerance: 3759.1091668691934\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 9108850.148759821, tolerance: 3759.1091668691934\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 9108119.084911948, tolerance: 3759.1091668691934\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 9107538.53896914, tolerance: 3759.1091668691934\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 9107077.714961959, tolerance: 3759.1091668691934\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 9106712.046135835, tolerance: 3759.1091668691934\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 21005651.632865302, tolerance: 4201.186103419478\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 21005578.608102243, tolerance: 4201.186103419478\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 21005486.463074774, tolerance: 4201.186103419478\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 21005370.192059726, tolerance: 4201.186103419478\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 21005223.47917251, tolerance: 4201.186103419478\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 21005038.355660334, tolerance: 4201.186103419478\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 21004804.76767336, tolerance: 4201.186103419478\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 21004510.03120046, tolerance: 4201.186103419478\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 21004138.144828446, tolerance: 4201.186103419478\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 21003668.923421204, tolerance: 4201.186103419478\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 21003076.906345215, tolerance: 4201.186103419478\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 21002329.98203154, tolerance: 4201.186103419478\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 21001387.655909717, tolerance: 4201.186103419478\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 21000198.8704182, tolerance: 4201.186103419478\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 20998699.26312138, tolerance: 4201.186103419478\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 20996807.72107362, tolerance: 4201.186103419478\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 20994422.05552329, tolerance: 4201.186103419478\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 20991413.57989597, tolerance: 4201.186103419478\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 20987620.324921425, tolerance: 4201.186103419478\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 20982838.567338496, tolerance: 4201.186103419478\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 20976812.283196613, tolerance: 4201.186103419478\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 20969220.065253027, tolerance: 4201.186103419478\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 20959658.970863715, tolerance: 4201.186103419478\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 20947624.701018073, tolerance: 4201.186103419478\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 20932487.468798272, tolerance: 4201.186103419478\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 20913462.923603535, tolerance: 4201.186103419478\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 20889577.599545892, tolerance: 4201.186103419478\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 20859628.61984418, tolerance: 4201.186103419478\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 20822137.913488373, tolerance: 4201.186103419478\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 20775302.126054227, tolerance: 4201.186103419478\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 20716940.917180095, tolerance: 4201.186103419478\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 20644448.64953633, tolerance: 4201.186103419478\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 20554757.795455974, tolerance: 4201.186103419478\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 20444326.815649558, tolerance: 4201.186103419478\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 20309170.5956441, tolerance: 4201.186103419478\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 20144956.94257016, tolerance: 4201.186103419478\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 19947196.308887925, tolerance: 4201.186103419478\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 19711550.604615457, tolerance: 4201.186103419478\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 19434276.168588594, tolerance: 4201.186103419478\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 19112791.023677077, tolerance: 4201.186103419478\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 18746315.497629642, tolerance: 4201.186103419478\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 18336483.416578818, tolerance: 4201.186103419478\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 17887774.82963546, tolerance: 4201.186103419478\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 17407607.14883928, tolerance: 4201.186103419478\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 16905965.499829993, tolerance: 4201.186103419478\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 16394560.802096754, tolerance: 4201.186103419478\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 15885645.94315279, tolerance: 4201.186103419478\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 15390736.734407002, tolerance: 4201.186103419478\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 14919517.257852767, tolerance: 4201.186103419478\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 14479140.715843385, tolerance: 4201.186103419478\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 14074002.018103378, tolerance: 4201.186103419478\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 13705921.512677446, tolerance: 4201.186103419478\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 13374594.126102045, tolerance: 4201.186103419478\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 13078142.079861477, tolerance: 4201.186103419478\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 12813645.639316052, tolerance: 4201.186103419478\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 12577583.79115098, tolerance: 4201.186103419478\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 12366168.387483248, tolerance: 4201.186103419478\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 12175587.27845304, tolerance: 4201.186103419478\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 12002182.958268246, tolerance: 4201.186103419478\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 11842589.470660003, tolerance: 4201.186103419478\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 11693840.03187585, tolerance: 4201.186103419478\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 11553447.608003646, tolerance: 4201.186103419478\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 11419454.043831315, tolerance: 4201.186103419478\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 11290441.388440851, tolerance: 4201.186103419478\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 11165501.742342355, tolerance: 4201.186103419478\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 11044168.420816446, tolerance: 4201.186103419478\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 10926319.289729437, tolerance: 4201.186103419478\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 10812069.210340958, tolerance: 4201.186103419478\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 10701669.4034359, tolerance: 4201.186103419478\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 10595426.714498473, tolerance: 4201.186103419478\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 10493648.013477556, tolerance: 4201.186103419478\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 10396608.203056674, tolerance: 4201.186103419478\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 10304536.713965936, tolerance: 4201.186103419478\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 10217616.440012112, tolerance: 4201.186103419478\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 10135989.092876786, tolerance: 4201.186103419478\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 10059761.06074919, tolerance: 4201.186103419478\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 9989004.697692366, tolerance: 4201.186103419478\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 9923752.62059347, tolerance: 4201.186103419478\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 9863986.795334417, tolerance: 4201.186103419478\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 9809627.88419456, tolerance: 4201.186103419478\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 9760531.052715782, tolerance: 4201.186103419478\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 9716491.487344135, tolerance: 4201.186103419478\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 9677258.065315697, tolerance: 4201.186103419478\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 9642549.951166576, tolerance: 4201.186103419478\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 9612070.387835098, tolerance: 4201.186103419478\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 9585514.488134187, tolerance: 4201.186103419478\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 9562571.500908652, tolerance: 4201.186103419478\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 9542924.549680972, tolerance: 4201.186103419478\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 9526251.156758647, tolerance: 4201.186103419478\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 9512226.47253321, tolerance: 4201.186103419478\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 9500529.26731912, tolerance: 4201.186103419478\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 9490849.431706691, tolerance: 4201.186103419478\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 9482895.334901026, tolerance: 4201.186103419478\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 9476399.717816683, tolerance: 4201.186103419478\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 9471123.439397812, tolerance: 4201.186103419478\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 9466857.004635924, tolerance: 4201.186103419478\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 9463420.208446909, tolerance: 4201.186103419478\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 9460660.409301165, tolerance: 4201.186103419478\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 9458449.957483917, tolerance: 4201.186103419478\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 9456683.220357053, tolerance: 4201.186103419478\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 22331946.256290548, tolerance: 4466.452064951528\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 22331864.01867821, tolerance: 4466.452064951528\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 22331760.24858137, tolerance: 4466.452064951528\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 22331629.308755424, tolerance: 4466.452064951528\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 22331464.086506, tolerance: 4466.452064951528\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 22331255.6077477, tolerance: 4466.452064951528\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 22330992.5502474, tolerance: 4466.452064951528\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 22330660.629798386, tolerance: 4466.452064951528\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 22330241.826283135, tolerance: 4466.452064951528\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 22329713.408067036, tolerance: 4466.452064951528\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 22329046.70250113, tolerance: 4466.452064951528\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 22328205.54698371, tolerance: 4466.452064951528\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 22327144.33841677, tolerance: 4466.452064951528\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 22325805.57825301, tolerance: 4466.452064951528\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 22324116.78479917, tolerance: 4466.452064951528\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 22321986.61304197, tolerance: 4466.452064951528\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 22319299.983932897, tolerance: 4466.452064951528\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 22315911.978743475, tolerance: 4466.452064951528\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 22311640.19886971, tolerance: 4466.452064951528\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 22306255.22683996, tolerance: 4466.452064951528\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 22299468.750693012, tolerance: 4466.452064951528\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 22290918.833475474, tolerance: 4466.452064951528\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 22280151.727477487, tolerance: 4466.452064951528\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 22266599.55907775, tolerance: 4466.452064951528\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 22249553.1628005, tolerance: 4466.452064951528\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 22228129.352925844, tolerance: 4466.452064951528\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 22201232.036903113, tolerance: 4466.452064951528\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 22167506.872833703, tolerance: 4466.452064951528\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 22125289.765747745, tolerance: 4466.452064951528\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 22072550.54212509, tolerance: 4466.452064951528\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 22006834.845984124, tolerance: 4466.452064951528\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 21925209.90626917, tolerance: 4466.452064951528\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 21824223.566299047, tolerance: 4466.452064951528\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 21699890.949228805, tolerance: 4466.452064951528\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 21547729.12461406, tolerance: 4466.452064951528\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 21362866.2135773, tolerance: 4466.452064951528\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 21140255.446179494, tolerance: 4466.452064951528\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 20875023.139756173, tolerance: 4466.452064951528\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 20562967.323417887, tolerance: 4466.452064951528\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 20201195.56502676, tolerance: 4466.452064951528\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 19788844.32939184, tolerance: 4466.452064951528\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 19327763.897510033, tolerance: 4466.452064951528\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 18823001.043133, tolerance: 4466.452064951528\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 18282896.084610447, tolerance: 4466.452064951528\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 17718660.488698892, tolerance: 4466.452064951528\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 17143422.403240785, tolerance: 4466.452064951528\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 16570887.230051233, tolerance: 4466.452064951528\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 16013892.090309368, tolerance: 4466.452064951528\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 15483171.861886721, tolerance: 4466.452064951528\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 14986579.12958808, tolerance: 4466.452064951528\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 14528848.289413735, tolerance: 4466.452064951528\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 14111836.239774453, tolerance: 4466.452064951528\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 13735069.935277374, tolerance: 4466.452064951528\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 13396407.63933281, tolerance: 4466.452064951528\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 13092660.916831553, tolerance: 4466.452064951528\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 12820093.900344657, tolerance: 4466.452064951528\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 12574781.909222206, tolerance: 4466.452064951528\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 12352853.175078187, tolerance: 4466.452064951528\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 12150651.369793236, tolerance: 4466.452064951528\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 11964850.85477171, tolerance: 4466.452064951528\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 11792543.263225023, tolerance: 4466.452064951528\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 11631302.416094325, tolerance: 4466.452064951528\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 11479227.756127896, tolerance: 4466.452064951528\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 11334963.041737791, tolerance: 4466.452064951528\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 11197685.00316407, tolerance: 4466.452064951528\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 11067056.224580333, tolerance: 4466.452064951528\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 10943139.511030335, tolerance: 4466.452064951528\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 10826278.220752914, tolerance: 4466.452064951528\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 10716956.341549203, tolerance: 4466.452064951528\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 10615659.18706463, tolerance: 4466.452064951528\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 10522756.81931602, tolerance: 4466.452064951528\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 10438426.844454793, tolerance: 4466.452064951528\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 10362623.271152114, tolerance: 4466.452064951528\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 10295087.381795196, tolerance: 4466.452064951528\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 10235388.466414586, tolerance: 4466.452064951528\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 10182978.74114087, tolerance: 4466.452064951528\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 10137247.952604774, tolerance: 4466.452064951528\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 10097567.748922452, tolerance: 4466.452064951528\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 10063321.78974916, tolerance: 4466.452064951528\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 10033922.656392658, tolerance: 4466.452064951528\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 10008819.48683395, tolerance: 4466.452064951528\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 9987500.64529026, tolerance: 4466.452064951528\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 9969494.45332402, tolerance: 4466.452064951528\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 9954369.324796999, tolerance: 4466.452064951528\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 9941733.515465533, tolerance: 4466.452064951528\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 9931234.335988697, tolerance: 4466.452064951528\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 9922556.777457727, tolerance: 4466.452064951528\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 9915421.679109963, tolerance: 4466.452064951528\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 9909583.627876554, tolerance: 4466.452064951528\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 9904828.718921285, tolerance: 4466.452064951528\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 9900972.216495687, tolerance: 4466.452064951528\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 9897856.106707066, tolerance: 4466.452064951528\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 9895346.540855976, tolerance: 4466.452064951528\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 9893331.20375547, tolerance: 4466.452064951528\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 9891716.674948104, tolerance: 4466.452064951528\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 9890425.865192985, tolerance: 4466.452064951528\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 9889395.604661966, tolerance: 4466.452064951528\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 9888574.440117057, tolerance: 4466.452064951528\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 9887920.67448955, tolerance: 4466.452064951528\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 9887400.66016944, tolerance: 4466.452064951528\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 22225193.804080117, tolerance: 4445.102149685069\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 22225110.813517082, tolerance: 4445.102149685069\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 22225006.09337399, tolerance: 4445.102149685069\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 22224873.95483671, tolerance: 4445.102149685069\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 22224707.22016198, tolerance: 4445.102149685069\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 22224496.833220948, tolerance: 4445.102149685069\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 22224231.36831537, tolerance: 4445.102149685069\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 22223896.410779055, tolerance: 4445.102149685069\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 22223473.776030328, tolerance: 4445.102149685069\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 22222940.5251543, tolerance: 4445.102149685069\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 22222267.724341698, tolerance: 4445.102149685069\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 22221418.88207673, tolerance: 4445.102149685069\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 22220347.9812255, tolerance: 4445.102149685069\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 22218997.002387542, tolerance: 4445.102149685069\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 22217292.809172485, tolerance: 4445.102149685069\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 22215143.23447737, tolerance: 4445.102149685069\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 22212432.168317873, tolerance: 4445.102149685069\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 22209013.401268236, tolerance: 4445.102149685069\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 22204702.92221979, tolerance: 4445.102149685069\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 22199269.304569554, tolerance: 4445.102149685069\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 22192421.741654065, tolerance: 4445.102149685069\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 22183795.212587878, tolerance: 4445.102149685069\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 22172932.179096937, tolerance: 4445.102149685069\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 22159260.143049646, tolerance: 4445.102149685069\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 22142064.352031756, tolerance: 4445.102149685069\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 22120454.958092026, tolerance: 4445.102149685069\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 22093328.063342046, tolerance: 4445.102149685069\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 22059320.403233733, tolerance: 4445.102149685069\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 22016758.038453568, tolerance: 4445.102149685069\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 21963600.508906875, tolerance: 4445.102149685069\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 21897383.654785756, tolerance: 4445.102149685069\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 21815166.968429703, tolerance: 4445.102149685069\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 21713495.12352233, tolerance: 4445.102149685069\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 21588388.30984887, tolerance: 4445.102149685069\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 21435381.888817243, tolerance: 4445.102149685069\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 21249641.65996919, tolerance: 4445.102149685069\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 21026184.50512314, tolerance: 4445.102149685069\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 20760231.6556524, tolerance: 4445.102149685069\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 20447708.311673798, tolerance: 4445.102149685069\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 20085874.018901832, tolerance: 4445.102149685069\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 19674021.850113414, tolerance: 4445.102149685069\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 19214128.305344213, tolerance: 4445.102149685069\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 18711289.424232323, tolerance: 4445.102149685069\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 18173771.01440588, tolerance: 4445.102149685069\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 17612557.629344452, tolerance: 4445.102149685069\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 17040407.03219555, tolerance: 4445.102149685069\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 16470567.1316624, tolerance: 4445.102149685069\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 15915425.819018755, tolerance: 4445.102149685069\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 15385384.27148135, tolerance: 4445.102149685069\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 14888160.528800266, tolerance: 4445.102149685069\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 14428585.410549462, tolerance: 4445.102149685069\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 14008814.608291928, tolerance: 4445.102149685069\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 13628800.436573667, tolerance: 4445.102149685069\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 13286857.361730728, tolerance: 4445.102149685069\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 12980197.22408704, tolerance: 4445.102149685069\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 12705370.410345284, tolerance: 4445.102149685069\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 12458600.903357485, tolerance: 4445.102149685069\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 12236032.779575098, tolerance: 4445.102149685069\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 12033913.493897013, tolerance: 4445.102149685069\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 11848733.59673175, tolerance: 4445.102149685069\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 11677333.403468844, tolerance: 4445.102149685069\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 11516981.070353948, tolerance: 4445.102149685069\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 11365424.704670576, tolerance: 4445.102149685069\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 11220921.203073852, tolerance: 4445.102149685069\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 11082243.920528812, tolerance: 4445.102149685069\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 10948669.457422782, tolerance: 4445.102149685069\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 10819942.016223695, tolerance: 4445.102149685069\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 10696213.317397801, tolerance: 4445.102149685069\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 10577957.546131814, tolerance: 4445.102149685069\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 10465864.125929585, tolerance: 4445.102149685069\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 10360715.842557529, tolerance: 4445.102149685069\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 10263264.873279985, tolerance: 4445.102149685069\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 10174122.55823352, tolerance: 4445.102149685069\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 10093678.084935376, tolerance: 4445.102149685069\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 10022055.909584643, tolerance: 4445.102149685069\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 9959113.332252586, tolerance: 4445.102149685069\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 9904471.381944891, tolerance: 4445.102149685069\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 9857566.988895323, tolerance: 4445.102149685069\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 9817713.479318906, tolerance: 4445.102149685069\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 9784158.875562996, tolerance: 4445.102149685069\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 9756135.42939603, tolerance: 4445.102149685069\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 9732897.547924204, tolerance: 4445.102149685069\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 9713747.933154264, tolerance: 4445.102149685069\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 9698053.284846937, tolerance: 4445.102149685069\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 9685251.610393751, tolerance: 4445.102149685069\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 9674853.346299307, tolerance: 4445.102149685069\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 9666438.328081267, tolerance: 4445.102149685069\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 9659650.291029962, tolerance: 4445.102149685069\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 9654190.159247087, tolerance: 4445.102149685069\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 9649808.977199132, tolerance: 4445.102149685069\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 9646301.012972325, tolerance: 4445.102149685069\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 9643497.33132981, tolerance: 4445.102149685069\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 9641259.984844232, tolerance: 4445.102149685069\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 9639476.879485007, tolerance: 4445.102149685069\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 9638057.315691948, tolerance: 4445.102149685069\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 9636928.172690995, tolerance: 4445.102149685069\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 9636030.684258908, tolerance: 4445.102149685069\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 9635317.743812444, tolerance: 4445.102149685069\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 9634751.672914885, tolerance: 4445.102149685069\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 9634302.388158973, tolerance: 4445.102149685069\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 22182535.705905356, tolerance: 4436.577708196866\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 22182443.317481518, tolerance: 4436.577708196866\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 22182326.738805093, tolerance: 4436.577708196866\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 22182179.636849392, tolerance: 4436.577708196866\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 22181994.02104498, tolerance: 4436.577708196866\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 22181759.809716657, tolerance: 4436.577708196866\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 22181464.28327084, tolerance: 4436.577708196866\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 22181091.394644808, tolerance: 4436.577708196866\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 22180620.89990635, tolerance: 4436.577708196866\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 22180027.262331232, tolerance: 4436.577708196866\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 22179278.27131425, tolerance: 4436.577708196866\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 22178333.30250968, tolerance: 4436.577708196866\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 22177141.126954913, tolerance: 4436.577708196866\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 22175637.153777495, tolerance: 4436.577708196866\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 22173739.962460287, tolerance: 4436.577708196866\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 22171346.945451476, tolerance: 4436.577708196866\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 22168328.83898361, tolerance: 4436.577708196866\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 22164522.86814138, tolerance: 4436.577708196866\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 22159724.170510706, tolerance: 4436.577708196866\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 22153675.090679437, tolerance: 4436.577708196866\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 22146051.856030267, tolerance: 4436.577708196866\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 22136448.05522981, tolerance: 4436.577708196866\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 22124354.25056622, tolerance: 4436.577708196866\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 22109132.97552026, tolerance: 4436.577708196866\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 22089988.320511375, tolerance: 4436.577708196866\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 22065929.327634353, tolerance: 4436.577708196866\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 22035726.555516466, tolerance: 4436.577708196866\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 21997861.524512578, tolerance: 4436.577708196866\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 21950469.43740474, tolerance: 4436.577708196866\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 21891276.769023743, tolerance: 4436.577708196866\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 21817537.26021438, tolerance: 4436.577708196866\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 21725972.804210078, tolerance: 4436.577708196866\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 21612729.92224465, tolerance: 4436.577708196866\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 21473368.081082568, tolerance: 4436.577708196866\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 21302902.69437746, tolerance: 4436.577708196866\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 21095932.158423115, tolerance: 4436.577708196866\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 20846882.28627312, tolerance: 4436.577708196866\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 20550398.91167474, tolerance: 4436.577708196866\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 20201904.6391808, tolerance: 4436.577708196866\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 19798303.2544326, tolerance: 4436.577708196866\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 19338763.603172604, tolerance: 4436.577708196866\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 18825451.629099548, tolerance: 4436.577708196866\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 18264026.303933255, tolerance: 4436.577708196866\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 17663705.112665195, tolerance: 4436.577708196866\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 17036766.859036848, tolerance: 4436.577708196866\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 16397496.223623442, tolerance: 4436.577708196866\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 15760744.921491839, tolerance: 4436.577708196866\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 15140415.226936523, tolerance: 4436.577708196866\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 14548197.661971122, tolerance: 4436.577708196866\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 13992801.316187326, tolerance: 4436.577708196866\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 13479749.374918317, tolerance: 4436.577708196866\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 13011650.716625065, tolerance: 4436.577708196866\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 12588761.536151316, tolerance: 4436.577708196866\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 12209637.009462368, tolerance: 4436.577708196866\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 11871722.016013278, tolerance: 4436.577708196866\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 11571805.127380013, tolerance: 4436.577708196866\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 11306328.206388842, tolerance: 4436.577708196866\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 11071585.798533618, tolerance: 4436.577708196866\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 10863860.419768527, tolerance: 4436.577708196866\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 10679529.96999052, tolerance: 4436.577708196866\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 10515164.967978261, tolerance: 4436.577708196866\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 10367617.395431103, tolerance: 4436.577708196866\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 10234094.932508629, tolerance: 4436.577708196866\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 10112213.55722906, tolerance: 4436.577708196866\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 10000024.235755347, tolerance: 4436.577708196866\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 9896012.571054673, tolerance: 4436.577708196866\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 9799072.61456211, tolerance: 4436.577708196866\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 9708457.890308047, tolerance: 4436.577708196866\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 9623714.619163357, tolerance: 4436.577708196866\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 9544604.253487447, tolerance: 4436.577708196866\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 9471024.21276236, tolerance: 4436.577708196866\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 9402936.22899955, tolerance: 4436.577708196866\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 9340310.144654717, tolerance: 4436.577708196866\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 9283087.298596494, tolerance: 4436.577708196866\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 9231162.854348581, tolerance: 4436.577708196866\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 9184382.359520663, tolerance: 4436.577708196866\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 9142546.024753725, tolerance: 4436.577708196866\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 9105415.11489043, tolerance: 4436.577708196866\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 9072717.557093438, tolerance: 4436.577708196866\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 9044152.703403166, tolerance: 4436.577708196866\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 9019396.685309881, tolerance: 4436.577708196866\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 8998109.575324643, tolerance: 4436.577708196866\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 8979944.333787037, tolerance: 4436.577708196866\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 8964556.387394741, tolerance: 4436.577708196866\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 8951612.369533293, tolerance: 4436.577708196866\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 8940797.002727626, tolerance: 4436.577708196866\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 8931817.822045553, tolerance: 4436.577708196866\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 8924407.976697696, tolerance: 4436.577708196866\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 8918327.548499012, tolerance: 4436.577708196866\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 8913363.77940083, tolerance: 4436.577708196866\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 8909330.473244982, tolerance: 4436.577708196866\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 8906066.743651623, tolerance: 4436.577708196866\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 8903435.248435598, tolerance: 4436.577708196866\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 8901320.056409352, tolerance: 4436.577708196866\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 8899624.301447991, tolerance: 4436.577708196866\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 8898267.772618923, tolerance: 4436.577708196866\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 8897184.565959537, tolerance: 4436.577708196866\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 8896320.890153246, tolerance: 4436.577708196866\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 8895633.083483214, tolerance: 4436.577708196866\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 8895085.869018639, tolerance: 4436.577708196866\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.271e+07, tolerance: 5.332e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n\n\nPipeline(steps=[('scaler', StandardScaler()),\n                ('ridge',\n                 ElasticNetCV(alphas=array([2.22093791e+05, 1.76005531e+05, 1.39481373e+05, 1.10536603e+05,\n       8.75983676e+04, 6.94202082e+04, 5.50143278e+04, 4.35979140e+04,\n       3.45506012e+04, 2.73807606e+04, 2.16987845e+04, 1.71959156e+04,\n       1.36274691e+04, 1.07995362e+04, 8.55844774e+03, 6.78242347e+03,\n       5.37495461e+03, 4.25955961e+03,...\n       1.84386167e-03, 1.46122884e-03, 1.15799887e-03, 9.17694298e-04,\n       7.27257037e-04, 5.76338765e-04, 4.56738615e-04, 3.61957541e-04,\n       2.86845161e-04, 2.27319885e-04, 1.80147121e-04, 1.42763513e-04,\n       1.13137642e-04, 8.96596467e-05, 7.10537367e-05, 5.63088712e-05,\n       4.46238174e-05, 3.53636122e-05, 2.80250579e-05, 2.22093791e-05]),\n                              cv=KFold(n_splits=5, random_state=0, shuffle=True),\n                              l1_ratio=0))])In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.  Pipeline?Documentation for PipelineiFittedPipeline(steps=[('scaler', StandardScaler()),\n                ('ridge',\n                 ElasticNetCV(alphas=array([2.22093791e+05, 1.76005531e+05, 1.39481373e+05, 1.10536603e+05,\n       8.75983676e+04, 6.94202082e+04, 5.50143278e+04, 4.35979140e+04,\n       3.45506012e+04, 2.73807606e+04, 2.16987845e+04, 1.71959156e+04,\n       1.36274691e+04, 1.07995362e+04, 8.55844774e+03, 6.78242347e+03,\n       5.37495461e+03, 4.25955961e+03,...\n       1.84386167e-03, 1.46122884e-03, 1.15799887e-03, 9.17694298e-04,\n       7.27257037e-04, 5.76338765e-04, 4.56738615e-04, 3.61957541e-04,\n       2.86845161e-04, 2.27319885e-04, 1.80147121e-04, 1.42763513e-04,\n       1.13137642e-04, 8.96596467e-05, 7.10537367e-05, 5.63088712e-05,\n       4.46238174e-05, 3.53636122e-05, 2.80250579e-05, 2.22093791e-05]),\n                              cv=KFold(n_splits=5, random_state=0, shuffle=True),\n                              l1_ratio=0))])  StandardScaler?Documentation for StandardScalerStandardScaler()  ElasticNetCV?Documentation for ElasticNetCVElasticNetCV(alphas=array([2.22093791e+05, 1.76005531e+05, 1.39481373e+05, 1.10536603e+05,\n       8.75983676e+04, 6.94202082e+04, 5.50143278e+04, 4.35979140e+04,\n       3.45506012e+04, 2.73807606e+04, 2.16987845e+04, 1.71959156e+04,\n       1.36274691e+04, 1.07995362e+04, 8.55844774e+03, 6.78242347e+03,\n       5.37495461e+03, 4.25955961e+03, 3.37562814e+03, 2.67512757e+03,\n       2.11999285e+03, 1.680058...\n       1.84386167e-03, 1.46122884e-03, 1.15799887e-03, 9.17694298e-04,\n       7.27257037e-04, 5.76338765e-04, 4.56738615e-04, 3.61957541e-04,\n       2.86845161e-04, 2.27319885e-04, 1.80147121e-04, 1.42763513e-04,\n       1.13137642e-04, 8.96596467e-05, 7.10537367e-05, 5.63088712e-05,\n       4.46238174e-05, 3.53636122e-05, 2.80250579e-05, 2.22093791e-05]),\n             cv=KFold(n_splits=5, random_state=0, shuffle=True), l1_ratio=0) \n\n\nLet’s produce a plot again of the cross-validation error to see that it is similar to using skm.GridSearchCV.\n\ntuned_ridge = pipeCV.named_steps['ridge']\nridgeCV_fig, ax = subplots(figsize=(8,8))\nax.errorbar(-np.log(lambdas),\n            tuned_ridge.mse_path_.mean(1),\n            yerr=tuned_ridge.mse_path_.std(1) / np.sqrt(K))\nax.axvline(-np.log(tuned_ridge.alpha_), c='k', ls='--')\nax.set_ylim([50000,250000])\nax.set_xlabel('$-\\log(\\lambda)$', fontsize=20)\nax.set_ylabel('Cross-validated MSE', fontsize=20);\n\n\n\n\n\n\n\n\nWe see that the value of \\lambda that results in the smallest cross-validation error is 1.19e-02, available as the value tuned_ridge.alpha_. What is the test MSE associated with this value of \\lambda?\n\nnp.min(tuned_ridge.mse_path_.mean(1))\n\n115526.70630987993\n\n\nThis represents a further improvement over the test MSE that we got using \\lambda=4. Finally, tuned_ridge.coef_ has the coefficients fit on the entire data set at this value of \\lambda.\n\ntuned_ridge.coef_\n\narray([-222.80877051,  238.77246614,    3.21103754,   -2.93050845,\n          3.64888723,  108.90953869,  -50.81896152, -105.15731984,\n        122.00714801,   57.1859509 ,  210.35170348,  118.05683748,\n       -150.21959435,   30.36634231,  -61.62459095,   77.73832472,\n         40.07350744,  -25.02151514,  -13.68429544])\n\n\nAs expected, none of the coefficients are zero—ridge regression does not perform variable selection!\n\n\n\nChoosing \\lambda using cross-validation provides a single regression estimator, similar to fitting a linear regression model as we saw in Chapter~. It is therefore reasonable to estimate what its test error is. We run into a problem here in that cross-validation will have touched all of its data in choosing \\lambda, hence we have no further data to estimate test error. A compromise is to do an initial split of the data into two disjoint sets: a training set and a test set. We then fit a cross-validation tuned ridge regression on the training set, and evaluate its performance on the test set. We might call this cross-validation nested within the validation set approach. A priori there is no reason to use half of the data for each of the two sets in validation. Below, we use 75% for training and 25% for test, with the estimator being ridge regression tuned using 5-fold cross-validation. This can be achieved in code as follows:\n\nouter_valid = skm.ShuffleSplit(n_splits=1, \n                               test_size=0.25,\n                               random_state=1)\ninner_cv = skm.KFold(n_splits=5,\n                     shuffle=True,\n                     random_state=2)\nridgeCV = skl.ElasticNetCV(alphas=lambdas,\n                           l1_ratio=0,\n                           cv=inner_cv)\npipeCV = Pipeline(steps=[('scaler', scaler),\n                         ('ridge', ridgeCV)]);\n\n\nresults = skm.cross_validate(pipeCV, \n                             X,\n                             Y,\n                             cv=outer_valid,\n                             scoring='neg_mean_squared_error')\n-results['test_score']\n\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 16002961.89304734, tolerance: 3200.6325551004934\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 16002909.292721536, tolerance: 3200.6325551004934\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 16002842.919898542, tolerance: 3200.6325551004934\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 16002759.168901473, tolerance: 3200.6325551004934\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 16002653.490324108, tolerance: 3200.6325551004934\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 16002520.144170541, tolerance: 3200.6325551004934\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 16002351.888507722, tolerance: 3200.6325551004934\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 16002139.586836113, tolerance: 3200.6325551004934\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 16001871.713040238, tolerance: 3200.6325551004934\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 16001533.72733189, tolerance: 3200.6325551004934\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 16001107.289774053, tolerance: 3200.6325551004934\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 16000569.269442711, tolerance: 3200.6325551004934\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 15999890.496647637, tolerance: 3200.6325551004934\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 15999034.192416638, tolerance: 3200.6325551004934\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 15997953.993094176, tolerance: 3200.6325551004934\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 15996591.467783947, tolerance: 3200.6325551004934\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 15994873.001788346, tolerance: 3200.6325551004934\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 15992705.889472546, tolerance: 3200.6325551004934\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 15989973.444502642, tolerance: 3200.6325551004934\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 15986528.893835299, tolerance: 3200.6325551004934\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 15982187.774395376, tolerance: 3200.6325551004934\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 15976718.499356631, tolerance: 3200.6325551004934\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 15969830.707495736, tolerance: 3200.6325551004934\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 15961160.960501967, tolerance: 3200.6325551004934\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 15950255.32070595, tolerance: 3200.6325551004934\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 15936548.344581455, tolerance: 3200.6325551004934\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 15919338.096469928, tolerance: 3200.6325551004934\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 15897756.970098713, tolerance: 3200.6325551004934\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 15870738.473491091, tolerance: 3200.6325551004934\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 15836980.785622947, tolerance: 3200.6325551004934\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 15794908.96193258, tolerance: 3200.6325551004934\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 15742639.305781402, tolerance: 3200.6325551004934\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 15677951.783964384, tolerance: 3200.6325551004934\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 15598279.52021635, tolerance: 3200.6325551004934\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 15500728.213326862, tolerance: 3200.6325551004934\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 15382142.225333134, tolerance: 3200.6325551004934\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 15239236.776243076, tolerance: 3200.6325551004934\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 15068814.890988706, tolerance: 3200.6325551004934\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 14868080.263148531, tolerance: 3200.6325551004934\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 14635039.685599195, tolerance: 3200.6325551004934\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 14368959.698660215, tolerance: 3200.6325551004934\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 14070805.238626322, tolerance: 3200.6325551004934\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 13743554.881437782, tolerance: 3200.6325551004934\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 13392276.560592555, tolerance: 3200.6325551004934\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 13023877.880913064, tolerance: 3200.6325551004934\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 12646520.933576021, tolerance: 3200.6325551004934\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 12268792.343592057, tolerance: 3200.6325551004934\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 11898803.095559346, tolerance: 3200.6325551004934\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 11543417.93091813, tolerance: 3200.6325551004934\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 11207766.718773345, tolerance: 3200.6325551004934\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 10895093.611569967, tolerance: 3200.6325551004934\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 10606899.312997254, tolerance: 3200.6325551004934\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 10343266.88124089, tolerance: 3200.6325551004934\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 10103247.35343145, tolerance: 3200.6325551004934\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 9885208.91057351, tolerance: 3200.6325551004934\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 9687100.478192499, tolerance: 3200.6325551004934\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 9506625.781409387, tolerance: 3200.6325551004934\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 9341352.903950289, tolerance: 3200.6325551004934\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 9188793.402093247, tolerance: 3200.6325551004934\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 9046478.453631112, tolerance: 3200.6325551004934\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 8912045.90458919, tolerance: 3200.6325551004934\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 8783339.10743259, tolerance: 3200.6325551004934\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 8658509.901020346, tolerance: 3200.6325551004934\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 8536113.828113692, tolerance: 3200.6325551004934\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 8415183.975072159, tolerance: 3200.6325551004934\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 8295269.742745555, tolerance: 3200.6325551004934\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 8176429.120013495, tolerance: 3200.6325551004934\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 8059168.82930556, tolerance: 3200.6325551004934\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 7944335.999206941, tolerance: 3200.6325551004934\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 7832975.645216489, tolerance: 3200.6325551004934\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 7726176.614947222, tolerance: 3200.6325551004934\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 7624931.461247108, tolerance: 3200.6325551004934\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 7530031.62746943, tolerance: 3200.6325551004934\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 7442009.746564671, tolerance: 3200.6325551004934\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 7361129.14697353, tolerance: 3200.6325551004934\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 7287410.635336563, tolerance: 3200.6325551004934\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 7220681.095616996, tolerance: 3200.6325551004934\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 7160628.3954044385, tolerance: 3200.6325551004934\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 7106851.483765963, tolerance: 3200.6325551004934\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 7058900.769700722, tolerance: 3200.6325551004934\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 7016308.880858139, tolerance: 3200.6325551004934\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 6978613.911777637, tolerance: 3200.6325551004934\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 6945376.5710271485, tolerance: 3200.6325551004934\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 6916191.0495283585, tolerance: 3200.6325551004934\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 6890688.792446369, tolerance: 3200.6325551004934\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 6868535.393320457, tolerance: 3200.6325551004934\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 6849422.7650398845, tolerance: 3200.6325551004934\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 6833060.05095403, tolerance: 3200.6325551004934\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 6819166.544534754, tolerance: 3200.6325551004934\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 6807468.458908691, tolerance: 3200.6325551004934\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 6797699.6283456, tolerance: 3200.6325551004934\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 6789604.944998562, tolerance: 3200.6325551004934\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 6782944.868630526, tolerance: 3200.6325551004934\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 6777499.565630876, tolerance: 3200.6325551004934\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 6773071.791554418, tolerance: 3200.6325551004934\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 6769488.209512585, tolerance: 3200.6325551004934\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 6766599.256784007, tolerance: 3200.6325551004934\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 6764277.892213489, tolerance: 3200.6325551004934\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 6762417.616248343, tolerance: 3200.6325551004934\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 6760930.11696838, tolerance: 3200.6325551004934\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 15173612.824876543, tolerance: 3034.7626598069205\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 15173560.331518074, tolerance: 3034.7626598069205\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 15173494.093703298, tolerance: 3034.7626598069205\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 15173410.513116254, tolerance: 3034.7626598069205\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 15173305.049649917, tolerance: 3034.7626598069205\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 15173171.97505981, tolerance: 3034.7626598069205\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 15173004.062268816, tolerance: 3034.7626598069205\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 15172792.193566972, tolerance: 3034.7626598069205\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 15172524.866617762, tolerance: 3034.7626598069205\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 15172187.571748767, tolerance: 3034.7626598069205\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 15171762.007200053, tolerance: 3034.7626598069205\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 15171225.090500392, tolerance: 3034.7626598069205\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 15170547.713543424, tolerance: 3034.7626598069205\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 15169693.17577188, tolerance: 3034.7626598069205\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 15168615.213598883, tolerance: 3034.7626598069205\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 15167255.524179867, tolerance: 3034.7626598069205\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 15165540.65722486, tolerance: 3034.7626598069205\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 15163378.119038213, tolerance: 3034.7626598069205\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 15160651.49782194, tolerance: 3034.7626598069205\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 15157214.37819171, tolerance: 3034.7626598069205\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 15152882.766135199, tolerance: 3034.7626598069205\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 15147425.694698604, tolerance: 3034.7626598069205\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 15140553.628850501, tolerance: 3034.7626598069205\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 15131904.241777303, tolerance: 3034.7626598069205\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 15121025.105980717, tolerance: 3034.7626598069205\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 15107352.850599293, tolerance: 3034.7626598069205\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 15090188.412868414, tolerance: 3034.7626598069205\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 15068668.205066577, tolerance: 3034.7626598069205\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 15041731.400110116, tolerance: 3034.7626598069205\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 15008084.208955992, tolerance: 3034.7626598069205\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 14966163.110870238, tolerance: 3034.7626598069205\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 14914100.653844738, tolerance: 3034.7626598069205\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 14849699.805850957, tolerance: 3034.7626598069205\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 14770425.96115128, tolerance: 3034.7626598069205\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 14673429.416906543, tolerance: 3034.7626598069205\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 14555614.81501597, tolerance: 3034.7626598069205\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 14413776.34901669, tolerance: 3034.7626598069205\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 14244816.178940998, tolerance: 3034.7626598069205\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 14046055.366934756, tolerance: 3034.7626598069205\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 13815628.708094306, tolerance: 3034.7626598069205\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 13552926.205683714, tolerance: 3034.7626598069205\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 13259008.940702375, tolerance: 3034.7626598069205\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 12936897.573228313, tolerance: 3034.7626598069205\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 12591625.616217319, tolerance: 3034.7626598069205\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 12229982.920676826, tolerance: 3034.7626598069205\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 11859948.802383406, tolerance: 3034.7626598069205\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 11489906.860316701, tolerance: 3034.7626598069205\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 11127805.377401607, tolerance: 3034.7626598069205\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 10780443.14443526, tolerance: 3034.7626598069205\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 10453012.58734803, tolerance: 3034.7626598069205\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 10148944.578529168, tolerance: 3034.7626598069205\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 9870012.667698367, tolerance: 3034.7626598069205\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 9616601.230672907, tolerance: 3034.7626598069205\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 9388032.941233689, tolerance: 3034.7626598069205\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 9182876.289070562, tolerance: 3034.7626598069205\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 8999193.791535854, tolerance: 3034.7626598069205\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 8834727.194341874, tolerance: 3034.7626598069205\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 8687036.34768969, tolerance: 3034.7626598069205\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 8553612.383287681, tolerance: 3034.7626598069205\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 8431979.280234484, tolerance: 3034.7626598069205\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 8319788.94666016, tolerance: 3034.7626598069205\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 8214909.054690679, tolerance: 3034.7626598069205\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 8115501.105643034, tolerance: 3034.7626598069205\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 8020086.355249497, tolerance: 3034.7626598069205\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 7927596.538468577, tolerance: 3034.7626598069205\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 7837403.822275495, tolerance: 3034.7626598069205\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 7749321.535335513, tolerance: 3034.7626598069205\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 7663566.802084755, tolerance: 3034.7626598069205\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 7580680.550684209, tolerance: 3034.7626598069205\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 7501409.56466659, tolerance: 3034.7626598069205\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 7426566.500521843, tolerance: 3034.7626598069205\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 7356892.242162719, tolerance: 3034.7626598069205\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 7292946.11748492, tolerance: 3034.7626598069205\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 7235042.041596936, tolerance: 3034.7626598069205\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 7183235.551674166, tolerance: 3034.7626598069205\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 7137353.553695871, tolerance: 3034.7626598069205\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 7097050.348456668, tolerance: 3034.7626598069205\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 7061872.012726565, tolerance: 3034.7626598069205\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 7031315.123405316, tolerance: 3034.7626598069205\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 7004872.08923869, tolerance: 3034.7626598069205\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 6982061.123035916, tolerance: 3034.7626598069205\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 6962442.578610096, tolerance: 3034.7626598069205\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 6945624.890073925, tolerance: 3034.7626598069205\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 6931263.466327048, tolerance: 3034.7626598069205\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 6919055.476661862, tolerance: 3034.7626598069205\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 6908732.977538956, tolerance: 3034.7626598069205\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 6900056.292042767, tolerance: 3034.7626598069205\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 6892808.858171429, tolerance: 3034.7626598069205\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 6886793.977603687, tolerance: 3034.7626598069205\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 6881833.233568594, tolerance: 3034.7626598069205\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 6877765.97498887, tolerance: 3034.7626598069205\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 6874449.207170505, tolerance: 3034.7626598069205\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 6871757.386867699, tolerance: 3034.7626598069205\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 6869581.853913053, tolerance: 3034.7626598069205\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 6867829.838852125, tolerance: 3034.7626598069205\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 6866423.119345584, tolerance: 3034.7626598069205\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 6865296.456501903, tolerance: 3034.7626598069205\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 6864395.947002785, tolerance: 3034.7626598069205\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 6863677.402652445, tolerance: 3034.7626598069205\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 6863104.835000056, tolerance: 3034.7626598069205\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 16000126.775776317, tolerance: 3200.070250165818\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 16000067.997791685, tolerance: 3200.070250165818\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 15999993.829780782, tolerance: 3200.070250165818\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 15999900.24258462, tolerance: 3200.070250165818\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 15999782.152469942, tolerance: 3200.070250165818\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 15999633.145271106, tolerance: 3200.070250165818\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 15999445.12846794, tolerance: 3200.070250165818\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 15999207.89243054, tolerance: 3200.070250165818\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 15998908.557207119, tolerance: 3200.070250165818\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 15998530.875140414, tolerance: 3200.070250165818\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 15998054.351968955, tolerance: 3200.070250165818\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 15997453.139532344, tolerance: 3200.070250165818\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 15996694.641307212, tolerance: 3200.070250165818\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 15995737.757220384, tolerance: 3200.070250165818\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 15994530.675893761, tolerance: 3200.070250165818\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 15993008.099962443, tolerance: 3200.070250165818\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 15991087.762599913, tolerance: 3200.070250165818\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 15988666.06009735, tolerance: 3200.070250165818\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 15985612.585588468, tolerance: 3200.070250165818\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 15981763.302383823, tolerance: 3200.070250165818\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 15976912.04209659, tolerance: 3200.070250165818\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 15970799.954194363, tolerance: 3200.070250165818\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 15963102.473251346, tolerance: 3200.070250165818\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 15953413.314912455, tolerance: 3200.070250165818\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 15941224.973906958, tolerance: 3200.070250165818\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 15925905.198558562, tolerance: 3200.070250165818\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 15906668.99042816, tolerance: 3200.070250165818\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 15882545.878220893, tolerance: 3200.070250165818\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 15852342.621036038, tolerance: 3200.070250165818\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 15814602.219371138, tolerance: 3200.070250165818\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 15767561.301116718, tolerance: 3200.070250165818\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 15709109.781098891, tolerance: 3200.070250165818\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 15636759.341258612, tolerance: 3200.070250165818\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 15547630.840385435, tolerance: 3200.070250165818\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 15438475.105455773, tolerance: 3200.070250165818\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 15305746.074655257, tolerance: 3200.070250165818\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 15145748.542592406, tolerance: 3200.070250165818\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 14954882.273867266, tolerance: 3200.070250165818\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 14729996.363846606, tolerance: 3200.070250165818\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 14468848.510940226, tolerance: 3200.070250165818\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 14170631.317143813, tolerance: 3200.070250165818\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 13836485.361873373, tolerance: 3200.070250165818\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 13469879.089990828, tolerance: 3200.070250165818\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 13076719.754361458, tolerance: 3200.070250165818\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 12665089.799378186, tolerance: 3200.070250165818\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 12244586.676668115, tolerance: 3200.070250165818\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 11825360.363691226, tolerance: 3200.070250165818\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 11417044.8011693, tolerance: 3200.070250165818\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 11027817.64570279, tolerance: 3200.070250165818\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 10663776.910200799, tolerance: 3200.070250165818\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 10328716.267595597, tolerance: 3200.070250165818\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 10024263.647837926, tolerance: 3200.070250165818\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 9750266.819731826, tolerance: 3200.070250165818\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 9505284.688773436, tolerance: 3200.070250165818\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 9287065.610720852, tolerance: 3200.070250165818\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 9092940.776433377, tolerance: 3200.070250165818\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 8920108.266351497, tolerance: 3200.070250165818\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 8765816.866835333, tolerance: 3200.070250165818\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 8627473.905487005, tolerance: 3200.070250165818\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 8502702.196109619, tolerance: 3200.070250165818\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 8389365.458262924, tolerance: 3200.070250165818\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 8285575.962199811, tolerance: 3200.070250165818\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 8189695.129107293, tolerance: 3200.070250165818\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 8100335.848355146, tolerance: 3200.070250165818\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 8016371.6148043275, tolerance: 3200.070250165818\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 7936951.3439801065, tolerance: 3200.070250165818\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 7861511.8438480245, tolerance: 3200.070250165818\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 7789775.81877586, tolerance: 3200.070250165818\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 7721724.491724833, tolerance: 3200.070250165818\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 7657540.535692923, tolerance: 3200.070250165818\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 7597526.506006098, tolerance: 3200.070250165818\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 7542012.431575963, tolerance: 3200.070250165818\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 7491270.131106921, tolerance: 3200.070250165818\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 7445449.741931616, tolerance: 3200.070250165818\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 7404547.16436493, tolerance: 3200.070250165818\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 7368402.734578225, tolerance: 3200.070250165818\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 7336724.612267249, tolerance: 3200.070250165818\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 7309126.908337033, tolerance: 3200.070250165818\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 7285172.539342925, tolerance: 3200.070250165818\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 7264413.026630274, tolerance: 3200.070250165818\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 7246420.465473482, tolerance: 3200.070250165818\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 7230809.549602913, tolerance: 3200.070250165818\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 7217249.407962016, tolerance: 3200.070250165818\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 7205466.206412948, tolerance: 3200.070250165818\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 7195238.325929959, tolerance: 3200.070250165818\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 7186386.647782151, tolerance: 3200.070250165818\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 7178762.875061079, tolerance: 3200.070250165818\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 7172238.602284164, tolerance: 3200.070250165818\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 7166697.00161197, tolerance: 3200.070250165818\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 7162027.848205716, tolerance: 3200.070250165818\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 7158125.584421309, tolerance: 3200.070250165818\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 7154889.512672274, tolerance: 3200.070250165818\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 7152225.062096239, tolerance: 3200.070250165818\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 7150045.262096411, tolerance: 3200.070250165818\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 7148271.882784414, tolerance: 3200.070250165818\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 7146836.0146411, tolerance: 3200.070250165818\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 7145678.080779873, tolerance: 3200.070250165818\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 7144747.393668677, tolerance: 3200.070250165818\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 7144001.407092261, tolerance: 3200.070250165818\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 7143404.80530565, tolerance: 3200.070250165818\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 13766426.844425442, tolerance: 2753.321903486231\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 13766379.012219734, tolerance: 2753.321903486231\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 13766318.655993313, tolerance: 2753.321903486231\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 13766242.496938994, tolerance: 2753.321903486231\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 13766146.398082258, tolerance: 2753.321903486231\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 13766025.13980752, tolerance: 2753.321903486231\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 13765872.136748439, tolerance: 2753.321903486231\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 13765679.08077331, tolerance: 2753.321903486231\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 13765435.490848666, tolerance: 2753.321903486231\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 13765128.145612368, tolerance: 2753.321903486231\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 13764740.368286435, tolerance: 2753.321903486231\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 13764251.12581003, tolerance: 2753.321903486231\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 13763633.894413952, tolerance: 2753.321903486231\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 13762855.231859002, tolerance: 2753.321903486231\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 13761872.98172164, tolerance: 2753.321903486231\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 13760634.01686267, tolerance: 2753.321903486231\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 13759071.406945651, tolerance: 2753.321903486231\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 13757100.867966294, tolerance: 2753.321903486231\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 13754616.31968939, tolerance: 2753.321903486231\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 13751484.339396805, tolerance: 2753.321903486231\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 13747537.257695232, tolerance: 2753.321903486231\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 13742564.595583746, tolerance: 2753.321903486231\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 13736302.49455343, tolerance: 2753.321903486231\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 13728420.749109622, tolerance: 2753.321903486231\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 13718507.02436845, tolerance: 2753.321903486231\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 13706047.848124275, tolerance: 2753.321903486231\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 13690406.03569032, tolerance: 2753.321903486231\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 13670794.381086988, tolerance: 2753.321903486231\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 13646245.795015218, tolerance: 2753.321903486231\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 13615580.679837886, tolerance: 2753.321903486231\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 13577373.323622873, tolerance: 2753.321903486231\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 13529920.608156208, tolerance: 2753.321903486231\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 13471218.48980598, tolerance: 2753.321903486231\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 13398954.581488008, tolerance: 2753.321903486231\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 13310528.590455977, tolerance: 2753.321903486231\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 13203115.797389356, tolerance: 2753.321903486231\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 13073790.981404455, tolerance: 2753.321903486231\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 12919729.112886174, tolerance: 2753.321903486231\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 12738491.873820404, tolerance: 2753.321903486231\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 12528392.752768412, tolerance: 2753.321903486231\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 12288907.12027812, tolerance: 2753.321903486231\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 12021061.050642934, tolerance: 2753.321903486231\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 11727704.457379242, tolerance: 2753.321903486231\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 11413566.984203368, tolerance: 2753.321903486231\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 11085024.381464427, tolerance: 2753.321903486231\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 10749570.986969216, tolerance: 2753.321903486231\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 10415080.82390038, tolerance: 2753.321903486231\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 10089009.138994666, tolerance: 2753.321903486231\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 9777704.218602657, tolerance: 2753.321903486231\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 9485957.157639354, tolerance: 2753.321903486231\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 9216836.907742977, tolerance: 2753.321903486231\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 8971777.239570614, tolerance: 2753.321903486231\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 8750831.80632957, tolerance: 2753.321903486231\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 8553002.845594909, tolerance: 2753.321903486231\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 8376568.552591976, tolerance: 2753.321903486231\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 8219365.993957064, tolerance: 2753.321903486231\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 8079015.288983328, tolerance: 2753.321903486231\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 7953088.944512343, tolerance: 2753.321903486231\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 7839237.297915867, tolerance: 2753.321903486231\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 7735280.817484571, tolerance: 2753.321903486231\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 7639277.052384085, tolerance: 2753.321903486231\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 7549567.214150185, tolerance: 2753.321903486231\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 7464805.436922448, tolerance: 2753.321903486231\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 7383972.203368485, tolerance: 2753.321903486231\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 7306371.9385844, tolerance: 2753.321903486231\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 7231613.973232727, tolerance: 2753.321903486231\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 7159576.877369842, tolerance: 2753.321903486231\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 7090358.567763287, tolerance: 2753.321903486231\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 7024217.224121631, tolerance: 2753.321903486231\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 6961509.172985422, tolerance: 2753.321903486231\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 6902628.941757256, tolerance: 2753.321903486231\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 6847954.74212851, tolerance: 2753.321903486231\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 6797801.388529973, tolerance: 2753.321903486231\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 6752382.798167853, tolerance: 2753.321903486231\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 6711786.944628049, tolerance: 2753.321903486231\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 6675965.981966789, tolerance: 2753.321903486231\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 6644742.448857518, tolerance: 2753.321903486231\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 6617829.550839553, tolerance: 2753.321903486231\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 6594860.867273487, tolerance: 2753.321903486231\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 6575423.588385643, tolerance: 2753.321903486231\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 6559089.833983606, tolerance: 2753.321903486231\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 6545442.22593809, tolerance: 2753.321903486231\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 6534091.895329497, tolerance: 2753.321903486231\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 6524688.873515991, tolerance: 2753.321903486231\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 6516926.03970175, tolerance: 2753.321903486231\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 6510538.426567721, tolerance: 2753.321903486231\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 6505299.778051198, tolerance: 2753.321903486231\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 6501017.943079157, tolerance: 2753.321903486231\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 6497530.176477618, tolerance: 2753.321903486231\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 6494698.902794317, tolerance: 2753.321903486231\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 6492408.111473379, tolerance: 2753.321903486231\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 6490560.333699243, tolerance: 2753.321903486231\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 6489074.07424203, tolerance: 2753.321903486231\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 6487881.578697803, tolerance: 2753.321903486231\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 6486926.855244173, tolerance: 2753.321903486231\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 6486163.908028853, tolerance: 2753.321903486231\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 6485555.163896994, tolerance: 2753.321903486231\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 6485070.084972443, tolerance: 2753.321903486231\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 6484683.961142887, tolerance: 2753.321903486231\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 6484376.873670885, tolerance: 2753.321903486231\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 16123836.286658324, tolerance: 3224.8236814135257\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 16123762.414447507, tolerance: 3224.8236814135257\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 16123669.200043011, tolerance: 3224.8236814135257\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 16123551.579596583, tolerance: 3224.8236814135257\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 16123403.163871318, tolerance: 3224.8236814135257\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 16123215.891543614, tolerance: 3224.8236814135257\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 16122979.591935378, tolerance: 3224.8236814135257\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 16122681.433587793, tolerance: 3224.8236814135257\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 16122305.228986477, tolerance: 3224.8236814135257\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 16121830.558093365, tolerance: 3224.8236814135257\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 16121231.663752731, tolerance: 3224.8236814135257\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 16120476.060052723, tolerance: 3224.8236814135257\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 16119522.779778492, tolerance: 3224.8236814135257\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 16118320.168518292, tolerance: 3224.8236814135257\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 16116803.109996729, tolerance: 3224.8236814135257\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 16114889.538918184, tolerance: 3224.8236814135257\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 16112476.063036693, tolerance: 3224.8236814135257\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 16109432.474341486, tolerance: 3224.8236814135257\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 16105594.879294187, tolerance: 3224.8236814135257\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 16100757.119470127, tolerance: 3224.8236814135257\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 16094660.087017834, tolerance: 3224.8236814135257\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 16086978.465806846, tolerance: 3224.8236814135257\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 16077304.353326885, tolerance: 3224.8236814135257\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 16065127.1490184, tolerance: 3224.8236814135257\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 16049809.047450975, tolerance: 3224.8236814135257\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 16030555.476241712, tolerance: 3224.8236814135257\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 16006379.9118725, tolerance: 3224.8236814135257\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 15976062.75839428, tolerance: 3224.8236814135257\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 15938104.483596489, tolerance: 3224.8236814135257\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 15890674.114698276, tolerance: 3224.8236814135257\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 15831555.686060242, tolerance: 3224.8236814135257\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 15758097.52534076, tolerance: 3224.8236814135257\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 15667172.578206714, tolerance: 3224.8236814135257\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 15555162.420748942, tolerance: 3224.8236814135257\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 15417983.020182049, tolerance: 3224.8236814135257\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 15251175.908593172, tolerance: 3224.8236814135257\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 15050092.45331768, tolerance: 3224.8236814135257\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 14810198.17774659, tolerance: 3224.8236814135257\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 14527514.082835251, tolerance: 3224.8236814135257\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 14199187.811678289, tolerance: 3224.8236814135257\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 13824146.920817545, tolerance: 3224.8236814135257\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 13403734.027286611, tolerance: 3224.8236814135257\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 12942174.86967796, tolerance: 3224.8236814135257\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 12446711.65903124, tolerance: 3224.8236814135257\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 11927272.408043088, tolerance: 3224.8236814135257\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 11395650.820912808, tolerance: 3224.8236814135257\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 10864314.587176831, tolerance: 3224.8236814135257\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 10345084.699656615, tolerance: 3224.8236814135257\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 9847974.66461027, tolerance: 3224.8236814135257\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 9380422.14494771, tolerance: 3224.8236814135257\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 8947015.008946372, tolerance: 3224.8236814135257\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 8549670.258610565, tolerance: 3224.8236814135257\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 8188124.101396983, tolerance: 3224.8236814135257\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 7860558.677097128, tolerance: 3224.8236814135257\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 7564216.251072438, tolerance: 3224.8236814135257\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 7295907.83105154, tolerance: 3224.8236814135257\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 7052382.339382334, tolerance: 3224.8236814135257\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 6830565.953165651, tolerance: 3224.8236814135257\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 6627701.871803509, tolerance: 3224.8236814135257\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 6441421.548990724, tolerance: 3224.8236814135257\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 6269768.629955625, tolerance: 3224.8236814135257\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 6111186.722532689, tolerance: 3224.8236814135257\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 5964477.842252077, tolerance: 3224.8236814135257\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 5828739.876908941, tolerance: 3224.8236814135257\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 5703294.550898096, tolerance: 3224.8236814135257\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 5587617.998651196, tolerance: 3224.8236814135257\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 5481282.987854621, tolerance: 3224.8236814135257\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 5383916.67807917, tolerance: 3224.8236814135257\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 5295172.88281887, tolerance: 3224.8236814135257\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 5214714.536832818, tolerance: 3224.8236814135257\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 5142200.89883197, tolerance: 3224.8236814135257\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 5077274.992035713, tolerance: 3224.8236814135257\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 5019549.5762358615, tolerance: 3224.8236814135257\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 4968593.444998965, tolerance: 3224.8236814135257\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 4923922.319001489, tolerance: 3224.8236814135257\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 4884998.717484778, tolerance: 3224.8236814135257\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 4851242.93844574, tolerance: 3224.8236814135257\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 4822053.96370524, tolerance: 3224.8236814135257\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 4796836.339338584, tolerance: 3224.8236814135257\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 4775027.808895422, tolerance: 3224.8236814135257\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 4756122.723191458, tolerance: 3224.8236814135257\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 4739687.533593107, tolerance: 3224.8236814135257\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 4725366.495343723, tolerance: 3224.8236814135257\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 4712877.7115793945, tolerance: 3224.8236814135257\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 4702001.540623016, tolerance: 3224.8236814135257\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 4692564.773319081, tolerance: 3224.8236814135257\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 4684424.413915162, tolerance: 3224.8236814135257\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 4677454.213645316, tolerance: 3224.8236814135257\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 4671535.662146964, tolerance: 3224.8236814135257\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 4666553.5814064825, tolerance: 3224.8236814135257\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 4662395.341810725, tolerance: 3224.8236814135257\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 4658952.253038351, tolerance: 3224.8236814135257\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 4656121.776081866, tolerance: 3224.8236814135257\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 4653809.6000373615, tolerance: 3224.8236814135257\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 4651931.081491842, tolerance: 3224.8236814135257\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 4650411.905959883, tolerance: 3224.8236814135257\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 4649188.052145797, tolerance: 3224.8236814135257\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 4648205.237516106, tolerance: 3224.8236814135257\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 4647418.038791899, tolerance: 3224.8236814135257\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 4646788.852992684, tolerance: 3224.8236814135257\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.153e+07, tolerance: 3.855e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n\n\narray([132393.84003227])\n\n\n\n\n\nWe saw that ridge regression with a wise choice of \\lambda can outperform least squares as well as the null model on the Hitters data set. We now ask whether the lasso can yield either a more accurate or a more interpretable model than ridge regression. In order to fit a lasso model, we once again use the ElasticNetCV() function; however, this time we use the argument l1_ratio=1. Other than that change, we proceed just as we did in fitting a ridge model.\n\nlassoCV = skl.ElasticNetCV(n_alphas=100, \n                           l1_ratio=1,\n                           cv=kfold)\npipeCV = Pipeline(steps=[('scaler', scaler),\n                         ('lasso', lassoCV)])\npipeCV.fit(X, Y)\ntuned_lasso = pipeCV.named_steps['lasso']\ntuned_lasso.alpha_\n\nPipeline(steps=[('scaler', StandardScaler()),\n                ('lasso',\n                 ElasticNetCV(cv=KFold(n_splits=5, random_state=0, shuffle=True),\n                              l1_ratio=1))])In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.  Pipeline?Documentation for PipelineiFittedPipeline(steps=[('scaler', StandardScaler()),\n                ('lasso',\n                 ElasticNetCV(cv=KFold(n_splits=5, random_state=0, shuffle=True),\n                              l1_ratio=1))])  StandardScaler?Documentation for StandardScalerStandardScaler()  ElasticNetCV?Documentation for ElasticNetCVElasticNetCV(cv=KFold(n_splits=5, random_state=0, shuffle=True), l1_ratio=1) \n\n\n3.1472370031649866\n\n\n\nlambdas, soln_array = skl.Lasso.path(Xs, \n                                    Y,\n                                    l1_ratio=1,\n                                    n_alphas=100)[:2]\nsoln_path = pd.DataFrame(soln_array.T,\n                         columns=D.columns,\n                         index=-np.log(lambdas))\n\nWe can see from the coefficient plot of the standardized coefficients that depending on the choice of tuning parameter, some of the coefficients will be exactly equal to zero.\n\npath_fig, ax = subplots(figsize=(8,8))\nsoln_path.plot(ax=ax, legend=False)\nax.legend(loc='upper left')\nax.set_xlabel('$-\\log(\\lambda)$', fontsize=20)\nax.set_ylabel('Standardized coefficiients', fontsize=20);\n\n\n\n\n\n\n\n\nThe smallest cross-validated error is lower than the test set MSE of the null model and of least squares, and very similar to the test MSE of 115526.71 of ridge regression (page~) with \\lambda chosen by cross-validation.\n\nnp.min(tuned_lasso.mse_path_.mean(1))\n\n114690.73118253637\n\n\nLet’s again produce a plot of the cross-validation error.\n\nlassoCV_fig, ax = subplots(figsize=(8,8))\nax.errorbar(-np.log(tuned_lasso.alphas_),\n            tuned_lasso.mse_path_.mean(1),\n            yerr=tuned_lasso.mse_path_.std(1) / np.sqrt(K))\nax.axvline(-np.log(tuned_lasso.alpha_), c='k', ls='--')\nax.set_ylim([50000,250000])\nax.set_xlabel('$-\\log(\\lambda)$', fontsize=20)\nax.set_ylabel('Cross-validated MSE', fontsize=20);\n\n\n\n\n\n\n\n\nHowever, the lasso has a substantial advantage over ridge regression in that the resulting coefficient estimates are sparse. Here we see that 6 of the 19 coefficient estimates are exactly zero. So the lasso model with \\lambda chosen by cross-validation contains only 13 variables.\n\ntuned_lasso.coef_\n\narray([-210.01008773,  243.4550306 ,    0.        ,    0.        ,\n          0.        ,   97.69397357,  -41.52283116,   -0.        ,\n          0.        ,   39.62298193,  205.75273856,  124.55456561,\n       -126.29986768,   15.70262427,  -59.50157967,   75.24590036,\n         21.62698014,  -12.04423675,   -0.        ])\n\n\nAs in ridge regression, we could evaluate the test error of cross-validated lasso by first splitting into test and training sets and internally running cross-validation on the training set. We leave this as an exercise.\n\n\n\n\n\n\nPrincipal components regression (PCR) can be performed using PCA() from the sklearn.decomposition module. We now apply PCR to the Hitters data, in order to predict Salary. Again, ensure that the missing values have been removed from the data, as described in Section~.\nWe use LinearRegression() to fit the regression model here. Note that it fits an intercept by default, unlike the OLS() function seen earlier in Section~.\n\npca = PCA(n_components=2)\nlinreg = skl.LinearRegression()\npipe = Pipeline([('pca', pca),\n                 ('linreg', linreg)])\npipe.fit(X, Y)\npipe.named_steps['linreg'].coef_\n\nPipeline(steps=[('pca', PCA(n_components=2)), ('linreg', LinearRegression())])In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.  Pipeline?Documentation for PipelineiFittedPipeline(steps=[('pca', PCA(n_components=2)), ('linreg', LinearRegression())])  PCA?Documentation for PCAPCA(n_components=2)  LinearRegression?Documentation for LinearRegressionLinearRegression() \n\n\narray([0.09846131, 0.4758765 ])\n\n\nWhen performing PCA, the results vary depending on whether the data has been standardized or not. As in the earlier examples, this can be accomplished by including an additional step in the pipeline.\n\npipe = Pipeline([('scaler', scaler), \n                 ('pca', pca),\n                 ('linreg', linreg)])\npipe.fit(X, Y)\npipe.named_steps['linreg'].coef_\n\nPipeline(steps=[('scaler', StandardScaler()), ('pca', PCA(n_components=2)),\n                ('linreg', LinearRegression())])In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.  Pipeline?Documentation for PipelineiFittedPipeline(steps=[('scaler', StandardScaler()), ('pca', PCA(n_components=2)),\n                ('linreg', LinearRegression())])  StandardScaler?Documentation for StandardScalerStandardScaler()  PCA?Documentation for PCAPCA(n_components=2)  LinearRegression?Documentation for LinearRegressionLinearRegression() \n\n\narray([106.36859204,  21.60350456])\n\n\nWe can of course use CV to choose the number of components, by using skm.GridSearchCV, in this case fixing the parameters to vary the n_components.\n\nparam_grid = {'pca__n_components': range(1, 20)}\ngrid = skm.GridSearchCV(pipe,\n                        param_grid,\n                        cv=kfold,\n                        scoring='neg_mean_squared_error')\ngrid.fit(X, Y)\n\nGridSearchCV(cv=KFold(n_splits=5, random_state=0, shuffle=True),\n             estimator=Pipeline(steps=[('scaler', StandardScaler()),\n                                       ('pca', PCA(n_components=2)),\n                                       ('linreg', LinearRegression())]),\n             param_grid={'pca__n_components': range(1, 20)},\n             scoring='neg_mean_squared_error')In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.  GridSearchCV?Documentation for GridSearchCViFittedGridSearchCV(cv=KFold(n_splits=5, random_state=0, shuffle=True),\n             estimator=Pipeline(steps=[('scaler', StandardScaler()),\n                                       ('pca', PCA(n_components=2)),\n                                       ('linreg', LinearRegression())]),\n             param_grid={'pca__n_components': range(1, 20)},\n             scoring='neg_mean_squared_error') best_estimator_: PipelinePipeline(steps=[('scaler', StandardScaler()), ('pca', PCA(n_components=17)),\n                ('linreg', LinearRegression())])  StandardScaler?Documentation for StandardScalerStandardScaler()  PCA?Documentation for PCAPCA(n_components=17)  LinearRegression?Documentation for LinearRegressionLinearRegression() \n\n\nLet’s plot the results as we have for other methods.\n\npcr_fig, ax = subplots(figsize=(8,8))\nn_comp = param_grid['pca__n_components']\nax.errorbar(n_comp,\n            -grid.cv_results_['mean_test_score'],\n            grid.cv_results_['std_test_score'] / np.sqrt(K))\nax.set_ylabel('Cross-validated MSE', fontsize=20)\nax.set_xlabel('# principal components', fontsize=20)\nax.set_xticks(n_comp[::2])\nax.set_ylim([50000,250000]);\n\n\n\n\n\n\n\n\nWe see that the smallest cross-validation error occurs when 17 components are used. However, from the plot we also see that the cross-validation error is roughly the same when only one component is included in the model. This suggests that a model that uses just a small number of components might suffice.\nThe CV score is provided for each possible number of components from 1 to 19 inclusive. The PCA() method complains if we try to fit an intercept only with n_components=0 so we also compute the MSE for just the null model with these splits.\n\nXn = np.zeros((X.shape[0], 1))\ncv_null = skm.cross_validate(linreg,\n                             Xn,\n                             Y,\n                             cv=kfold,\n                             scoring='neg_mean_squared_error')\n-cv_null['test_score'].mean()\n\n204139.30692994667\n\n\nThe explained_variance_ratio_ attribute of our PCA object provides the percentage of variance explained in the predictors and in the response using different numbers of components. This concept is discussed in greater detail in Section~.\n\npipe.named_steps['pca'].explained_variance_ratio_\n\narray([0.3831424 , 0.21841076])\n\n\nBriefly, we can think of this as the amount of information about the predictors that is captured using M principal components. For example, setting M=1 only captures 38.31% of the variance, while M=2 captures an additional 21.84%, for a total of 60.15% of the variance. By M=6 it increases to 88.63%. Beyond this the increments continue to diminish, until we use all M=p=19 components, which captures all 100% of the variance.\n\n\n\nPartial least squares (PLS) is implemented in the PLSRegression() function.\n\npls = PLSRegression(n_components=2, \n                    scale=True)\npls.fit(X, Y)\n\nPLSRegression()In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.  PLSRegression?Documentation for PLSRegressioniFittedPLSRegression() \n\n\nAs was the case in PCR, we will want to use CV to choose the number of components.\n\nparam_grid = {'n_components':range(1, 20)}\ngrid = skm.GridSearchCV(pls,\n                        param_grid,\n                        cv=kfold,\n                        scoring='neg_mean_squared_error')\ngrid.fit(X, Y)\n\nGridSearchCV(cv=KFold(n_splits=5, random_state=0, shuffle=True),\n             estimator=PLSRegression(),\n             param_grid={'n_components': range(1, 20)},\n             scoring='neg_mean_squared_error')In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.  GridSearchCV?Documentation for GridSearchCViFittedGridSearchCV(cv=KFold(n_splits=5, random_state=0, shuffle=True),\n             estimator=PLSRegression(),\n             param_grid={'n_components': range(1, 20)},\n             scoring='neg_mean_squared_error') best_estimator_: PLSRegressionPLSRegression(n_components=12)  PLSRegression?Documentation for PLSRegressionPLSRegression(n_components=12) \n\n\nAs for our other methods, we plot the MSE.\n\npls_fig, ax = subplots(figsize=(8,8))\nn_comp = param_grid['n_components']\nax.errorbar(n_comp,\n            -grid.cv_results_['mean_test_score'],\n            grid.cv_results_['std_test_score'] / np.sqrt(K))\nax.set_ylabel('Cross-validated MSE', fontsize=20)\nax.set_xlabel('# principal components', fontsize=20)\nax.set_xticks(n_comp[::2])\nax.set_ylim([50000,250000]);\n\n\n\n\n\n\n\n\nCV error is minimized at 12, though there is little noticable difference between this point and a much lower number like 2 or 3 components."
  },
  {
    "objectID": "posts/ch06-model-selection-and-regularization/Ch06-varselect-lab.html#subset-selection-methods",
    "href": "posts/ch06-model-selection-and-regularization/Ch06-varselect-lab.html#subset-selection-methods",
    "title": "Chapter 6: Linear Models and Regularization Methods Lab",
    "section": "",
    "text": "Here we implement methods that reduce the number of parameters in a model by restricting the model to a subset of the input variables.\n\n\nWe will apply the forward-selection approach to the Hitters data. We wish to predict a baseball player’s Salary on the basis of various statistics associated with performance in the previous year.\nFirst of all, we note that the Salary variable is missing for some of the players. The np.isnan() function can be used to identify the missing observations. It returns an array of the same shape as the input vector, with a True for any elements that are missing, and a False for non-missing elements. The sum() method can then be used to count all of the missing elements.\n\nHitters = load_data('Hitters')\nnp.isnan(Hitters['Salary']).sum()\n\n59\n\n\nWe see that Salary is missing for 59 players. The dropna() method of data frames removes all of the rows that have missing values in any variable (by default — see Hitters.dropna?).\n\nHitters = Hitters.dropna();\nHitters.shape\n\n(263, 20)\n\n\nWe first choose the best model using forward selection based on C_p (). This score is not built in as a metric to sklearn. We therefore define a function to compute it ourselves, and use it as a scorer. By default, sklearn tries to maximize a score, hence our scoring function computes the negative C_p statistic.\n\ndef nCp(sigma2, estimator, X, Y):\n    \"Negative Cp statistic\"\n    n, p = X.shape\n    Yhat = estimator.predict(X)\n    RSS = np.sum((Y - Yhat)**2)\n    return -(RSS + 2 * p * sigma2) / n \n\nWe need to estimate the residual variance \\sigma^2, which is the first argument in our scoring function above. We will fit the biggest model, using all the variables, and estimate \\sigma^2 based on its MSE.\n\ndesign = MS(Hitters.columns.drop('Salary')).fit(Hitters)\nY = np.array(Hitters['Salary'])\nX = design.transform(Hitters)\nsigma2 = OLS(Y,X).fit().scale\n\nThe function sklearn_selected() expects a scorer with just three arguments — the last three in the definition of nCp() above. We use the function partial() first seen in Section~ to freeze the first argument with our estimate of \\sigma^2.\n\nneg_Cp = partial(nCp, sigma2)\n\nWe can now use neg_Cp() as a scorer for model selection.\nAlong with a score we need to specify the search strategy. This is done through the object Stepwise() in the ISLP.models package. The method Stepwise.first_peak() runs forward stepwise until any further additions to the model do not result in an improvement in the evaluation score. Similarly, the method Stepwise.fixed_steps() runs a fixed number of steps of stepwise search.\n\nstrategy = Stepwise.first_peak(design,\n                               direction='forward',\n                               max_terms=len(design.terms))\n\nWe now fit a linear regression model with Salary as outcome using forward selection. To do so, we use the function sklearn_selected() from the ISLP.models package. This takes a model from statsmodels along with a search strategy and selects a model with its fit method. Without specifying a scoring argument, the score defaults to MSE, and so all 19 variables will be selected.\n\nhitters_MSE = sklearn_selected(OLS,\n                               strategy)\nhitters_MSE.fit(Hitters, Y)\nhitters_MSE.selected_state_\n\n('Assists',\n 'AtBat',\n 'CAtBat',\n 'CHits',\n 'CHmRun',\n 'CRBI',\n 'CRuns',\n 'CWalks',\n 'Division',\n 'Errors',\n 'Hits',\n 'HmRun',\n 'League',\n 'NewLeague',\n 'PutOuts',\n 'RBI',\n 'Runs',\n 'Walks',\n 'Years')\n\n\nUsing neg_Cp results in a smaller model, as expected, with just 10 variables selected.\n\nhitters_Cp = sklearn_selected(OLS,\n                               strategy,\n                               scoring=neg_Cp)\nhitters_Cp.fit(Hitters, Y)\nhitters_Cp.selected_state_\n\n('Assists',\n 'AtBat',\n 'CAtBat',\n 'CRBI',\n 'CRuns',\n 'CWalks',\n 'Division',\n 'Hits',\n 'PutOuts',\n 'Walks')\n\n\n\n\n\nAs an alternative to using C_p, we might try cross-validation to select a model in forward selection. For this, we need a method that stores the full path of models found in forward selection, and allows predictions for each of these. This can be done with the sklearn_selection_path() estimator from ISLP.models. The function cross_val_predict() from ISLP.models computes the cross-validated predictions for each of the models along the path, which we can use to evaluate the cross-validated MSE along the path.\nHere we define a strategy that fits the full forward selection path. While there are various parameter choices for sklearn_selection_path(), we use the defaults here, which selects the model at each step based on the biggest reduction in RSS.\n\nstrategy = Stepwise.fixed_steps(design,\n                                len(design.terms),\n                                direction='forward')\nfull_path = sklearn_selection_path(OLS, strategy)\n\nWe now fit the full forward-selection path on the Hitters data and compute the fitted values.\n\nfull_path.fit(Hitters, Y)\nYhat_in = full_path.predict(Hitters)\nYhat_in.shape\n\n(263, 20)\n\n\nThis gives us an array of fitted values — 20 steps in all, including the fitted mean for the null model — which we can use to evaluate in-sample MSE. As expected, the in-sample MSE improves each step we take, indicating we must use either the validation or cross-validation approach to select the number of steps. We fix the y-axis to range from 50,000 to 250,000 to compare to the cross-validation and validation set MSE below, as well as other methods such as ridge regression, lasso and principal components regression.\n\nmse_fig, ax = subplots(figsize=(8,8))\ninsample_mse = ((Yhat_in - Y[:,None])**2).mean(0)\nn_steps = insample_mse.shape[0]\nax.plot(np.arange(n_steps),\n        insample_mse,\n        'k', # color black\n        label='In-sample')\nax.set_ylabel('MSE',\n              fontsize=20)\nax.set_xlabel('# steps of forward stepwise',\n              fontsize=20)\nax.set_xticks(np.arange(n_steps)[::2])\nax.legend()\nax.set_ylim([50000,250000]);\n\n\n\n\n\n\n\n\nNotice the expression None in Y[:,None] above. This adds an axis (dimension) to the one-dimensional array Y, which allows it to be recycled when subtracted from the two-dimensional Yhat_in.\nWe are now ready to use cross-validation to estimate test error along the model path. We must use only the training observations to perform all aspects of model-fitting — including variable selection. Therefore, the determination of which model of a given size is best must be made using in each training fold. This point is subtle but important. If the full data set is used to select the best subset at each step, then the validation set errors and cross-validation errors that we obtain will not be accurate estimates of the test error.\nWe now compute the cross-validated predicted values using 5-fold cross-validation.\n\nK = 5\nkfold = skm.KFold(K,\n                  random_state=0,\n                  shuffle=True)\nYhat_cv = skm.cross_val_predict(full_path,\n                                Hitters,\n                                Y,\n                                cv=kfold)\nYhat_cv.shape\n\n(263, 20)\n\n\nskm.cross_val_predict() The prediction matrix Yhat_cv is the same shape as Yhat_in; the difference is that the predictions in each row, corresponding to a particular sample index, were made from models fit on a training fold that did not include that row.\nAt each model along the path, we compute the MSE in each of the cross-validation folds. These we will average to get the mean MSE, and can also use the individual values to compute a crude estimate of the standard error of the mean. {The estimate is crude because the five error estimates are based on overlapping training sets, and hence are not independent.} Hence we must know the test indices for each cross-validation split. This can be found by using the split() method of kfold. Because we fixed the random state above, whenever we split any array with the same number of rows as Y we recover the same training and test indices, though we simply ignore the training indices below.\n\ncv_mse = []\nfor train_idx, test_idx in kfold.split(Y):\n    errors = (Yhat_cv[test_idx] - Y[test_idx,None])**2\n    cv_mse.append(errors.mean(0)) # column means\ncv_mse = np.array(cv_mse).T\ncv_mse.shape\n\n(20, 5)\n\n\nWe now add the cross-validation error estimates to our MSE plot. We include the mean error across the five folds, and the estimate of the standard error of the mean.\n\nax.errorbar(np.arange(n_steps), \n            cv_mse.mean(1),\n            cv_mse.std(1) / np.sqrt(K),\n            label='Cross-validated',\n            c='r') # color red\nax.set_ylim([50000,250000])\nax.legend()\nmse_fig\n\n\n\n\n\n\n\n\nTo repeat the above using the validation set approach, we simply change our cv argument to a validation set: one random split of the data into a test and training. We choose a test size of 20%, similar to the size of each test set in 5-fold cross-validation.skm.ShuffleSplit()\n\nvalidation = skm.ShuffleSplit(n_splits=1, \n                              test_size=0.2,\n                              random_state=0)\nfor train_idx, test_idx in validation.split(Y):\n    full_path.fit(Hitters.iloc[train_idx],\n                  Y[train_idx])\n    Yhat_val = full_path.predict(Hitters.iloc[test_idx])\n    errors = (Yhat_val - Y[test_idx,None])**2\n    validation_mse = errors.mean(0)\n\nAs for the in-sample MSE case, the validation set approach does not provide standard errors.\n\nax.plot(np.arange(n_steps), \n        validation_mse,\n        'b--', # color blue, broken line\n        label='Validation')\nax.set_xticks(np.arange(n_steps)[::2])\nax.set_ylim([50000,250000])\nax.legend()\nmse_fig\n\n\n\n\n\n\n\n\n\n\n\nForward stepwise is a greedy selection procedure; at each step it augments the current set by including one additional variable. We now apply best subset selection to the Hitters data, which for every subset size, searches for the best set of predictors.\nWe will use a package called l0bnb to perform best subset selection. Instead of constraining the subset to be a given size, this package produces a path of solutions using the subset size as a penalty rather than a constraint. Although the distinction is subtle, the difference comes when we cross-validate.\n\nD = design.fit_transform(Hitters)\nD = D.drop('intercept', axis=1)\nX = np.asarray(D)\n\nHere we excluded the first column corresponding to the intercept, as l0bnb will fit the intercept separately. We can find a path using the fit_path() function.\n\npath = fit_path(X, \n                Y,\n                max_nonzeros=X.shape[1])\n\nPreprocessing Data.\nBnB Started.\n\n\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/numba/np/ufunc/parallel.py:371: NumbaWarning: The TBB threading layer requires TBB version 2021 update 6 or later i.e., TBB_INTERFACE_VERSION &gt;= 12060. Found TBB_INTERFACE_VERSION = 12050. The TBB threading layer is disabled.\n  warnings.warn(problem)\n\n\nIteration: 1. Number of non-zeros:  1\nIteration: 2. Number of non-zeros:  2\nIteration: 3. Number of non-zeros:  2\nIteration: 4. Number of non-zeros:  2\nIteration: 5. Number of non-zeros:  3\nIteration: 6. Number of non-zeros:  3\nIteration: 7. Number of non-zeros:  4\nIteration: 8. Number of non-zeros:  9\nIteration: 9. Number of non-zeros:  9\nIteration: 10. Number of non-zeros:  9\nIteration: 11. Number of non-zeros:  9\nIteration: 12. Number of non-zeros:  9\nIteration: 13. Number of non-zeros:  9\nIteration: 14. Number of non-zeros:  9\nIteration: 15. Number of non-zeros:  9\nIteration: 16. Number of non-zeros:  9\nIteration: 17. Number of non-zeros:  9\nIteration: 18. Number of non-zeros:  17\nIteration: 19. Number of non-zeros:  19\n\n\nThe function fit_path() returns a list whose values include the fitted coefficients as B, an intercept as B0, as well as a few other attributes related to the particular path algorithm used. Such details are beyond the scope of this book.\n\npath[3]\n\n{'B': array([0.        , 3.25484367, 0.        , 0.        , 0.        ,\n        0.        , 0.        , 0.        , 0.        , 0.        ,\n        0.        , 0.67775265, 0.        , 0.        , 0.        ,\n        0.        , 0.        , 0.        , 0.        ]),\n 'B0': -38.98216739555505,\n 'lambda_0': 0.011416248027450187,\n 'M': 0.5829861733382012,\n 'Time_exceeded': False}\n\n\nIn the example above, we see that at the fourth step in the path, we have two nonzero coefficients in 'B', corresponding to the value 0.114 for the penalty parameter lambda_0. We could make predictions using this sequence of fits on a validation set as a function of lambda_0, or with more work using cross-validation."
  },
  {
    "objectID": "posts/ch06-model-selection-and-regularization/Ch06-varselect-lab.html#ridge-regression-and-the-lasso",
    "href": "posts/ch06-model-selection-and-regularization/Ch06-varselect-lab.html#ridge-regression-and-the-lasso",
    "title": "Chapter 6: Linear Models and Regularization Methods Lab",
    "section": "",
    "text": "We will use the sklearn.linear_model package (for which we use skl as shorthand below) to fit ridge and lasso regularized linear models on the Hitters data. We start with the model matrix X (without an intercept) that we computed in the previous section on best subset regression.\n\n\nWe will use the function skl.ElasticNet() to fit both ridge and the lasso. To fit a path of ridge regressions models, we use skl.ElasticNet.path(), which can fit both ridge and lasso, as well as a hybrid mixture; ridge regression corresponds to l1_ratio=0. It is good practice to standardize the columns of X in these applications, if the variables are measured in different units. Since skl.ElasticNet() does no normalization, we have to take care of that ourselves. Since we standardize first, in order to find coefficient estimates on the original scale, we must unstandardize the coefficient estimates. The parameter \\lambda in () and () is called alphas in sklearn. In order to be consistent with the rest of this chapter, we use lambdas rather than alphas in what follows. {At the time of publication, ridge fits like the one in code chunk [22] issue unwarranted convergence warning messages; we expect these to disappear as this package matures.}\n\nXs = X - X.mean(0)[None,:]\nX_scale = X.std(0)\nXs = Xs / X_scale[None,:]\nlambdas = 10**np.linspace(8, -2, 100) / Y.std()\nsoln_array = skl.ElasticNet.path(Xs,\n                                 Y,\n                                 l1_ratio=0.,\n                                 alphas=lambdas)[1]\nsoln_array.shape\n\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 64428165.36474803, tolerance: 12885.7065737425\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 64428069.135193564, tolerance: 12885.7065737425\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 64427947.709570706, tolerance: 12885.7065737425\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 64427794.49147929, tolerance: 12885.7065737425\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 64427601.15801401, tolerance: 12885.7065737425\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 64427357.208145335, tolerance: 12885.7065737425\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 64427049.39312406, tolerance: 12885.7065737425\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 64426660.99818401, tolerance: 12885.7065737425\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 64426170.936871, tolerance: 12885.7065737425\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 64425552.60935727, tolerance: 12885.7065737425\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 64424772.46361481, tolerance: 12885.7065737425\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 64423788.18271286, tolerance: 12885.7065737425\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 64422546.402046196, tolerance: 12885.7065737425\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 64420979.836119056, tolerance: 12885.7065737425\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 64419003.66458898, tolerance: 12885.7065737425\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 64416510.99045885, tolerance: 12885.7065737425\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 64413367.138336174, tolerance: 12885.7065737425\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 64409402.50628651, tolerance: 12885.7065737425\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 64404403.61988451, tolerance: 12885.7065737425\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 64398101.96098537, tolerance: 12885.7065737425\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 64390160.05690916, tolerance: 12885.7065737425\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 64380154.22050254, tolerance: 12885.7065737425\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 64367553.23368757, tolerance: 12885.7065737425\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 64351692.17811265, tolerance: 12885.7065737425\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 64331740.55708714, tolerance: 12885.7065737425\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 64306663.85815487, tolerance: 12885.7065737425\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 64275177.83204634, tolerance: 12885.7065737425\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 64235695.09903011, tolerance: 12885.7065737425\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 64186264.367964305, tolerance: 12885.7065737425\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 64124503.75014188, tolerance: 12885.7065737425\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 64047531.61120446, tolerance: 12885.7065737425\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 63951901.41718617, tolerance: 12885.7065737425\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 63833551.374737374, tolerance: 12885.7065737425\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 63687785.48493876, tolerance: 12885.7065737425\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 63509309.685659595, tolerance: 12885.7065737425\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 63292354.02159835, tolerance: 12885.7065737425\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 63030916.89990266, tolerance: 12885.7065737425\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 62719166.29703928, tolerance: 12885.7065737425\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 62352019.354438685, tolerance: 12885.7065737425\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 61925889.875772476, tolerance: 12885.7065737425\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 61439539.89859062, tolerance: 12885.7065737425\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 60894903.0392198, tolerance: 12885.7065737425\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 60297684.607476555, tolerance: 12885.7065737425\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 59657521.16598571, tolerance: 12885.7065737425\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 58987535.05051082, tolerance: 12885.7065737425\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 58303257.30893663, tolerance: 12885.7065737425\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 57621079.35589412, tolerance: 12885.7065737425\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 56956552.36298917, tolerance: 12885.7065737425\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 56322906.14367992, tolerance: 12885.7065737425\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 55730077.75280342, tolerance: 12885.7065737425\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 55184365.56435659, tolerance: 12885.7065737425\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 54688640.34364891, tolerance: 12885.7065737425\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 54242923.97107168, tolerance: 12885.7065737425\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 53845116.92275897, tolerance: 12885.7065737425\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 53491699.682508625, tolerance: 12885.7065737425\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 53178310.76477922, tolerance: 12885.7065737425\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 52900177.0923312, tolerance: 12885.7065737425\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 52652419.277090184, tolerance: 12885.7065737425\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 52430270.98847021, tolerance: 12885.7065737425\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 52229246.49376922, tolerance: 12885.7065737425\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 52045276.25129579, tolerance: 12885.7065737425\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 51874817.1076159, tolerance: 12885.7065737425\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 51714935.480955794, tolerance: 12885.7065737425\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 51563358.53546296, tolerance: 12885.7065737425\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 51418487.86706321, tolerance: 12885.7065737425\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 51279371.620424494, tolerance: 12885.7065737425\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 51145634.32609811, tolerance: 12885.7065737425\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 51017369.0029908, tolerance: 12885.7065737425\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 50895002.066019125, tolerance: 12885.7065737425\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 50779146.5004749, tolerance: 12885.7065737425\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 50670461.07683647, tolerance: 12885.7065737425\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 50569532.273268186, tolerance: 12885.7065737425\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 50476790.98101036, tolerance: 12885.7065737425\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 50392468.80539258, tolerance: 12885.7065737425\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 50316590.69087266, tolerance: 12885.7065737425\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 50248994.15213535, tolerance: 12885.7065737425\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 50189362.60450388, tolerance: 12885.7065737425\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 50137261.69126276, tolerance: 12885.7065737425\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 50092171.83247441, tolerance: 12885.7065737425\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 50053515.08162336, tolerance: 12885.7065737425\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 50020677.61213047, tolerance: 12885.7065737425\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 49993029.95018282, tolerance: 12885.7065737425\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 49969946.08142674, tolerance: 12885.7065737425\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 49950821.12032736, tolerance: 12885.7065737425\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 49935086.3757958, tolerance: 12885.7065737425\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 49922220.655421816, tolerance: 12885.7065737425\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 49911757.23721764, tolerance: 12885.7065737425\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 49903286.659217976, tolerance: 12885.7065737425\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 49896456.01861018, tolerance: 12885.7065737425\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 49890965.72520974, tolerance: 12885.7065737425\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 49886564.66025484, tolerance: 12885.7065737425\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 49883044.54819704, tolerance: 12885.7065737425\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 49880234.14784603, tolerance: 12885.7065737425\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 49877993.67036287, tolerance: 12885.7065737425\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 49876209.665535495, tolerance: 12885.7065737425\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 49874790.49349924, tolerance: 12885.7065737425\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 49873662.41408353, tolerance: 12885.7065737425\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 49872766.272819825, tolerance: 12885.7065737425\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 49872054.73300084, tolerance: 12885.7065737425\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 49871489.98963819, tolerance: 12885.7065737425\n  model = cd_fast.enet_coordinate_descent_gram(\n\n\n(19, 100)\n\n\nHere we extract the array of coefficients corresponding to the solutions along the regularization path. By default the skl.ElasticNet.path method fits a path along an automatically selected range of \\lambda values, except for the case when l1_ratio=0, which results in ridge regression (as is the case here). {The reason is rather technical; for all models except ridge, we can find the smallest value of \\lambda for which all coefficients are zero. For ridge this value is \\infty.} So here we have chosen to implement the function over a grid of values ranging from \\lambda=10^{8} to \\lambda=10^{-2} scaled by the standard deviation of y, essentially covering the full range of scenarios from the null model containing only the intercept, to the least squares fit.\nAssociated with each value of \\lambda is a vector of ridge regression coefficients, that can be accessed by a column of soln_array. In this case, soln_array is a 19 \\times 100 matrix, with 19 rows (one for each predictor) and 100 columns (one for each value of \\lambda).\nWe transpose this matrix and turn it into a data frame to facilitate viewing and plotting.\n\nsoln_path = pd.DataFrame(soln_array.T,\n                         columns=D.columns,\n                         index=-np.log(lambdas))\nsoln_path.index.name = 'negative log(lambda)'\nsoln_path\n\n\n\n\n\n\n\n\nAtBat\nHits\nHmRun\nRuns\nRBI\nWalks\nYears\nCAtBat\nCHits\nCHmRun\nCRuns\nCRBI\nCWalks\nLeague[N]\nDivision[W]\nPutOuts\nAssists\nErrors\nNewLeague[N]\n\n\nnegative log(lambda)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n-12.310855\n0.000800\n0.000889\n0.000695\n0.000851\n0.000911\n0.000900\n0.000812\n0.001067\n0.001113\n0.001064\n0.001141\n0.001149\n0.000993\n-0.000029\n-0.000390\n0.000609\n0.000052\n-0.000011\n-0.000006\n\n\n-12.078271\n0.001010\n0.001122\n0.000878\n0.001074\n0.001150\n0.001135\n0.001025\n0.001346\n0.001404\n0.001343\n0.001439\n0.001450\n0.001253\n-0.000037\n-0.000492\n0.000769\n0.000065\n-0.000014\n-0.000007\n\n\n-11.845686\n0.001274\n0.001416\n0.001107\n0.001355\n0.001451\n0.001433\n0.001293\n0.001698\n0.001772\n0.001694\n0.001816\n0.001830\n0.001581\n-0.000046\n-0.000621\n0.000970\n0.000082\n-0.000017\n-0.000009\n\n\n-11.613102\n0.001608\n0.001787\n0.001397\n0.001710\n0.001831\n0.001808\n0.001632\n0.002143\n0.002236\n0.002138\n0.002292\n0.002309\n0.001995\n-0.000058\n-0.000784\n0.001224\n0.000104\n-0.000022\n-0.000012\n\n\n-11.380518\n0.002029\n0.002255\n0.001763\n0.002158\n0.002310\n0.002281\n0.002059\n0.002704\n0.002821\n0.002698\n0.002892\n0.002914\n0.002517\n-0.000073\n-0.000990\n0.001544\n0.000131\n-0.000028\n-0.000015\n\n\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n\n\n9.784658\n-290.823989\n336.929968\n37.322686\n-59.748520\n-26.507086\n134.855915\n-17.216195\n-387.775826\n89.573601\n-12.273926\n476.079273\n257.271255\n-213.124780\n31.258215\n-58.457857\n78.761266\n53.622113\n-22.208456\n-12.402891\n\n\n10.017243\n-290.879272\n337.113713\n37.431373\n-59.916820\n-26.606957\n134.900549\n-17.108041\n-388.458404\n89.000707\n-12.661459\n477.031349\n257.966790\n-213.280891\n31.256434\n-58.448850\n78.761240\n53.645147\n-22.198802\n-12.391969\n\n\n10.249827\n-290.923382\n337.260446\n37.518064\n-60.051166\n-26.686604\n134.936136\n-17.022194\n-388.997470\n88.537380\n-12.971603\n477.791860\n258.523025\n-213.405740\n31.254958\n-58.441682\n78.761230\n53.663357\n-22.191071\n-12.383205\n\n\n10.482412\n-290.958537\n337.377455\n37.587122\n-60.158256\n-26.750044\n134.964477\n-16.954081\n-389.423414\n88.164178\n-13.219329\n478.398404\n258.967059\n-213.505412\n31.253747\n-58.435983\n78.761230\n53.677759\n-22.184893\n-12.376191\n\n\n10.714996\n-290.986528\n337.470648\n37.642077\n-60.243522\n-26.800522\n134.987027\n-16.900054\n-389.760135\n87.864551\n-13.416889\n478.881540\n259.321007\n-213.584869\n31.252760\n-58.431454\n78.761235\n53.689152\n-22.179964\n-12.370587\n\n\n\n\n100 rows × 19 columns\n\n\n\nWe plot the paths to get a sense of how the coefficients vary with \\lambda. To control the location of the legend we first set legend to False in the plot method, adding it afterward with the legend() method of ax.\n\npath_fig, ax = subplots(figsize=(8,8))\nsoln_path.plot(ax=ax, legend=False)\nax.set_xlabel('$-\\log(\\lambda)$', fontsize=20)\nax.set_ylabel('Standardized coefficients', fontsize=20)\nax.legend(loc='upper left');\n\n\n\n\n\n\n\n\n(We have used latex formatting in the horizontal label, in order to format the Greek \\lambda appropriately.) We expect the coefficient estimates to be much smaller, in terms of \\ell_2 norm, when a large value of \\lambda is used, as compared to when a small value of \\lambda is used. (Recall that the \\ell_2 norm is the square root of the sum of squared coefficient values.) We display the coefficients at the 40th step, where \\lambda is 25.535.\n\nbeta_hat = soln_path.loc[soln_path.index[39]]\nlambdas[39], beta_hat\n\n(25.53538897200662,\n AtBat           5.433750\n Hits            6.223582\n HmRun           4.585498\n Runs            5.880855\n RBI             6.195921\n Walks           6.277975\n Years           5.299767\n CAtBat          7.147501\n CHits           7.539495\n CHmRun          7.182344\n CRuns           7.728649\n CRBI            7.790702\n CWalks          6.592901\n League[N]       0.042445\n Division[W]    -3.107159\n PutOuts         4.605263\n Assists         0.378371\n Errors         -0.135196\n NewLeague[N]    0.150323\n Name: -3.240065292879872, dtype: float64)\n\n\nLet’s compute the \\ell_2 norm of the standardized coefficients.\n\nnp.linalg.norm(beta_hat)\n\n24.170617201443775\n\n\nIn contrast, here is the \\ell_2 norm when \\lambda is 2.44e-01. Note the much larger \\ell_2 norm of the coefficients associated with this smaller value of \\lambda.\n\nbeta_hat = soln_path.loc[soln_path.index[59]]\nlambdas[59], np.linalg.norm(beta_hat)\n\n(0.2437476613348855, 160.4237101772597)\n\n\nAbove we normalized X upfront, and fit the ridge model using Xs. The Pipeline() object in sklearn provides a clear way to separate feature normalization from the fitting of the ridge model itself.\n\nridge = skl.ElasticNet(alpha=lambdas[59], l1_ratio=0)\nscaler = StandardScaler(with_mean=True,  with_std=True)\npipe = Pipeline(steps=[('scaler', scaler), ('ridge', ridge)])\npipe.fit(X, Y)\n\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.446e+07, tolerance: 5.332e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n\n\nPipeline(steps=[('scaler', StandardScaler()),\n                ('ridge', ElasticNet(alpha=0.2437476613348855, l1_ratio=0))])In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.  Pipeline?Documentation for PipelineiFittedPipeline(steps=[('scaler', StandardScaler()),\n                ('ridge', ElasticNet(alpha=0.2437476613348855, l1_ratio=0))])  StandardScaler?Documentation for StandardScalerStandardScaler()  ElasticNet?Documentation for ElasticNetElasticNet(alpha=0.2437476613348855, l1_ratio=0) \n\n\nWe show that it gives the same \\ell_2 norm as in our previous fit on the standardized data.\n\nnp.linalg.norm(ridge.coef_)\n\n160.42371017725912\n\n\nNotice that the operation pipe.fit(X, Y) above has changed the ridge object, and in particular has added attributes such as coef_ that were not there before. ### Estimating Test Error of Ridge Regression Choosing an a priori value of \\lambda for ridge regression is difficult if not impossible. We will want to use the validation method or cross-validation to select the tuning parameter. The reader may not be surprised that the Pipeline() approach can be used in skm.cross_validate() with either a validation method (i.e. validation) or k-fold cross-validation.\nWe fix the random state of the splitter so that the results obtained will be reproducible.\n\nvalidation = skm.ShuffleSplit(n_splits=1,\n                              test_size=0.5,\n                              random_state=0)\nridge.alpha = 0.01\nresults = skm.cross_validate(ridge,\n                             X,\n                             Y,\n                             scoring='neg_mean_squared_error',\n                             cv=validation)\n-results['test_score']\n\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 5.486e+06, tolerance: 2.272e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n\n\narray([134214.00419204])\n\n\nThe test MSE is 1.342e+05. Note that if we had instead simply fit a model with just an intercept, we would have predicted each test observation using the mean of the training observations. We can get the same result by fitting a ridge regression model with a very large value of \\lambda. Note that 1e10 means 10^{10}.\n\nridge.alpha = 1e10\nresults = skm.cross_validate(ridge,\n                             X,\n                             Y,\n                             scoring='neg_mean_squared_error',\n                             cv=validation)\n-results['test_score']\n\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.136e+07, tolerance: 2.272e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n\n\narray([231788.32155285])\n\n\nObviously choosing \\lambda=0.01 is arbitrary, so we will use cross-validation or the validation-set approach to choose the tuning parameter \\lambda. The object GridSearchCV() allows exhaustive grid search to choose such a parameter.\nWe first use the validation set method to choose \\lambda.\n\nparam_grid = {'ridge__alpha': lambdas}\ngrid = skm.GridSearchCV(pipe,\n                        param_grid,\n                        cv=validation,\n                        scoring='neg_mean_squared_error')\ngrid.fit(X, Y)\ngrid.best_params_['ridge__alpha']\ngrid.best_estimator_\n\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.136e+07, tolerance: 2.272e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.136e+07, tolerance: 2.272e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.136e+07, tolerance: 2.272e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.136e+07, tolerance: 2.272e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.136e+07, tolerance: 2.272e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.136e+07, tolerance: 2.272e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.136e+07, tolerance: 2.272e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.136e+07, tolerance: 2.272e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.136e+07, tolerance: 2.272e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.136e+07, tolerance: 2.272e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.136e+07, tolerance: 2.272e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.136e+07, tolerance: 2.272e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.136e+07, tolerance: 2.272e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.136e+07, tolerance: 2.272e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.136e+07, tolerance: 2.272e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.136e+07, tolerance: 2.272e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.135e+07, tolerance: 2.272e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.135e+07, tolerance: 2.272e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.135e+07, tolerance: 2.272e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.135e+07, tolerance: 2.272e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.135e+07, tolerance: 2.272e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.134e+07, tolerance: 2.272e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.134e+07, tolerance: 2.272e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.133e+07, tolerance: 2.272e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.132e+07, tolerance: 2.272e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.131e+07, tolerance: 2.272e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.130e+07, tolerance: 2.272e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.128e+07, tolerance: 2.272e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.127e+07, tolerance: 2.272e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.124e+07, tolerance: 2.272e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.121e+07, tolerance: 2.272e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.117e+07, tolerance: 2.272e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.113e+07, tolerance: 2.272e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.107e+07, tolerance: 2.272e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.100e+07, tolerance: 2.272e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.091e+07, tolerance: 2.272e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.081e+07, tolerance: 2.272e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.069e+07, tolerance: 2.272e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.055e+07, tolerance: 2.272e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.038e+07, tolerance: 2.272e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.019e+07, tolerance: 2.272e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.977e+06, tolerance: 2.272e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.744e+06, tolerance: 2.272e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.494e+06, tolerance: 2.272e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.234e+06, tolerance: 2.272e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 8.968e+06, tolerance: 2.272e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 8.704e+06, tolerance: 2.272e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 8.448e+06, tolerance: 2.272e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 8.204e+06, tolerance: 2.272e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 7.977e+06, tolerance: 2.272e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 7.769e+06, tolerance: 2.272e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 7.581e+06, tolerance: 2.272e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 7.412e+06, tolerance: 2.272e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 7.261e+06, tolerance: 2.272e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 7.127e+06, tolerance: 2.272e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 7.008e+06, tolerance: 2.272e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 6.900e+06, tolerance: 2.272e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 6.803e+06, tolerance: 2.272e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 6.714e+06, tolerance: 2.272e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 6.632e+06, tolerance: 2.272e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 6.554e+06, tolerance: 2.272e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 6.480e+06, tolerance: 2.272e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 6.409e+06, tolerance: 2.272e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 6.342e+06, tolerance: 2.272e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 6.276e+06, tolerance: 2.272e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 6.214e+06, tolerance: 2.272e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 6.154e+06, tolerance: 2.272e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 6.097e+06, tolerance: 2.272e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 6.043e+06, tolerance: 2.272e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 5.991e+06, tolerance: 2.272e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 5.943e+06, tolerance: 2.272e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 5.898e+06, tolerance: 2.272e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 5.856e+06, tolerance: 2.272e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 5.817e+06, tolerance: 2.272e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 5.780e+06, tolerance: 2.272e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 5.746e+06, tolerance: 2.272e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 5.715e+06, tolerance: 2.272e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 5.687e+06, tolerance: 2.272e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 5.661e+06, tolerance: 2.272e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 5.637e+06, tolerance: 2.272e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 5.616e+06, tolerance: 2.272e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 5.596e+06, tolerance: 2.272e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 5.579e+06, tolerance: 2.272e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 5.563e+06, tolerance: 2.272e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 5.550e+06, tolerance: 2.272e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 5.538e+06, tolerance: 2.272e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 5.528e+06, tolerance: 2.272e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 5.519e+06, tolerance: 2.272e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 5.512e+06, tolerance: 2.272e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 5.506e+06, tolerance: 2.272e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 5.500e+06, tolerance: 2.272e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 5.496e+06, tolerance: 2.272e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 5.493e+06, tolerance: 2.272e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 5.490e+06, tolerance: 2.272e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 5.488e+06, tolerance: 2.272e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 5.486e+06, tolerance: 2.272e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 5.485e+06, tolerance: 2.272e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 5.483e+06, tolerance: 2.272e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 5.483e+06, tolerance: 2.272e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 5.482e+06, tolerance: 2.272e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.248e+07, tolerance: 5.332e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n\n\nGridSearchCV(cv=ShuffleSplit(n_splits=1, random_state=0, test_size=0.5, train_size=None),\n             estimator=Pipeline(steps=[('scaler', StandardScaler()),\n                                       ('ridge',\n                                        ElasticNet(alpha=10000000000.0,\n                                                   l1_ratio=0))]),\n             param_grid={'ridge__alpha': array([2.22093791e+05, 1.76005531e+05, 1.39481373e+05, 1.10536603e+05,\n       8.75983676e+04, 6.94202082e+04, 5.50143278e+04, 4.35979140e+04,\n       3...\n       4.67486141e-03, 3.70474772e-03, 2.93594921e-03, 2.32668954e-03,\n       1.84386167e-03, 1.46122884e-03, 1.15799887e-03, 9.17694298e-04,\n       7.27257037e-04, 5.76338765e-04, 4.56738615e-04, 3.61957541e-04,\n       2.86845161e-04, 2.27319885e-04, 1.80147121e-04, 1.42763513e-04,\n       1.13137642e-04, 8.96596467e-05, 7.10537367e-05, 5.63088712e-05,\n       4.46238174e-05, 3.53636122e-05, 2.80250579e-05, 2.22093791e-05])},\n             scoring='neg_mean_squared_error')In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.  GridSearchCV?Documentation for GridSearchCViFittedGridSearchCV(cv=ShuffleSplit(n_splits=1, random_state=0, test_size=0.5, train_size=None),\n             estimator=Pipeline(steps=[('scaler', StandardScaler()),\n                                       ('ridge',\n                                        ElasticNet(alpha=10000000000.0,\n                                                   l1_ratio=0))]),\n             param_grid={'ridge__alpha': array([2.22093791e+05, 1.76005531e+05, 1.39481373e+05, 1.10536603e+05,\n       8.75983676e+04, 6.94202082e+04, 5.50143278e+04, 4.35979140e+04,\n       3...\n       4.67486141e-03, 3.70474772e-03, 2.93594921e-03, 2.32668954e-03,\n       1.84386167e-03, 1.46122884e-03, 1.15799887e-03, 9.17694298e-04,\n       7.27257037e-04, 5.76338765e-04, 4.56738615e-04, 3.61957541e-04,\n       2.86845161e-04, 2.27319885e-04, 1.80147121e-04, 1.42763513e-04,\n       1.13137642e-04, 8.96596467e-05, 7.10537367e-05, 5.63088712e-05,\n       4.46238174e-05, 3.53636122e-05, 2.80250579e-05, 2.22093791e-05])},\n             scoring='neg_mean_squared_error') best_estimator_: PipelinePipeline(steps=[('scaler', StandardScaler()),\n                ('ridge', ElasticNet(alpha=0.005899006046740854, l1_ratio=0))])  StandardScaler?Documentation for StandardScalerStandardScaler()  ElasticNet?Documentation for ElasticNetElasticNet(alpha=0.005899006046740854, l1_ratio=0) \n\n\n0.005899006046740854\n\n\nPipeline(steps=[('scaler', StandardScaler()),\n                ('ridge', ElasticNet(alpha=0.005899006046740854, l1_ratio=0))])In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.  Pipeline?Documentation for PipelineiFittedPipeline(steps=[('scaler', StandardScaler()),\n                ('ridge', ElasticNet(alpha=0.005899006046740854, l1_ratio=0))])  StandardScaler?Documentation for StandardScalerStandardScaler()  ElasticNet?Documentation for ElasticNetElasticNet(alpha=0.005899006046740854, l1_ratio=0) \n\n\nAlternatively, we can use 5-fold cross-validation.\n\ngrid = skm.GridSearchCV(pipe, \n                        param_grid,\n                        cv=kfold,\n                        scoring='neg_mean_squared_error')\ngrid.fit(X, Y)\ngrid.best_params_['ridge__alpha']\ngrid.best_estimator_\n\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.880e+07, tolerance: 3.759e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.101e+07, tolerance: 4.201e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.233e+07, tolerance: 4.466e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.223e+07, tolerance: 4.445e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.218e+07, tolerance: 4.437e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.880e+07, tolerance: 3.759e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.101e+07, tolerance: 4.201e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.233e+07, tolerance: 4.466e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.223e+07, tolerance: 4.445e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.218e+07, tolerance: 4.437e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.880e+07, tolerance: 3.759e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.101e+07, tolerance: 4.201e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.233e+07, tolerance: 4.466e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.223e+07, tolerance: 4.445e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.218e+07, tolerance: 4.437e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.880e+07, tolerance: 3.759e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.101e+07, tolerance: 4.201e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.233e+07, tolerance: 4.466e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.222e+07, tolerance: 4.445e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.218e+07, tolerance: 4.437e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.879e+07, tolerance: 3.759e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.101e+07, tolerance: 4.201e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.233e+07, tolerance: 4.466e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.222e+07, tolerance: 4.445e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.218e+07, tolerance: 4.437e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.879e+07, tolerance: 3.759e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.101e+07, tolerance: 4.201e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.233e+07, tolerance: 4.466e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.222e+07, tolerance: 4.445e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.218e+07, tolerance: 4.437e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.879e+07, tolerance: 3.759e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.100e+07, tolerance: 4.201e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.233e+07, tolerance: 4.466e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.222e+07, tolerance: 4.445e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.218e+07, tolerance: 4.437e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.879e+07, tolerance: 3.759e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.100e+07, tolerance: 4.201e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.233e+07, tolerance: 4.466e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.222e+07, tolerance: 4.445e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.218e+07, tolerance: 4.437e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.879e+07, tolerance: 3.759e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.100e+07, tolerance: 4.201e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.233e+07, tolerance: 4.466e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.222e+07, tolerance: 4.445e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.218e+07, tolerance: 4.437e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.879e+07, tolerance: 3.759e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.100e+07, tolerance: 4.201e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.233e+07, tolerance: 4.466e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.222e+07, tolerance: 4.445e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.218e+07, tolerance: 4.437e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.879e+07, tolerance: 3.759e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.100e+07, tolerance: 4.201e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.233e+07, tolerance: 4.466e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.222e+07, tolerance: 4.445e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.218e+07, tolerance: 4.437e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.879e+07, tolerance: 3.759e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.100e+07, tolerance: 4.201e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.233e+07, tolerance: 4.466e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.222e+07, tolerance: 4.445e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.218e+07, tolerance: 4.437e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.879e+07, tolerance: 3.759e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.100e+07, tolerance: 4.201e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.233e+07, tolerance: 4.466e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.222e+07, tolerance: 4.445e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.218e+07, tolerance: 4.437e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.879e+07, tolerance: 3.759e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.100e+07, tolerance: 4.201e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.233e+07, tolerance: 4.466e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.222e+07, tolerance: 4.445e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.218e+07, tolerance: 4.437e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.879e+07, tolerance: 3.759e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.100e+07, tolerance: 4.201e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.232e+07, tolerance: 4.466e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.222e+07, tolerance: 4.445e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.217e+07, tolerance: 4.437e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.879e+07, tolerance: 3.759e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.100e+07, tolerance: 4.201e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.232e+07, tolerance: 4.466e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.222e+07, tolerance: 4.445e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.217e+07, tolerance: 4.437e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.879e+07, tolerance: 3.759e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.099e+07, tolerance: 4.201e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.232e+07, tolerance: 4.466e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.221e+07, tolerance: 4.445e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.217e+07, tolerance: 4.437e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.878e+07, tolerance: 3.759e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.099e+07, tolerance: 4.201e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.232e+07, tolerance: 4.466e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.221e+07, tolerance: 4.445e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.216e+07, tolerance: 4.437e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.878e+07, tolerance: 3.759e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.099e+07, tolerance: 4.201e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.231e+07, tolerance: 4.466e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.221e+07, tolerance: 4.445e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.216e+07, tolerance: 4.437e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.878e+07, tolerance: 3.759e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.098e+07, tolerance: 4.201e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.231e+07, tolerance: 4.466e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.220e+07, tolerance: 4.445e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.215e+07, tolerance: 4.437e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.877e+07, tolerance: 3.759e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.098e+07, tolerance: 4.201e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.230e+07, tolerance: 4.466e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.219e+07, tolerance: 4.445e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.215e+07, tolerance: 4.437e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.876e+07, tolerance: 3.759e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.097e+07, tolerance: 4.201e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.229e+07, tolerance: 4.466e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.219e+07, tolerance: 4.445e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.214e+07, tolerance: 4.437e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.876e+07, tolerance: 3.759e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.096e+07, tolerance: 4.201e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.228e+07, tolerance: 4.466e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.218e+07, tolerance: 4.445e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.213e+07, tolerance: 4.437e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.875e+07, tolerance: 3.759e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.095e+07, tolerance: 4.201e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.227e+07, tolerance: 4.466e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.216e+07, tolerance: 4.445e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.211e+07, tolerance: 4.437e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.873e+07, tolerance: 3.759e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.093e+07, tolerance: 4.201e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.225e+07, tolerance: 4.466e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.215e+07, tolerance: 4.445e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.209e+07, tolerance: 4.437e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.872e+07, tolerance: 3.759e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.091e+07, tolerance: 4.201e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.223e+07, tolerance: 4.466e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.212e+07, tolerance: 4.445e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.207e+07, tolerance: 4.437e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.870e+07, tolerance: 3.759e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.089e+07, tolerance: 4.201e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.220e+07, tolerance: 4.466e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.210e+07, tolerance: 4.445e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.204e+07, tolerance: 4.437e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.867e+07, tolerance: 3.759e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.086e+07, tolerance: 4.201e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.217e+07, tolerance: 4.466e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.207e+07, tolerance: 4.445e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.200e+07, tolerance: 4.437e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.864e+07, tolerance: 3.759e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.082e+07, tolerance: 4.201e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.213e+07, tolerance: 4.466e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.203e+07, tolerance: 4.445e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.196e+07, tolerance: 4.437e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.860e+07, tolerance: 3.759e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.077e+07, tolerance: 4.201e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.208e+07, tolerance: 4.466e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.197e+07, tolerance: 4.445e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.190e+07, tolerance: 4.437e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.855e+07, tolerance: 3.759e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.071e+07, tolerance: 4.201e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.201e+07, tolerance: 4.466e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.191e+07, tolerance: 4.445e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.183e+07, tolerance: 4.437e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.849e+07, tolerance: 3.759e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.063e+07, tolerance: 4.201e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.194e+07, tolerance: 4.466e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.183e+07, tolerance: 4.445e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.174e+07, tolerance: 4.437e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.841e+07, tolerance: 3.759e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.054e+07, tolerance: 4.201e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.184e+07, tolerance: 4.466e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.173e+07, tolerance: 4.445e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.163e+07, tolerance: 4.437e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.832e+07, tolerance: 3.759e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.043e+07, tolerance: 4.201e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.172e+07, tolerance: 4.466e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.161e+07, tolerance: 4.445e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.149e+07, tolerance: 4.437e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.820e+07, tolerance: 3.759e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.029e+07, tolerance: 4.201e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.157e+07, tolerance: 4.466e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.146e+07, tolerance: 4.445e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.132e+07, tolerance: 4.437e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.806e+07, tolerance: 3.759e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.012e+07, tolerance: 4.201e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.139e+07, tolerance: 4.466e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.129e+07, tolerance: 4.445e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.112e+07, tolerance: 4.437e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.789e+07, tolerance: 3.759e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.992e+07, tolerance: 4.201e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.117e+07, tolerance: 4.466e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.107e+07, tolerance: 4.445e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.087e+07, tolerance: 4.437e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.769e+07, tolerance: 3.759e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.968e+07, tolerance: 4.201e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.091e+07, tolerance: 4.466e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.081e+07, tolerance: 4.445e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.058e+07, tolerance: 4.437e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.745e+07, tolerance: 3.759e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.939e+07, tolerance: 4.201e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.060e+07, tolerance: 4.466e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.051e+07, tolerance: 4.445e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.024e+07, tolerance: 4.437e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.718e+07, tolerance: 3.759e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.907e+07, tolerance: 4.201e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.024e+07, tolerance: 4.466e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.015e+07, tolerance: 4.445e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.984e+07, tolerance: 4.437e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.686e+07, tolerance: 3.759e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.869e+07, tolerance: 4.201e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.984e+07, tolerance: 4.466e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.975e+07, tolerance: 4.445e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.939e+07, tolerance: 4.437e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.650e+07, tolerance: 3.759e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.828e+07, tolerance: 4.201e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.938e+07, tolerance: 4.466e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.929e+07, tolerance: 4.445e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.888e+07, tolerance: 4.437e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.611e+07, tolerance: 3.759e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.783e+07, tolerance: 4.201e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.888e+07, tolerance: 4.466e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.880e+07, tolerance: 4.445e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.832e+07, tolerance: 4.437e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.568e+07, tolerance: 3.759e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.734e+07, tolerance: 4.201e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.834e+07, tolerance: 4.466e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.826e+07, tolerance: 4.445e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.772e+07, tolerance: 4.437e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.524e+07, tolerance: 3.759e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.684e+07, tolerance: 4.201e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.778e+07, tolerance: 4.466e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.770e+07, tolerance: 4.445e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.710e+07, tolerance: 4.437e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.478e+07, tolerance: 3.759e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.633e+07, tolerance: 4.201e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.721e+07, tolerance: 4.466e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.713e+07, tolerance: 4.445e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.646e+07, tolerance: 4.437e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.432e+07, tolerance: 3.759e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.582e+07, tolerance: 4.201e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.663e+07, tolerance: 4.466e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.655e+07, tolerance: 4.445e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.582e+07, tolerance: 4.437e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.388e+07, tolerance: 3.759e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.533e+07, tolerance: 4.201e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.607e+07, tolerance: 4.466e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.599e+07, tolerance: 4.445e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.520e+07, tolerance: 4.437e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.345e+07, tolerance: 3.759e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.486e+07, tolerance: 4.201e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.554e+07, tolerance: 4.466e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.545e+07, tolerance: 4.445e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.460e+07, tolerance: 4.437e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.305e+07, tolerance: 3.759e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.443e+07, tolerance: 4.201e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.504e+07, tolerance: 4.466e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.494e+07, tolerance: 4.445e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.404e+07, tolerance: 4.437e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.268e+07, tolerance: 3.759e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.403e+07, tolerance: 4.201e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.457e+07, tolerance: 4.466e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.447e+07, tolerance: 4.445e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.352e+07, tolerance: 4.437e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.234e+07, tolerance: 3.759e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.366e+07, tolerance: 4.201e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.415e+07, tolerance: 4.466e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.405e+07, tolerance: 4.445e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.305e+07, tolerance: 4.437e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.204e+07, tolerance: 3.759e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.333e+07, tolerance: 4.201e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.377e+07, tolerance: 4.466e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.366e+07, tolerance: 4.445e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.262e+07, tolerance: 4.437e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.177e+07, tolerance: 3.759e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.304e+07, tolerance: 4.201e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.343e+07, tolerance: 4.466e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.331e+07, tolerance: 4.445e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.224e+07, tolerance: 4.437e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.154e+07, tolerance: 3.759e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.278e+07, tolerance: 4.201e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.312e+07, tolerance: 4.466e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.300e+07, tolerance: 4.445e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.190e+07, tolerance: 4.437e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.133e+07, tolerance: 3.759e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.255e+07, tolerance: 4.201e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.284e+07, tolerance: 4.466e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.272e+07, tolerance: 4.445e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.159e+07, tolerance: 4.437e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.114e+07, tolerance: 3.759e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.234e+07, tolerance: 4.201e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.260e+07, tolerance: 4.466e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.247e+07, tolerance: 4.445e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.132e+07, tolerance: 4.437e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.098e+07, tolerance: 3.759e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.215e+07, tolerance: 4.201e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.237e+07, tolerance: 4.466e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.225e+07, tolerance: 4.445e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.109e+07, tolerance: 4.437e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.083e+07, tolerance: 3.759e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.198e+07, tolerance: 4.201e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.217e+07, tolerance: 4.466e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.204e+07, tolerance: 4.445e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.088e+07, tolerance: 4.437e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.070e+07, tolerance: 3.759e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.182e+07, tolerance: 4.201e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.198e+07, tolerance: 4.466e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.186e+07, tolerance: 4.445e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.069e+07, tolerance: 4.437e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.058e+07, tolerance: 3.759e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.167e+07, tolerance: 4.201e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.181e+07, tolerance: 4.466e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.169e+07, tolerance: 4.445e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.053e+07, tolerance: 4.437e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.047e+07, tolerance: 3.759e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.153e+07, tolerance: 4.201e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.165e+07, tolerance: 4.466e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.153e+07, tolerance: 4.445e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.038e+07, tolerance: 4.437e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.037e+07, tolerance: 3.759e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.139e+07, tolerance: 4.201e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.149e+07, tolerance: 4.466e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.138e+07, tolerance: 4.445e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.024e+07, tolerance: 4.437e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.027e+07, tolerance: 3.759e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.126e+07, tolerance: 4.201e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.135e+07, tolerance: 4.466e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.124e+07, tolerance: 4.445e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.012e+07, tolerance: 4.437e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.017e+07, tolerance: 3.759e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.114e+07, tolerance: 4.201e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.121e+07, tolerance: 4.466e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.110e+07, tolerance: 4.445e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.001e+07, tolerance: 4.437e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.007e+07, tolerance: 3.759e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.102e+07, tolerance: 4.201e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.108e+07, tolerance: 4.466e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.097e+07, tolerance: 4.445e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.902e+06, tolerance: 4.437e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.982e+06, tolerance: 3.759e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.090e+07, tolerance: 4.201e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.095e+07, tolerance: 4.466e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.084e+07, tolerance: 4.445e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.804e+06, tolerance: 4.437e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.894e+06, tolerance: 3.759e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.078e+07, tolerance: 4.201e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.084e+07, tolerance: 4.466e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.071e+07, tolerance: 4.445e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.713e+06, tolerance: 4.437e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.808e+06, tolerance: 3.759e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.067e+07, tolerance: 4.201e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.073e+07, tolerance: 4.466e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.060e+07, tolerance: 4.445e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.627e+06, tolerance: 4.437e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.727e+06, tolerance: 3.759e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.057e+07, tolerance: 4.201e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.062e+07, tolerance: 4.466e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.048e+07, tolerance: 4.445e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.548e+06, tolerance: 4.437e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.650e+06, tolerance: 3.759e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.047e+07, tolerance: 4.201e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.053e+07, tolerance: 4.466e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.038e+07, tolerance: 4.445e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.474e+06, tolerance: 4.437e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.579e+06, tolerance: 3.759e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.037e+07, tolerance: 4.201e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.045e+07, tolerance: 4.466e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.028e+07, tolerance: 4.445e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.406e+06, tolerance: 4.437e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.514e+06, tolerance: 3.759e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.028e+07, tolerance: 4.201e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.037e+07, tolerance: 4.466e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.019e+07, tolerance: 4.445e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.343e+06, tolerance: 4.437e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.454e+06, tolerance: 3.759e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.019e+07, tolerance: 4.201e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.030e+07, tolerance: 4.466e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.011e+07, tolerance: 4.445e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.286e+06, tolerance: 4.437e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.402e+06, tolerance: 3.759e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.011e+07, tolerance: 4.201e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.024e+07, tolerance: 4.466e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.003e+07, tolerance: 4.445e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.234e+06, tolerance: 4.437e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.355e+06, tolerance: 3.759e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.004e+07, tolerance: 4.201e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.019e+07, tolerance: 4.466e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.969e+06, tolerance: 4.445e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.187e+06, tolerance: 4.437e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.314e+06, tolerance: 3.759e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.966e+06, tolerance: 4.201e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.014e+07, tolerance: 4.466e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.914e+06, tolerance: 4.445e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.145e+06, tolerance: 4.437e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.279e+06, tolerance: 3.759e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.902e+06, tolerance: 4.201e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.010e+07, tolerance: 4.466e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.865e+06, tolerance: 4.445e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.108e+06, tolerance: 4.437e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.249e+06, tolerance: 3.759e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.843e+06, tolerance: 4.201e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.007e+07, tolerance: 4.466e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.824e+06, tolerance: 4.445e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.075e+06, tolerance: 4.437e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.223e+06, tolerance: 3.759e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.790e+06, tolerance: 4.201e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.004e+07, tolerance: 4.466e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.790e+06, tolerance: 4.445e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.047e+06, tolerance: 4.437e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.202e+06, tolerance: 3.759e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.743e+06, tolerance: 4.201e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.001e+07, tolerance: 4.466e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.761e+06, tolerance: 4.445e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.022e+06, tolerance: 4.437e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.184e+06, tolerance: 3.759e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.700e+06, tolerance: 4.201e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.990e+06, tolerance: 4.466e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.737e+06, tolerance: 4.445e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.000e+06, tolerance: 4.437e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.169e+06, tolerance: 3.759e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.663e+06, tolerance: 4.201e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.971e+06, tolerance: 4.466e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.717e+06, tolerance: 4.445e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 8.982e+06, tolerance: 4.437e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.156e+06, tolerance: 3.759e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.630e+06, tolerance: 4.201e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.956e+06, tolerance: 4.466e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.701e+06, tolerance: 4.445e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 8.966e+06, tolerance: 4.437e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.146e+06, tolerance: 3.759e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.601e+06, tolerance: 4.201e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.943e+06, tolerance: 4.466e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.688e+06, tolerance: 4.445e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 8.953e+06, tolerance: 4.437e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.138e+06, tolerance: 3.759e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.575e+06, tolerance: 4.201e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.933e+06, tolerance: 4.466e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.677e+06, tolerance: 4.445e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 8.942e+06, tolerance: 4.437e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.132e+06, tolerance: 3.759e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.554e+06, tolerance: 4.201e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.924e+06, tolerance: 4.466e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.668e+06, tolerance: 4.445e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 8.933e+06, tolerance: 4.437e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.126e+06, tolerance: 3.759e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.535e+06, tolerance: 4.201e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.917e+06, tolerance: 4.466e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.661e+06, tolerance: 4.445e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 8.926e+06, tolerance: 4.437e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.122e+06, tolerance: 3.759e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.520e+06, tolerance: 4.201e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.911e+06, tolerance: 4.466e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.655e+06, tolerance: 4.445e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 8.920e+06, tolerance: 4.437e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.119e+06, tolerance: 3.759e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.507e+06, tolerance: 4.201e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.906e+06, tolerance: 4.466e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.651e+06, tolerance: 4.445e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 8.915e+06, tolerance: 4.437e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.116e+06, tolerance: 3.759e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.496e+06, tolerance: 4.201e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.902e+06, tolerance: 4.466e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.647e+06, tolerance: 4.445e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 8.911e+06, tolerance: 4.437e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.114e+06, tolerance: 3.759e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.487e+06, tolerance: 4.201e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.899e+06, tolerance: 4.466e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.644e+06, tolerance: 4.445e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 8.907e+06, tolerance: 4.437e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.112e+06, tolerance: 3.759e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.480e+06, tolerance: 4.201e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.897e+06, tolerance: 4.466e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.642e+06, tolerance: 4.445e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 8.905e+06, tolerance: 4.437e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.111e+06, tolerance: 3.759e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.474e+06, tolerance: 4.201e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.895e+06, tolerance: 4.466e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.640e+06, tolerance: 4.445e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 8.903e+06, tolerance: 4.437e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.110e+06, tolerance: 3.759e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.469e+06, tolerance: 4.201e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.893e+06, tolerance: 4.466e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.639e+06, tolerance: 4.445e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 8.901e+06, tolerance: 4.437e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.109e+06, tolerance: 3.759e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.465e+06, tolerance: 4.201e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.892e+06, tolerance: 4.466e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.638e+06, tolerance: 4.445e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 8.900e+06, tolerance: 4.437e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.108e+06, tolerance: 3.759e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.462e+06, tolerance: 4.201e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.891e+06, tolerance: 4.466e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.637e+06, tolerance: 4.445e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 8.899e+06, tolerance: 4.437e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.108e+06, tolerance: 3.759e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.460e+06, tolerance: 4.201e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.890e+06, tolerance: 4.466e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.636e+06, tolerance: 4.445e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 8.898e+06, tolerance: 4.437e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.107e+06, tolerance: 3.759e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.458e+06, tolerance: 4.201e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.890e+06, tolerance: 4.466e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.636e+06, tolerance: 4.445e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 8.897e+06, tolerance: 4.437e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.107e+06, tolerance: 3.759e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.456e+06, tolerance: 4.201e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.889e+06, tolerance: 4.466e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.635e+06, tolerance: 4.445e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 8.897e+06, tolerance: 4.437e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.271e+07, tolerance: 5.332e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n\n\nGridSearchCV(cv=KFold(n_splits=5, random_state=0, shuffle=True),\n             estimator=Pipeline(steps=[('scaler', StandardScaler()),\n                                       ('ridge',\n                                        ElasticNet(alpha=10000000000.0,\n                                                   l1_ratio=0))]),\n             param_grid={'ridge__alpha': array([2.22093791e+05, 1.76005531e+05, 1.39481373e+05, 1.10536603e+05,\n       8.75983676e+04, 6.94202082e+04, 5.50143278e+04, 4.35979140e+04,\n       3.45506012e+04, 2.73807606...\n       4.67486141e-03, 3.70474772e-03, 2.93594921e-03, 2.32668954e-03,\n       1.84386167e-03, 1.46122884e-03, 1.15799887e-03, 9.17694298e-04,\n       7.27257037e-04, 5.76338765e-04, 4.56738615e-04, 3.61957541e-04,\n       2.86845161e-04, 2.27319885e-04, 1.80147121e-04, 1.42763513e-04,\n       1.13137642e-04, 8.96596467e-05, 7.10537367e-05, 5.63088712e-05,\n       4.46238174e-05, 3.53636122e-05, 2.80250579e-05, 2.22093791e-05])},\n             scoring='neg_mean_squared_error')In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.  GridSearchCV?Documentation for GridSearchCViFittedGridSearchCV(cv=KFold(n_splits=5, random_state=0, shuffle=True),\n             estimator=Pipeline(steps=[('scaler', StandardScaler()),\n                                       ('ridge',\n                                        ElasticNet(alpha=10000000000.0,\n                                                   l1_ratio=0))]),\n             param_grid={'ridge__alpha': array([2.22093791e+05, 1.76005531e+05, 1.39481373e+05, 1.10536603e+05,\n       8.75983676e+04, 6.94202082e+04, 5.50143278e+04, 4.35979140e+04,\n       3.45506012e+04, 2.73807606...\n       4.67486141e-03, 3.70474772e-03, 2.93594921e-03, 2.32668954e-03,\n       1.84386167e-03, 1.46122884e-03, 1.15799887e-03, 9.17694298e-04,\n       7.27257037e-04, 5.76338765e-04, 4.56738615e-04, 3.61957541e-04,\n       2.86845161e-04, 2.27319885e-04, 1.80147121e-04, 1.42763513e-04,\n       1.13137642e-04, 8.96596467e-05, 7.10537367e-05, 5.63088712e-05,\n       4.46238174e-05, 3.53636122e-05, 2.80250579e-05, 2.22093791e-05])},\n             scoring='neg_mean_squared_error') best_estimator_: PipelinePipeline(steps=[('scaler', StandardScaler()),\n                ('ridge', ElasticNet(alpha=0.011852477631442489, l1_ratio=0))])  StandardScaler?Documentation for StandardScalerStandardScaler()  ElasticNet?Documentation for ElasticNetElasticNet(alpha=0.011852477631442489, l1_ratio=0) \n\n\n0.011852477631442489\n\n\nPipeline(steps=[('scaler', StandardScaler()),\n                ('ridge', ElasticNet(alpha=0.011852477631442489, l1_ratio=0))])In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.  Pipeline?Documentation for PipelineiFittedPipeline(steps=[('scaler', StandardScaler()),\n                ('ridge', ElasticNet(alpha=0.011852477631442489, l1_ratio=0))])  StandardScaler?Documentation for StandardScalerStandardScaler()  ElasticNet?Documentation for ElasticNetElasticNet(alpha=0.011852477631442489, l1_ratio=0) \n\n\nRecall we set up the kfold object for 5-fold cross-validation on page~. We now plot the cross-validated MSE as a function of -\\log(\\lambda), which has shrinkage decreasing from left to right.\n\nridge_fig, ax = subplots(figsize=(8,8))\nax.errorbar(-np.log(lambdas),\n            -grid.cv_results_['mean_test_score'],\n            yerr=grid.cv_results_['std_test_score'] / np.sqrt(K))\nax.set_ylim([50000,250000])\nax.set_xlabel('$-\\log(\\lambda)$', fontsize=20)\nax.set_ylabel('Cross-validated MSE', fontsize=20);\n\n\n\n\n\n\n\n\nOne can cross-validate different metrics to choose a parameter. The default metric for skl.ElasticNet() is test R^2. Let’s compare R^2 to MSE for cross-validation here.\n\ngrid_r2 = skm.GridSearchCV(pipe, \n                           param_grid,\n                           cv=kfold)\ngrid_r2.fit(X, Y)\n\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.880e+07, tolerance: 3.759e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.101e+07, tolerance: 4.201e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.233e+07, tolerance: 4.466e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.223e+07, tolerance: 4.445e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.218e+07, tolerance: 4.437e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.880e+07, tolerance: 3.759e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.101e+07, tolerance: 4.201e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.233e+07, tolerance: 4.466e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.223e+07, tolerance: 4.445e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.218e+07, tolerance: 4.437e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.880e+07, tolerance: 3.759e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.101e+07, tolerance: 4.201e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.233e+07, tolerance: 4.466e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.223e+07, tolerance: 4.445e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.218e+07, tolerance: 4.437e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.880e+07, tolerance: 3.759e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.101e+07, tolerance: 4.201e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.233e+07, tolerance: 4.466e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.222e+07, tolerance: 4.445e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.218e+07, tolerance: 4.437e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.879e+07, tolerance: 3.759e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.101e+07, tolerance: 4.201e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.233e+07, tolerance: 4.466e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.222e+07, tolerance: 4.445e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.218e+07, tolerance: 4.437e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.879e+07, tolerance: 3.759e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.101e+07, tolerance: 4.201e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.233e+07, tolerance: 4.466e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.222e+07, tolerance: 4.445e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.218e+07, tolerance: 4.437e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.879e+07, tolerance: 3.759e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.100e+07, tolerance: 4.201e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.233e+07, tolerance: 4.466e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.222e+07, tolerance: 4.445e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.218e+07, tolerance: 4.437e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.879e+07, tolerance: 3.759e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.100e+07, tolerance: 4.201e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.233e+07, tolerance: 4.466e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.222e+07, tolerance: 4.445e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.218e+07, tolerance: 4.437e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.879e+07, tolerance: 3.759e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.100e+07, tolerance: 4.201e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.233e+07, tolerance: 4.466e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.222e+07, tolerance: 4.445e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.218e+07, tolerance: 4.437e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.879e+07, tolerance: 3.759e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.100e+07, tolerance: 4.201e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.233e+07, tolerance: 4.466e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.222e+07, tolerance: 4.445e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.218e+07, tolerance: 4.437e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.879e+07, tolerance: 3.759e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.100e+07, tolerance: 4.201e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.233e+07, tolerance: 4.466e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.222e+07, tolerance: 4.445e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.218e+07, tolerance: 4.437e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.879e+07, tolerance: 3.759e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.100e+07, tolerance: 4.201e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.233e+07, tolerance: 4.466e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.222e+07, tolerance: 4.445e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.218e+07, tolerance: 4.437e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.879e+07, tolerance: 3.759e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.100e+07, tolerance: 4.201e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.233e+07, tolerance: 4.466e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.222e+07, tolerance: 4.445e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.218e+07, tolerance: 4.437e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.879e+07, tolerance: 3.759e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.100e+07, tolerance: 4.201e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.233e+07, tolerance: 4.466e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.222e+07, tolerance: 4.445e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.218e+07, tolerance: 4.437e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.879e+07, tolerance: 3.759e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.100e+07, tolerance: 4.201e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.232e+07, tolerance: 4.466e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.222e+07, tolerance: 4.445e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.217e+07, tolerance: 4.437e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.879e+07, tolerance: 3.759e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.100e+07, tolerance: 4.201e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.232e+07, tolerance: 4.466e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.222e+07, tolerance: 4.445e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.217e+07, tolerance: 4.437e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.879e+07, tolerance: 3.759e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.099e+07, tolerance: 4.201e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.232e+07, tolerance: 4.466e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.221e+07, tolerance: 4.445e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.217e+07, tolerance: 4.437e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.878e+07, tolerance: 3.759e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.099e+07, tolerance: 4.201e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.232e+07, tolerance: 4.466e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.221e+07, tolerance: 4.445e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.216e+07, tolerance: 4.437e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.878e+07, tolerance: 3.759e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.099e+07, tolerance: 4.201e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.231e+07, tolerance: 4.466e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.221e+07, tolerance: 4.445e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.216e+07, tolerance: 4.437e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.878e+07, tolerance: 3.759e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.098e+07, tolerance: 4.201e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.231e+07, tolerance: 4.466e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.220e+07, tolerance: 4.445e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.215e+07, tolerance: 4.437e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.877e+07, tolerance: 3.759e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.098e+07, tolerance: 4.201e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.230e+07, tolerance: 4.466e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.219e+07, tolerance: 4.445e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.215e+07, tolerance: 4.437e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.876e+07, tolerance: 3.759e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.097e+07, tolerance: 4.201e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.229e+07, tolerance: 4.466e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.219e+07, tolerance: 4.445e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.214e+07, tolerance: 4.437e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.876e+07, tolerance: 3.759e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.096e+07, tolerance: 4.201e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.228e+07, tolerance: 4.466e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.218e+07, tolerance: 4.445e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.213e+07, tolerance: 4.437e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.875e+07, tolerance: 3.759e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.095e+07, tolerance: 4.201e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.227e+07, tolerance: 4.466e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.216e+07, tolerance: 4.445e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.211e+07, tolerance: 4.437e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.873e+07, tolerance: 3.759e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.093e+07, tolerance: 4.201e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.225e+07, tolerance: 4.466e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.215e+07, tolerance: 4.445e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.209e+07, tolerance: 4.437e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.872e+07, tolerance: 3.759e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.091e+07, tolerance: 4.201e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.223e+07, tolerance: 4.466e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.212e+07, tolerance: 4.445e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.207e+07, tolerance: 4.437e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.870e+07, tolerance: 3.759e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.089e+07, tolerance: 4.201e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.220e+07, tolerance: 4.466e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.210e+07, tolerance: 4.445e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.204e+07, tolerance: 4.437e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.867e+07, tolerance: 3.759e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.086e+07, tolerance: 4.201e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.217e+07, tolerance: 4.466e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.207e+07, tolerance: 4.445e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.200e+07, tolerance: 4.437e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.864e+07, tolerance: 3.759e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.082e+07, tolerance: 4.201e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.213e+07, tolerance: 4.466e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.203e+07, tolerance: 4.445e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.196e+07, tolerance: 4.437e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.860e+07, tolerance: 3.759e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.077e+07, tolerance: 4.201e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.208e+07, tolerance: 4.466e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.197e+07, tolerance: 4.445e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.190e+07, tolerance: 4.437e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.855e+07, tolerance: 3.759e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.071e+07, tolerance: 4.201e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.201e+07, tolerance: 4.466e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.191e+07, tolerance: 4.445e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.183e+07, tolerance: 4.437e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.849e+07, tolerance: 3.759e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.063e+07, tolerance: 4.201e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.194e+07, tolerance: 4.466e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.183e+07, tolerance: 4.445e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.174e+07, tolerance: 4.437e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.841e+07, tolerance: 3.759e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.054e+07, tolerance: 4.201e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.184e+07, tolerance: 4.466e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.173e+07, tolerance: 4.445e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.163e+07, tolerance: 4.437e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.832e+07, tolerance: 3.759e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.043e+07, tolerance: 4.201e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.172e+07, tolerance: 4.466e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.161e+07, tolerance: 4.445e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.149e+07, tolerance: 4.437e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.820e+07, tolerance: 3.759e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.029e+07, tolerance: 4.201e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.157e+07, tolerance: 4.466e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.146e+07, tolerance: 4.445e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.132e+07, tolerance: 4.437e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.806e+07, tolerance: 3.759e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.012e+07, tolerance: 4.201e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.139e+07, tolerance: 4.466e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.129e+07, tolerance: 4.445e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.112e+07, tolerance: 4.437e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.789e+07, tolerance: 3.759e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.992e+07, tolerance: 4.201e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.117e+07, tolerance: 4.466e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.107e+07, tolerance: 4.445e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.087e+07, tolerance: 4.437e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.769e+07, tolerance: 3.759e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.968e+07, tolerance: 4.201e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.091e+07, tolerance: 4.466e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.081e+07, tolerance: 4.445e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.058e+07, tolerance: 4.437e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.745e+07, tolerance: 3.759e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.939e+07, tolerance: 4.201e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.060e+07, tolerance: 4.466e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.051e+07, tolerance: 4.445e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.024e+07, tolerance: 4.437e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.718e+07, tolerance: 3.759e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.907e+07, tolerance: 4.201e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.024e+07, tolerance: 4.466e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.015e+07, tolerance: 4.445e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.984e+07, tolerance: 4.437e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.686e+07, tolerance: 3.759e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.869e+07, tolerance: 4.201e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.984e+07, tolerance: 4.466e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.975e+07, tolerance: 4.445e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.939e+07, tolerance: 4.437e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.650e+07, tolerance: 3.759e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.828e+07, tolerance: 4.201e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.938e+07, tolerance: 4.466e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.929e+07, tolerance: 4.445e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.888e+07, tolerance: 4.437e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.611e+07, tolerance: 3.759e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.783e+07, tolerance: 4.201e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.888e+07, tolerance: 4.466e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.880e+07, tolerance: 4.445e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.832e+07, tolerance: 4.437e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.568e+07, tolerance: 3.759e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.734e+07, tolerance: 4.201e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.834e+07, tolerance: 4.466e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.826e+07, tolerance: 4.445e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.772e+07, tolerance: 4.437e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.524e+07, tolerance: 3.759e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.684e+07, tolerance: 4.201e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.778e+07, tolerance: 4.466e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.770e+07, tolerance: 4.445e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.710e+07, tolerance: 4.437e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.478e+07, tolerance: 3.759e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.633e+07, tolerance: 4.201e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.721e+07, tolerance: 4.466e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.713e+07, tolerance: 4.445e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.646e+07, tolerance: 4.437e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.432e+07, tolerance: 3.759e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.582e+07, tolerance: 4.201e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.663e+07, tolerance: 4.466e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.655e+07, tolerance: 4.445e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.582e+07, tolerance: 4.437e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.388e+07, tolerance: 3.759e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.533e+07, tolerance: 4.201e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.607e+07, tolerance: 4.466e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.599e+07, tolerance: 4.445e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.520e+07, tolerance: 4.437e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.345e+07, tolerance: 3.759e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.486e+07, tolerance: 4.201e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.554e+07, tolerance: 4.466e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.545e+07, tolerance: 4.445e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.460e+07, tolerance: 4.437e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.305e+07, tolerance: 3.759e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.443e+07, tolerance: 4.201e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.504e+07, tolerance: 4.466e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.494e+07, tolerance: 4.445e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.404e+07, tolerance: 4.437e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.268e+07, tolerance: 3.759e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.403e+07, tolerance: 4.201e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.457e+07, tolerance: 4.466e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.447e+07, tolerance: 4.445e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.352e+07, tolerance: 4.437e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.234e+07, tolerance: 3.759e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.366e+07, tolerance: 4.201e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.415e+07, tolerance: 4.466e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.405e+07, tolerance: 4.445e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.305e+07, tolerance: 4.437e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.204e+07, tolerance: 3.759e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.333e+07, tolerance: 4.201e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.377e+07, tolerance: 4.466e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.366e+07, tolerance: 4.445e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.262e+07, tolerance: 4.437e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.177e+07, tolerance: 3.759e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.304e+07, tolerance: 4.201e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.343e+07, tolerance: 4.466e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.331e+07, tolerance: 4.445e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.224e+07, tolerance: 4.437e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.154e+07, tolerance: 3.759e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.278e+07, tolerance: 4.201e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.312e+07, tolerance: 4.466e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.300e+07, tolerance: 4.445e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.190e+07, tolerance: 4.437e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.133e+07, tolerance: 3.759e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.255e+07, tolerance: 4.201e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.284e+07, tolerance: 4.466e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.272e+07, tolerance: 4.445e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.159e+07, tolerance: 4.437e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.114e+07, tolerance: 3.759e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.234e+07, tolerance: 4.201e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.260e+07, tolerance: 4.466e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.247e+07, tolerance: 4.445e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.132e+07, tolerance: 4.437e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.098e+07, tolerance: 3.759e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.215e+07, tolerance: 4.201e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.237e+07, tolerance: 4.466e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.225e+07, tolerance: 4.445e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.109e+07, tolerance: 4.437e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.083e+07, tolerance: 3.759e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.198e+07, tolerance: 4.201e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.217e+07, tolerance: 4.466e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.204e+07, tolerance: 4.445e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.088e+07, tolerance: 4.437e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.070e+07, tolerance: 3.759e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.182e+07, tolerance: 4.201e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.198e+07, tolerance: 4.466e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.186e+07, tolerance: 4.445e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.069e+07, tolerance: 4.437e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.058e+07, tolerance: 3.759e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.167e+07, tolerance: 4.201e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.181e+07, tolerance: 4.466e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.169e+07, tolerance: 4.445e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.053e+07, tolerance: 4.437e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.047e+07, tolerance: 3.759e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.153e+07, tolerance: 4.201e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.165e+07, tolerance: 4.466e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.153e+07, tolerance: 4.445e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.038e+07, tolerance: 4.437e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.037e+07, tolerance: 3.759e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.139e+07, tolerance: 4.201e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.149e+07, tolerance: 4.466e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.138e+07, tolerance: 4.445e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.024e+07, tolerance: 4.437e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.027e+07, tolerance: 3.759e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.126e+07, tolerance: 4.201e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.135e+07, tolerance: 4.466e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.124e+07, tolerance: 4.445e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.012e+07, tolerance: 4.437e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.017e+07, tolerance: 3.759e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.114e+07, tolerance: 4.201e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.121e+07, tolerance: 4.466e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.110e+07, tolerance: 4.445e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.001e+07, tolerance: 4.437e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.007e+07, tolerance: 3.759e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.102e+07, tolerance: 4.201e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.108e+07, tolerance: 4.466e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.097e+07, tolerance: 4.445e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.902e+06, tolerance: 4.437e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.982e+06, tolerance: 3.759e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.090e+07, tolerance: 4.201e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.095e+07, tolerance: 4.466e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.084e+07, tolerance: 4.445e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.804e+06, tolerance: 4.437e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.894e+06, tolerance: 3.759e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.078e+07, tolerance: 4.201e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.084e+07, tolerance: 4.466e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.071e+07, tolerance: 4.445e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.713e+06, tolerance: 4.437e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.808e+06, tolerance: 3.759e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.067e+07, tolerance: 4.201e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.073e+07, tolerance: 4.466e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.060e+07, tolerance: 4.445e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.627e+06, tolerance: 4.437e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.727e+06, tolerance: 3.759e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.057e+07, tolerance: 4.201e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.062e+07, tolerance: 4.466e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.048e+07, tolerance: 4.445e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.548e+06, tolerance: 4.437e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.650e+06, tolerance: 3.759e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.047e+07, tolerance: 4.201e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.053e+07, tolerance: 4.466e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.038e+07, tolerance: 4.445e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.474e+06, tolerance: 4.437e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.579e+06, tolerance: 3.759e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.037e+07, tolerance: 4.201e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.045e+07, tolerance: 4.466e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.028e+07, tolerance: 4.445e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.406e+06, tolerance: 4.437e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.514e+06, tolerance: 3.759e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.028e+07, tolerance: 4.201e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.037e+07, tolerance: 4.466e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.019e+07, tolerance: 4.445e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.343e+06, tolerance: 4.437e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.454e+06, tolerance: 3.759e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.019e+07, tolerance: 4.201e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.030e+07, tolerance: 4.466e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.011e+07, tolerance: 4.445e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.286e+06, tolerance: 4.437e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.402e+06, tolerance: 3.759e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.011e+07, tolerance: 4.201e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.024e+07, tolerance: 4.466e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.003e+07, tolerance: 4.445e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.234e+06, tolerance: 4.437e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.355e+06, tolerance: 3.759e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.004e+07, tolerance: 4.201e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.019e+07, tolerance: 4.466e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.969e+06, tolerance: 4.445e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.187e+06, tolerance: 4.437e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.314e+06, tolerance: 3.759e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.966e+06, tolerance: 4.201e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.014e+07, tolerance: 4.466e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.914e+06, tolerance: 4.445e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.145e+06, tolerance: 4.437e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.279e+06, tolerance: 3.759e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.902e+06, tolerance: 4.201e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.010e+07, tolerance: 4.466e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.865e+06, tolerance: 4.445e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.108e+06, tolerance: 4.437e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.249e+06, tolerance: 3.759e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.843e+06, tolerance: 4.201e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.007e+07, tolerance: 4.466e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.824e+06, tolerance: 4.445e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.075e+06, tolerance: 4.437e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.223e+06, tolerance: 3.759e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.790e+06, tolerance: 4.201e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.004e+07, tolerance: 4.466e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.790e+06, tolerance: 4.445e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.047e+06, tolerance: 4.437e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.202e+06, tolerance: 3.759e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.743e+06, tolerance: 4.201e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.001e+07, tolerance: 4.466e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.761e+06, tolerance: 4.445e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.022e+06, tolerance: 4.437e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.184e+06, tolerance: 3.759e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.700e+06, tolerance: 4.201e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.990e+06, tolerance: 4.466e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.737e+06, tolerance: 4.445e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.000e+06, tolerance: 4.437e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.169e+06, tolerance: 3.759e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.663e+06, tolerance: 4.201e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.971e+06, tolerance: 4.466e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.717e+06, tolerance: 4.445e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 8.982e+06, tolerance: 4.437e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.156e+06, tolerance: 3.759e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.630e+06, tolerance: 4.201e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.956e+06, tolerance: 4.466e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.701e+06, tolerance: 4.445e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 8.966e+06, tolerance: 4.437e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.146e+06, tolerance: 3.759e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.601e+06, tolerance: 4.201e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.943e+06, tolerance: 4.466e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.688e+06, tolerance: 4.445e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 8.953e+06, tolerance: 4.437e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.138e+06, tolerance: 3.759e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.575e+06, tolerance: 4.201e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.933e+06, tolerance: 4.466e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.677e+06, tolerance: 4.445e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 8.942e+06, tolerance: 4.437e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.132e+06, tolerance: 3.759e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.554e+06, tolerance: 4.201e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.924e+06, tolerance: 4.466e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.668e+06, tolerance: 4.445e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 8.933e+06, tolerance: 4.437e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.126e+06, tolerance: 3.759e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.535e+06, tolerance: 4.201e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.917e+06, tolerance: 4.466e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.661e+06, tolerance: 4.445e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 8.926e+06, tolerance: 4.437e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.122e+06, tolerance: 3.759e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.520e+06, tolerance: 4.201e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.911e+06, tolerance: 4.466e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.655e+06, tolerance: 4.445e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 8.920e+06, tolerance: 4.437e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.119e+06, tolerance: 3.759e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.507e+06, tolerance: 4.201e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.906e+06, tolerance: 4.466e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.651e+06, tolerance: 4.445e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 8.915e+06, tolerance: 4.437e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.116e+06, tolerance: 3.759e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.496e+06, tolerance: 4.201e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.902e+06, tolerance: 4.466e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.647e+06, tolerance: 4.445e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 8.911e+06, tolerance: 4.437e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.114e+06, tolerance: 3.759e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.487e+06, tolerance: 4.201e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.899e+06, tolerance: 4.466e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.644e+06, tolerance: 4.445e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 8.907e+06, tolerance: 4.437e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.112e+06, tolerance: 3.759e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.480e+06, tolerance: 4.201e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.897e+06, tolerance: 4.466e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.642e+06, tolerance: 4.445e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 8.905e+06, tolerance: 4.437e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.111e+06, tolerance: 3.759e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.474e+06, tolerance: 4.201e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.895e+06, tolerance: 4.466e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.640e+06, tolerance: 4.445e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 8.903e+06, tolerance: 4.437e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.110e+06, tolerance: 3.759e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.469e+06, tolerance: 4.201e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.893e+06, tolerance: 4.466e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.639e+06, tolerance: 4.445e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 8.901e+06, tolerance: 4.437e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.109e+06, tolerance: 3.759e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.465e+06, tolerance: 4.201e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.892e+06, tolerance: 4.466e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.638e+06, tolerance: 4.445e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 8.900e+06, tolerance: 4.437e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.108e+06, tolerance: 3.759e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.462e+06, tolerance: 4.201e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.891e+06, tolerance: 4.466e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.637e+06, tolerance: 4.445e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 8.899e+06, tolerance: 4.437e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.108e+06, tolerance: 3.759e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.460e+06, tolerance: 4.201e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.890e+06, tolerance: 4.466e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.636e+06, tolerance: 4.445e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 8.898e+06, tolerance: 4.437e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.107e+06, tolerance: 3.759e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.458e+06, tolerance: 4.201e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.890e+06, tolerance: 4.466e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.636e+06, tolerance: 4.445e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 8.897e+06, tolerance: 4.437e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.107e+06, tolerance: 3.759e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.456e+06, tolerance: 4.201e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.889e+06, tolerance: 4.466e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.635e+06, tolerance: 4.445e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 8.897e+06, tolerance: 4.437e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.271e+07, tolerance: 5.332e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n\n\nGridSearchCV(cv=KFold(n_splits=5, random_state=0, shuffle=True),\n             estimator=Pipeline(steps=[('scaler', StandardScaler()),\n                                       ('ridge',\n                                        ElasticNet(alpha=10000000000.0,\n                                                   l1_ratio=0))]),\n             param_grid={'ridge__alpha': array([2.22093791e+05, 1.76005531e+05, 1.39481373e+05, 1.10536603e+05,\n       8.75983676e+04, 6.94202082e+04, 5.50143278e+04, 4.35979140e+04,\n       3.45506012e+04, 2.73807606...\n       4.67486141e-03, 3.70474772e-03, 2.93594921e-03, 2.32668954e-03,\n       1.84386167e-03, 1.46122884e-03, 1.15799887e-03, 9.17694298e-04,\n       7.27257037e-04, 5.76338765e-04, 4.56738615e-04, 3.61957541e-04,\n       2.86845161e-04, 2.27319885e-04, 1.80147121e-04, 1.42763513e-04,\n       1.13137642e-04, 8.96596467e-05, 7.10537367e-05, 5.63088712e-05,\n       4.46238174e-05, 3.53636122e-05, 2.80250579e-05, 2.22093791e-05])})In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.  GridSearchCV?Documentation for GridSearchCViFittedGridSearchCV(cv=KFold(n_splits=5, random_state=0, shuffle=True),\n             estimator=Pipeline(steps=[('scaler', StandardScaler()),\n                                       ('ridge',\n                                        ElasticNet(alpha=10000000000.0,\n                                                   l1_ratio=0))]),\n             param_grid={'ridge__alpha': array([2.22093791e+05, 1.76005531e+05, 1.39481373e+05, 1.10536603e+05,\n       8.75983676e+04, 6.94202082e+04, 5.50143278e+04, 4.35979140e+04,\n       3.45506012e+04, 2.73807606...\n       4.67486141e-03, 3.70474772e-03, 2.93594921e-03, 2.32668954e-03,\n       1.84386167e-03, 1.46122884e-03, 1.15799887e-03, 9.17694298e-04,\n       7.27257037e-04, 5.76338765e-04, 4.56738615e-04, 3.61957541e-04,\n       2.86845161e-04, 2.27319885e-04, 1.80147121e-04, 1.42763513e-04,\n       1.13137642e-04, 8.96596467e-05, 7.10537367e-05, 5.63088712e-05,\n       4.46238174e-05, 3.53636122e-05, 2.80250579e-05, 2.22093791e-05])}) best_estimator_: PipelinePipeline(steps=[('scaler', StandardScaler()),\n                ('ridge', ElasticNet(alpha=0.011852477631442489, l1_ratio=0))])  StandardScaler?Documentation for StandardScalerStandardScaler()  ElasticNet?Documentation for ElasticNetElasticNet(alpha=0.011852477631442489, l1_ratio=0) \n\n\nFinally, let’s plot the results for cross-validated R^2.\n\nr2_fig, ax = subplots(figsize=(8,8))\nax.errorbar(-np.log(lambdas),\n            grid_r2.cv_results_['mean_test_score'],\n            yerr=grid_r2.cv_results_['std_test_score'] / np.sqrt(K))\nax.set_xlabel('$-\\log(\\lambda)$', fontsize=20)\nax.set_ylabel('Cross-validated $R^2$', fontsize=20);\n\n\n\n\n\n\n\n\n\n\n\nThe ridge, lasso, and elastic net can be efficiently fit along a sequence of \\lambda values, creating what is known as a solution path or regularization path. Hence there is specialized code to fit such paths, and to choose a suitable value of \\lambda using cross-validation. Even with identical splits the results will not agree exactly with our grid above because the standardization of each feature in grid is carried out on each fold, while in pipeCV below it is carried out only once. Nevertheless, the results are similar as the normalization is relatively stable across folds.\n\nridgeCV = skl.ElasticNetCV(alphas=lambdas, \n                           l1_ratio=0,\n                           cv=kfold)\npipeCV = Pipeline(steps=[('scaler', scaler),\n                         ('ridge', ridgeCV)])\npipeCV.fit(X, Y)\n\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 18795326.355502337, tolerance: 3759.1091668691934\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 18795268.88551146, tolerance: 3759.1091668691934\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 18795196.36782501, tolerance: 3759.1091668691934\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 18795104.862821117, tolerance: 3759.1091668691934\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 18794989.3996877, tolerance: 3759.1091668691934\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 18794843.70665096, tolerance: 3759.1091668691934\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 18794659.870711982, tolerance: 3759.1091668691934\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 18794427.90852136, tolerance: 3759.1091668691934\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 18794135.225263473, tolerance: 3759.1091668691934\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 18793765.93244957, tolerance: 3759.1091668691934\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 18793299.988030795, tolerance: 3759.1091668691934\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 18792712.112872537, tolerance: 3759.1091668691934\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 18791970.42593209, tolerance: 3759.1091668691934\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 18791034.725916974, tolerance: 3759.1091668691934\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 18789854.329135813, tolerance: 3759.1091668691934\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 18788365.35095647, tolerance: 3759.1091668691934\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 18786487.290938057, tolerance: 3759.1091668691934\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 18784118.748442676, tolerance: 3759.1091668691934\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 18781132.055533994, tolerance: 3759.1091668691934\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 18777366.566605028, tolerance: 3759.1091668691934\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 18772620.289297037, tolerance: 3759.1091668691934\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 18766639.479676697, tolerance: 3759.1091668691934\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 18759105.7588605, tolerance: 3759.1091668691934\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 18749620.24380315, tolerance: 3759.1091668691934\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 18737684.132153217, tolerance: 3759.1091668691934\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 18722675.15798276, tolerance: 3759.1091668691934\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 18703819.371684063, tolerance: 3759.1091668691934\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 18680157.840679295, tolerance: 3759.1091668691934\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 18650508.189617787, tolerance: 3759.1091668691934\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 18613421.50362849, tolerance: 3759.1091668691934\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 18567136.148713253, tolerance: 3759.1091668691934\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 18509531.699850056, tolerance: 3759.1091668691934\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 18438088.60860051, tolerance: 3759.1091668691934\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 18349862.649110068, tolerance: 3759.1091668691934\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 18241487.55721697, tolerance: 3759.1091668691934\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 18109224.250838783, tolerance: 3759.1091668691934\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 17949079.52302881, tolerance: 3759.1091668691934\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 17757018.994714487, tolerance: 3759.1091668691934\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 17529294.981908157, tolerance: 3759.1091668691934\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 17262895.45770098, tolerance: 3759.1091668691934\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 16956091.88298349, tolerance: 3759.1091668691934\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 16609021.736273045, tolerance: 3759.1091668691934\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 16224194.650997942, tolerance: 3759.1091668691934\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 15806778.14236389, tolerance: 3759.1091668691934\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 15364525.127389485, tolerance: 3759.1091668691934\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 14907268.751873787, tolerance: 3759.1091668691934\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 14446023.624531085, tolerance: 3759.1091668691934\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 13991857.160644894, tolerance: 3759.1091668691934\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 13554773.727504019, tolerance: 3759.1091668691934\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 13142847.182203239, tolerance: 3759.1091668691934\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 12761747.456957735, tolerance: 3759.1091668691934\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 12414679.232309299, tolerance: 3759.1091668691934\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 12102642.724649921, tolerance: 3759.1091668691934\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 11824874.692517482, tolerance: 3759.1091668691934\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 11579334.506306274, tolerance: 3759.1091668691934\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 11363143.416383037, tolerance: 3759.1091668691934\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 11172936.696242262, tolerance: 3759.1091668691934\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 11005127.926431658, tolerance: 3759.1091668691934\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 10856105.032984456, tolerance: 3759.1091668691934\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 10722381.625233077, tolerance: 3759.1091668691934\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 10600721.7355705, tolerance: 3759.1091668691934\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 10488247.552619586, tolerance: 3759.1091668691934\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 10382531.681050971, tolerance: 3759.1091668691934\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 10281669.161078598, tolerance: 3759.1091668691934\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 10184320.545404745, tolerance: 3759.1091668691934\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 10089716.550599052, tolerance: 3759.1091668691934\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 9997617.850835886, tolerance: 3759.1091668691934\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 9908230.155360883, tolerance: 3759.1091668691934\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 9822083.085401058, tolerance: 3759.1091668691934\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 9739888.930170624, tolerance: 3759.1091668691934\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 9662401.66618468, tolerance: 3759.1091668691934\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 9590296.226307368, tolerance: 3759.1091668691934\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 9524082.85469911, tolerance: 3759.1091668691934\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 9464062.902306687, tolerance: 3759.1091668691934\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 9410323.196208721, tolerance: 3759.1091668691934\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 9362759.024991708, tolerance: 3759.1091668691934\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 9321112.75311744, tolerance: 3759.1091668691934\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 9285016.290065197, tolerance: 3759.1091668691934\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 9254029.627395982, tolerance: 3759.1091668691934\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 9227672.214768155, tolerance: 3759.1091668691934\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 9205447.274608817, tolerance: 3759.1091668691934\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 9186860.57809821, tolerance: 3759.1091668691934\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 9171435.130133387, tolerance: 3759.1091668691934\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 9158722.527650401, tolerance: 3759.1091668691934\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 9148311.191396393, tolerance: 3759.1091668691934\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 9139831.50202177, tolerance: 3759.1091668691934\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 9132958.012055092, tolerance: 3759.1091668691934\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 9127409.14540844, tolerance: 3759.1091668691934\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 9122944.972944397, tolerance: 3759.1091668691934\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 9119363.705526387, tolerance: 3759.1091668691934\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 9116497.490587601, tolerance: 3759.1091668691934\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 9114207.980834305, tolerance: 3759.1091668691934\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 9112382.0085927, tolerance: 3759.1091668691934\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 9110927.5756482, tolerance: 3759.1091668691934\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 9109770.26982992, tolerance: 3759.1091668691934\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 9108850.148759821, tolerance: 3759.1091668691934\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 9108119.084911948, tolerance: 3759.1091668691934\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 9107538.53896914, tolerance: 3759.1091668691934\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 9107077.714961959, tolerance: 3759.1091668691934\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 9106712.046135835, tolerance: 3759.1091668691934\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 21005651.632865302, tolerance: 4201.186103419478\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 21005578.608102243, tolerance: 4201.186103419478\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 21005486.463074774, tolerance: 4201.186103419478\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 21005370.192059726, tolerance: 4201.186103419478\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 21005223.47917251, tolerance: 4201.186103419478\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 21005038.355660334, tolerance: 4201.186103419478\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 21004804.76767336, tolerance: 4201.186103419478\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 21004510.03120046, tolerance: 4201.186103419478\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 21004138.144828446, tolerance: 4201.186103419478\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 21003668.923421204, tolerance: 4201.186103419478\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 21003076.906345215, tolerance: 4201.186103419478\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 21002329.98203154, tolerance: 4201.186103419478\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 21001387.655909717, tolerance: 4201.186103419478\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 21000198.8704182, tolerance: 4201.186103419478\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 20998699.26312138, tolerance: 4201.186103419478\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 20996807.72107362, tolerance: 4201.186103419478\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 20994422.05552329, tolerance: 4201.186103419478\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 20991413.57989597, tolerance: 4201.186103419478\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 20987620.324921425, tolerance: 4201.186103419478\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 20982838.567338496, tolerance: 4201.186103419478\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 20976812.283196613, tolerance: 4201.186103419478\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 20969220.065253027, tolerance: 4201.186103419478\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 20959658.970863715, tolerance: 4201.186103419478\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 20947624.701018073, tolerance: 4201.186103419478\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 20932487.468798272, tolerance: 4201.186103419478\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 20913462.923603535, tolerance: 4201.186103419478\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 20889577.599545892, tolerance: 4201.186103419478\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 20859628.61984418, tolerance: 4201.186103419478\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 20822137.913488373, tolerance: 4201.186103419478\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 20775302.126054227, tolerance: 4201.186103419478\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 20716940.917180095, tolerance: 4201.186103419478\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 20644448.64953633, tolerance: 4201.186103419478\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 20554757.795455974, tolerance: 4201.186103419478\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 20444326.815649558, tolerance: 4201.186103419478\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 20309170.5956441, tolerance: 4201.186103419478\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 20144956.94257016, tolerance: 4201.186103419478\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 19947196.308887925, tolerance: 4201.186103419478\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 19711550.604615457, tolerance: 4201.186103419478\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 19434276.168588594, tolerance: 4201.186103419478\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 19112791.023677077, tolerance: 4201.186103419478\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 18746315.497629642, tolerance: 4201.186103419478\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 18336483.416578818, tolerance: 4201.186103419478\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 17887774.82963546, tolerance: 4201.186103419478\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 17407607.14883928, tolerance: 4201.186103419478\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 16905965.499829993, tolerance: 4201.186103419478\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 16394560.802096754, tolerance: 4201.186103419478\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 15885645.94315279, tolerance: 4201.186103419478\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 15390736.734407002, tolerance: 4201.186103419478\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 14919517.257852767, tolerance: 4201.186103419478\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 14479140.715843385, tolerance: 4201.186103419478\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 14074002.018103378, tolerance: 4201.186103419478\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 13705921.512677446, tolerance: 4201.186103419478\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 13374594.126102045, tolerance: 4201.186103419478\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 13078142.079861477, tolerance: 4201.186103419478\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 12813645.639316052, tolerance: 4201.186103419478\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 12577583.79115098, tolerance: 4201.186103419478\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 12366168.387483248, tolerance: 4201.186103419478\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 12175587.27845304, tolerance: 4201.186103419478\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 12002182.958268246, tolerance: 4201.186103419478\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 11842589.470660003, tolerance: 4201.186103419478\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 11693840.03187585, tolerance: 4201.186103419478\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 11553447.608003646, tolerance: 4201.186103419478\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 11419454.043831315, tolerance: 4201.186103419478\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 11290441.388440851, tolerance: 4201.186103419478\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 11165501.742342355, tolerance: 4201.186103419478\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 11044168.420816446, tolerance: 4201.186103419478\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 10926319.289729437, tolerance: 4201.186103419478\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 10812069.210340958, tolerance: 4201.186103419478\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 10701669.4034359, tolerance: 4201.186103419478\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 10595426.714498473, tolerance: 4201.186103419478\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 10493648.013477556, tolerance: 4201.186103419478\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 10396608.203056674, tolerance: 4201.186103419478\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 10304536.713965936, tolerance: 4201.186103419478\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 10217616.440012112, tolerance: 4201.186103419478\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 10135989.092876786, tolerance: 4201.186103419478\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 10059761.06074919, tolerance: 4201.186103419478\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 9989004.697692366, tolerance: 4201.186103419478\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 9923752.62059347, tolerance: 4201.186103419478\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 9863986.795334417, tolerance: 4201.186103419478\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 9809627.88419456, tolerance: 4201.186103419478\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 9760531.052715782, tolerance: 4201.186103419478\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 9716491.487344135, tolerance: 4201.186103419478\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 9677258.065315697, tolerance: 4201.186103419478\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 9642549.951166576, tolerance: 4201.186103419478\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 9612070.387835098, tolerance: 4201.186103419478\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 9585514.488134187, tolerance: 4201.186103419478\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 9562571.500908652, tolerance: 4201.186103419478\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 9542924.549680972, tolerance: 4201.186103419478\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 9526251.156758647, tolerance: 4201.186103419478\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 9512226.47253321, tolerance: 4201.186103419478\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 9500529.26731912, tolerance: 4201.186103419478\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 9490849.431706691, tolerance: 4201.186103419478\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 9482895.334901026, tolerance: 4201.186103419478\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 9476399.717816683, tolerance: 4201.186103419478\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 9471123.439397812, tolerance: 4201.186103419478\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 9466857.004635924, tolerance: 4201.186103419478\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 9463420.208446909, tolerance: 4201.186103419478\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 9460660.409301165, tolerance: 4201.186103419478\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 9458449.957483917, tolerance: 4201.186103419478\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 9456683.220357053, tolerance: 4201.186103419478\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 22331946.256290548, tolerance: 4466.452064951528\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 22331864.01867821, tolerance: 4466.452064951528\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 22331760.24858137, tolerance: 4466.452064951528\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 22331629.308755424, tolerance: 4466.452064951528\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 22331464.086506, tolerance: 4466.452064951528\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 22331255.6077477, tolerance: 4466.452064951528\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 22330992.5502474, tolerance: 4466.452064951528\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 22330660.629798386, tolerance: 4466.452064951528\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 22330241.826283135, tolerance: 4466.452064951528\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 22329713.408067036, tolerance: 4466.452064951528\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 22329046.70250113, tolerance: 4466.452064951528\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 22328205.54698371, tolerance: 4466.452064951528\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 22327144.33841677, tolerance: 4466.452064951528\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 22325805.57825301, tolerance: 4466.452064951528\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 22324116.78479917, tolerance: 4466.452064951528\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 22321986.61304197, tolerance: 4466.452064951528\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 22319299.983932897, tolerance: 4466.452064951528\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 22315911.978743475, tolerance: 4466.452064951528\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 22311640.19886971, tolerance: 4466.452064951528\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 22306255.22683996, tolerance: 4466.452064951528\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 22299468.750693012, tolerance: 4466.452064951528\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 22290918.833475474, tolerance: 4466.452064951528\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 22280151.727477487, tolerance: 4466.452064951528\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 22266599.55907775, tolerance: 4466.452064951528\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 22249553.1628005, tolerance: 4466.452064951528\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 22228129.352925844, tolerance: 4466.452064951528\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 22201232.036903113, tolerance: 4466.452064951528\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 22167506.872833703, tolerance: 4466.452064951528\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 22125289.765747745, tolerance: 4466.452064951528\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 22072550.54212509, tolerance: 4466.452064951528\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 22006834.845984124, tolerance: 4466.452064951528\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 21925209.90626917, tolerance: 4466.452064951528\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 21824223.566299047, tolerance: 4466.452064951528\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 21699890.949228805, tolerance: 4466.452064951528\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 21547729.12461406, tolerance: 4466.452064951528\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 21362866.2135773, tolerance: 4466.452064951528\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 21140255.446179494, tolerance: 4466.452064951528\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 20875023.139756173, tolerance: 4466.452064951528\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 20562967.323417887, tolerance: 4466.452064951528\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 20201195.56502676, tolerance: 4466.452064951528\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 19788844.32939184, tolerance: 4466.452064951528\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 19327763.897510033, tolerance: 4466.452064951528\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 18823001.043133, tolerance: 4466.452064951528\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 18282896.084610447, tolerance: 4466.452064951528\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 17718660.488698892, tolerance: 4466.452064951528\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 17143422.403240785, tolerance: 4466.452064951528\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 16570887.230051233, tolerance: 4466.452064951528\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 16013892.090309368, tolerance: 4466.452064951528\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 15483171.861886721, tolerance: 4466.452064951528\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 14986579.12958808, tolerance: 4466.452064951528\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 14528848.289413735, tolerance: 4466.452064951528\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 14111836.239774453, tolerance: 4466.452064951528\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 13735069.935277374, tolerance: 4466.452064951528\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 13396407.63933281, tolerance: 4466.452064951528\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 13092660.916831553, tolerance: 4466.452064951528\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 12820093.900344657, tolerance: 4466.452064951528\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 12574781.909222206, tolerance: 4466.452064951528\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 12352853.175078187, tolerance: 4466.452064951528\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 12150651.369793236, tolerance: 4466.452064951528\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 11964850.85477171, tolerance: 4466.452064951528\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 11792543.263225023, tolerance: 4466.452064951528\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 11631302.416094325, tolerance: 4466.452064951528\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 11479227.756127896, tolerance: 4466.452064951528\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 11334963.041737791, tolerance: 4466.452064951528\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 11197685.00316407, tolerance: 4466.452064951528\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 11067056.224580333, tolerance: 4466.452064951528\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 10943139.511030335, tolerance: 4466.452064951528\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 10826278.220752914, tolerance: 4466.452064951528\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 10716956.341549203, tolerance: 4466.452064951528\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 10615659.18706463, tolerance: 4466.452064951528\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 10522756.81931602, tolerance: 4466.452064951528\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 10438426.844454793, tolerance: 4466.452064951528\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 10362623.271152114, tolerance: 4466.452064951528\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 10295087.381795196, tolerance: 4466.452064951528\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 10235388.466414586, tolerance: 4466.452064951528\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 10182978.74114087, tolerance: 4466.452064951528\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 10137247.952604774, tolerance: 4466.452064951528\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 10097567.748922452, tolerance: 4466.452064951528\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 10063321.78974916, tolerance: 4466.452064951528\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 10033922.656392658, tolerance: 4466.452064951528\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 10008819.48683395, tolerance: 4466.452064951528\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 9987500.64529026, tolerance: 4466.452064951528\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 9969494.45332402, tolerance: 4466.452064951528\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 9954369.324796999, tolerance: 4466.452064951528\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 9941733.515465533, tolerance: 4466.452064951528\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 9931234.335988697, tolerance: 4466.452064951528\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 9922556.777457727, tolerance: 4466.452064951528\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 9915421.679109963, tolerance: 4466.452064951528\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 9909583.627876554, tolerance: 4466.452064951528\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 9904828.718921285, tolerance: 4466.452064951528\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 9900972.216495687, tolerance: 4466.452064951528\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 9897856.106707066, tolerance: 4466.452064951528\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 9895346.540855976, tolerance: 4466.452064951528\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 9893331.20375547, tolerance: 4466.452064951528\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 9891716.674948104, tolerance: 4466.452064951528\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 9890425.865192985, tolerance: 4466.452064951528\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 9889395.604661966, tolerance: 4466.452064951528\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 9888574.440117057, tolerance: 4466.452064951528\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 9887920.67448955, tolerance: 4466.452064951528\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 9887400.66016944, tolerance: 4466.452064951528\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 22225193.804080117, tolerance: 4445.102149685069\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 22225110.813517082, tolerance: 4445.102149685069\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 22225006.09337399, tolerance: 4445.102149685069\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 22224873.95483671, tolerance: 4445.102149685069\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 22224707.22016198, tolerance: 4445.102149685069\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 22224496.833220948, tolerance: 4445.102149685069\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 22224231.36831537, tolerance: 4445.102149685069\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 22223896.410779055, tolerance: 4445.102149685069\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 22223473.776030328, tolerance: 4445.102149685069\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 22222940.5251543, tolerance: 4445.102149685069\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 22222267.724341698, tolerance: 4445.102149685069\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 22221418.88207673, tolerance: 4445.102149685069\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 22220347.9812255, tolerance: 4445.102149685069\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 22218997.002387542, tolerance: 4445.102149685069\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 22217292.809172485, tolerance: 4445.102149685069\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 22215143.23447737, tolerance: 4445.102149685069\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 22212432.168317873, tolerance: 4445.102149685069\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 22209013.401268236, tolerance: 4445.102149685069\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 22204702.92221979, tolerance: 4445.102149685069\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 22199269.304569554, tolerance: 4445.102149685069\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 22192421.741654065, tolerance: 4445.102149685069\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 22183795.212587878, tolerance: 4445.102149685069\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 22172932.179096937, tolerance: 4445.102149685069\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 22159260.143049646, tolerance: 4445.102149685069\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 22142064.352031756, tolerance: 4445.102149685069\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 22120454.958092026, tolerance: 4445.102149685069\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 22093328.063342046, tolerance: 4445.102149685069\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 22059320.403233733, tolerance: 4445.102149685069\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 22016758.038453568, tolerance: 4445.102149685069\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 21963600.508906875, tolerance: 4445.102149685069\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 21897383.654785756, tolerance: 4445.102149685069\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 21815166.968429703, tolerance: 4445.102149685069\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 21713495.12352233, tolerance: 4445.102149685069\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 21588388.30984887, tolerance: 4445.102149685069\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 21435381.888817243, tolerance: 4445.102149685069\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 21249641.65996919, tolerance: 4445.102149685069\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 21026184.50512314, tolerance: 4445.102149685069\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 20760231.6556524, tolerance: 4445.102149685069\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 20447708.311673798, tolerance: 4445.102149685069\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 20085874.018901832, tolerance: 4445.102149685069\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 19674021.850113414, tolerance: 4445.102149685069\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 19214128.305344213, tolerance: 4445.102149685069\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 18711289.424232323, tolerance: 4445.102149685069\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 18173771.01440588, tolerance: 4445.102149685069\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 17612557.629344452, tolerance: 4445.102149685069\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 17040407.03219555, tolerance: 4445.102149685069\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 16470567.1316624, tolerance: 4445.102149685069\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 15915425.819018755, tolerance: 4445.102149685069\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 15385384.27148135, tolerance: 4445.102149685069\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 14888160.528800266, tolerance: 4445.102149685069\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 14428585.410549462, tolerance: 4445.102149685069\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 14008814.608291928, tolerance: 4445.102149685069\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 13628800.436573667, tolerance: 4445.102149685069\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 13286857.361730728, tolerance: 4445.102149685069\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 12980197.22408704, tolerance: 4445.102149685069\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 12705370.410345284, tolerance: 4445.102149685069\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 12458600.903357485, tolerance: 4445.102149685069\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 12236032.779575098, tolerance: 4445.102149685069\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 12033913.493897013, tolerance: 4445.102149685069\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 11848733.59673175, tolerance: 4445.102149685069\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 11677333.403468844, tolerance: 4445.102149685069\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 11516981.070353948, tolerance: 4445.102149685069\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 11365424.704670576, tolerance: 4445.102149685069\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 11220921.203073852, tolerance: 4445.102149685069\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 11082243.920528812, tolerance: 4445.102149685069\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 10948669.457422782, tolerance: 4445.102149685069\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 10819942.016223695, tolerance: 4445.102149685069\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 10696213.317397801, tolerance: 4445.102149685069\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 10577957.546131814, tolerance: 4445.102149685069\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 10465864.125929585, tolerance: 4445.102149685069\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 10360715.842557529, tolerance: 4445.102149685069\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 10263264.873279985, tolerance: 4445.102149685069\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 10174122.55823352, tolerance: 4445.102149685069\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 10093678.084935376, tolerance: 4445.102149685069\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 10022055.909584643, tolerance: 4445.102149685069\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 9959113.332252586, tolerance: 4445.102149685069\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 9904471.381944891, tolerance: 4445.102149685069\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 9857566.988895323, tolerance: 4445.102149685069\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 9817713.479318906, tolerance: 4445.102149685069\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 9784158.875562996, tolerance: 4445.102149685069\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 9756135.42939603, tolerance: 4445.102149685069\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 9732897.547924204, tolerance: 4445.102149685069\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 9713747.933154264, tolerance: 4445.102149685069\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 9698053.284846937, tolerance: 4445.102149685069\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 9685251.610393751, tolerance: 4445.102149685069\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 9674853.346299307, tolerance: 4445.102149685069\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 9666438.328081267, tolerance: 4445.102149685069\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 9659650.291029962, tolerance: 4445.102149685069\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 9654190.159247087, tolerance: 4445.102149685069\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 9649808.977199132, tolerance: 4445.102149685069\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 9646301.012972325, tolerance: 4445.102149685069\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 9643497.33132981, tolerance: 4445.102149685069\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 9641259.984844232, tolerance: 4445.102149685069\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 9639476.879485007, tolerance: 4445.102149685069\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 9638057.315691948, tolerance: 4445.102149685069\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 9636928.172690995, tolerance: 4445.102149685069\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 9636030.684258908, tolerance: 4445.102149685069\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 9635317.743812444, tolerance: 4445.102149685069\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 9634751.672914885, tolerance: 4445.102149685069\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 9634302.388158973, tolerance: 4445.102149685069\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 22182535.705905356, tolerance: 4436.577708196866\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 22182443.317481518, tolerance: 4436.577708196866\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 22182326.738805093, tolerance: 4436.577708196866\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 22182179.636849392, tolerance: 4436.577708196866\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 22181994.02104498, tolerance: 4436.577708196866\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 22181759.809716657, tolerance: 4436.577708196866\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 22181464.28327084, tolerance: 4436.577708196866\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 22181091.394644808, tolerance: 4436.577708196866\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 22180620.89990635, tolerance: 4436.577708196866\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 22180027.262331232, tolerance: 4436.577708196866\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 22179278.27131425, tolerance: 4436.577708196866\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 22178333.30250968, tolerance: 4436.577708196866\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 22177141.126954913, tolerance: 4436.577708196866\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 22175637.153777495, tolerance: 4436.577708196866\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 22173739.962460287, tolerance: 4436.577708196866\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 22171346.945451476, tolerance: 4436.577708196866\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 22168328.83898361, tolerance: 4436.577708196866\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 22164522.86814138, tolerance: 4436.577708196866\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 22159724.170510706, tolerance: 4436.577708196866\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 22153675.090679437, tolerance: 4436.577708196866\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 22146051.856030267, tolerance: 4436.577708196866\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 22136448.05522981, tolerance: 4436.577708196866\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 22124354.25056622, tolerance: 4436.577708196866\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 22109132.97552026, tolerance: 4436.577708196866\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 22089988.320511375, tolerance: 4436.577708196866\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 22065929.327634353, tolerance: 4436.577708196866\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 22035726.555516466, tolerance: 4436.577708196866\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 21997861.524512578, tolerance: 4436.577708196866\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 21950469.43740474, tolerance: 4436.577708196866\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 21891276.769023743, tolerance: 4436.577708196866\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 21817537.26021438, tolerance: 4436.577708196866\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 21725972.804210078, tolerance: 4436.577708196866\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 21612729.92224465, tolerance: 4436.577708196866\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 21473368.081082568, tolerance: 4436.577708196866\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 21302902.69437746, tolerance: 4436.577708196866\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 21095932.158423115, tolerance: 4436.577708196866\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 20846882.28627312, tolerance: 4436.577708196866\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 20550398.91167474, tolerance: 4436.577708196866\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 20201904.6391808, tolerance: 4436.577708196866\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 19798303.2544326, tolerance: 4436.577708196866\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 19338763.603172604, tolerance: 4436.577708196866\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 18825451.629099548, tolerance: 4436.577708196866\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 18264026.303933255, tolerance: 4436.577708196866\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 17663705.112665195, tolerance: 4436.577708196866\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 17036766.859036848, tolerance: 4436.577708196866\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 16397496.223623442, tolerance: 4436.577708196866\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 15760744.921491839, tolerance: 4436.577708196866\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 15140415.226936523, tolerance: 4436.577708196866\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 14548197.661971122, tolerance: 4436.577708196866\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 13992801.316187326, tolerance: 4436.577708196866\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 13479749.374918317, tolerance: 4436.577708196866\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 13011650.716625065, tolerance: 4436.577708196866\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 12588761.536151316, tolerance: 4436.577708196866\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 12209637.009462368, tolerance: 4436.577708196866\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 11871722.016013278, tolerance: 4436.577708196866\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 11571805.127380013, tolerance: 4436.577708196866\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 11306328.206388842, tolerance: 4436.577708196866\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 11071585.798533618, tolerance: 4436.577708196866\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 10863860.419768527, tolerance: 4436.577708196866\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 10679529.96999052, tolerance: 4436.577708196866\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 10515164.967978261, tolerance: 4436.577708196866\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 10367617.395431103, tolerance: 4436.577708196866\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 10234094.932508629, tolerance: 4436.577708196866\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 10112213.55722906, tolerance: 4436.577708196866\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 10000024.235755347, tolerance: 4436.577708196866\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 9896012.571054673, tolerance: 4436.577708196866\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 9799072.61456211, tolerance: 4436.577708196866\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 9708457.890308047, tolerance: 4436.577708196866\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 9623714.619163357, tolerance: 4436.577708196866\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 9544604.253487447, tolerance: 4436.577708196866\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 9471024.21276236, tolerance: 4436.577708196866\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 9402936.22899955, tolerance: 4436.577708196866\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 9340310.144654717, tolerance: 4436.577708196866\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 9283087.298596494, tolerance: 4436.577708196866\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 9231162.854348581, tolerance: 4436.577708196866\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 9184382.359520663, tolerance: 4436.577708196866\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 9142546.024753725, tolerance: 4436.577708196866\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 9105415.11489043, tolerance: 4436.577708196866\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 9072717.557093438, tolerance: 4436.577708196866\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 9044152.703403166, tolerance: 4436.577708196866\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 9019396.685309881, tolerance: 4436.577708196866\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 8998109.575324643, tolerance: 4436.577708196866\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 8979944.333787037, tolerance: 4436.577708196866\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 8964556.387394741, tolerance: 4436.577708196866\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 8951612.369533293, tolerance: 4436.577708196866\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 8940797.002727626, tolerance: 4436.577708196866\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 8931817.822045553, tolerance: 4436.577708196866\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 8924407.976697696, tolerance: 4436.577708196866\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 8918327.548499012, tolerance: 4436.577708196866\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 8913363.77940083, tolerance: 4436.577708196866\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 8909330.473244982, tolerance: 4436.577708196866\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 8906066.743651623, tolerance: 4436.577708196866\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 8903435.248435598, tolerance: 4436.577708196866\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 8901320.056409352, tolerance: 4436.577708196866\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 8899624.301447991, tolerance: 4436.577708196866\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 8898267.772618923, tolerance: 4436.577708196866\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 8897184.565959537, tolerance: 4436.577708196866\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 8896320.890153246, tolerance: 4436.577708196866\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 8895633.083483214, tolerance: 4436.577708196866\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 8895085.869018639, tolerance: 4436.577708196866\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.271e+07, tolerance: 5.332e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n\n\nPipeline(steps=[('scaler', StandardScaler()),\n                ('ridge',\n                 ElasticNetCV(alphas=array([2.22093791e+05, 1.76005531e+05, 1.39481373e+05, 1.10536603e+05,\n       8.75983676e+04, 6.94202082e+04, 5.50143278e+04, 4.35979140e+04,\n       3.45506012e+04, 2.73807606e+04, 2.16987845e+04, 1.71959156e+04,\n       1.36274691e+04, 1.07995362e+04, 8.55844774e+03, 6.78242347e+03,\n       5.37495461e+03, 4.25955961e+03,...\n       1.84386167e-03, 1.46122884e-03, 1.15799887e-03, 9.17694298e-04,\n       7.27257037e-04, 5.76338765e-04, 4.56738615e-04, 3.61957541e-04,\n       2.86845161e-04, 2.27319885e-04, 1.80147121e-04, 1.42763513e-04,\n       1.13137642e-04, 8.96596467e-05, 7.10537367e-05, 5.63088712e-05,\n       4.46238174e-05, 3.53636122e-05, 2.80250579e-05, 2.22093791e-05]),\n                              cv=KFold(n_splits=5, random_state=0, shuffle=True),\n                              l1_ratio=0))])In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.  Pipeline?Documentation for PipelineiFittedPipeline(steps=[('scaler', StandardScaler()),\n                ('ridge',\n                 ElasticNetCV(alphas=array([2.22093791e+05, 1.76005531e+05, 1.39481373e+05, 1.10536603e+05,\n       8.75983676e+04, 6.94202082e+04, 5.50143278e+04, 4.35979140e+04,\n       3.45506012e+04, 2.73807606e+04, 2.16987845e+04, 1.71959156e+04,\n       1.36274691e+04, 1.07995362e+04, 8.55844774e+03, 6.78242347e+03,\n       5.37495461e+03, 4.25955961e+03,...\n       1.84386167e-03, 1.46122884e-03, 1.15799887e-03, 9.17694298e-04,\n       7.27257037e-04, 5.76338765e-04, 4.56738615e-04, 3.61957541e-04,\n       2.86845161e-04, 2.27319885e-04, 1.80147121e-04, 1.42763513e-04,\n       1.13137642e-04, 8.96596467e-05, 7.10537367e-05, 5.63088712e-05,\n       4.46238174e-05, 3.53636122e-05, 2.80250579e-05, 2.22093791e-05]),\n                              cv=KFold(n_splits=5, random_state=0, shuffle=True),\n                              l1_ratio=0))])  StandardScaler?Documentation for StandardScalerStandardScaler()  ElasticNetCV?Documentation for ElasticNetCVElasticNetCV(alphas=array([2.22093791e+05, 1.76005531e+05, 1.39481373e+05, 1.10536603e+05,\n       8.75983676e+04, 6.94202082e+04, 5.50143278e+04, 4.35979140e+04,\n       3.45506012e+04, 2.73807606e+04, 2.16987845e+04, 1.71959156e+04,\n       1.36274691e+04, 1.07995362e+04, 8.55844774e+03, 6.78242347e+03,\n       5.37495461e+03, 4.25955961e+03, 3.37562814e+03, 2.67512757e+03,\n       2.11999285e+03, 1.680058...\n       1.84386167e-03, 1.46122884e-03, 1.15799887e-03, 9.17694298e-04,\n       7.27257037e-04, 5.76338765e-04, 4.56738615e-04, 3.61957541e-04,\n       2.86845161e-04, 2.27319885e-04, 1.80147121e-04, 1.42763513e-04,\n       1.13137642e-04, 8.96596467e-05, 7.10537367e-05, 5.63088712e-05,\n       4.46238174e-05, 3.53636122e-05, 2.80250579e-05, 2.22093791e-05]),\n             cv=KFold(n_splits=5, random_state=0, shuffle=True), l1_ratio=0) \n\n\nLet’s produce a plot again of the cross-validation error to see that it is similar to using skm.GridSearchCV.\n\ntuned_ridge = pipeCV.named_steps['ridge']\nridgeCV_fig, ax = subplots(figsize=(8,8))\nax.errorbar(-np.log(lambdas),\n            tuned_ridge.mse_path_.mean(1),\n            yerr=tuned_ridge.mse_path_.std(1) / np.sqrt(K))\nax.axvline(-np.log(tuned_ridge.alpha_), c='k', ls='--')\nax.set_ylim([50000,250000])\nax.set_xlabel('$-\\log(\\lambda)$', fontsize=20)\nax.set_ylabel('Cross-validated MSE', fontsize=20);\n\n\n\n\n\n\n\n\nWe see that the value of \\lambda that results in the smallest cross-validation error is 1.19e-02, available as the value tuned_ridge.alpha_. What is the test MSE associated with this value of \\lambda?\n\nnp.min(tuned_ridge.mse_path_.mean(1))\n\n115526.70630987993\n\n\nThis represents a further improvement over the test MSE that we got using \\lambda=4. Finally, tuned_ridge.coef_ has the coefficients fit on the entire data set at this value of \\lambda.\n\ntuned_ridge.coef_\n\narray([-222.80877051,  238.77246614,    3.21103754,   -2.93050845,\n          3.64888723,  108.90953869,  -50.81896152, -105.15731984,\n        122.00714801,   57.1859509 ,  210.35170348,  118.05683748,\n       -150.21959435,   30.36634231,  -61.62459095,   77.73832472,\n         40.07350744,  -25.02151514,  -13.68429544])\n\n\nAs expected, none of the coefficients are zero—ridge regression does not perform variable selection!\n\n\n\nChoosing \\lambda using cross-validation provides a single regression estimator, similar to fitting a linear regression model as we saw in Chapter~. It is therefore reasonable to estimate what its test error is. We run into a problem here in that cross-validation will have touched all of its data in choosing \\lambda, hence we have no further data to estimate test error. A compromise is to do an initial split of the data into two disjoint sets: a training set and a test set. We then fit a cross-validation tuned ridge regression on the training set, and evaluate its performance on the test set. We might call this cross-validation nested within the validation set approach. A priori there is no reason to use half of the data for each of the two sets in validation. Below, we use 75% for training and 25% for test, with the estimator being ridge regression tuned using 5-fold cross-validation. This can be achieved in code as follows:\n\nouter_valid = skm.ShuffleSplit(n_splits=1, \n                               test_size=0.25,\n                               random_state=1)\ninner_cv = skm.KFold(n_splits=5,\n                     shuffle=True,\n                     random_state=2)\nridgeCV = skl.ElasticNetCV(alphas=lambdas,\n                           l1_ratio=0,\n                           cv=inner_cv)\npipeCV = Pipeline(steps=[('scaler', scaler),\n                         ('ridge', ridgeCV)]);\n\n\nresults = skm.cross_validate(pipeCV, \n                             X,\n                             Y,\n                             cv=outer_valid,\n                             scoring='neg_mean_squared_error')\n-results['test_score']\n\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 16002961.89304734, tolerance: 3200.6325551004934\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 16002909.292721536, tolerance: 3200.6325551004934\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 16002842.919898542, tolerance: 3200.6325551004934\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 16002759.168901473, tolerance: 3200.6325551004934\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 16002653.490324108, tolerance: 3200.6325551004934\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 16002520.144170541, tolerance: 3200.6325551004934\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 16002351.888507722, tolerance: 3200.6325551004934\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 16002139.586836113, tolerance: 3200.6325551004934\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 16001871.713040238, tolerance: 3200.6325551004934\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 16001533.72733189, tolerance: 3200.6325551004934\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 16001107.289774053, tolerance: 3200.6325551004934\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 16000569.269442711, tolerance: 3200.6325551004934\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 15999890.496647637, tolerance: 3200.6325551004934\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 15999034.192416638, tolerance: 3200.6325551004934\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 15997953.993094176, tolerance: 3200.6325551004934\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 15996591.467783947, tolerance: 3200.6325551004934\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 15994873.001788346, tolerance: 3200.6325551004934\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 15992705.889472546, tolerance: 3200.6325551004934\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 15989973.444502642, tolerance: 3200.6325551004934\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 15986528.893835299, tolerance: 3200.6325551004934\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 15982187.774395376, tolerance: 3200.6325551004934\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 15976718.499356631, tolerance: 3200.6325551004934\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 15969830.707495736, tolerance: 3200.6325551004934\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 15961160.960501967, tolerance: 3200.6325551004934\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 15950255.32070595, tolerance: 3200.6325551004934\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 15936548.344581455, tolerance: 3200.6325551004934\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 15919338.096469928, tolerance: 3200.6325551004934\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 15897756.970098713, tolerance: 3200.6325551004934\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 15870738.473491091, tolerance: 3200.6325551004934\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 15836980.785622947, tolerance: 3200.6325551004934\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 15794908.96193258, tolerance: 3200.6325551004934\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 15742639.305781402, tolerance: 3200.6325551004934\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 15677951.783964384, tolerance: 3200.6325551004934\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 15598279.52021635, tolerance: 3200.6325551004934\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 15500728.213326862, tolerance: 3200.6325551004934\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 15382142.225333134, tolerance: 3200.6325551004934\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 15239236.776243076, tolerance: 3200.6325551004934\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 15068814.890988706, tolerance: 3200.6325551004934\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 14868080.263148531, tolerance: 3200.6325551004934\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 14635039.685599195, tolerance: 3200.6325551004934\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 14368959.698660215, tolerance: 3200.6325551004934\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 14070805.238626322, tolerance: 3200.6325551004934\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 13743554.881437782, tolerance: 3200.6325551004934\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 13392276.560592555, tolerance: 3200.6325551004934\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 13023877.880913064, tolerance: 3200.6325551004934\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 12646520.933576021, tolerance: 3200.6325551004934\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 12268792.343592057, tolerance: 3200.6325551004934\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 11898803.095559346, tolerance: 3200.6325551004934\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 11543417.93091813, tolerance: 3200.6325551004934\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 11207766.718773345, tolerance: 3200.6325551004934\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 10895093.611569967, tolerance: 3200.6325551004934\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 10606899.312997254, tolerance: 3200.6325551004934\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 10343266.88124089, tolerance: 3200.6325551004934\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 10103247.35343145, tolerance: 3200.6325551004934\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 9885208.91057351, tolerance: 3200.6325551004934\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 9687100.478192499, tolerance: 3200.6325551004934\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 9506625.781409387, tolerance: 3200.6325551004934\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 9341352.903950289, tolerance: 3200.6325551004934\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 9188793.402093247, tolerance: 3200.6325551004934\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 9046478.453631112, tolerance: 3200.6325551004934\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 8912045.90458919, tolerance: 3200.6325551004934\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 8783339.10743259, tolerance: 3200.6325551004934\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 8658509.901020346, tolerance: 3200.6325551004934\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 8536113.828113692, tolerance: 3200.6325551004934\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 8415183.975072159, tolerance: 3200.6325551004934\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 8295269.742745555, tolerance: 3200.6325551004934\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 8176429.120013495, tolerance: 3200.6325551004934\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 8059168.82930556, tolerance: 3200.6325551004934\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 7944335.999206941, tolerance: 3200.6325551004934\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 7832975.645216489, tolerance: 3200.6325551004934\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 7726176.614947222, tolerance: 3200.6325551004934\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 7624931.461247108, tolerance: 3200.6325551004934\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 7530031.62746943, tolerance: 3200.6325551004934\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 7442009.746564671, tolerance: 3200.6325551004934\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 7361129.14697353, tolerance: 3200.6325551004934\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 7287410.635336563, tolerance: 3200.6325551004934\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 7220681.095616996, tolerance: 3200.6325551004934\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 7160628.3954044385, tolerance: 3200.6325551004934\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 7106851.483765963, tolerance: 3200.6325551004934\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 7058900.769700722, tolerance: 3200.6325551004934\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 7016308.880858139, tolerance: 3200.6325551004934\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 6978613.911777637, tolerance: 3200.6325551004934\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 6945376.5710271485, tolerance: 3200.6325551004934\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 6916191.0495283585, tolerance: 3200.6325551004934\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 6890688.792446369, tolerance: 3200.6325551004934\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 6868535.393320457, tolerance: 3200.6325551004934\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 6849422.7650398845, tolerance: 3200.6325551004934\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 6833060.05095403, tolerance: 3200.6325551004934\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 6819166.544534754, tolerance: 3200.6325551004934\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 6807468.458908691, tolerance: 3200.6325551004934\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 6797699.6283456, tolerance: 3200.6325551004934\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 6789604.944998562, tolerance: 3200.6325551004934\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 6782944.868630526, tolerance: 3200.6325551004934\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 6777499.565630876, tolerance: 3200.6325551004934\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 6773071.791554418, tolerance: 3200.6325551004934\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 6769488.209512585, tolerance: 3200.6325551004934\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 6766599.256784007, tolerance: 3200.6325551004934\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 6764277.892213489, tolerance: 3200.6325551004934\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 6762417.616248343, tolerance: 3200.6325551004934\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 6760930.11696838, tolerance: 3200.6325551004934\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 15173612.824876543, tolerance: 3034.7626598069205\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 15173560.331518074, tolerance: 3034.7626598069205\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 15173494.093703298, tolerance: 3034.7626598069205\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 15173410.513116254, tolerance: 3034.7626598069205\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 15173305.049649917, tolerance: 3034.7626598069205\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 15173171.97505981, tolerance: 3034.7626598069205\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 15173004.062268816, tolerance: 3034.7626598069205\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 15172792.193566972, tolerance: 3034.7626598069205\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 15172524.866617762, tolerance: 3034.7626598069205\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 15172187.571748767, tolerance: 3034.7626598069205\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 15171762.007200053, tolerance: 3034.7626598069205\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 15171225.090500392, tolerance: 3034.7626598069205\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 15170547.713543424, tolerance: 3034.7626598069205\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 15169693.17577188, tolerance: 3034.7626598069205\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 15168615.213598883, tolerance: 3034.7626598069205\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 15167255.524179867, tolerance: 3034.7626598069205\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 15165540.65722486, tolerance: 3034.7626598069205\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 15163378.119038213, tolerance: 3034.7626598069205\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 15160651.49782194, tolerance: 3034.7626598069205\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 15157214.37819171, tolerance: 3034.7626598069205\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 15152882.766135199, tolerance: 3034.7626598069205\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 15147425.694698604, tolerance: 3034.7626598069205\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 15140553.628850501, tolerance: 3034.7626598069205\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 15131904.241777303, tolerance: 3034.7626598069205\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 15121025.105980717, tolerance: 3034.7626598069205\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 15107352.850599293, tolerance: 3034.7626598069205\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 15090188.412868414, tolerance: 3034.7626598069205\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 15068668.205066577, tolerance: 3034.7626598069205\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 15041731.400110116, tolerance: 3034.7626598069205\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 15008084.208955992, tolerance: 3034.7626598069205\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 14966163.110870238, tolerance: 3034.7626598069205\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 14914100.653844738, tolerance: 3034.7626598069205\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 14849699.805850957, tolerance: 3034.7626598069205\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 14770425.96115128, tolerance: 3034.7626598069205\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 14673429.416906543, tolerance: 3034.7626598069205\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 14555614.81501597, tolerance: 3034.7626598069205\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 14413776.34901669, tolerance: 3034.7626598069205\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 14244816.178940998, tolerance: 3034.7626598069205\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 14046055.366934756, tolerance: 3034.7626598069205\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 13815628.708094306, tolerance: 3034.7626598069205\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 13552926.205683714, tolerance: 3034.7626598069205\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 13259008.940702375, tolerance: 3034.7626598069205\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 12936897.573228313, tolerance: 3034.7626598069205\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 12591625.616217319, tolerance: 3034.7626598069205\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 12229982.920676826, tolerance: 3034.7626598069205\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 11859948.802383406, tolerance: 3034.7626598069205\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 11489906.860316701, tolerance: 3034.7626598069205\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 11127805.377401607, tolerance: 3034.7626598069205\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 10780443.14443526, tolerance: 3034.7626598069205\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 10453012.58734803, tolerance: 3034.7626598069205\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 10148944.578529168, tolerance: 3034.7626598069205\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 9870012.667698367, tolerance: 3034.7626598069205\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 9616601.230672907, tolerance: 3034.7626598069205\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 9388032.941233689, tolerance: 3034.7626598069205\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 9182876.289070562, tolerance: 3034.7626598069205\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 8999193.791535854, tolerance: 3034.7626598069205\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 8834727.194341874, tolerance: 3034.7626598069205\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 8687036.34768969, tolerance: 3034.7626598069205\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 8553612.383287681, tolerance: 3034.7626598069205\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 8431979.280234484, tolerance: 3034.7626598069205\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 8319788.94666016, tolerance: 3034.7626598069205\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 8214909.054690679, tolerance: 3034.7626598069205\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 8115501.105643034, tolerance: 3034.7626598069205\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 8020086.355249497, tolerance: 3034.7626598069205\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 7927596.538468577, tolerance: 3034.7626598069205\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 7837403.822275495, tolerance: 3034.7626598069205\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 7749321.535335513, tolerance: 3034.7626598069205\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 7663566.802084755, tolerance: 3034.7626598069205\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 7580680.550684209, tolerance: 3034.7626598069205\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 7501409.56466659, tolerance: 3034.7626598069205\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 7426566.500521843, tolerance: 3034.7626598069205\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 7356892.242162719, tolerance: 3034.7626598069205\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 7292946.11748492, tolerance: 3034.7626598069205\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 7235042.041596936, tolerance: 3034.7626598069205\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 7183235.551674166, tolerance: 3034.7626598069205\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 7137353.553695871, tolerance: 3034.7626598069205\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 7097050.348456668, tolerance: 3034.7626598069205\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 7061872.012726565, tolerance: 3034.7626598069205\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 7031315.123405316, tolerance: 3034.7626598069205\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 7004872.08923869, tolerance: 3034.7626598069205\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 6982061.123035916, tolerance: 3034.7626598069205\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 6962442.578610096, tolerance: 3034.7626598069205\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 6945624.890073925, tolerance: 3034.7626598069205\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 6931263.466327048, tolerance: 3034.7626598069205\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 6919055.476661862, tolerance: 3034.7626598069205\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 6908732.977538956, tolerance: 3034.7626598069205\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 6900056.292042767, tolerance: 3034.7626598069205\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 6892808.858171429, tolerance: 3034.7626598069205\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 6886793.977603687, tolerance: 3034.7626598069205\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 6881833.233568594, tolerance: 3034.7626598069205\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 6877765.97498887, tolerance: 3034.7626598069205\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 6874449.207170505, tolerance: 3034.7626598069205\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 6871757.386867699, tolerance: 3034.7626598069205\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 6869581.853913053, tolerance: 3034.7626598069205\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 6867829.838852125, tolerance: 3034.7626598069205\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 6866423.119345584, tolerance: 3034.7626598069205\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 6865296.456501903, tolerance: 3034.7626598069205\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 6864395.947002785, tolerance: 3034.7626598069205\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 6863677.402652445, tolerance: 3034.7626598069205\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 6863104.835000056, tolerance: 3034.7626598069205\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 16000126.775776317, tolerance: 3200.070250165818\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 16000067.997791685, tolerance: 3200.070250165818\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 15999993.829780782, tolerance: 3200.070250165818\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 15999900.24258462, tolerance: 3200.070250165818\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 15999782.152469942, tolerance: 3200.070250165818\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 15999633.145271106, tolerance: 3200.070250165818\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 15999445.12846794, tolerance: 3200.070250165818\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 15999207.89243054, tolerance: 3200.070250165818\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 15998908.557207119, tolerance: 3200.070250165818\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 15998530.875140414, tolerance: 3200.070250165818\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 15998054.351968955, tolerance: 3200.070250165818\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 15997453.139532344, tolerance: 3200.070250165818\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 15996694.641307212, tolerance: 3200.070250165818\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 15995737.757220384, tolerance: 3200.070250165818\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 15994530.675893761, tolerance: 3200.070250165818\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 15993008.099962443, tolerance: 3200.070250165818\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 15991087.762599913, tolerance: 3200.070250165818\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 15988666.06009735, tolerance: 3200.070250165818\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 15985612.585588468, tolerance: 3200.070250165818\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 15981763.302383823, tolerance: 3200.070250165818\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 15976912.04209659, tolerance: 3200.070250165818\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 15970799.954194363, tolerance: 3200.070250165818\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 15963102.473251346, tolerance: 3200.070250165818\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 15953413.314912455, tolerance: 3200.070250165818\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 15941224.973906958, tolerance: 3200.070250165818\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 15925905.198558562, tolerance: 3200.070250165818\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 15906668.99042816, tolerance: 3200.070250165818\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 15882545.878220893, tolerance: 3200.070250165818\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 15852342.621036038, tolerance: 3200.070250165818\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 15814602.219371138, tolerance: 3200.070250165818\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 15767561.301116718, tolerance: 3200.070250165818\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 15709109.781098891, tolerance: 3200.070250165818\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 15636759.341258612, tolerance: 3200.070250165818\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 15547630.840385435, tolerance: 3200.070250165818\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 15438475.105455773, tolerance: 3200.070250165818\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 15305746.074655257, tolerance: 3200.070250165818\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 15145748.542592406, tolerance: 3200.070250165818\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 14954882.273867266, tolerance: 3200.070250165818\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 14729996.363846606, tolerance: 3200.070250165818\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 14468848.510940226, tolerance: 3200.070250165818\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 14170631.317143813, tolerance: 3200.070250165818\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 13836485.361873373, tolerance: 3200.070250165818\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 13469879.089990828, tolerance: 3200.070250165818\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 13076719.754361458, tolerance: 3200.070250165818\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 12665089.799378186, tolerance: 3200.070250165818\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 12244586.676668115, tolerance: 3200.070250165818\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 11825360.363691226, tolerance: 3200.070250165818\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 11417044.8011693, tolerance: 3200.070250165818\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 11027817.64570279, tolerance: 3200.070250165818\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 10663776.910200799, tolerance: 3200.070250165818\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 10328716.267595597, tolerance: 3200.070250165818\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 10024263.647837926, tolerance: 3200.070250165818\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 9750266.819731826, tolerance: 3200.070250165818\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 9505284.688773436, tolerance: 3200.070250165818\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 9287065.610720852, tolerance: 3200.070250165818\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 9092940.776433377, tolerance: 3200.070250165818\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 8920108.266351497, tolerance: 3200.070250165818\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 8765816.866835333, tolerance: 3200.070250165818\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 8627473.905487005, tolerance: 3200.070250165818\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 8502702.196109619, tolerance: 3200.070250165818\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 8389365.458262924, tolerance: 3200.070250165818\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 8285575.962199811, tolerance: 3200.070250165818\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 8189695.129107293, tolerance: 3200.070250165818\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 8100335.848355146, tolerance: 3200.070250165818\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 8016371.6148043275, tolerance: 3200.070250165818\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 7936951.3439801065, tolerance: 3200.070250165818\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 7861511.8438480245, tolerance: 3200.070250165818\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 7789775.81877586, tolerance: 3200.070250165818\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 7721724.491724833, tolerance: 3200.070250165818\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 7657540.535692923, tolerance: 3200.070250165818\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 7597526.506006098, tolerance: 3200.070250165818\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 7542012.431575963, tolerance: 3200.070250165818\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 7491270.131106921, tolerance: 3200.070250165818\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 7445449.741931616, tolerance: 3200.070250165818\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 7404547.16436493, tolerance: 3200.070250165818\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 7368402.734578225, tolerance: 3200.070250165818\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 7336724.612267249, tolerance: 3200.070250165818\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 7309126.908337033, tolerance: 3200.070250165818\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 7285172.539342925, tolerance: 3200.070250165818\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 7264413.026630274, tolerance: 3200.070250165818\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 7246420.465473482, tolerance: 3200.070250165818\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 7230809.549602913, tolerance: 3200.070250165818\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 7217249.407962016, tolerance: 3200.070250165818\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 7205466.206412948, tolerance: 3200.070250165818\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 7195238.325929959, tolerance: 3200.070250165818\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 7186386.647782151, tolerance: 3200.070250165818\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 7178762.875061079, tolerance: 3200.070250165818\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 7172238.602284164, tolerance: 3200.070250165818\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 7166697.00161197, tolerance: 3200.070250165818\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 7162027.848205716, tolerance: 3200.070250165818\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 7158125.584421309, tolerance: 3200.070250165818\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 7154889.512672274, tolerance: 3200.070250165818\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 7152225.062096239, tolerance: 3200.070250165818\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 7150045.262096411, tolerance: 3200.070250165818\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 7148271.882784414, tolerance: 3200.070250165818\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 7146836.0146411, tolerance: 3200.070250165818\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 7145678.080779873, tolerance: 3200.070250165818\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 7144747.393668677, tolerance: 3200.070250165818\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 7144001.407092261, tolerance: 3200.070250165818\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 7143404.80530565, tolerance: 3200.070250165818\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 13766426.844425442, tolerance: 2753.321903486231\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 13766379.012219734, tolerance: 2753.321903486231\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 13766318.655993313, tolerance: 2753.321903486231\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 13766242.496938994, tolerance: 2753.321903486231\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 13766146.398082258, tolerance: 2753.321903486231\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 13766025.13980752, tolerance: 2753.321903486231\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 13765872.136748439, tolerance: 2753.321903486231\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 13765679.08077331, tolerance: 2753.321903486231\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 13765435.490848666, tolerance: 2753.321903486231\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 13765128.145612368, tolerance: 2753.321903486231\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 13764740.368286435, tolerance: 2753.321903486231\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 13764251.12581003, tolerance: 2753.321903486231\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 13763633.894413952, tolerance: 2753.321903486231\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 13762855.231859002, tolerance: 2753.321903486231\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 13761872.98172164, tolerance: 2753.321903486231\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 13760634.01686267, tolerance: 2753.321903486231\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 13759071.406945651, tolerance: 2753.321903486231\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 13757100.867966294, tolerance: 2753.321903486231\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 13754616.31968939, tolerance: 2753.321903486231\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 13751484.339396805, tolerance: 2753.321903486231\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 13747537.257695232, tolerance: 2753.321903486231\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 13742564.595583746, tolerance: 2753.321903486231\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 13736302.49455343, tolerance: 2753.321903486231\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 13728420.749109622, tolerance: 2753.321903486231\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 13718507.02436845, tolerance: 2753.321903486231\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 13706047.848124275, tolerance: 2753.321903486231\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 13690406.03569032, tolerance: 2753.321903486231\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 13670794.381086988, tolerance: 2753.321903486231\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 13646245.795015218, tolerance: 2753.321903486231\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 13615580.679837886, tolerance: 2753.321903486231\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 13577373.323622873, tolerance: 2753.321903486231\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 13529920.608156208, tolerance: 2753.321903486231\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 13471218.48980598, tolerance: 2753.321903486231\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 13398954.581488008, tolerance: 2753.321903486231\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 13310528.590455977, tolerance: 2753.321903486231\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 13203115.797389356, tolerance: 2753.321903486231\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 13073790.981404455, tolerance: 2753.321903486231\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 12919729.112886174, tolerance: 2753.321903486231\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 12738491.873820404, tolerance: 2753.321903486231\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 12528392.752768412, tolerance: 2753.321903486231\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 12288907.12027812, tolerance: 2753.321903486231\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 12021061.050642934, tolerance: 2753.321903486231\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 11727704.457379242, tolerance: 2753.321903486231\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 11413566.984203368, tolerance: 2753.321903486231\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 11085024.381464427, tolerance: 2753.321903486231\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 10749570.986969216, tolerance: 2753.321903486231\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 10415080.82390038, tolerance: 2753.321903486231\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 10089009.138994666, tolerance: 2753.321903486231\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 9777704.218602657, tolerance: 2753.321903486231\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 9485957.157639354, tolerance: 2753.321903486231\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 9216836.907742977, tolerance: 2753.321903486231\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 8971777.239570614, tolerance: 2753.321903486231\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 8750831.80632957, tolerance: 2753.321903486231\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 8553002.845594909, tolerance: 2753.321903486231\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 8376568.552591976, tolerance: 2753.321903486231\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 8219365.993957064, tolerance: 2753.321903486231\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 8079015.288983328, tolerance: 2753.321903486231\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 7953088.944512343, tolerance: 2753.321903486231\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 7839237.297915867, tolerance: 2753.321903486231\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 7735280.817484571, tolerance: 2753.321903486231\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 7639277.052384085, tolerance: 2753.321903486231\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 7549567.214150185, tolerance: 2753.321903486231\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 7464805.436922448, tolerance: 2753.321903486231\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 7383972.203368485, tolerance: 2753.321903486231\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 7306371.9385844, tolerance: 2753.321903486231\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 7231613.973232727, tolerance: 2753.321903486231\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 7159576.877369842, tolerance: 2753.321903486231\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 7090358.567763287, tolerance: 2753.321903486231\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 7024217.224121631, tolerance: 2753.321903486231\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 6961509.172985422, tolerance: 2753.321903486231\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 6902628.941757256, tolerance: 2753.321903486231\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 6847954.74212851, tolerance: 2753.321903486231\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 6797801.388529973, tolerance: 2753.321903486231\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 6752382.798167853, tolerance: 2753.321903486231\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 6711786.944628049, tolerance: 2753.321903486231\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 6675965.981966789, tolerance: 2753.321903486231\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 6644742.448857518, tolerance: 2753.321903486231\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 6617829.550839553, tolerance: 2753.321903486231\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 6594860.867273487, tolerance: 2753.321903486231\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 6575423.588385643, tolerance: 2753.321903486231\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 6559089.833983606, tolerance: 2753.321903486231\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 6545442.22593809, tolerance: 2753.321903486231\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 6534091.895329497, tolerance: 2753.321903486231\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 6524688.873515991, tolerance: 2753.321903486231\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 6516926.03970175, tolerance: 2753.321903486231\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 6510538.426567721, tolerance: 2753.321903486231\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 6505299.778051198, tolerance: 2753.321903486231\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 6501017.943079157, tolerance: 2753.321903486231\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 6497530.176477618, tolerance: 2753.321903486231\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 6494698.902794317, tolerance: 2753.321903486231\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 6492408.111473379, tolerance: 2753.321903486231\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 6490560.333699243, tolerance: 2753.321903486231\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 6489074.07424203, tolerance: 2753.321903486231\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 6487881.578697803, tolerance: 2753.321903486231\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 6486926.855244173, tolerance: 2753.321903486231\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 6486163.908028853, tolerance: 2753.321903486231\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 6485555.163896994, tolerance: 2753.321903486231\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 6485070.084972443, tolerance: 2753.321903486231\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 6484683.961142887, tolerance: 2753.321903486231\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 6484376.873670885, tolerance: 2753.321903486231\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 16123836.286658324, tolerance: 3224.8236814135257\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 16123762.414447507, tolerance: 3224.8236814135257\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 16123669.200043011, tolerance: 3224.8236814135257\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 16123551.579596583, tolerance: 3224.8236814135257\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 16123403.163871318, tolerance: 3224.8236814135257\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 16123215.891543614, tolerance: 3224.8236814135257\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 16122979.591935378, tolerance: 3224.8236814135257\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 16122681.433587793, tolerance: 3224.8236814135257\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 16122305.228986477, tolerance: 3224.8236814135257\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 16121830.558093365, tolerance: 3224.8236814135257\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 16121231.663752731, tolerance: 3224.8236814135257\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 16120476.060052723, tolerance: 3224.8236814135257\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 16119522.779778492, tolerance: 3224.8236814135257\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 16118320.168518292, tolerance: 3224.8236814135257\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 16116803.109996729, tolerance: 3224.8236814135257\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 16114889.538918184, tolerance: 3224.8236814135257\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 16112476.063036693, tolerance: 3224.8236814135257\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 16109432.474341486, tolerance: 3224.8236814135257\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 16105594.879294187, tolerance: 3224.8236814135257\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 16100757.119470127, tolerance: 3224.8236814135257\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 16094660.087017834, tolerance: 3224.8236814135257\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 16086978.465806846, tolerance: 3224.8236814135257\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 16077304.353326885, tolerance: 3224.8236814135257\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 16065127.1490184, tolerance: 3224.8236814135257\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 16049809.047450975, tolerance: 3224.8236814135257\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 16030555.476241712, tolerance: 3224.8236814135257\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 16006379.9118725, tolerance: 3224.8236814135257\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 15976062.75839428, tolerance: 3224.8236814135257\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 15938104.483596489, tolerance: 3224.8236814135257\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 15890674.114698276, tolerance: 3224.8236814135257\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 15831555.686060242, tolerance: 3224.8236814135257\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 15758097.52534076, tolerance: 3224.8236814135257\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 15667172.578206714, tolerance: 3224.8236814135257\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 15555162.420748942, tolerance: 3224.8236814135257\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 15417983.020182049, tolerance: 3224.8236814135257\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 15251175.908593172, tolerance: 3224.8236814135257\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 15050092.45331768, tolerance: 3224.8236814135257\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 14810198.17774659, tolerance: 3224.8236814135257\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 14527514.082835251, tolerance: 3224.8236814135257\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 14199187.811678289, tolerance: 3224.8236814135257\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 13824146.920817545, tolerance: 3224.8236814135257\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 13403734.027286611, tolerance: 3224.8236814135257\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 12942174.86967796, tolerance: 3224.8236814135257\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 12446711.65903124, tolerance: 3224.8236814135257\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 11927272.408043088, tolerance: 3224.8236814135257\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 11395650.820912808, tolerance: 3224.8236814135257\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 10864314.587176831, tolerance: 3224.8236814135257\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 10345084.699656615, tolerance: 3224.8236814135257\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 9847974.66461027, tolerance: 3224.8236814135257\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 9380422.14494771, tolerance: 3224.8236814135257\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 8947015.008946372, tolerance: 3224.8236814135257\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 8549670.258610565, tolerance: 3224.8236814135257\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 8188124.101396983, tolerance: 3224.8236814135257\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 7860558.677097128, tolerance: 3224.8236814135257\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 7564216.251072438, tolerance: 3224.8236814135257\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 7295907.83105154, tolerance: 3224.8236814135257\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 7052382.339382334, tolerance: 3224.8236814135257\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 6830565.953165651, tolerance: 3224.8236814135257\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 6627701.871803509, tolerance: 3224.8236814135257\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 6441421.548990724, tolerance: 3224.8236814135257\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 6269768.629955625, tolerance: 3224.8236814135257\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 6111186.722532689, tolerance: 3224.8236814135257\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 5964477.842252077, tolerance: 3224.8236814135257\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 5828739.876908941, tolerance: 3224.8236814135257\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 5703294.550898096, tolerance: 3224.8236814135257\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 5587617.998651196, tolerance: 3224.8236814135257\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 5481282.987854621, tolerance: 3224.8236814135257\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 5383916.67807917, tolerance: 3224.8236814135257\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 5295172.88281887, tolerance: 3224.8236814135257\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 5214714.536832818, tolerance: 3224.8236814135257\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 5142200.89883197, tolerance: 3224.8236814135257\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 5077274.992035713, tolerance: 3224.8236814135257\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 5019549.5762358615, tolerance: 3224.8236814135257\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 4968593.444998965, tolerance: 3224.8236814135257\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 4923922.319001489, tolerance: 3224.8236814135257\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 4884998.717484778, tolerance: 3224.8236814135257\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 4851242.93844574, tolerance: 3224.8236814135257\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 4822053.96370524, tolerance: 3224.8236814135257\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 4796836.339338584, tolerance: 3224.8236814135257\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 4775027.808895422, tolerance: 3224.8236814135257\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 4756122.723191458, tolerance: 3224.8236814135257\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 4739687.533593107, tolerance: 3224.8236814135257\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 4725366.495343723, tolerance: 3224.8236814135257\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 4712877.7115793945, tolerance: 3224.8236814135257\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 4702001.540623016, tolerance: 3224.8236814135257\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 4692564.773319081, tolerance: 3224.8236814135257\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 4684424.413915162, tolerance: 3224.8236814135257\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 4677454.213645316, tolerance: 3224.8236814135257\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 4671535.662146964, tolerance: 3224.8236814135257\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 4666553.5814064825, tolerance: 3224.8236814135257\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 4662395.341810725, tolerance: 3224.8236814135257\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 4658952.253038351, tolerance: 3224.8236814135257\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 4656121.776081866, tolerance: 3224.8236814135257\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 4653809.6000373615, tolerance: 3224.8236814135257\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 4651931.081491842, tolerance: 3224.8236814135257\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 4650411.905959883, tolerance: 3224.8236814135257\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 4649188.052145797, tolerance: 3224.8236814135257\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 4648205.237516106, tolerance: 3224.8236814135257\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 4647418.038791899, tolerance: 3224.8236814135257\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: UserWarning: Coordinate descent without L1 regularization may lead to unexpected results and is discouraged. Set l1_ratio &gt; 0 to add L1 regularization.\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:683: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 4646788.852992684, tolerance: 3224.8236814135257\n  model = cd_fast.enet_coordinate_descent_gram(\n/home/oren/work/notes/notes-isl/.venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:697: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.153e+07, tolerance: 3.855e+03 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n  model = cd_fast.enet_coordinate_descent(\n\n\narray([132393.84003227])\n\n\n\n\n\nWe saw that ridge regression with a wise choice of \\lambda can outperform least squares as well as the null model on the Hitters data set. We now ask whether the lasso can yield either a more accurate or a more interpretable model than ridge regression. In order to fit a lasso model, we once again use the ElasticNetCV() function; however, this time we use the argument l1_ratio=1. Other than that change, we proceed just as we did in fitting a ridge model.\n\nlassoCV = skl.ElasticNetCV(n_alphas=100, \n                           l1_ratio=1,\n                           cv=kfold)\npipeCV = Pipeline(steps=[('scaler', scaler),\n                         ('lasso', lassoCV)])\npipeCV.fit(X, Y)\ntuned_lasso = pipeCV.named_steps['lasso']\ntuned_lasso.alpha_\n\nPipeline(steps=[('scaler', StandardScaler()),\n                ('lasso',\n                 ElasticNetCV(cv=KFold(n_splits=5, random_state=0, shuffle=True),\n                              l1_ratio=1))])In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.  Pipeline?Documentation for PipelineiFittedPipeline(steps=[('scaler', StandardScaler()),\n                ('lasso',\n                 ElasticNetCV(cv=KFold(n_splits=5, random_state=0, shuffle=True),\n                              l1_ratio=1))])  StandardScaler?Documentation for StandardScalerStandardScaler()  ElasticNetCV?Documentation for ElasticNetCVElasticNetCV(cv=KFold(n_splits=5, random_state=0, shuffle=True), l1_ratio=1) \n\n\n3.1472370031649866\n\n\n\nlambdas, soln_array = skl.Lasso.path(Xs, \n                                    Y,\n                                    l1_ratio=1,\n                                    n_alphas=100)[:2]\nsoln_path = pd.DataFrame(soln_array.T,\n                         columns=D.columns,\n                         index=-np.log(lambdas))\n\nWe can see from the coefficient plot of the standardized coefficients that depending on the choice of tuning parameter, some of the coefficients will be exactly equal to zero.\n\npath_fig, ax = subplots(figsize=(8,8))\nsoln_path.plot(ax=ax, legend=False)\nax.legend(loc='upper left')\nax.set_xlabel('$-\\log(\\lambda)$', fontsize=20)\nax.set_ylabel('Standardized coefficiients', fontsize=20);\n\n\n\n\n\n\n\n\nThe smallest cross-validated error is lower than the test set MSE of the null model and of least squares, and very similar to the test MSE of 115526.71 of ridge regression (page~) with \\lambda chosen by cross-validation.\n\nnp.min(tuned_lasso.mse_path_.mean(1))\n\n114690.73118253637\n\n\nLet’s again produce a plot of the cross-validation error.\n\nlassoCV_fig, ax = subplots(figsize=(8,8))\nax.errorbar(-np.log(tuned_lasso.alphas_),\n            tuned_lasso.mse_path_.mean(1),\n            yerr=tuned_lasso.mse_path_.std(1) / np.sqrt(K))\nax.axvline(-np.log(tuned_lasso.alpha_), c='k', ls='--')\nax.set_ylim([50000,250000])\nax.set_xlabel('$-\\log(\\lambda)$', fontsize=20)\nax.set_ylabel('Cross-validated MSE', fontsize=20);\n\n\n\n\n\n\n\n\nHowever, the lasso has a substantial advantage over ridge regression in that the resulting coefficient estimates are sparse. Here we see that 6 of the 19 coefficient estimates are exactly zero. So the lasso model with \\lambda chosen by cross-validation contains only 13 variables.\n\ntuned_lasso.coef_\n\narray([-210.01008773,  243.4550306 ,    0.        ,    0.        ,\n          0.        ,   97.69397357,  -41.52283116,   -0.        ,\n          0.        ,   39.62298193,  205.75273856,  124.55456561,\n       -126.29986768,   15.70262427,  -59.50157967,   75.24590036,\n         21.62698014,  -12.04423675,   -0.        ])\n\n\nAs in ridge regression, we could evaluate the test error of cross-validated lasso by first splitting into test and training sets and internally running cross-validation on the training set. We leave this as an exercise."
  },
  {
    "objectID": "posts/ch06-model-selection-and-regularization/Ch06-varselect-lab.html#pcr-and-pls-regression",
    "href": "posts/ch06-model-selection-and-regularization/Ch06-varselect-lab.html#pcr-and-pls-regression",
    "title": "Chapter 6: Linear Models and Regularization Methods Lab",
    "section": "",
    "text": "Principal components regression (PCR) can be performed using PCA() from the sklearn.decomposition module. We now apply PCR to the Hitters data, in order to predict Salary. Again, ensure that the missing values have been removed from the data, as described in Section~.\nWe use LinearRegression() to fit the regression model here. Note that it fits an intercept by default, unlike the OLS() function seen earlier in Section~.\n\npca = PCA(n_components=2)\nlinreg = skl.LinearRegression()\npipe = Pipeline([('pca', pca),\n                 ('linreg', linreg)])\npipe.fit(X, Y)\npipe.named_steps['linreg'].coef_\n\nPipeline(steps=[('pca', PCA(n_components=2)), ('linreg', LinearRegression())])In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.  Pipeline?Documentation for PipelineiFittedPipeline(steps=[('pca', PCA(n_components=2)), ('linreg', LinearRegression())])  PCA?Documentation for PCAPCA(n_components=2)  LinearRegression?Documentation for LinearRegressionLinearRegression() \n\n\narray([0.09846131, 0.4758765 ])\n\n\nWhen performing PCA, the results vary depending on whether the data has been standardized or not. As in the earlier examples, this can be accomplished by including an additional step in the pipeline.\n\npipe = Pipeline([('scaler', scaler), \n                 ('pca', pca),\n                 ('linreg', linreg)])\npipe.fit(X, Y)\npipe.named_steps['linreg'].coef_\n\nPipeline(steps=[('scaler', StandardScaler()), ('pca', PCA(n_components=2)),\n                ('linreg', LinearRegression())])In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.  Pipeline?Documentation for PipelineiFittedPipeline(steps=[('scaler', StandardScaler()), ('pca', PCA(n_components=2)),\n                ('linreg', LinearRegression())])  StandardScaler?Documentation for StandardScalerStandardScaler()  PCA?Documentation for PCAPCA(n_components=2)  LinearRegression?Documentation for LinearRegressionLinearRegression() \n\n\narray([106.36859204,  21.60350456])\n\n\nWe can of course use CV to choose the number of components, by using skm.GridSearchCV, in this case fixing the parameters to vary the n_components.\n\nparam_grid = {'pca__n_components': range(1, 20)}\ngrid = skm.GridSearchCV(pipe,\n                        param_grid,\n                        cv=kfold,\n                        scoring='neg_mean_squared_error')\ngrid.fit(X, Y)\n\nGridSearchCV(cv=KFold(n_splits=5, random_state=0, shuffle=True),\n             estimator=Pipeline(steps=[('scaler', StandardScaler()),\n                                       ('pca', PCA(n_components=2)),\n                                       ('linreg', LinearRegression())]),\n             param_grid={'pca__n_components': range(1, 20)},\n             scoring='neg_mean_squared_error')In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.  GridSearchCV?Documentation for GridSearchCViFittedGridSearchCV(cv=KFold(n_splits=5, random_state=0, shuffle=True),\n             estimator=Pipeline(steps=[('scaler', StandardScaler()),\n                                       ('pca', PCA(n_components=2)),\n                                       ('linreg', LinearRegression())]),\n             param_grid={'pca__n_components': range(1, 20)},\n             scoring='neg_mean_squared_error') best_estimator_: PipelinePipeline(steps=[('scaler', StandardScaler()), ('pca', PCA(n_components=17)),\n                ('linreg', LinearRegression())])  StandardScaler?Documentation for StandardScalerStandardScaler()  PCA?Documentation for PCAPCA(n_components=17)  LinearRegression?Documentation for LinearRegressionLinearRegression() \n\n\nLet’s plot the results as we have for other methods.\n\npcr_fig, ax = subplots(figsize=(8,8))\nn_comp = param_grid['pca__n_components']\nax.errorbar(n_comp,\n            -grid.cv_results_['mean_test_score'],\n            grid.cv_results_['std_test_score'] / np.sqrt(K))\nax.set_ylabel('Cross-validated MSE', fontsize=20)\nax.set_xlabel('# principal components', fontsize=20)\nax.set_xticks(n_comp[::2])\nax.set_ylim([50000,250000]);\n\n\n\n\n\n\n\n\nWe see that the smallest cross-validation error occurs when 17 components are used. However, from the plot we also see that the cross-validation error is roughly the same when only one component is included in the model. This suggests that a model that uses just a small number of components might suffice.\nThe CV score is provided for each possible number of components from 1 to 19 inclusive. The PCA() method complains if we try to fit an intercept only with n_components=0 so we also compute the MSE for just the null model with these splits.\n\nXn = np.zeros((X.shape[0], 1))\ncv_null = skm.cross_validate(linreg,\n                             Xn,\n                             Y,\n                             cv=kfold,\n                             scoring='neg_mean_squared_error')\n-cv_null['test_score'].mean()\n\n204139.30692994667\n\n\nThe explained_variance_ratio_ attribute of our PCA object provides the percentage of variance explained in the predictors and in the response using different numbers of components. This concept is discussed in greater detail in Section~.\n\npipe.named_steps['pca'].explained_variance_ratio_\n\narray([0.3831424 , 0.21841076])\n\n\nBriefly, we can think of this as the amount of information about the predictors that is captured using M principal components. For example, setting M=1 only captures 38.31% of the variance, while M=2 captures an additional 21.84%, for a total of 60.15% of the variance. By M=6 it increases to 88.63%. Beyond this the increments continue to diminish, until we use all M=p=19 components, which captures all 100% of the variance.\n\n\n\nPartial least squares (PLS) is implemented in the PLSRegression() function.\n\npls = PLSRegression(n_components=2, \n                    scale=True)\npls.fit(X, Y)\n\nPLSRegression()In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.  PLSRegression?Documentation for PLSRegressioniFittedPLSRegression() \n\n\nAs was the case in PCR, we will want to use CV to choose the number of components.\n\nparam_grid = {'n_components':range(1, 20)}\ngrid = skm.GridSearchCV(pls,\n                        param_grid,\n                        cv=kfold,\n                        scoring='neg_mean_squared_error')\ngrid.fit(X, Y)\n\nGridSearchCV(cv=KFold(n_splits=5, random_state=0, shuffle=True),\n             estimator=PLSRegression(),\n             param_grid={'n_components': range(1, 20)},\n             scoring='neg_mean_squared_error')In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.  GridSearchCV?Documentation for GridSearchCViFittedGridSearchCV(cv=KFold(n_splits=5, random_state=0, shuffle=True),\n             estimator=PLSRegression(),\n             param_grid={'n_components': range(1, 20)},\n             scoring='neg_mean_squared_error') best_estimator_: PLSRegressionPLSRegression(n_components=12)  PLSRegression?Documentation for PLSRegressionPLSRegression(n_components=12) \n\n\nAs for our other methods, we plot the MSE.\n\npls_fig, ax = subplots(figsize=(8,8))\nn_comp = param_grid['n_components']\nax.errorbar(n_comp,\n            -grid.cv_results_['mean_test_score'],\n            grid.cv_results_['std_test_score'] / np.sqrt(K))\nax.set_ylabel('Cross-validated MSE', fontsize=20)\nax.set_xlabel('# principal components', fontsize=20)\nax.set_xticks(n_comp[::2])\nax.set_ylim([50000,250000]);\n\n\n\n\n\n\n\n\nCV error is minimized at 12, though there is little noticable difference between this point and a much lower number like 2 or 3 components."
  },
  {
    "objectID": "posts/ch09-svm/index.html",
    "href": "posts/ch09-svm/index.html",
    "title": "Chapter 9: Support Vector Machines",
    "section": "",
    "text": "Figure 1: Opening Remarks\n\n\n\n\n\n\n\n\nFigure 2: Examples and Framework\n\n\n\n\n\n\nReuseCC SA BY-NC-NDCitationBibTeX citation:@online{bochman2025,\n  author = {Bochman, Oren},\n  title = {Chapter 9: {Support} {Vector} {Machines}},\n  date = {2025-01-21},\n  url = {https://orenbochman.github.io/notes-islr/posts/ch09-svm/},\n  langid = {en}\n}\nFor attribution, please cite this work as:\nBochman, Oren. 2025. “Chapter 9: Support Vector Machines.”\nJanuary 21, 2025. https://orenbochman.github.io/notes-islr/posts/ch09-svm/."
  },
  {
    "objectID": "posts/ch13-multiple-testing/index.html",
    "href": "posts/ch13-multiple-testing/index.html",
    "title": "Chapter 13: Multiple Testing",
    "section": "",
    "text": "Figure 1: Opening Remarks\n\n\n\n\n\n\n\n\nFigure 2: Examples and Framework\n\n\n\n\n\n\nReuseCC SA BY-NC-NDCitationBibTeX citation:@online{bochman2025,\n  author = {Bochman, Oren},\n  title = {Chapter 13: {Multiple} {Testing}},\n  date = {2025-01-20},\n  url = {https://orenbochman.github.io/notes-islr/posts/ch13-multiple-testing/},\n  langid = {en}\n}\nFor attribution, please cite this work as:\nBochman, Oren. 2025. “Chapter 13: Multiple Testing.”\nJanuary 20, 2025. https://orenbochman.github.io/notes-islr/posts/ch13-multiple-testing/."
  },
  {
    "objectID": "posts/ch04-classification/Ch04-classification-lab.html",
    "href": "posts/ch04-classification/Ch04-classification-lab.html",
    "title": "Chapter 4: Classification Lab",
    "section": "",
    "text": "In this lab we will examine the Smarket data, which is part of the ISLP library. This data set consists of percentage returns for the S&P 500 stock index over 1,250 days, from the beginning of 2001 until the end of 2005. For each date, we have recorded the percentage returns for each of the five previous trading days, Lag1 through Lag5. We have also recorded Volume (the number of shares traded on the previous day, in billions), Today (the percentage return on the date in question) and Direction (whether the market was Up or Down on this date).\nWe start by importing our libraries at this top level; these are all imports we have seen in previous labs.\n\nimport numpy as np\nimport pandas as pd\nfrom matplotlib.pyplot import subplots\nimport statsmodels.api as sm\nfrom ISLP import load_data\nfrom ISLP.models import (ModelSpec as MS,\n                         summarize)\n\nWe also collect together the new imports needed for this lab.\n\nfrom ISLP import confusion_table\nfrom ISLP.models import contrast\nfrom sklearn.discriminant_analysis import \\\n     (LinearDiscriminantAnalysis as LDA,\n      QuadraticDiscriminantAnalysis as QDA)\nfrom sklearn.naive_bayes import GaussianNB\nfrom sklearn.neighbors import KNeighborsClassifier\nfrom sklearn.preprocessing import StandardScaler\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.linear_model import LogisticRegression\n\nNow we are ready to load the Smarket data.\n\nSmarket = load_data('Smarket')\nSmarket\n\n\n\n\n\n\n\n\nYear\nLag1\nLag2\nLag3\nLag4\nLag5\nVolume\nToday\nDirection\n\n\n\n\n0\n2001\n0.381\n-0.192\n-2.624\n-1.055\n5.010\n1.19130\n0.959\nUp\n\n\n1\n2001\n0.959\n0.381\n-0.192\n-2.624\n-1.055\n1.29650\n1.032\nUp\n\n\n2\n2001\n1.032\n0.959\n0.381\n-0.192\n-2.624\n1.41120\n-0.623\nDown\n\n\n3\n2001\n-0.623\n1.032\n0.959\n0.381\n-0.192\n1.27600\n0.614\nUp\n\n\n4\n2001\n0.614\n-0.623\n1.032\n0.959\n0.381\n1.20570\n0.213\nUp\n\n\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n\n\n1245\n2005\n0.422\n0.252\n-0.024\n-0.584\n-0.285\n1.88850\n0.043\nUp\n\n\n1246\n2005\n0.043\n0.422\n0.252\n-0.024\n-0.584\n1.28581\n-0.955\nDown\n\n\n1247\n2005\n-0.955\n0.043\n0.422\n0.252\n-0.024\n1.54047\n0.130\nUp\n\n\n1248\n2005\n0.130\n-0.955\n0.043\n0.422\n0.252\n1.42236\n-0.298\nDown\n\n\n1249\n2005\n-0.298\n0.130\n-0.955\n0.043\n0.422\n1.38254\n-0.489\nDown\n\n\n\n\n1250 rows × 9 columns\n\n\n\nThis gives a truncated listing of the data. We can see what the variable names are.\n\nSmarket.columns\n\nIndex(['Year', 'Lag1', 'Lag2', 'Lag3', 'Lag4', 'Lag5', 'Volume', 'Today',\n       'Direction'],\n      dtype='object')\n\n\nWe compute the correlation matrix using the corr() method for data frames, which produces a matrix that contains all of the pairwise correlations among the variables.\nBy instructing pandas to use only numeric variables, the corr() method does not report a correlation for the Direction variable because it is qualitative.\n\nSmarket.corr(numeric_only=True)\n\n\n\n\n\n\n\n\nYear\nLag1\nLag2\nLag3\nLag4\nLag5\nVolume\nToday\n\n\n\n\nYear\n1.000000\n0.029700\n0.030596\n0.033195\n0.035689\n0.029788\n0.539006\n0.030095\n\n\nLag1\n0.029700\n1.000000\n-0.026294\n-0.010803\n-0.002986\n-0.005675\n0.040910\n-0.026155\n\n\nLag2\n0.030596\n-0.026294\n1.000000\n-0.025897\n-0.010854\n-0.003558\n-0.043383\n-0.010250\n\n\nLag3\n0.033195\n-0.010803\n-0.025897\n1.000000\n-0.024051\n-0.018808\n-0.041824\n-0.002448\n\n\nLag4\n0.035689\n-0.002986\n-0.010854\n-0.024051\n1.000000\n-0.027084\n-0.048414\n-0.006900\n\n\nLag5\n0.029788\n-0.005675\n-0.003558\n-0.018808\n-0.027084\n1.000000\n-0.022002\n-0.034860\n\n\nVolume\n0.539006\n0.040910\n-0.043383\n-0.041824\n-0.048414\n-0.022002\n1.000000\n0.014592\n\n\nToday\n0.030095\n-0.026155\n-0.010250\n-0.002448\n-0.006900\n-0.034860\n0.014592\n1.000000\n\n\n\n\n\n\n\nAs one would expect, the correlations between the lagged return variables and today’s return are close to zero. The only substantial correlation is between Year and Volume. By plotting the data we see that Volume is increasing over time. In other words, the average number of shares traded daily increased from 2001 to 2005.\n\nSmarket.plot(y='Volume');\n\n\n\n\n\n\n\n\n\n\n\nNext, we will fit a logistic regression model in order to predict Direction using Lag1 through Lag5 and Volume. The sm.GLM() function fits generalized linear models, a class of models that includes logistic regression. Alternatively, the function sm.Logit() fits a logistic regression model directly. The syntax of sm.GLM() is similar to that of sm.OLS(), except that we must pass in the argument family=sm.families.Binomial() in order to tell statsmodels to run a logistic regression rather than some other type of generalized linear model.\n\nallvars = Smarket.columns.drop(['Today', 'Direction', 'Year'])\ndesign = MS(allvars)\nX = design.fit_transform(Smarket)\ny = Smarket.Direction == 'Up'\nglm = sm.GLM(y,\n             X,\n             family=sm.families.Binomial())\nresults = glm.fit()\nsummarize(results)\n\n\n\n\n\n\n\n\ncoef\nstd err\nz\nP&gt;|z|\n\n\n\n\nintercept\n-0.1260\n0.241\n-0.523\n0.601\n\n\nLag1\n-0.0731\n0.050\n-1.457\n0.145\n\n\nLag2\n-0.0423\n0.050\n-0.845\n0.398\n\n\nLag3\n0.0111\n0.050\n0.222\n0.824\n\n\nLag4\n0.0094\n0.050\n0.187\n0.851\n\n\nLag5\n0.0103\n0.050\n0.208\n0.835\n\n\nVolume\n0.1354\n0.158\n0.855\n0.392\n\n\n\n\n\n\n\nThe smallest p-value here is associated with Lag1. The negative coefficient for this predictor suggests that if the market had a positive return yesterday, then it is less likely to go up today. However, at a value of 0.15, the p-value is still relatively large, and so there is no clear evidence of a real association between Lag1 and Direction.\nWe use the params attribute of results in order to access just the coefficients for this fitted model.\n\nresults.params\n\nintercept   -0.126000\nLag1        -0.073074\nLag2        -0.042301\nLag3         0.011085\nLag4         0.009359\nLag5         0.010313\nVolume       0.135441\ndtype: float64\n\n\nLikewise we can use the pvalues attribute to access the p-values for the coefficients.\n\nresults.pvalues\n\nintercept    0.600700\nLag1         0.145232\nLag2         0.398352\nLag3         0.824334\nLag4         0.851445\nLag5         0.834998\nVolume       0.392404\ndtype: float64\n\n\nThe predict() method of results can be used to predict the probability that the market will go up, given values of the predictors. This method returns predictions on the probability scale. If no data set is supplied to the predict() function, then the probabilities are computed for the training data that was used to fit the logistic regression model. As with linear regression, one can pass an optional exog argument consistent with a design matrix if desired. Here we have printed only the first ten probabilities.\n\nprobs = results.predict()\nprobs[:10]\n\narray([0.50708413, 0.48146788, 0.48113883, 0.51522236, 0.51078116,\n       0.50695646, 0.49265087, 0.50922916, 0.51761353, 0.48883778])\n\n\nIn order to make a prediction as to whether the market will go up or down on a particular day, we must convert these predicted probabilities into class labels, Up or Down. The following two commands create a vector of class predictions based on whether the predicted probability of a market increase is greater than or less than 0.5.\n\nlabels = np.array(['Down']*1250)\nlabels[probs&gt;0.5] = \"Up\"\n\nThe confusion_table() function from the ISLP package summarizes these predictions, showing how many observations were correctly or incorrectly classified. Our function, which is adapted from a similar function in the module sklearn.metrics, transposes the resulting matrix and includes row and column labels. The confusion_table() function takes as first argument the predicted labels, and second argument the true labels.\n\nconfusion_table(labels, Smarket.Direction)\n\n\n\n\n\n\n\nTruth\nDown\nUp\n\n\nPredicted\n\n\n\n\n\n\nDown\n145\n141\n\n\nUp\n457\n507\n\n\n\n\n\n\n\nThe diagonal elements of the confusion matrix indicate correct predictions, while the off-diagonals represent incorrect predictions. Hence our model correctly predicted that the market would go up on 507 days and that it would go down on 145 days, for a total of 507 + 145 = 652 correct predictions. The np.mean() function can be used to compute the fraction of days for which the prediction was correct. In this case, logistic regression correctly predicted the movement of the market 52.2% of the time.\n\n(507+145)/1250, np.mean(labels == Smarket.Direction)\n\n(0.5216, 0.5216)\n\n\nAt first glance, it appears that the logistic regression model is working a little better than random guessing. However, this result is misleading because we trained and tested the model on the same set of 1,250 observations. In other words, 100-52.2=47.8% is the training error rate. As we have seen previously, the training error rate is often overly optimistic — it tends to underestimate the test error rate. In order to better assess the accuracy of the logistic regression model in this setting, we can fit the model using part of the data, and then examine how well it predicts the held out data. This will yield a more realistic error rate, in the sense that in practice we will be interested in our model’s performance not on the data that we used to fit the model, but rather on days in the future for which the market’s movements are unknown.\nTo implement this strategy, we first create a Boolean vector corresponding to the observations from 2001 through 2004. We then use this vector to create a held out data set of observations from 2005.\n\ntrain = (Smarket.Year &lt; 2005)\nSmarket_train = Smarket.loc[train]\nSmarket_test = Smarket.loc[~train]\nSmarket_test.shape\n\n(252, 9)\n\n\nThe object train is a vector of 1,250 elements, corresponding to the observations in our data set. The elements of the vector that correspond to observations that occurred before 2005 are set to True, whereas those that correspond to observations in 2005 are set to False. Hence train is a boolean array, since its elements are True and False. Boolean arrays can be used to obtain a subset of the rows or columns of a data frame using the loc method. For instance, the command Smarket.loc[train] would pick out a submatrix of the stock market data set, corresponding only to the dates before 2005, since those are the ones for which the elements of train are True. The ~ symbol can be used to negate all of the elements of a Boolean vector. That is, ~train is a vector similar to train, except that the elements that are True in train get swapped to False in ~train, and vice versa. Therefore, Smarket.loc[~train] yields a subset of the rows of the data frame of the stock market data containing only the observations for which train is False. The output above indicates that there are 252 such observations.\nWe now fit a logistic regression model using only the subset of the observations that correspond to dates before 2005. We then obtain predicted probabilities of the stock market going up for each of the days in our test set — that is, for the days in 2005.\n\nX_train, X_test = X.loc[train], X.loc[~train]\ny_train, y_test = y.loc[train], y.loc[~train]\nglm_train = sm.GLM(y_train,\n                   X_train,\n                   family=sm.families.Binomial())\nresults = glm_train.fit()\nprobs = results.predict(exog=X_test)\n\nNotice that we have trained and tested our model on two completely separate data sets: training was performed using only the dates before 2005, and testing was performed using only the dates in 2005.\nFinally, we compare the predictions for 2005 to the actual movements of the market over that time period. We will first store the test and training labels (recall y_test is binary).\n\nD = Smarket.Direction\nL_train, L_test = D.loc[train], D.loc[~train]\n\nNow we threshold the fitted probability at 50% to form our predicted labels.\n\nlabels = np.array(['Down']*252)\nlabels[probs&gt;0.5] = 'Up'\nconfusion_table(labels, L_test)\n\n\n\n\n\n\n\nTruth\nDown\nUp\n\n\nPredicted\n\n\n\n\n\n\nDown\n77\n97\n\n\nUp\n34\n44\n\n\n\n\n\n\n\nThe test accuracy is about 48% while the error rate is about 52%\n\nnp.mean(labels == L_test), np.mean(labels != L_test)\n\n(0.4801587301587302, 0.5198412698412699)\n\n\nThe != notation means not equal to, and so the last command computes the test set error rate. The results are rather disappointing: the test error rate is 52%, which is worse than random guessing! Of course this result is not all that surprising, given that one would not generally expect to be able to use previous days’ returns to predict future market performance. (After all, if it were possible to do so, then the authors of this book would be out striking it rich rather than writing a statistics textbook.)\nWe recall that the logistic regression model had very underwhelming p-values associated with all of the predictors, and that the smallest p-value, though not very small, corresponded to Lag1. Perhaps by removing the variables that appear not to be helpful in predicting Direction, we can obtain a more effective model. After all, using predictors that have no relationship with the response tends to cause a deterioration in the test error rate (since such predictors cause an increase in variance without a corresponding decrease in bias), and so removing such predictors may in turn yield an improvement. Below we refit the logistic regression using just Lag1 and Lag2, which seemed to have the highest predictive power in the original logistic regression model.\n\nmodel = MS(['Lag1', 'Lag2']).fit(Smarket)\nX = model.transform(Smarket)\nX_train, X_test = X.loc[train], X.loc[~train]\nglm_train = sm.GLM(y_train,\n                   X_train,\n                   family=sm.families.Binomial())\nresults = glm_train.fit()\nprobs = results.predict(exog=X_test)\nlabels = np.array(['Down']*252)\nlabels[probs&gt;0.5] = 'Up'\nconfusion_table(labels, L_test)\n\n\n\n\n\n\n\nTruth\nDown\nUp\n\n\nPredicted\n\n\n\n\n\n\nDown\n35\n35\n\n\nUp\n76\n106\n\n\n\n\n\n\n\nLet’s evaluate the overall accuracy as well as the accuracy within the days when logistic regression predicts an increase.\n\n(35+106)/252,106/(106+76)\n\n(0.5595238095238095, 0.5824175824175825)\n\n\nNow the results appear to be a little better: 56% of the daily movements have been correctly predicted. It is worth noting that in this case, a much simpler strategy of predicting that the market will increase every day will also be correct 56% of the time! Hence, in terms of overall error rate, the logistic regression method is no better than the naive approach. However, the confusion matrix shows that on days when logistic regression predicts an increase in the market, it has a 58% accuracy rate. This suggests a possible trading strategy of buying on days when the model predicts an increasing market, and avoiding trades on days when a decrease is predicted. Of course one would need to investigate more carefully whether this small improvement was real or just due to random chance.\nSuppose that we want to predict the returns associated with particular values of Lag1 and Lag2. In particular, we want to predict Direction on a day when Lag1 and Lag2 equal 1.2 and 1.1, respectively, and on a day when they equal 1.5 and -0.8. We do this using the predict() function.\n\nnewdata = pd.DataFrame({'Lag1':[1.2, 1.5],\n                        'Lag2':[1.1, -0.8]});\nnewX = model.transform(newdata)\nresults.predict(newX)\n\n0    0.479146\n1    0.496094\ndtype: float64\n\n\n\n\n\nWe begin by performing LDA on the Smarket data, using the function LinearDiscriminantAnalysis(), which we have abbreviated LDA(). We fit the model using only the observations before 2005.\n\nlda = LDA(store_covariance=True)\n\nSince the LDA estimator automatically adds an intercept, we should remove the column corresponding to the intercept in both X_train and X_test. We can also directly use the labels rather than the Boolean vectors y_train.\n\nX_train, X_test = [M.drop(columns=['intercept'])\n                   for M in [X_train, X_test]]\nlda.fit(X_train, L_train)\n\nLinearDiscriminantAnalysis(store_covariance=True)In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.  LinearDiscriminantAnalysis?Documentation for LinearDiscriminantAnalysisiFittedLinearDiscriminantAnalysis(store_covariance=True) \n\n\nHere we have used the list comprehensions introduced in Section~. Looking at our first line above, we see that the right-hand side is a list of length two. This is because the code for M in [X_train, X_test] iterates over a list of length two. While here we loop over a list, the list comprehension method works when looping over any iterable object. We then apply the drop() method to each element in the iteration, collecting the result in a list. The left-hand side tells Python to unpack this list of length two, assigning its elements to the variables X_train and X_test. Of course, this overwrites the previous values of X_train and X_test.\nHaving fit the model, we can extract the means in the two classes with the means_ attribute. These are the average of each predictor within each class, and are used by LDA as estimates of \\mu_k. These suggest that there is a tendency for the previous 2 days’ returns to be negative on days when the market increases, and a tendency for the previous days’ returns to be positive on days when the market declines.\n\nlda.means_\n\narray([[ 0.04279022,  0.03389409],\n       [-0.03954635, -0.03132544]])\n\n\nThe estimated prior probabilities are stored in the priors_ attribute. The package sklearn typically uses this trailing _ to denote a quantity estimated when using the fit() method. We can be sure of which entry corresponds to which label by looking at the classes_ attribute.\n\nlda.classes_\n\narray(['Down', 'Up'], dtype='&lt;U4')\n\n\nThe LDA output indicates that \\hat\\pi_{Down}=0.492 and \\hat\\pi_{Up}=0.508.\n\nlda.priors_\n\narray([0.49198397, 0.50801603])\n\n\nThe linear discriminant vectors can be found in the scalings_ attribute:\n\nlda.scalings_\n\narray([[-0.64201904],\n       [-0.51352928]])\n\n\nThese values provide the linear combination of Lag1 and Lag2 that are used to form the LDA decision rule. In other words, these are the multipliers of the elements of X=x in (). If $-0.64Lag1 - 0.51 Lag2 $ is large, then the LDA classifier will predict a market increase, and if it is small, then the LDA classifier will predict a market decline.\n\nlda_pred = lda.predict(X_test)\n\nAs we observed in our comparison of classification methods (Section~), the LDA and logistic regression predictions are almost identical.\n\nconfusion_table(lda_pred, L_test)\n\n\n\n\n\n\n\nTruth\nDown\nUp\n\n\nPredicted\n\n\n\n\n\n\nDown\n35\n35\n\n\nUp\n76\n106\n\n\n\n\n\n\n\nWe can also estimate the probability of each class for each point in a training set. Applying a 50% threshold to the posterior probabilities of being in class one allows us to recreate the predictions contained in lda_pred.\n\nlda_prob = lda.predict_proba(X_test)\nnp.all(\n       np.where(lda_prob[:,1] &gt;= 0.5, 'Up','Down') == lda_pred\n       )\n\nTrue\n\n\nAbove, we used the np.where() function that creates an array with value 'Up' for indices where the second column of lda_prob (the estimated posterior probability of 'Up') is greater than 0.5. For problems with more than two classes the labels are chosen as the class whose posterior probability is highest:\n\nnp.all(\n       [lda.classes_[i] for i in np.argmax(lda_prob, 1)] == lda_pred\n       )\n\nTrue\n\n\nIf we wanted to use a posterior probability threshold other than 50% in order to make predictions, then we could easily do so. For instance, suppose that we wish to predict a market decrease only if we are very certain that the market will indeed decrease on that day — say, if the posterior probability is at least 90%. We know that the first column of lda_prob corresponds to the label Down after having checked the classes_ attribute, hence we use the column index 0 rather than 1 as we did above.\n\nnp.sum(lda_prob[:,0] &gt; 0.9)\n\n0\n\n\nNo days in 2005 meet that threshold! In fact, the greatest posterior probability of decrease in all of 2005 was 52.02%.\nThe LDA classifier above is the first classifier from the sklearn library. We will use several other objects from this library. The objects follow a common structure that simplifies tasks such as cross-validation, which we will see in Chapter~. Specifically, the methods first create a generic classifier without referring to any data. This classifier is then fit to data with the fit() method and predictions are always produced with the predict() method. This pattern of first instantiating the classifier, followed by fitting it, and then producing predictions is an explicit design choice of sklearn. This uniformity makes it possible to cleanly copy the classifier so that it can be fit on different data; e.g. different training sets arising in cross-validation. This standard pattern also allows for a predictable formation of workflows.\n\n\n\nWe will now fit a QDA model to the Smarket data. QDA is implemented via QuadraticDiscriminantAnalysis() in the sklearn package, which we abbreviate to QDA(). The syntax is very similar to LDA().\n\nqda = QDA(store_covariance=True)\nqda.fit(X_train, L_train)\n\nQuadraticDiscriminantAnalysis(store_covariance=True)In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.  QuadraticDiscriminantAnalysis?Documentation for QuadraticDiscriminantAnalysisiFittedQuadraticDiscriminantAnalysis(store_covariance=True) \n\n\nThe QDA() function will again compute means_ and priors_.\n\nqda.means_, qda.priors_\n\n(array([[ 0.04279022,  0.03389409],\n        [-0.03954635, -0.03132544]]),\n array([0.49198397, 0.50801603]))\n\n\nThe QDA() classifier will estimate one covariance per class. Here is the estimated covariance in the first class:\n\nqda.covariance_[0]\n\narray([[ 1.50662277, -0.03924806],\n       [-0.03924806,  1.53559498]])\n\n\nThe output contains the group means. But it does not contain the coefficients of the linear discriminants, because the QDA classifier involves a quadratic, rather than a linear, function of the predictors. The predict() function works in exactly the same fashion as for LDA.\n\nqda_pred = qda.predict(X_test)\nconfusion_table(qda_pred, L_test)\n\n\n\n\n\n\n\nTruth\nDown\nUp\n\n\nPredicted\n\n\n\n\n\n\nDown\n30\n20\n\n\nUp\n81\n121\n\n\n\n\n\n\n\nInterestingly, the QDA predictions are accurate almost 60% of the time, even though the 2005 data was not used to fit the model.\n\nnp.mean(qda_pred == L_test)\n\n0.5992063492063492\n\n\nThis level of accuracy is quite impressive for stock market data, which is known to be quite hard to model accurately. This suggests that the quadratic form assumed by QDA may capture the true relationship more accurately than the linear forms assumed by LDA and logistic regression. However, we recommend evaluating this method’s performance on a larger test set before betting that this approach will consistently beat the market!\n\n\n\nNext, we fit a naive Bayes model to the Smarket data. The syntax is similar to that of LDA() and QDA(). By default, this implementation GaussianNB() of the naive Bayes classifier models each quantitative feature using a Gaussian distribution. However, a kernel density method can also be used to estimate the distributions.\n\nNB = GaussianNB()\nNB.fit(X_train, L_train)\n\nGaussianNB()In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.  GaussianNB?Documentation for GaussianNBiFittedGaussianNB() \n\n\nThe classes are stored as classes_.\n\nNB.classes_\n\narray(['Down', 'Up'], dtype='&lt;U4')\n\n\nThe class prior probabilities are stored in the class_prior_ attribute.\n\nNB.class_prior_\n\narray([0.49198397, 0.50801603])\n\n\nThe parameters of the features can be found in the theta_ and var_ attributes. The number of rows is equal to the number of classes, while the number of columns is equal to the number of features. We see below that the mean for feature Lag1 in the Down class is 0.043.\n\nNB.theta_\n\narray([[ 0.04279022,  0.03389409],\n       [-0.03954635, -0.03132544]])\n\n\nIts variance is 1.503.\n\nNB.var_\n\narray([[1.50355429, 1.53246749],\n       [1.51401364, 1.48732877]])\n\n\nHow do we know the names of these attributes? We use NB? (or ?NB).\nWe can easily verify the mean computation:\n\nX_train[L_train == 'Down'].mean()\n\nLag1    0.042790\nLag2    0.033894\ndtype: float64\n\n\nSimilarly for the variance:\n\nX_train[L_train == 'Down'].var(ddof=0)\n\nLag1    1.503554\nLag2    1.532467\ndtype: float64\n\n\nSince NB() is a classifier in the sklearn library, making predictions uses the same syntax as for LDA() and QDA() above.\n\nnb_labels = NB.predict(X_test)\nconfusion_table(nb_labels, L_test)\n\n\n\n\n\n\n\nTruth\nDown\nUp\n\n\nPredicted\n\n\n\n\n\n\nDown\n29\n20\n\n\nUp\n82\n121\n\n\n\n\n\n\n\nNaive Bayes performs well on these data, with accurate predictions over 59% of the time. This is slightly worse than QDA, but much better than LDA.\nAs for LDA, the predict_proba() method estimates the probability that each observation belongs to a particular class.\n\nNB.predict_proba(X_test)[:5]\n\narray([[0.4873288 , 0.5126712 ],\n       [0.47623584, 0.52376416],\n       [0.46529531, 0.53470469],\n       [0.47484469, 0.52515531],\n       [0.49020587, 0.50979413]])\n\n\n\n\n\nWe will now perform KNN using the KNeighborsClassifier() function. This function works similarly to the other model-fitting functions that we have encountered thus far.\nAs is the case for LDA and QDA, we fit the classifier using the fit method. New predictions are formed using the predict method of the object returned by fit().\n\nknn1 = KNeighborsClassifier(n_neighbors=1)\nX_train, X_test = [np.asarray(X) for X in [X_train, X_test]]\nknn1.fit(X_train, L_train)\nknn1_pred = knn1.predict(X_test)\nconfusion_table(knn1_pred, L_test)\n\nKNeighborsClassifier(n_neighbors=1)In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.  KNeighborsClassifier?Documentation for KNeighborsClassifieriFittedKNeighborsClassifier(n_neighbors=1) \n\n\n\n\n\n\n\n\nTruth\nDown\nUp\n\n\nPredicted\n\n\n\n\n\n\nDown\n43\n58\n\n\nUp\n68\n83\n\n\n\n\n\n\n\nThe results using K=1 are not very good, since only 50% of the observations are correctly predicted. Of course, it may be that K=1 results in an overly-flexible fit to the data.\n\n(83+43)/252, np.mean(knn1_pred == L_test)\n\n(0.5, 0.5)\n\n\nWe repeat the analysis below using K=3.\n\nknn3 = KNeighborsClassifier(n_neighbors=3)\nknn3_pred = knn3.fit(X_train, L_train).predict(X_test)\nnp.mean(knn3_pred == L_test)\n\n0.5317460317460317\n\n\nThe results have improved slightly. But increasing K further provides no further improvements. It appears that for these data, and this train/test split, QDA gives the best results of the methods that we have examined so far.\nKNN does not perform well on the Smarket data, but it often does provide impressive results. As an example we will apply the KNN approach to the Caravan data set, which is part of the ISLP library. This data set includes 85 predictors that measure demographic characteristics for 5,822 individuals. The response variable is Purchase, which indicates whether or not a given individual purchases a caravan insurance policy. In this data set, only 6% of people purchased caravan insurance.\n\nCaravan = load_data('Caravan')\nPurchase = Caravan.Purchase\nPurchase.value_counts()\n\nPurchase\nNo     5474\nYes     348\nName: count, dtype: int64\n\n\nThe method value_counts() takes a pd.Series or pd.DataFrame and returns a pd.Series with the corresponding counts for each unique element. In this case Purchase has only Yes and No values and the method returns how many values of each there are.\n\n348 / 5822\n\n0.05977327378907592\n\n\nOur features will include all columns except Purchase.\n\nfeature_df = Caravan.drop(columns=['Purchase'])\n\nBecause the KNN classifier predicts the class of a given test observation by identifying the observations that are nearest to it, the scale of the variables matters. Any variables that are on a large scale will have a much larger effect on the distance between the observations, and hence on the KNN classifier, than variables that are on a small scale. For instance, imagine a data set that contains two variables, salary and age (measured in dollars and years, respectively). As far as KNN is concerned, a difference of 1,000 USD in salary is enormous compared to a difference of 50 years in age. Consequently, salary will drive the KNN classification results, and age will have almost no effect. This is contrary to our intuition that a salary difference of 1,000 USD is quite small compared to an age difference of 50 years. Furthermore, the importance of scale to the KNN classifier leads to another issue: if we measured salary in Japanese yen, or if we measured age in minutes, then we’d get quite different classification results from what we get if these two variables are measured in dollars and years.\nA good way to handle this problem is to standardize the data so that all variables are given a mean of zero and a standard deviation of one. Then all variables will be on a comparable scale. This is accomplished using the StandardScaler() transformation.\n\nscaler = StandardScaler(with_mean=True,\n                        with_std=True,\n                        copy=True)\n\nThe argument with_mean indicates whether or not we should subtract the mean, while with_std indicates whether or not we should scale the columns to have standard deviation of 1 or not. Finally, the argument copy=True indicates that we will always copy data, rather than trying to do calculations in place where possible.\nThis transformation can be fit and then applied to arbitrary data. In the first line below, the parameters for the scaling are computed and stored in scaler, while the second line actually constructs the standardized set of features.\n\nscaler.fit(feature_df)\nX_std = scaler.transform(feature_df)\n\nStandardScaler()In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.  StandardScaler?Documentation for StandardScaleriFittedStandardScaler() \n\n\nNow every column of feature_std below has a standard deviation of one and a mean of zero.\n\nfeature_std = pd.DataFrame(\n                 X_std,\n                 columns=feature_df.columns);\nfeature_std.std()\n\nMOSTYPE     1.000086\nMAANTHUI    1.000086\nMGEMOMV     1.000086\nMGEMLEEF    1.000086\nMOSHOOFD    1.000086\n              ...   \nAZEILPL     1.000086\nAPLEZIER    1.000086\nAFIETS      1.000086\nAINBOED     1.000086\nABYSTAND    1.000086\nLength: 85, dtype: float64\n\n\nNotice that the standard deviations are not quite 1 here; this is again due to some procedures using the 1/n convention for variances (in this case scaler()), while others use 1/(n-1) (the std() method). See the footnote on page~. In this case it does not matter, as long as the variables are all on the same scale.\nUsing the function train_test_split() we now split the observations into a test set, containing 1000 observations, and a training set containing the remaining observations. The argument random_state=0 ensures that we get the same split each time we rerun the code.\n\n(X_train,\n X_test,\n y_train,\n y_test) = train_test_split(np.asarray(feature_std),\n                            Purchase,\n                            test_size=1000,\n                            random_state=0)\n\n?train_test_split reveals that the non-keyword arguments can be lists, arrays, pandas dataframes etc that all have the same length (shape[0]) and hence are indexable. In this case they are the dataframe feature_std and the response variable Purchase. {Note that we have converted feature_std to an ndarray to address a bug in sklearn.} We fit a KNN model on the training data using K=1, and evaluate its performance on the test data.\n\nknn1 = KNeighborsClassifier(n_neighbors=1)\nknn1_pred = knn1.fit(X_train, y_train).predict(X_test)\nnp.mean(y_test != knn1_pred), np.mean(y_test != \"No\")\n\n(0.111, 0.067)\n\n\nThe KNN error rate on the 1,000 test observations is about 11%. At first glance, this may appear to be fairly good. However, since just over 6% of customers purchased insurance, we could get the error rate down to almost 6% by always predicting No regardless of the values of the predictors! This is known as the null rate.}\nSuppose that there is some non-trivial cost to trying to sell insurance to a given individual. For instance, perhaps a salesperson must visit each potential customer. If the company tries to sell insurance to a random selection of customers, then the success rate will be only 6%, which may be far too low given the costs involved. Instead, the company would like to try to sell insurance only to customers who are likely to buy it. So the overall error rate is not of interest. Instead, the fraction of individuals that are correctly predicted to buy insurance is of interest.\n\nconfusion_table(knn1_pred, y_test)\n\n\n\n\n\n\n\nTruth\nNo\nYes\n\n\nPredicted\n\n\n\n\n\n\nNo\n880\n58\n\n\nYes\n53\n9\n\n\n\n\n\n\n\nIt turns out that KNN with K=1 does far better than random guessing among the customers that are predicted to buy insurance. Among 62 such customers, 9, or 14.5%, actually do purchase insurance. This is double the rate that one would obtain from random guessing.\n\n9/(53+9)\n\n0.14516129032258066\n\n\n\n\nThe number of neighbors in KNN is referred to as a tuning parameter, also referred to as a hyperparameter. We do not know a priori what value to use. It is therefore of interest to see how the classifier performs on test data as we vary these parameters. This can be achieved with a for loop, described in Section~. Here we use a for loop to look at the accuracy of our classifier in the group predicted to purchase insurance as we vary the number of neighbors from 1 to 5:\n\nfor K in range(1,6):\n    knn = KNeighborsClassifier(n_neighbors=K)\n    knn_pred = knn.fit(X_train, y_train).predict(X_test)\n    C = confusion_table(knn_pred, y_test)\n    templ = ('K={0:d}: # predicted to rent: {1:&gt;2},' +\n            '  # who did rent {2:d}, accuracy {3:.1%}')\n    pred = C.loc['Yes'].sum()\n    did_rent = C.loc['Yes','Yes']\n    print(templ.format(\n          K,\n          pred,\n          did_rent,\n          did_rent / pred))\n\nK=1: # predicted to rent: 62,  # who did rent 9, accuracy 14.5%\nK=2: # predicted to rent:  6,  # who did rent 1, accuracy 16.7%\nK=3: # predicted to rent: 20,  # who did rent 3, accuracy 15.0%\nK=4: # predicted to rent:  4,  # who did rent 0, accuracy 0.0%\nK=5: # predicted to rent:  7,  # who did rent 1, accuracy 14.3%\n\n\nWe see some variability — the numbers for K=4 are very different from the rest.\n\n\n\nAs a comparison, we can also fit a logistic regression model to the data. This can also be done with sklearn, though by default it fits something like the ridge regression version of logistic regression, which we introduce in Chapter~. This can be modified by appropriately setting the argument C below. Its default value is 1 but by setting it to a very large number, the algorithm converges to the same solution as the usual (unregularized) logistic regression estimator discussed above.\nUnlike the statsmodels package, sklearn focuses less on inference and more on classification. Hence, the summary methods seen in statsmodels and our simplified version seen with summarize are not generally available for the classifiers in sklearn.\n\nlogit = LogisticRegression(C=1e10, solver='liblinear')\nlogit.fit(X_train, y_train)\nlogit_pred = logit.predict_proba(X_test)\nlogit_labels = np.where(logit_pred[:,1] &gt; .5, 'Yes', 'No')\nconfusion_table(logit_labels, y_test)\n\nLogisticRegression(C=10000000000.0, solver='liblinear')In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.  LogisticRegression?Documentation for LogisticRegressioniFittedLogisticRegression(C=10000000000.0, solver='liblinear') \n\n\n\n\n\n\n\n\nTruth\nNo\nYes\n\n\nPredicted\n\n\n\n\n\n\nNo\n931\n67\n\n\nYes\n2\n0\n\n\n\n\n\n\n\nWe used the argument solver='liblinear' above to avoid a warning with the default solver which would indicate that the algorithm does not converge.\nIf we use 0.5 as the predicted probability cut-off for the classifier, then we have a problem: only two of the test observations are predicted to purchase insurance. However, we are not required to use a cut-off of 0.5. If we instead predict a purchase any time the predicted probability of purchase exceeds 0.25, we get much better results: we predict that 29 people will purchase insurance, and we are correct for about 31% of these people. This is almost five times better than random guessing!\n\nlogit_labels = np.where(logit_pred[:,1]&gt;0.25, 'Yes', 'No')\nconfusion_table(logit_labels, y_test)\n\n\n\n\n\n\n\nTruth\nNo\nYes\n\n\nPredicted\n\n\n\n\n\n\nNo\n913\n58\n\n\nYes\n20\n9\n\n\n\n\n\n\n\n\n9/(20+9)\n\n0.3103448275862069\n\n\n\n\n\n\nHere we fit linear and Poisson regression models to the Bikeshare data, as described in Section~. The response bikers measures the number of bike rentals per hour in Washington, DC in the period 2010–2012.\n\nBike = load_data('Bikeshare')\n\nLet’s have a peek at the dimensions and names of the variables in this dataframe.\n\nBike.shape, Bike.columns\n\n((8645, 15),\n Index(['season', 'mnth', 'day', 'hr', 'holiday', 'weekday', 'workingday',\n        'weathersit', 'temp', 'atemp', 'hum', 'windspeed', 'casual',\n        'registered', 'bikers'],\n       dtype='object'))\n\n\n\n\nWe begin by fitting a linear regression model to the data.\n\nX = MS(['mnth',\n        'hr',\n        'workingday',\n        'temp',\n        'weathersit']).fit_transform(Bike)\nY = Bike['bikers']\nM_lm = sm.OLS(Y, X).fit()\nsummarize(M_lm)\n\n\n\n\n\n\n\n\ncoef\nstd err\nt\nP&gt;|t|\n\n\n\n\nintercept\n-68.6317\n5.307\n-12.932\n0.000\n\n\nmnth[Feb]\n6.8452\n4.287\n1.597\n0.110\n\n\nmnth[March]\n16.5514\n4.301\n3.848\n0.000\n\n\nmnth[April]\n41.4249\n4.972\n8.331\n0.000\n\n\nmnth[May]\n72.5571\n5.641\n12.862\n0.000\n\n\nmnth[June]\n67.8187\n6.544\n10.364\n0.000\n\n\nmnth[July]\n45.3245\n7.081\n6.401\n0.000\n\n\nmnth[Aug]\n53.2430\n6.640\n8.019\n0.000\n\n\nmnth[Sept]\n66.6783\n5.925\n11.254\n0.000\n\n\nmnth[Oct]\n75.8343\n4.950\n15.319\n0.000\n\n\nmnth[Nov]\n60.3100\n4.610\n13.083\n0.000\n\n\nmnth[Dec]\n46.4577\n4.271\n10.878\n0.000\n\n\nhr[1]\n-14.5793\n5.699\n-2.558\n0.011\n\n\nhr[2]\n-21.5791\n5.733\n-3.764\n0.000\n\n\nhr[3]\n-31.1408\n5.778\n-5.389\n0.000\n\n\nhr[4]\n-36.9075\n5.802\n-6.361\n0.000\n\n\nhr[5]\n-24.1355\n5.737\n-4.207\n0.000\n\n\nhr[6]\n20.5997\n5.704\n3.612\n0.000\n\n\nhr[7]\n120.0931\n5.693\n21.095\n0.000\n\n\nhr[8]\n223.6619\n5.690\n39.310\n0.000\n\n\nhr[9]\n120.5819\n5.693\n21.182\n0.000\n\n\nhr[10]\n83.8013\n5.705\n14.689\n0.000\n\n\nhr[11]\n105.4234\n5.722\n18.424\n0.000\n\n\nhr[12]\n137.2837\n5.740\n23.916\n0.000\n\n\nhr[13]\n136.0359\n5.760\n23.617\n0.000\n\n\nhr[14]\n126.6361\n5.776\n21.923\n0.000\n\n\nhr[15]\n132.0865\n5.780\n22.852\n0.000\n\n\nhr[16]\n178.5206\n5.772\n30.927\n0.000\n\n\nhr[17]\n296.2670\n5.749\n51.537\n0.000\n\n\nhr[18]\n269.4409\n5.736\n46.976\n0.000\n\n\nhr[19]\n186.2558\n5.714\n32.596\n0.000\n\n\nhr[20]\n125.5492\n5.704\n22.012\n0.000\n\n\nhr[21]\n87.5537\n5.693\n15.378\n0.000\n\n\nhr[22]\n59.1226\n5.689\n10.392\n0.000\n\n\nhr[23]\n26.8376\n5.688\n4.719\n0.000\n\n\nworkingday\n1.2696\n1.784\n0.711\n0.477\n\n\ntemp\n157.2094\n10.261\n15.321\n0.000\n\n\nweathersit[cloudy/misty]\n-12.8903\n1.964\n-6.562\n0.000\n\n\nweathersit[heavy rain/snow]\n-109.7446\n76.667\n-1.431\n0.152\n\n\nweathersit[light rain/snow]\n-66.4944\n2.965\n-22.425\n0.000\n\n\n\n\n\n\n\nThere are 24 levels in hr and 40 rows in all. In M_lm, the first levels hr[0] and mnth[Jan] are treated as the baseline values, and so no coefficient estimates are provided for them: implicitly, their coefficient estimates are zero, and all other levels are measured relative to these baselines. For example, the Feb coefficient of 6.845 signifies that, holding all other variables constant, there are on average about 7 more riders in February than in January. Similarly there are about 16.5 more riders in March than in January.\nThe results seen in Section~ used a slightly different coding of the variables hr and mnth, as follows:\n\nhr_encode = contrast('hr', 'sum')\nmnth_encode = contrast('mnth', 'sum')\n\nRefitting again:\n\nX2 = MS([mnth_encode,\n         hr_encode,\n        'workingday',\n        'temp',\n        'weathersit']).fit_transform(Bike)\nM2_lm = sm.OLS(Y, X2).fit()\nS2 = summarize(M2_lm)\nS2\n\n\n\n\n\n\n\n\ncoef\nstd err\nt\nP&gt;|t|\n\n\n\n\nintercept\n73.5974\n5.132\n14.340\n0.000\n\n\nmnth[Jan]\n-46.0871\n4.085\n-11.281\n0.000\n\n\nmnth[Feb]\n-39.2419\n3.539\n-11.088\n0.000\n\n\nmnth[March]\n-29.5357\n3.155\n-9.361\n0.000\n\n\nmnth[April]\n-4.6622\n2.741\n-1.701\n0.089\n\n\nmnth[May]\n26.4700\n2.851\n9.285\n0.000\n\n\nmnth[June]\n21.7317\n3.465\n6.272\n0.000\n\n\nmnth[July]\n-0.7626\n3.908\n-0.195\n0.845\n\n\nmnth[Aug]\n7.1560\n3.535\n2.024\n0.043\n\n\nmnth[Sept]\n20.5912\n3.046\n6.761\n0.000\n\n\nmnth[Oct]\n29.7472\n2.700\n11.019\n0.000\n\n\nmnth[Nov]\n14.2229\n2.860\n4.972\n0.000\n\n\nhr[0]\n-96.1420\n3.955\n-24.307\n0.000\n\n\nhr[1]\n-110.7213\n3.966\n-27.916\n0.000\n\n\nhr[2]\n-117.7212\n4.016\n-29.310\n0.000\n\n\nhr[3]\n-127.2828\n4.081\n-31.191\n0.000\n\n\nhr[4]\n-133.0495\n4.117\n-32.319\n0.000\n\n\nhr[5]\n-120.2775\n4.037\n-29.794\n0.000\n\n\nhr[6]\n-75.5424\n3.992\n-18.925\n0.000\n\n\nhr[7]\n23.9511\n3.969\n6.035\n0.000\n\n\nhr[8]\n127.5199\n3.950\n32.284\n0.000\n\n\nhr[9]\n24.4399\n3.936\n6.209\n0.000\n\n\nhr[10]\n-12.3407\n3.936\n-3.135\n0.002\n\n\nhr[11]\n9.2814\n3.945\n2.353\n0.019\n\n\nhr[12]\n41.1417\n3.957\n10.397\n0.000\n\n\nhr[13]\n39.8939\n3.975\n10.036\n0.000\n\n\nhr[14]\n30.4940\n3.991\n7.641\n0.000\n\n\nhr[15]\n35.9445\n3.995\n8.998\n0.000\n\n\nhr[16]\n82.3786\n3.988\n20.655\n0.000\n\n\nhr[17]\n200.1249\n3.964\n50.488\n0.000\n\n\nhr[18]\n173.2989\n3.956\n43.806\n0.000\n\n\nhr[19]\n90.1138\n3.940\n22.872\n0.000\n\n\nhr[20]\n29.4071\n3.936\n7.471\n0.000\n\n\nhr[21]\n-8.5883\n3.933\n-2.184\n0.029\n\n\nhr[22]\n-37.0194\n3.934\n-9.409\n0.000\n\n\nworkingday\n1.2696\n1.784\n0.711\n0.477\n\n\ntemp\n157.2094\n10.261\n15.321\n0.000\n\n\nweathersit[cloudy/misty]\n-12.8903\n1.964\n-6.562\n0.000\n\n\nweathersit[heavy rain/snow]\n-109.7446\n76.667\n-1.431\n0.152\n\n\nweathersit[light rain/snow]\n-66.4944\n2.965\n-22.425\n0.000\n\n\n\n\n\n\n\nWhat is the difference between the two codings? In M2_lm, a coefficient estimate is reported for all but level 23 of hr and level Dec of mnth. Importantly, in M2_lm, the (unreported) coefficient estimate for the last level of mnth is not zero: instead, it equals the negative of the sum of the coefficient estimates for all of the other levels. Similarly, in M2_lm, the coefficient estimate for the last level of hr is the negative of the sum of the coefficient estimates for all of the other levels. This means that the coefficients of hr and mnth in M2_lm will always sum to zero, and can be interpreted as the difference from the mean level. For example, the coefficient for January of -46.087 indicates that, holding all other variables constant, there are typically 46 fewer riders in January relative to the yearly average.\nIt is important to realize that the choice of coding really does not matter, provided that we interpret the model output correctly in light of the coding used. For example, we see that the predictions from the linear model are the same regardless of coding:\n\nnp.sum((M_lm.fittedvalues - M2_lm.fittedvalues)**2)\n\n1.5365640261199032e-20\n\n\nThe sum of squared differences is zero. We can also see this using the np.allclose() function:\n\nnp.allclose(M_lm.fittedvalues, M2_lm.fittedvalues)\n\nTrue\n\n\nTo reproduce the left-hand side of Figure~ we must first obtain the coefficient estimates associated with mnth. The coefficients for January through November can be obtained directly from the M2_lm object. The coefficient for December must be explicitly computed as the negative sum of all the other months. We first extract all the coefficients for month from the coefficients of M2_lm.\n\ncoef_month = S2[S2.index.str.contains('mnth')]['coef']\ncoef_month\n\nmnth[Jan]     -46.0871\nmnth[Feb]     -39.2419\nmnth[March]   -29.5357\nmnth[April]    -4.6622\nmnth[May]      26.4700\nmnth[June]     21.7317\nmnth[July]     -0.7626\nmnth[Aug]       7.1560\nmnth[Sept]     20.5912\nmnth[Oct]      29.7472\nmnth[Nov]      14.2229\nName: coef, dtype: float64\n\n\nNext, we append Dec as the negative of the sum of all other months.\n\nmonths = Bike['mnth'].dtype.categories\ncoef_month = pd.concat([\n                       coef_month,\n                       pd.Series([-coef_month.sum()],\n                                  index=['mnth[Dec]'\n                                 ])\n                       ])\ncoef_month\n\nmnth[Jan]     -46.0871\nmnth[Feb]     -39.2419\nmnth[March]   -29.5357\nmnth[April]    -4.6622\nmnth[May]      26.4700\nmnth[June]     21.7317\nmnth[July]     -0.7626\nmnth[Aug]       7.1560\nmnth[Sept]     20.5912\nmnth[Oct]      29.7472\nmnth[Nov]      14.2229\nmnth[Dec]       0.3705\ndtype: float64\n\n\nFinally, to make the plot neater, we’ll just use the first letter of each month, which is the 6th entry of each of the labels in the index.\n\nfig_month, ax_month = subplots(figsize=(8,8))\nx_month = np.arange(coef_month.shape[0])\nax_month.plot(x_month, coef_month, marker='o', ms=10)\nax_month.set_xticks(x_month)\nax_month.set_xticklabels([l[5] for l in coef_month.index], fontsize=20)\nax_month.set_xlabel('Month', fontsize=20)\nax_month.set_ylabel('Coefficient', fontsize=20);\n\n\n\n\n\n\n\n\nReproducing the right-hand plot in Figure~ follows a similar process.\n\ncoef_hr = S2[S2.index.str.contains('hr')]['coef']\ncoef_hr = coef_hr.reindex(['hr[{0}]'.format(h) for h in range(23)])\ncoef_hr = pd.concat([coef_hr,\n                     pd.Series([-coef_hr.sum()], index=['hr[23]'])\n                    ])\n\nWe now make the hour plot.\n\nfig_hr, ax_hr = subplots(figsize=(8,8))\nx_hr = np.arange(coef_hr.shape[0])\nax_hr.plot(x_hr, coef_hr, marker='o', ms=10)\nax_hr.set_xticks(x_hr[::2])\nax_hr.set_xticklabels(range(24)[::2], fontsize=20)\nax_hr.set_xlabel('Hour', fontsize=20)\nax_hr.set_ylabel('Coefficient', fontsize=20);\n\n\n\n\n\n\n\n\n\n\n\nNow we fit instead a Poisson regression model to the Bikeshare data. Very little changes, except that we now use the function sm.GLM() with the Poisson family specified:\n\nM_pois = sm.GLM(Y, X2, family=sm.families.Poisson()).fit()\n\nWe can plot the coefficients associated with mnth and hr, in order to reproduce Figure~. We first complete these coefficients as before.\n\nS_pois = summarize(M_pois)\ncoef_month = S_pois[S_pois.index.str.contains('mnth')]['coef']\ncoef_month = pd.concat([coef_month,\n                        pd.Series([-coef_month.sum()],\n                                   index=['mnth[Dec]'])])\ncoef_hr = S_pois[S_pois.index.str.contains('hr')]['coef']\ncoef_hr = pd.concat([coef_hr,\n                     pd.Series([-coef_hr.sum()],\n                     index=['hr[23]'])])\n\nThe plotting is as before.\n\nfig_pois, (ax_month, ax_hr) = subplots(1, 2, figsize=(16,8))\nax_month.plot(x_month, coef_month, marker='o', ms=10)\nax_month.set_xticks(x_month)\nax_month.set_xticklabels([l[5] for l in coef_month.index], fontsize=20)\nax_month.set_xlabel('Month', fontsize=20)\nax_month.set_ylabel('Coefficient', fontsize=20)\nax_hr.plot(x_hr, coef_hr, marker='o', ms=10)\nax_hr.set_xticklabels(range(24)[::2], fontsize=20)\nax_hr.set_xlabel('Hour', fontsize=20)\nax_hr.set_ylabel('Coefficient', fontsize=20);\n\n/tmp/ipykernel_104833/3779510511.py:8: UserWarning: set_ticklabels() should only be used with a fixed number of ticks, i.e. after set_ticks() or using a FixedLocator.\n  ax_hr.set_xticklabels(range(24)[::2], fontsize=20)\n\n\n\n\n\n\n\n\n\nWe compare the fitted values of the two models. The fitted values are stored in the fittedvalues attribute returned by the fit() method for both the linear regression and the Poisson fits. The linear predictors are stored as the attribute lin_pred.\n\nfig, ax = subplots(figsize=(8, 8))\nax.scatter(M2_lm.fittedvalues,\n           M_pois.fittedvalues,\n           s=20)\nax.set_xlabel('Linear Regression Fit', fontsize=20)\nax.set_ylabel('Poisson Regression Fit', fontsize=20)\nax.axline([0,0], c='black', linewidth=3,\n          linestyle='--', slope=1);\n\n\n\n\n\n\n\n\nThe predictions from the Poisson regression model are correlated with those from the linear model; however, the former are non-negative. As a result the Poisson regression predictions tend to be larger than those from the linear model for either very low or very high levels of ridership.\nIn this section, we fit Poisson regression models using the sm.GLM() function with the argument family=sm.families.Poisson(). Earlier in this lab we used the sm.GLM() function with family=sm.families.Binomial() to perform logistic regression. Other choices for the family argument can be used to fit other types of GLMs. For instance, family=sm.families.Gamma() fits a Gamma regression model."
  },
  {
    "objectID": "posts/ch04-classification/Ch04-classification-lab.html#the-stock-market-data",
    "href": "posts/ch04-classification/Ch04-classification-lab.html#the-stock-market-data",
    "title": "Chapter 4: Classification Lab",
    "section": "",
    "text": "In this lab we will examine the Smarket data, which is part of the ISLP library. This data set consists of percentage returns for the S&P 500 stock index over 1,250 days, from the beginning of 2001 until the end of 2005. For each date, we have recorded the percentage returns for each of the five previous trading days, Lag1 through Lag5. We have also recorded Volume (the number of shares traded on the previous day, in billions), Today (the percentage return on the date in question) and Direction (whether the market was Up or Down on this date).\nWe start by importing our libraries at this top level; these are all imports we have seen in previous labs.\n\nimport numpy as np\nimport pandas as pd\nfrom matplotlib.pyplot import subplots\nimport statsmodels.api as sm\nfrom ISLP import load_data\nfrom ISLP.models import (ModelSpec as MS,\n                         summarize)\n\nWe also collect together the new imports needed for this lab.\n\nfrom ISLP import confusion_table\nfrom ISLP.models import contrast\nfrom sklearn.discriminant_analysis import \\\n     (LinearDiscriminantAnalysis as LDA,\n      QuadraticDiscriminantAnalysis as QDA)\nfrom sklearn.naive_bayes import GaussianNB\nfrom sklearn.neighbors import KNeighborsClassifier\nfrom sklearn.preprocessing import StandardScaler\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.linear_model import LogisticRegression\n\nNow we are ready to load the Smarket data.\n\nSmarket = load_data('Smarket')\nSmarket\n\n\n\n\n\n\n\n\nYear\nLag1\nLag2\nLag3\nLag4\nLag5\nVolume\nToday\nDirection\n\n\n\n\n0\n2001\n0.381\n-0.192\n-2.624\n-1.055\n5.010\n1.19130\n0.959\nUp\n\n\n1\n2001\n0.959\n0.381\n-0.192\n-2.624\n-1.055\n1.29650\n1.032\nUp\n\n\n2\n2001\n1.032\n0.959\n0.381\n-0.192\n-2.624\n1.41120\n-0.623\nDown\n\n\n3\n2001\n-0.623\n1.032\n0.959\n0.381\n-0.192\n1.27600\n0.614\nUp\n\n\n4\n2001\n0.614\n-0.623\n1.032\n0.959\n0.381\n1.20570\n0.213\nUp\n\n\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n\n\n1245\n2005\n0.422\n0.252\n-0.024\n-0.584\n-0.285\n1.88850\n0.043\nUp\n\n\n1246\n2005\n0.043\n0.422\n0.252\n-0.024\n-0.584\n1.28581\n-0.955\nDown\n\n\n1247\n2005\n-0.955\n0.043\n0.422\n0.252\n-0.024\n1.54047\n0.130\nUp\n\n\n1248\n2005\n0.130\n-0.955\n0.043\n0.422\n0.252\n1.42236\n-0.298\nDown\n\n\n1249\n2005\n-0.298\n0.130\n-0.955\n0.043\n0.422\n1.38254\n-0.489\nDown\n\n\n\n\n1250 rows × 9 columns\n\n\n\nThis gives a truncated listing of the data. We can see what the variable names are.\n\nSmarket.columns\n\nIndex(['Year', 'Lag1', 'Lag2', 'Lag3', 'Lag4', 'Lag5', 'Volume', 'Today',\n       'Direction'],\n      dtype='object')\n\n\nWe compute the correlation matrix using the corr() method for data frames, which produces a matrix that contains all of the pairwise correlations among the variables.\nBy instructing pandas to use only numeric variables, the corr() method does not report a correlation for the Direction variable because it is qualitative.\n\nSmarket.corr(numeric_only=True)\n\n\n\n\n\n\n\n\nYear\nLag1\nLag2\nLag3\nLag4\nLag5\nVolume\nToday\n\n\n\n\nYear\n1.000000\n0.029700\n0.030596\n0.033195\n0.035689\n0.029788\n0.539006\n0.030095\n\n\nLag1\n0.029700\n1.000000\n-0.026294\n-0.010803\n-0.002986\n-0.005675\n0.040910\n-0.026155\n\n\nLag2\n0.030596\n-0.026294\n1.000000\n-0.025897\n-0.010854\n-0.003558\n-0.043383\n-0.010250\n\n\nLag3\n0.033195\n-0.010803\n-0.025897\n1.000000\n-0.024051\n-0.018808\n-0.041824\n-0.002448\n\n\nLag4\n0.035689\n-0.002986\n-0.010854\n-0.024051\n1.000000\n-0.027084\n-0.048414\n-0.006900\n\n\nLag5\n0.029788\n-0.005675\n-0.003558\n-0.018808\n-0.027084\n1.000000\n-0.022002\n-0.034860\n\n\nVolume\n0.539006\n0.040910\n-0.043383\n-0.041824\n-0.048414\n-0.022002\n1.000000\n0.014592\n\n\nToday\n0.030095\n-0.026155\n-0.010250\n-0.002448\n-0.006900\n-0.034860\n0.014592\n1.000000\n\n\n\n\n\n\n\nAs one would expect, the correlations between the lagged return variables and today’s return are close to zero. The only substantial correlation is between Year and Volume. By plotting the data we see that Volume is increasing over time. In other words, the average number of shares traded daily increased from 2001 to 2005.\n\nSmarket.plot(y='Volume');"
  },
  {
    "objectID": "posts/ch04-classification/Ch04-classification-lab.html#logistic-regression",
    "href": "posts/ch04-classification/Ch04-classification-lab.html#logistic-regression",
    "title": "Chapter 4: Classification Lab",
    "section": "",
    "text": "Next, we will fit a logistic regression model in order to predict Direction using Lag1 through Lag5 and Volume. The sm.GLM() function fits generalized linear models, a class of models that includes logistic regression. Alternatively, the function sm.Logit() fits a logistic regression model directly. The syntax of sm.GLM() is similar to that of sm.OLS(), except that we must pass in the argument family=sm.families.Binomial() in order to tell statsmodels to run a logistic regression rather than some other type of generalized linear model.\n\nallvars = Smarket.columns.drop(['Today', 'Direction', 'Year'])\ndesign = MS(allvars)\nX = design.fit_transform(Smarket)\ny = Smarket.Direction == 'Up'\nglm = sm.GLM(y,\n             X,\n             family=sm.families.Binomial())\nresults = glm.fit()\nsummarize(results)\n\n\n\n\n\n\n\n\ncoef\nstd err\nz\nP&gt;|z|\n\n\n\n\nintercept\n-0.1260\n0.241\n-0.523\n0.601\n\n\nLag1\n-0.0731\n0.050\n-1.457\n0.145\n\n\nLag2\n-0.0423\n0.050\n-0.845\n0.398\n\n\nLag3\n0.0111\n0.050\n0.222\n0.824\n\n\nLag4\n0.0094\n0.050\n0.187\n0.851\n\n\nLag5\n0.0103\n0.050\n0.208\n0.835\n\n\nVolume\n0.1354\n0.158\n0.855\n0.392\n\n\n\n\n\n\n\nThe smallest p-value here is associated with Lag1. The negative coefficient for this predictor suggests that if the market had a positive return yesterday, then it is less likely to go up today. However, at a value of 0.15, the p-value is still relatively large, and so there is no clear evidence of a real association between Lag1 and Direction.\nWe use the params attribute of results in order to access just the coefficients for this fitted model.\n\nresults.params\n\nintercept   -0.126000\nLag1        -0.073074\nLag2        -0.042301\nLag3         0.011085\nLag4         0.009359\nLag5         0.010313\nVolume       0.135441\ndtype: float64\n\n\nLikewise we can use the pvalues attribute to access the p-values for the coefficients.\n\nresults.pvalues\n\nintercept    0.600700\nLag1         0.145232\nLag2         0.398352\nLag3         0.824334\nLag4         0.851445\nLag5         0.834998\nVolume       0.392404\ndtype: float64\n\n\nThe predict() method of results can be used to predict the probability that the market will go up, given values of the predictors. This method returns predictions on the probability scale. If no data set is supplied to the predict() function, then the probabilities are computed for the training data that was used to fit the logistic regression model. As with linear regression, one can pass an optional exog argument consistent with a design matrix if desired. Here we have printed only the first ten probabilities.\n\nprobs = results.predict()\nprobs[:10]\n\narray([0.50708413, 0.48146788, 0.48113883, 0.51522236, 0.51078116,\n       0.50695646, 0.49265087, 0.50922916, 0.51761353, 0.48883778])\n\n\nIn order to make a prediction as to whether the market will go up or down on a particular day, we must convert these predicted probabilities into class labels, Up or Down. The following two commands create a vector of class predictions based on whether the predicted probability of a market increase is greater than or less than 0.5.\n\nlabels = np.array(['Down']*1250)\nlabels[probs&gt;0.5] = \"Up\"\n\nThe confusion_table() function from the ISLP package summarizes these predictions, showing how many observations were correctly or incorrectly classified. Our function, which is adapted from a similar function in the module sklearn.metrics, transposes the resulting matrix and includes row and column labels. The confusion_table() function takes as first argument the predicted labels, and second argument the true labels.\n\nconfusion_table(labels, Smarket.Direction)\n\n\n\n\n\n\n\nTruth\nDown\nUp\n\n\nPredicted\n\n\n\n\n\n\nDown\n145\n141\n\n\nUp\n457\n507\n\n\n\n\n\n\n\nThe diagonal elements of the confusion matrix indicate correct predictions, while the off-diagonals represent incorrect predictions. Hence our model correctly predicted that the market would go up on 507 days and that it would go down on 145 days, for a total of 507 + 145 = 652 correct predictions. The np.mean() function can be used to compute the fraction of days for which the prediction was correct. In this case, logistic regression correctly predicted the movement of the market 52.2% of the time.\n\n(507+145)/1250, np.mean(labels == Smarket.Direction)\n\n(0.5216, 0.5216)\n\n\nAt first glance, it appears that the logistic regression model is working a little better than random guessing. However, this result is misleading because we trained and tested the model on the same set of 1,250 observations. In other words, 100-52.2=47.8% is the training error rate. As we have seen previously, the training error rate is often overly optimistic — it tends to underestimate the test error rate. In order to better assess the accuracy of the logistic regression model in this setting, we can fit the model using part of the data, and then examine how well it predicts the held out data. This will yield a more realistic error rate, in the sense that in practice we will be interested in our model’s performance not on the data that we used to fit the model, but rather on days in the future for which the market’s movements are unknown.\nTo implement this strategy, we first create a Boolean vector corresponding to the observations from 2001 through 2004. We then use this vector to create a held out data set of observations from 2005.\n\ntrain = (Smarket.Year &lt; 2005)\nSmarket_train = Smarket.loc[train]\nSmarket_test = Smarket.loc[~train]\nSmarket_test.shape\n\n(252, 9)\n\n\nThe object train is a vector of 1,250 elements, corresponding to the observations in our data set. The elements of the vector that correspond to observations that occurred before 2005 are set to True, whereas those that correspond to observations in 2005 are set to False. Hence train is a boolean array, since its elements are True and False. Boolean arrays can be used to obtain a subset of the rows or columns of a data frame using the loc method. For instance, the command Smarket.loc[train] would pick out a submatrix of the stock market data set, corresponding only to the dates before 2005, since those are the ones for which the elements of train are True. The ~ symbol can be used to negate all of the elements of a Boolean vector. That is, ~train is a vector similar to train, except that the elements that are True in train get swapped to False in ~train, and vice versa. Therefore, Smarket.loc[~train] yields a subset of the rows of the data frame of the stock market data containing only the observations for which train is False. The output above indicates that there are 252 such observations.\nWe now fit a logistic regression model using only the subset of the observations that correspond to dates before 2005. We then obtain predicted probabilities of the stock market going up for each of the days in our test set — that is, for the days in 2005.\n\nX_train, X_test = X.loc[train], X.loc[~train]\ny_train, y_test = y.loc[train], y.loc[~train]\nglm_train = sm.GLM(y_train,\n                   X_train,\n                   family=sm.families.Binomial())\nresults = glm_train.fit()\nprobs = results.predict(exog=X_test)\n\nNotice that we have trained and tested our model on two completely separate data sets: training was performed using only the dates before 2005, and testing was performed using only the dates in 2005.\nFinally, we compare the predictions for 2005 to the actual movements of the market over that time period. We will first store the test and training labels (recall y_test is binary).\n\nD = Smarket.Direction\nL_train, L_test = D.loc[train], D.loc[~train]\n\nNow we threshold the fitted probability at 50% to form our predicted labels.\n\nlabels = np.array(['Down']*252)\nlabels[probs&gt;0.5] = 'Up'\nconfusion_table(labels, L_test)\n\n\n\n\n\n\n\nTruth\nDown\nUp\n\n\nPredicted\n\n\n\n\n\n\nDown\n77\n97\n\n\nUp\n34\n44\n\n\n\n\n\n\n\nThe test accuracy is about 48% while the error rate is about 52%\n\nnp.mean(labels == L_test), np.mean(labels != L_test)\n\n(0.4801587301587302, 0.5198412698412699)\n\n\nThe != notation means not equal to, and so the last command computes the test set error rate. The results are rather disappointing: the test error rate is 52%, which is worse than random guessing! Of course this result is not all that surprising, given that one would not generally expect to be able to use previous days’ returns to predict future market performance. (After all, if it were possible to do so, then the authors of this book would be out striking it rich rather than writing a statistics textbook.)\nWe recall that the logistic regression model had very underwhelming p-values associated with all of the predictors, and that the smallest p-value, though not very small, corresponded to Lag1. Perhaps by removing the variables that appear not to be helpful in predicting Direction, we can obtain a more effective model. After all, using predictors that have no relationship with the response tends to cause a deterioration in the test error rate (since such predictors cause an increase in variance without a corresponding decrease in bias), and so removing such predictors may in turn yield an improvement. Below we refit the logistic regression using just Lag1 and Lag2, which seemed to have the highest predictive power in the original logistic regression model.\n\nmodel = MS(['Lag1', 'Lag2']).fit(Smarket)\nX = model.transform(Smarket)\nX_train, X_test = X.loc[train], X.loc[~train]\nglm_train = sm.GLM(y_train,\n                   X_train,\n                   family=sm.families.Binomial())\nresults = glm_train.fit()\nprobs = results.predict(exog=X_test)\nlabels = np.array(['Down']*252)\nlabels[probs&gt;0.5] = 'Up'\nconfusion_table(labels, L_test)\n\n\n\n\n\n\n\nTruth\nDown\nUp\n\n\nPredicted\n\n\n\n\n\n\nDown\n35\n35\n\n\nUp\n76\n106\n\n\n\n\n\n\n\nLet’s evaluate the overall accuracy as well as the accuracy within the days when logistic regression predicts an increase.\n\n(35+106)/252,106/(106+76)\n\n(0.5595238095238095, 0.5824175824175825)\n\n\nNow the results appear to be a little better: 56% of the daily movements have been correctly predicted. It is worth noting that in this case, a much simpler strategy of predicting that the market will increase every day will also be correct 56% of the time! Hence, in terms of overall error rate, the logistic regression method is no better than the naive approach. However, the confusion matrix shows that on days when logistic regression predicts an increase in the market, it has a 58% accuracy rate. This suggests a possible trading strategy of buying on days when the model predicts an increasing market, and avoiding trades on days when a decrease is predicted. Of course one would need to investigate more carefully whether this small improvement was real or just due to random chance.\nSuppose that we want to predict the returns associated with particular values of Lag1 and Lag2. In particular, we want to predict Direction on a day when Lag1 and Lag2 equal 1.2 and 1.1, respectively, and on a day when they equal 1.5 and -0.8. We do this using the predict() function.\n\nnewdata = pd.DataFrame({'Lag1':[1.2, 1.5],\n                        'Lag2':[1.1, -0.8]});\nnewX = model.transform(newdata)\nresults.predict(newX)\n\n0    0.479146\n1    0.496094\ndtype: float64"
  },
  {
    "objectID": "posts/ch04-classification/Ch04-classification-lab.html#linear-discriminant-analysis",
    "href": "posts/ch04-classification/Ch04-classification-lab.html#linear-discriminant-analysis",
    "title": "Chapter 4: Classification Lab",
    "section": "",
    "text": "We begin by performing LDA on the Smarket data, using the function LinearDiscriminantAnalysis(), which we have abbreviated LDA(). We fit the model using only the observations before 2005.\n\nlda = LDA(store_covariance=True)\n\nSince the LDA estimator automatically adds an intercept, we should remove the column corresponding to the intercept in both X_train and X_test. We can also directly use the labels rather than the Boolean vectors y_train.\n\nX_train, X_test = [M.drop(columns=['intercept'])\n                   for M in [X_train, X_test]]\nlda.fit(X_train, L_train)\n\nLinearDiscriminantAnalysis(store_covariance=True)In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.  LinearDiscriminantAnalysis?Documentation for LinearDiscriminantAnalysisiFittedLinearDiscriminantAnalysis(store_covariance=True) \n\n\nHere we have used the list comprehensions introduced in Section~. Looking at our first line above, we see that the right-hand side is a list of length two. This is because the code for M in [X_train, X_test] iterates over a list of length two. While here we loop over a list, the list comprehension method works when looping over any iterable object. We then apply the drop() method to each element in the iteration, collecting the result in a list. The left-hand side tells Python to unpack this list of length two, assigning its elements to the variables X_train and X_test. Of course, this overwrites the previous values of X_train and X_test.\nHaving fit the model, we can extract the means in the two classes with the means_ attribute. These are the average of each predictor within each class, and are used by LDA as estimates of \\mu_k. These suggest that there is a tendency for the previous 2 days’ returns to be negative on days when the market increases, and a tendency for the previous days’ returns to be positive on days when the market declines.\n\nlda.means_\n\narray([[ 0.04279022,  0.03389409],\n       [-0.03954635, -0.03132544]])\n\n\nThe estimated prior probabilities are stored in the priors_ attribute. The package sklearn typically uses this trailing _ to denote a quantity estimated when using the fit() method. We can be sure of which entry corresponds to which label by looking at the classes_ attribute.\n\nlda.classes_\n\narray(['Down', 'Up'], dtype='&lt;U4')\n\n\nThe LDA output indicates that \\hat\\pi_{Down}=0.492 and \\hat\\pi_{Up}=0.508.\n\nlda.priors_\n\narray([0.49198397, 0.50801603])\n\n\nThe linear discriminant vectors can be found in the scalings_ attribute:\n\nlda.scalings_\n\narray([[-0.64201904],\n       [-0.51352928]])\n\n\nThese values provide the linear combination of Lag1 and Lag2 that are used to form the LDA decision rule. In other words, these are the multipliers of the elements of X=x in (). If $-0.64Lag1 - 0.51 Lag2 $ is large, then the LDA classifier will predict a market increase, and if it is small, then the LDA classifier will predict a market decline.\n\nlda_pred = lda.predict(X_test)\n\nAs we observed in our comparison of classification methods (Section~), the LDA and logistic regression predictions are almost identical.\n\nconfusion_table(lda_pred, L_test)\n\n\n\n\n\n\n\nTruth\nDown\nUp\n\n\nPredicted\n\n\n\n\n\n\nDown\n35\n35\n\n\nUp\n76\n106\n\n\n\n\n\n\n\nWe can also estimate the probability of each class for each point in a training set. Applying a 50% threshold to the posterior probabilities of being in class one allows us to recreate the predictions contained in lda_pred.\n\nlda_prob = lda.predict_proba(X_test)\nnp.all(\n       np.where(lda_prob[:,1] &gt;= 0.5, 'Up','Down') == lda_pred\n       )\n\nTrue\n\n\nAbove, we used the np.where() function that creates an array with value 'Up' for indices where the second column of lda_prob (the estimated posterior probability of 'Up') is greater than 0.5. For problems with more than two classes the labels are chosen as the class whose posterior probability is highest:\n\nnp.all(\n       [lda.classes_[i] for i in np.argmax(lda_prob, 1)] == lda_pred\n       )\n\nTrue\n\n\nIf we wanted to use a posterior probability threshold other than 50% in order to make predictions, then we could easily do so. For instance, suppose that we wish to predict a market decrease only if we are very certain that the market will indeed decrease on that day — say, if the posterior probability is at least 90%. We know that the first column of lda_prob corresponds to the label Down after having checked the classes_ attribute, hence we use the column index 0 rather than 1 as we did above.\n\nnp.sum(lda_prob[:,0] &gt; 0.9)\n\n0\n\n\nNo days in 2005 meet that threshold! In fact, the greatest posterior probability of decrease in all of 2005 was 52.02%.\nThe LDA classifier above is the first classifier from the sklearn library. We will use several other objects from this library. The objects follow a common structure that simplifies tasks such as cross-validation, which we will see in Chapter~. Specifically, the methods first create a generic classifier without referring to any data. This classifier is then fit to data with the fit() method and predictions are always produced with the predict() method. This pattern of first instantiating the classifier, followed by fitting it, and then producing predictions is an explicit design choice of sklearn. This uniformity makes it possible to cleanly copy the classifier so that it can be fit on different data; e.g. different training sets arising in cross-validation. This standard pattern also allows for a predictable formation of workflows."
  },
  {
    "objectID": "posts/ch04-classification/Ch04-classification-lab.html#quadratic-discriminant-analysis",
    "href": "posts/ch04-classification/Ch04-classification-lab.html#quadratic-discriminant-analysis",
    "title": "Chapter 4: Classification Lab",
    "section": "",
    "text": "We will now fit a QDA model to the Smarket data. QDA is implemented via QuadraticDiscriminantAnalysis() in the sklearn package, which we abbreviate to QDA(). The syntax is very similar to LDA().\n\nqda = QDA(store_covariance=True)\nqda.fit(X_train, L_train)\n\nQuadraticDiscriminantAnalysis(store_covariance=True)In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.  QuadraticDiscriminantAnalysis?Documentation for QuadraticDiscriminantAnalysisiFittedQuadraticDiscriminantAnalysis(store_covariance=True) \n\n\nThe QDA() function will again compute means_ and priors_.\n\nqda.means_, qda.priors_\n\n(array([[ 0.04279022,  0.03389409],\n        [-0.03954635, -0.03132544]]),\n array([0.49198397, 0.50801603]))\n\n\nThe QDA() classifier will estimate one covariance per class. Here is the estimated covariance in the first class:\n\nqda.covariance_[0]\n\narray([[ 1.50662277, -0.03924806],\n       [-0.03924806,  1.53559498]])\n\n\nThe output contains the group means. But it does not contain the coefficients of the linear discriminants, because the QDA classifier involves a quadratic, rather than a linear, function of the predictors. The predict() function works in exactly the same fashion as for LDA.\n\nqda_pred = qda.predict(X_test)\nconfusion_table(qda_pred, L_test)\n\n\n\n\n\n\n\nTruth\nDown\nUp\n\n\nPredicted\n\n\n\n\n\n\nDown\n30\n20\n\n\nUp\n81\n121\n\n\n\n\n\n\n\nInterestingly, the QDA predictions are accurate almost 60% of the time, even though the 2005 data was not used to fit the model.\n\nnp.mean(qda_pred == L_test)\n\n0.5992063492063492\n\n\nThis level of accuracy is quite impressive for stock market data, which is known to be quite hard to model accurately. This suggests that the quadratic form assumed by QDA may capture the true relationship more accurately than the linear forms assumed by LDA and logistic regression. However, we recommend evaluating this method’s performance on a larger test set before betting that this approach will consistently beat the market!"
  },
  {
    "objectID": "posts/ch04-classification/Ch04-classification-lab.html#naive-bayes",
    "href": "posts/ch04-classification/Ch04-classification-lab.html#naive-bayes",
    "title": "Chapter 4: Classification Lab",
    "section": "",
    "text": "Next, we fit a naive Bayes model to the Smarket data. The syntax is similar to that of LDA() and QDA(). By default, this implementation GaussianNB() of the naive Bayes classifier models each quantitative feature using a Gaussian distribution. However, a kernel density method can also be used to estimate the distributions.\n\nNB = GaussianNB()\nNB.fit(X_train, L_train)\n\nGaussianNB()In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.  GaussianNB?Documentation for GaussianNBiFittedGaussianNB() \n\n\nThe classes are stored as classes_.\n\nNB.classes_\n\narray(['Down', 'Up'], dtype='&lt;U4')\n\n\nThe class prior probabilities are stored in the class_prior_ attribute.\n\nNB.class_prior_\n\narray([0.49198397, 0.50801603])\n\n\nThe parameters of the features can be found in the theta_ and var_ attributes. The number of rows is equal to the number of classes, while the number of columns is equal to the number of features. We see below that the mean for feature Lag1 in the Down class is 0.043.\n\nNB.theta_\n\narray([[ 0.04279022,  0.03389409],\n       [-0.03954635, -0.03132544]])\n\n\nIts variance is 1.503.\n\nNB.var_\n\narray([[1.50355429, 1.53246749],\n       [1.51401364, 1.48732877]])\n\n\nHow do we know the names of these attributes? We use NB? (or ?NB).\nWe can easily verify the mean computation:\n\nX_train[L_train == 'Down'].mean()\n\nLag1    0.042790\nLag2    0.033894\ndtype: float64\n\n\nSimilarly for the variance:\n\nX_train[L_train == 'Down'].var(ddof=0)\n\nLag1    1.503554\nLag2    1.532467\ndtype: float64\n\n\nSince NB() is a classifier in the sklearn library, making predictions uses the same syntax as for LDA() and QDA() above.\n\nnb_labels = NB.predict(X_test)\nconfusion_table(nb_labels, L_test)\n\n\n\n\n\n\n\nTruth\nDown\nUp\n\n\nPredicted\n\n\n\n\n\n\nDown\n29\n20\n\n\nUp\n82\n121\n\n\n\n\n\n\n\nNaive Bayes performs well on these data, with accurate predictions over 59% of the time. This is slightly worse than QDA, but much better than LDA.\nAs for LDA, the predict_proba() method estimates the probability that each observation belongs to a particular class.\n\nNB.predict_proba(X_test)[:5]\n\narray([[0.4873288 , 0.5126712 ],\n       [0.47623584, 0.52376416],\n       [0.46529531, 0.53470469],\n       [0.47484469, 0.52515531],\n       [0.49020587, 0.50979413]])"
  },
  {
    "objectID": "posts/ch04-classification/Ch04-classification-lab.html#k-nearest-neighbors",
    "href": "posts/ch04-classification/Ch04-classification-lab.html#k-nearest-neighbors",
    "title": "Chapter 4: Classification Lab",
    "section": "",
    "text": "We will now perform KNN using the KNeighborsClassifier() function. This function works similarly to the other model-fitting functions that we have encountered thus far.\nAs is the case for LDA and QDA, we fit the classifier using the fit method. New predictions are formed using the predict method of the object returned by fit().\n\nknn1 = KNeighborsClassifier(n_neighbors=1)\nX_train, X_test = [np.asarray(X) for X in [X_train, X_test]]\nknn1.fit(X_train, L_train)\nknn1_pred = knn1.predict(X_test)\nconfusion_table(knn1_pred, L_test)\n\nKNeighborsClassifier(n_neighbors=1)In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.  KNeighborsClassifier?Documentation for KNeighborsClassifieriFittedKNeighborsClassifier(n_neighbors=1) \n\n\n\n\n\n\n\n\nTruth\nDown\nUp\n\n\nPredicted\n\n\n\n\n\n\nDown\n43\n58\n\n\nUp\n68\n83\n\n\n\n\n\n\n\nThe results using K=1 are not very good, since only 50% of the observations are correctly predicted. Of course, it may be that K=1 results in an overly-flexible fit to the data.\n\n(83+43)/252, np.mean(knn1_pred == L_test)\n\n(0.5, 0.5)\n\n\nWe repeat the analysis below using K=3.\n\nknn3 = KNeighborsClassifier(n_neighbors=3)\nknn3_pred = knn3.fit(X_train, L_train).predict(X_test)\nnp.mean(knn3_pred == L_test)\n\n0.5317460317460317\n\n\nThe results have improved slightly. But increasing K further provides no further improvements. It appears that for these data, and this train/test split, QDA gives the best results of the methods that we have examined so far.\nKNN does not perform well on the Smarket data, but it often does provide impressive results. As an example we will apply the KNN approach to the Caravan data set, which is part of the ISLP library. This data set includes 85 predictors that measure demographic characteristics for 5,822 individuals. The response variable is Purchase, which indicates whether or not a given individual purchases a caravan insurance policy. In this data set, only 6% of people purchased caravan insurance.\n\nCaravan = load_data('Caravan')\nPurchase = Caravan.Purchase\nPurchase.value_counts()\n\nPurchase\nNo     5474\nYes     348\nName: count, dtype: int64\n\n\nThe method value_counts() takes a pd.Series or pd.DataFrame and returns a pd.Series with the corresponding counts for each unique element. In this case Purchase has only Yes and No values and the method returns how many values of each there are.\n\n348 / 5822\n\n0.05977327378907592\n\n\nOur features will include all columns except Purchase.\n\nfeature_df = Caravan.drop(columns=['Purchase'])\n\nBecause the KNN classifier predicts the class of a given test observation by identifying the observations that are nearest to it, the scale of the variables matters. Any variables that are on a large scale will have a much larger effect on the distance between the observations, and hence on the KNN classifier, than variables that are on a small scale. For instance, imagine a data set that contains two variables, salary and age (measured in dollars and years, respectively). As far as KNN is concerned, a difference of 1,000 USD in salary is enormous compared to a difference of 50 years in age. Consequently, salary will drive the KNN classification results, and age will have almost no effect. This is contrary to our intuition that a salary difference of 1,000 USD is quite small compared to an age difference of 50 years. Furthermore, the importance of scale to the KNN classifier leads to another issue: if we measured salary in Japanese yen, or if we measured age in minutes, then we’d get quite different classification results from what we get if these two variables are measured in dollars and years.\nA good way to handle this problem is to standardize the data so that all variables are given a mean of zero and a standard deviation of one. Then all variables will be on a comparable scale. This is accomplished using the StandardScaler() transformation.\n\nscaler = StandardScaler(with_mean=True,\n                        with_std=True,\n                        copy=True)\n\nThe argument with_mean indicates whether or not we should subtract the mean, while with_std indicates whether or not we should scale the columns to have standard deviation of 1 or not. Finally, the argument copy=True indicates that we will always copy data, rather than trying to do calculations in place where possible.\nThis transformation can be fit and then applied to arbitrary data. In the first line below, the parameters for the scaling are computed and stored in scaler, while the second line actually constructs the standardized set of features.\n\nscaler.fit(feature_df)\nX_std = scaler.transform(feature_df)\n\nStandardScaler()In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.  StandardScaler?Documentation for StandardScaleriFittedStandardScaler() \n\n\nNow every column of feature_std below has a standard deviation of one and a mean of zero.\n\nfeature_std = pd.DataFrame(\n                 X_std,\n                 columns=feature_df.columns);\nfeature_std.std()\n\nMOSTYPE     1.000086\nMAANTHUI    1.000086\nMGEMOMV     1.000086\nMGEMLEEF    1.000086\nMOSHOOFD    1.000086\n              ...   \nAZEILPL     1.000086\nAPLEZIER    1.000086\nAFIETS      1.000086\nAINBOED     1.000086\nABYSTAND    1.000086\nLength: 85, dtype: float64\n\n\nNotice that the standard deviations are not quite 1 here; this is again due to some procedures using the 1/n convention for variances (in this case scaler()), while others use 1/(n-1) (the std() method). See the footnote on page~. In this case it does not matter, as long as the variables are all on the same scale.\nUsing the function train_test_split() we now split the observations into a test set, containing 1000 observations, and a training set containing the remaining observations. The argument random_state=0 ensures that we get the same split each time we rerun the code.\n\n(X_train,\n X_test,\n y_train,\n y_test) = train_test_split(np.asarray(feature_std),\n                            Purchase,\n                            test_size=1000,\n                            random_state=0)\n\n?train_test_split reveals that the non-keyword arguments can be lists, arrays, pandas dataframes etc that all have the same length (shape[0]) and hence are indexable. In this case they are the dataframe feature_std and the response variable Purchase. {Note that we have converted feature_std to an ndarray to address a bug in sklearn.} We fit a KNN model on the training data using K=1, and evaluate its performance on the test data.\n\nknn1 = KNeighborsClassifier(n_neighbors=1)\nknn1_pred = knn1.fit(X_train, y_train).predict(X_test)\nnp.mean(y_test != knn1_pred), np.mean(y_test != \"No\")\n\n(0.111, 0.067)\n\n\nThe KNN error rate on the 1,000 test observations is about 11%. At first glance, this may appear to be fairly good. However, since just over 6% of customers purchased insurance, we could get the error rate down to almost 6% by always predicting No regardless of the values of the predictors! This is known as the null rate.}\nSuppose that there is some non-trivial cost to trying to sell insurance to a given individual. For instance, perhaps a salesperson must visit each potential customer. If the company tries to sell insurance to a random selection of customers, then the success rate will be only 6%, which may be far too low given the costs involved. Instead, the company would like to try to sell insurance only to customers who are likely to buy it. So the overall error rate is not of interest. Instead, the fraction of individuals that are correctly predicted to buy insurance is of interest.\n\nconfusion_table(knn1_pred, y_test)\n\n\n\n\n\n\n\nTruth\nNo\nYes\n\n\nPredicted\n\n\n\n\n\n\nNo\n880\n58\n\n\nYes\n53\n9\n\n\n\n\n\n\n\nIt turns out that KNN with K=1 does far better than random guessing among the customers that are predicted to buy insurance. Among 62 such customers, 9, or 14.5%, actually do purchase insurance. This is double the rate that one would obtain from random guessing.\n\n9/(53+9)\n\n0.14516129032258066\n\n\n\n\nThe number of neighbors in KNN is referred to as a tuning parameter, also referred to as a hyperparameter. We do not know a priori what value to use. It is therefore of interest to see how the classifier performs on test data as we vary these parameters. This can be achieved with a for loop, described in Section~. Here we use a for loop to look at the accuracy of our classifier in the group predicted to purchase insurance as we vary the number of neighbors from 1 to 5:\n\nfor K in range(1,6):\n    knn = KNeighborsClassifier(n_neighbors=K)\n    knn_pred = knn.fit(X_train, y_train).predict(X_test)\n    C = confusion_table(knn_pred, y_test)\n    templ = ('K={0:d}: # predicted to rent: {1:&gt;2},' +\n            '  # who did rent {2:d}, accuracy {3:.1%}')\n    pred = C.loc['Yes'].sum()\n    did_rent = C.loc['Yes','Yes']\n    print(templ.format(\n          K,\n          pred,\n          did_rent,\n          did_rent / pred))\n\nK=1: # predicted to rent: 62,  # who did rent 9, accuracy 14.5%\nK=2: # predicted to rent:  6,  # who did rent 1, accuracy 16.7%\nK=3: # predicted to rent: 20,  # who did rent 3, accuracy 15.0%\nK=4: # predicted to rent:  4,  # who did rent 0, accuracy 0.0%\nK=5: # predicted to rent:  7,  # who did rent 1, accuracy 14.3%\n\n\nWe see some variability — the numbers for K=4 are very different from the rest.\n\n\n\nAs a comparison, we can also fit a logistic regression model to the data. This can also be done with sklearn, though by default it fits something like the ridge regression version of logistic regression, which we introduce in Chapter~. This can be modified by appropriately setting the argument C below. Its default value is 1 but by setting it to a very large number, the algorithm converges to the same solution as the usual (unregularized) logistic regression estimator discussed above.\nUnlike the statsmodels package, sklearn focuses less on inference and more on classification. Hence, the summary methods seen in statsmodels and our simplified version seen with summarize are not generally available for the classifiers in sklearn.\n\nlogit = LogisticRegression(C=1e10, solver='liblinear')\nlogit.fit(X_train, y_train)\nlogit_pred = logit.predict_proba(X_test)\nlogit_labels = np.where(logit_pred[:,1] &gt; .5, 'Yes', 'No')\nconfusion_table(logit_labels, y_test)\n\nLogisticRegression(C=10000000000.0, solver='liblinear')In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.  LogisticRegression?Documentation for LogisticRegressioniFittedLogisticRegression(C=10000000000.0, solver='liblinear') \n\n\n\n\n\n\n\n\nTruth\nNo\nYes\n\n\nPredicted\n\n\n\n\n\n\nNo\n931\n67\n\n\nYes\n2\n0\n\n\n\n\n\n\n\nWe used the argument solver='liblinear' above to avoid a warning with the default solver which would indicate that the algorithm does not converge.\nIf we use 0.5 as the predicted probability cut-off for the classifier, then we have a problem: only two of the test observations are predicted to purchase insurance. However, we are not required to use a cut-off of 0.5. If we instead predict a purchase any time the predicted probability of purchase exceeds 0.25, we get much better results: we predict that 29 people will purchase insurance, and we are correct for about 31% of these people. This is almost five times better than random guessing!\n\nlogit_labels = np.where(logit_pred[:,1]&gt;0.25, 'Yes', 'No')\nconfusion_table(logit_labels, y_test)\n\n\n\n\n\n\n\nTruth\nNo\nYes\n\n\nPredicted\n\n\n\n\n\n\nNo\n913\n58\n\n\nYes\n20\n9\n\n\n\n\n\n\n\n\n9/(20+9)\n\n0.3103448275862069"
  },
  {
    "objectID": "posts/ch04-classification/Ch04-classification-lab.html#linear-and-poisson-regression-on-the-bikeshare-data",
    "href": "posts/ch04-classification/Ch04-classification-lab.html#linear-and-poisson-regression-on-the-bikeshare-data",
    "title": "Chapter 4: Classification Lab",
    "section": "",
    "text": "Here we fit linear and Poisson regression models to the Bikeshare data, as described in Section~. The response bikers measures the number of bike rentals per hour in Washington, DC in the period 2010–2012.\n\nBike = load_data('Bikeshare')\n\nLet’s have a peek at the dimensions and names of the variables in this dataframe.\n\nBike.shape, Bike.columns\n\n((8645, 15),\n Index(['season', 'mnth', 'day', 'hr', 'holiday', 'weekday', 'workingday',\n        'weathersit', 'temp', 'atemp', 'hum', 'windspeed', 'casual',\n        'registered', 'bikers'],\n       dtype='object'))\n\n\n\n\nWe begin by fitting a linear regression model to the data.\n\nX = MS(['mnth',\n        'hr',\n        'workingday',\n        'temp',\n        'weathersit']).fit_transform(Bike)\nY = Bike['bikers']\nM_lm = sm.OLS(Y, X).fit()\nsummarize(M_lm)\n\n\n\n\n\n\n\n\ncoef\nstd err\nt\nP&gt;|t|\n\n\n\n\nintercept\n-68.6317\n5.307\n-12.932\n0.000\n\n\nmnth[Feb]\n6.8452\n4.287\n1.597\n0.110\n\n\nmnth[March]\n16.5514\n4.301\n3.848\n0.000\n\n\nmnth[April]\n41.4249\n4.972\n8.331\n0.000\n\n\nmnth[May]\n72.5571\n5.641\n12.862\n0.000\n\n\nmnth[June]\n67.8187\n6.544\n10.364\n0.000\n\n\nmnth[July]\n45.3245\n7.081\n6.401\n0.000\n\n\nmnth[Aug]\n53.2430\n6.640\n8.019\n0.000\n\n\nmnth[Sept]\n66.6783\n5.925\n11.254\n0.000\n\n\nmnth[Oct]\n75.8343\n4.950\n15.319\n0.000\n\n\nmnth[Nov]\n60.3100\n4.610\n13.083\n0.000\n\n\nmnth[Dec]\n46.4577\n4.271\n10.878\n0.000\n\n\nhr[1]\n-14.5793\n5.699\n-2.558\n0.011\n\n\nhr[2]\n-21.5791\n5.733\n-3.764\n0.000\n\n\nhr[3]\n-31.1408\n5.778\n-5.389\n0.000\n\n\nhr[4]\n-36.9075\n5.802\n-6.361\n0.000\n\n\nhr[5]\n-24.1355\n5.737\n-4.207\n0.000\n\n\nhr[6]\n20.5997\n5.704\n3.612\n0.000\n\n\nhr[7]\n120.0931\n5.693\n21.095\n0.000\n\n\nhr[8]\n223.6619\n5.690\n39.310\n0.000\n\n\nhr[9]\n120.5819\n5.693\n21.182\n0.000\n\n\nhr[10]\n83.8013\n5.705\n14.689\n0.000\n\n\nhr[11]\n105.4234\n5.722\n18.424\n0.000\n\n\nhr[12]\n137.2837\n5.740\n23.916\n0.000\n\n\nhr[13]\n136.0359\n5.760\n23.617\n0.000\n\n\nhr[14]\n126.6361\n5.776\n21.923\n0.000\n\n\nhr[15]\n132.0865\n5.780\n22.852\n0.000\n\n\nhr[16]\n178.5206\n5.772\n30.927\n0.000\n\n\nhr[17]\n296.2670\n5.749\n51.537\n0.000\n\n\nhr[18]\n269.4409\n5.736\n46.976\n0.000\n\n\nhr[19]\n186.2558\n5.714\n32.596\n0.000\n\n\nhr[20]\n125.5492\n5.704\n22.012\n0.000\n\n\nhr[21]\n87.5537\n5.693\n15.378\n0.000\n\n\nhr[22]\n59.1226\n5.689\n10.392\n0.000\n\n\nhr[23]\n26.8376\n5.688\n4.719\n0.000\n\n\nworkingday\n1.2696\n1.784\n0.711\n0.477\n\n\ntemp\n157.2094\n10.261\n15.321\n0.000\n\n\nweathersit[cloudy/misty]\n-12.8903\n1.964\n-6.562\n0.000\n\n\nweathersit[heavy rain/snow]\n-109.7446\n76.667\n-1.431\n0.152\n\n\nweathersit[light rain/snow]\n-66.4944\n2.965\n-22.425\n0.000\n\n\n\n\n\n\n\nThere are 24 levels in hr and 40 rows in all. In M_lm, the first levels hr[0] and mnth[Jan] are treated as the baseline values, and so no coefficient estimates are provided for them: implicitly, their coefficient estimates are zero, and all other levels are measured relative to these baselines. For example, the Feb coefficient of 6.845 signifies that, holding all other variables constant, there are on average about 7 more riders in February than in January. Similarly there are about 16.5 more riders in March than in January.\nThe results seen in Section~ used a slightly different coding of the variables hr and mnth, as follows:\n\nhr_encode = contrast('hr', 'sum')\nmnth_encode = contrast('mnth', 'sum')\n\nRefitting again:\n\nX2 = MS([mnth_encode,\n         hr_encode,\n        'workingday',\n        'temp',\n        'weathersit']).fit_transform(Bike)\nM2_lm = sm.OLS(Y, X2).fit()\nS2 = summarize(M2_lm)\nS2\n\n\n\n\n\n\n\n\ncoef\nstd err\nt\nP&gt;|t|\n\n\n\n\nintercept\n73.5974\n5.132\n14.340\n0.000\n\n\nmnth[Jan]\n-46.0871\n4.085\n-11.281\n0.000\n\n\nmnth[Feb]\n-39.2419\n3.539\n-11.088\n0.000\n\n\nmnth[March]\n-29.5357\n3.155\n-9.361\n0.000\n\n\nmnth[April]\n-4.6622\n2.741\n-1.701\n0.089\n\n\nmnth[May]\n26.4700\n2.851\n9.285\n0.000\n\n\nmnth[June]\n21.7317\n3.465\n6.272\n0.000\n\n\nmnth[July]\n-0.7626\n3.908\n-0.195\n0.845\n\n\nmnth[Aug]\n7.1560\n3.535\n2.024\n0.043\n\n\nmnth[Sept]\n20.5912\n3.046\n6.761\n0.000\n\n\nmnth[Oct]\n29.7472\n2.700\n11.019\n0.000\n\n\nmnth[Nov]\n14.2229\n2.860\n4.972\n0.000\n\n\nhr[0]\n-96.1420\n3.955\n-24.307\n0.000\n\n\nhr[1]\n-110.7213\n3.966\n-27.916\n0.000\n\n\nhr[2]\n-117.7212\n4.016\n-29.310\n0.000\n\n\nhr[3]\n-127.2828\n4.081\n-31.191\n0.000\n\n\nhr[4]\n-133.0495\n4.117\n-32.319\n0.000\n\n\nhr[5]\n-120.2775\n4.037\n-29.794\n0.000\n\n\nhr[6]\n-75.5424\n3.992\n-18.925\n0.000\n\n\nhr[7]\n23.9511\n3.969\n6.035\n0.000\n\n\nhr[8]\n127.5199\n3.950\n32.284\n0.000\n\n\nhr[9]\n24.4399\n3.936\n6.209\n0.000\n\n\nhr[10]\n-12.3407\n3.936\n-3.135\n0.002\n\n\nhr[11]\n9.2814\n3.945\n2.353\n0.019\n\n\nhr[12]\n41.1417\n3.957\n10.397\n0.000\n\n\nhr[13]\n39.8939\n3.975\n10.036\n0.000\n\n\nhr[14]\n30.4940\n3.991\n7.641\n0.000\n\n\nhr[15]\n35.9445\n3.995\n8.998\n0.000\n\n\nhr[16]\n82.3786\n3.988\n20.655\n0.000\n\n\nhr[17]\n200.1249\n3.964\n50.488\n0.000\n\n\nhr[18]\n173.2989\n3.956\n43.806\n0.000\n\n\nhr[19]\n90.1138\n3.940\n22.872\n0.000\n\n\nhr[20]\n29.4071\n3.936\n7.471\n0.000\n\n\nhr[21]\n-8.5883\n3.933\n-2.184\n0.029\n\n\nhr[22]\n-37.0194\n3.934\n-9.409\n0.000\n\n\nworkingday\n1.2696\n1.784\n0.711\n0.477\n\n\ntemp\n157.2094\n10.261\n15.321\n0.000\n\n\nweathersit[cloudy/misty]\n-12.8903\n1.964\n-6.562\n0.000\n\n\nweathersit[heavy rain/snow]\n-109.7446\n76.667\n-1.431\n0.152\n\n\nweathersit[light rain/snow]\n-66.4944\n2.965\n-22.425\n0.000\n\n\n\n\n\n\n\nWhat is the difference between the two codings? In M2_lm, a coefficient estimate is reported for all but level 23 of hr and level Dec of mnth. Importantly, in M2_lm, the (unreported) coefficient estimate for the last level of mnth is not zero: instead, it equals the negative of the sum of the coefficient estimates for all of the other levels. Similarly, in M2_lm, the coefficient estimate for the last level of hr is the negative of the sum of the coefficient estimates for all of the other levels. This means that the coefficients of hr and mnth in M2_lm will always sum to zero, and can be interpreted as the difference from the mean level. For example, the coefficient for January of -46.087 indicates that, holding all other variables constant, there are typically 46 fewer riders in January relative to the yearly average.\nIt is important to realize that the choice of coding really does not matter, provided that we interpret the model output correctly in light of the coding used. For example, we see that the predictions from the linear model are the same regardless of coding:\n\nnp.sum((M_lm.fittedvalues - M2_lm.fittedvalues)**2)\n\n1.5365640261199032e-20\n\n\nThe sum of squared differences is zero. We can also see this using the np.allclose() function:\n\nnp.allclose(M_lm.fittedvalues, M2_lm.fittedvalues)\n\nTrue\n\n\nTo reproduce the left-hand side of Figure~ we must first obtain the coefficient estimates associated with mnth. The coefficients for January through November can be obtained directly from the M2_lm object. The coefficient for December must be explicitly computed as the negative sum of all the other months. We first extract all the coefficients for month from the coefficients of M2_lm.\n\ncoef_month = S2[S2.index.str.contains('mnth')]['coef']\ncoef_month\n\nmnth[Jan]     -46.0871\nmnth[Feb]     -39.2419\nmnth[March]   -29.5357\nmnth[April]    -4.6622\nmnth[May]      26.4700\nmnth[June]     21.7317\nmnth[July]     -0.7626\nmnth[Aug]       7.1560\nmnth[Sept]     20.5912\nmnth[Oct]      29.7472\nmnth[Nov]      14.2229\nName: coef, dtype: float64\n\n\nNext, we append Dec as the negative of the sum of all other months.\n\nmonths = Bike['mnth'].dtype.categories\ncoef_month = pd.concat([\n                       coef_month,\n                       pd.Series([-coef_month.sum()],\n                                  index=['mnth[Dec]'\n                                 ])\n                       ])\ncoef_month\n\nmnth[Jan]     -46.0871\nmnth[Feb]     -39.2419\nmnth[March]   -29.5357\nmnth[April]    -4.6622\nmnth[May]      26.4700\nmnth[June]     21.7317\nmnth[July]     -0.7626\nmnth[Aug]       7.1560\nmnth[Sept]     20.5912\nmnth[Oct]      29.7472\nmnth[Nov]      14.2229\nmnth[Dec]       0.3705\ndtype: float64\n\n\nFinally, to make the plot neater, we’ll just use the first letter of each month, which is the 6th entry of each of the labels in the index.\n\nfig_month, ax_month = subplots(figsize=(8,8))\nx_month = np.arange(coef_month.shape[0])\nax_month.plot(x_month, coef_month, marker='o', ms=10)\nax_month.set_xticks(x_month)\nax_month.set_xticklabels([l[5] for l in coef_month.index], fontsize=20)\nax_month.set_xlabel('Month', fontsize=20)\nax_month.set_ylabel('Coefficient', fontsize=20);\n\n\n\n\n\n\n\n\nReproducing the right-hand plot in Figure~ follows a similar process.\n\ncoef_hr = S2[S2.index.str.contains('hr')]['coef']\ncoef_hr = coef_hr.reindex(['hr[{0}]'.format(h) for h in range(23)])\ncoef_hr = pd.concat([coef_hr,\n                     pd.Series([-coef_hr.sum()], index=['hr[23]'])\n                    ])\n\nWe now make the hour plot.\n\nfig_hr, ax_hr = subplots(figsize=(8,8))\nx_hr = np.arange(coef_hr.shape[0])\nax_hr.plot(x_hr, coef_hr, marker='o', ms=10)\nax_hr.set_xticks(x_hr[::2])\nax_hr.set_xticklabels(range(24)[::2], fontsize=20)\nax_hr.set_xlabel('Hour', fontsize=20)\nax_hr.set_ylabel('Coefficient', fontsize=20);\n\n\n\n\n\n\n\n\n\n\n\nNow we fit instead a Poisson regression model to the Bikeshare data. Very little changes, except that we now use the function sm.GLM() with the Poisson family specified:\n\nM_pois = sm.GLM(Y, X2, family=sm.families.Poisson()).fit()\n\nWe can plot the coefficients associated with mnth and hr, in order to reproduce Figure~. We first complete these coefficients as before.\n\nS_pois = summarize(M_pois)\ncoef_month = S_pois[S_pois.index.str.contains('mnth')]['coef']\ncoef_month = pd.concat([coef_month,\n                        pd.Series([-coef_month.sum()],\n                                   index=['mnth[Dec]'])])\ncoef_hr = S_pois[S_pois.index.str.contains('hr')]['coef']\ncoef_hr = pd.concat([coef_hr,\n                     pd.Series([-coef_hr.sum()],\n                     index=['hr[23]'])])\n\nThe plotting is as before.\n\nfig_pois, (ax_month, ax_hr) = subplots(1, 2, figsize=(16,8))\nax_month.plot(x_month, coef_month, marker='o', ms=10)\nax_month.set_xticks(x_month)\nax_month.set_xticklabels([l[5] for l in coef_month.index], fontsize=20)\nax_month.set_xlabel('Month', fontsize=20)\nax_month.set_ylabel('Coefficient', fontsize=20)\nax_hr.plot(x_hr, coef_hr, marker='o', ms=10)\nax_hr.set_xticklabels(range(24)[::2], fontsize=20)\nax_hr.set_xlabel('Hour', fontsize=20)\nax_hr.set_ylabel('Coefficient', fontsize=20);\n\n/tmp/ipykernel_104833/3779510511.py:8: UserWarning: set_ticklabels() should only be used with a fixed number of ticks, i.e. after set_ticks() or using a FixedLocator.\n  ax_hr.set_xticklabels(range(24)[::2], fontsize=20)\n\n\n\n\n\n\n\n\n\nWe compare the fitted values of the two models. The fitted values are stored in the fittedvalues attribute returned by the fit() method for both the linear regression and the Poisson fits. The linear predictors are stored as the attribute lin_pred.\n\nfig, ax = subplots(figsize=(8, 8))\nax.scatter(M2_lm.fittedvalues,\n           M_pois.fittedvalues,\n           s=20)\nax.set_xlabel('Linear Regression Fit', fontsize=20)\nax.set_ylabel('Poisson Regression Fit', fontsize=20)\nax.axline([0,0], c='black', linewidth=3,\n          linestyle='--', slope=1);\n\n\n\n\n\n\n\n\nThe predictions from the Poisson regression model are correlated with those from the linear model; however, the former are non-negative. As a result the Poisson regression predictions tend to be larger than those from the linear model for either very low or very high levels of ridership.\nIn this section, we fit Poisson regression models using the sm.GLM() function with the argument family=sm.families.Poisson(). Earlier in this lab we used the sm.GLM() function with family=sm.families.Binomial() to perform logistic regression. Other choices for the family argument can be used to fit other types of GLMs. For instance, family=sm.families.Gamma() fits a Gamma regression model."
  },
  {
    "objectID": "posts/ch11-survival-analysis-and-censored-data/Ch11-surv-lab.html",
    "href": "posts/ch11-survival-analysis-and-censored-data/Ch11-surv-lab.html",
    "title": "Chapter 11: Survival Analysis - Lab",
    "section": "",
    "text": "In this lab, we perform survival analyses on three separate data sets. In Section~ we analyze the BrainCancer data that was first described in Section~. In Section~, we examine the Publication data from Section~. Finally, Section~ explores a simulated call-center data set.\nWe begin by importing some of our libraries at this top level. This makes the code more readable, as scanning the first few lines of the notebook tell us what libraries are used in this notebook.\n\nfrom matplotlib.pyplot import subplots\nimport numpy as np\nimport pandas as pd\nfrom ISLP.models import ModelSpec as MS\nfrom ISLP import load_data\n\nWe also collect the new imports needed for this lab.\n\nfrom lifelines import \\\n     (KaplanMeierFitter,\n      CoxPHFitter)\nfrom lifelines.statistics import \\\n     (logrank_test,\n      multivariate_logrank_test)\nfrom ISLP.survival import sim_time\n\n\n\nWe begin with the BrainCancer data set, contained in the ISLP package.\n\nBrainCancer = load_data('BrainCancer')\nBrainCancer.columns\n\nIndex(['sex', 'diagnosis', 'loc', 'ki', 'gtv', 'stereo', 'status', 'time'], dtype='object')\n\n\nThe rows index the 88 patients, while the 8 columns contain the predictors and outcome variables. We first briefly examine the data.\n\nBrainCancer['sex'].value_counts()\n\nsex\nFemale    45\nMale      43\nName: count, dtype: int64\n\n\n\nBrainCancer['diagnosis'].value_counts()\n\ndiagnosis\nMeningioma    42\nHG glioma     22\nOther         14\nLG glioma      9\nName: count, dtype: int64\n\n\n\nBrainCancer['status'].value_counts()\n\nstatus\n0    53\n1    35\nName: count, dtype: int64\n\n\nBefore beginning an analysis, it is important to know how the status variable has been coded. Most software uses the convention that a status of 1 indicates an uncensored observation (often death), and a status of 0 indicates a censored observation. But some scientists might use the opposite coding. For the BrainCancer data set 35 patients died before the end of the study, so we are using the conventional coding.\nTo begin the analysis, we re-create the Kaplan-Meier survival curve shown in Figure~. The main package we will use for survival analysis is lifelines. The variable time corresponds to y_i, the time to the ith event (either censoring or death). The first argument to km.fit is the event time, and the second argument is the censoring variable, with a 1 indicating an observed failure time. The plot() method produces a survival curve with pointwise confidence intervals. By default, these are 90% confidence intervals, but this can be changed by setting the alpha argument to one minus the desired confidence level.\n\nfig, ax = subplots(figsize=(8,8))\nkm = KaplanMeierFitter()\nkm_brain = km.fit(BrainCancer['time'], BrainCancer['status'])\nkm_brain.plot(label='Kaplan Meier estimate', ax=ax)\n\n\n\n\n\n\n\n\nNext we create Kaplan-Meier survival curves that are stratified by sex, in order to reproduce Figure~. We do this using the groupby() method of a dataframe. This method returns a generator that can be iterated over in the for loop. In this case, the items in the for loop are 2-tuples representing the groups: the first entry is the value of the grouping column sex while the second value is the dataframe consisting of all rows in the dataframe matching that value of sex. We will want to use this data below in the log-rank test, hence we store this information in the dictionary by_sex. Finally, we have also used the notion of string interpolation to automatically label the different lines in the plot. String interpolation is a powerful technique to format strings — Python has many ways to facilitate such operations.\n\nfig, ax = subplots(figsize=(8,8))\nby_sex = {}\nfor sex, df in BrainCancer.groupby('sex'):\n    by_sex[sex] = df\n    km_sex = km.fit(df['time'], df['status'])\n    km_sex.plot(label='Sex=%s' % sex, ax=ax)\n\n/tmp/ipykernel_115886/3279415391.py:3: FutureWarning: The default of observed=False is deprecated and will be changed to True in a future version of pandas. Pass observed=False to retain current behavior or observed=True to adopt the future default and silence this warning.\n  for sex, df in BrainCancer.groupby('sex'):\n\n\n\n\n\n\n\n\n\nAs discussed in Section~, we can perform a log-rank test to compare the survival of males to females. We use the logrank_test() function from the lifelines.statistics module. The first two arguments are the event times, with the second denoting the corresponding (optional) censoring indicators.\n\nlogrank_test(by_sex['Male']['time'],\n             by_sex['Female']['time'],\n             by_sex['Male']['status'],\n             by_sex['Female']['status'])\n\n\n\n\n\n\n\nt_0\n-1\n\n\nnull_distribution\nchi squared\n\n\ndegrees_of_freedom\n1\n\n\ntest_name\nlogrank_test\n\n\n\n\n\n\n\n\n\ntest_statistic\np\n-log2(p)\n\n\n\n\n0\n1.44\n0.23\n2.12\n\n\n\n\n\nThe resulting p-value is 0.23, indicating no evidence of a difference in survival between the two sexes.\nNext, we use the CoxPHFitter() estimator from lifelines to fit Cox proportional hazards models. To begin, we consider a model that uses sex as the only predictor.\n\ncoxph = CoxPHFitter # shorthand\nsex_df = BrainCancer[['time', 'status', 'sex']]\nmodel_df = MS(['time', 'status', 'sex'],\n              intercept=False).fit_transform(sex_df)\ncox_fit = coxph().fit(model_df,\n                      'time',\n                      'status')\ncox_fit.summary[['coef', 'se(coef)', 'p']]\n\n\n\n\n\n\n\n\ncoef\nse(coef)\np\n\n\ncovariate\n\n\n\n\n\n\n\nsex[Male]\n0.407668\n0.342004\n0.233262\n\n\n\n\n\n\n\nThe first argument to fit should be a data frame containing at least the event time (the second argument time in this case), as well as an optional censoring variable (the argument status in this case). Note also that the Cox model does not include an intercept, which is why we used the intercept=False argument to ModelSpec above. The summary() method delivers many columns; we chose to abbreviate its output here. It is possible to obtain the likelihood ratio test comparing this model to the one with no features as follows:\n\ncox_fit.log_likelihood_ratio_test()\n\n\n\n\n\n\n\nnull_distribution\nchi squared\n\n\ndegrees_freedom\n1\n\n\ntest_name\nlog-likelihood ratio test\n\n\n\n\n\n\n\n\n\ntest_statistic\np\n-log2(p)\n\n\n\n\n0\n1.44\n0.23\n2.12\n\n\n\n\n\nRegardless of which test we use, we see that there is no clear evidence for a difference in survival between males and females. As we learned in this chapter, the score test from the Cox model is exactly equal to the log rank test statistic!\nNow we fit a model that makes use of additional predictors. We first note that one of our diagnosis values is missing, hence we drop that observation before continuing.\n\ncleaned = BrainCancer.dropna()\nall_MS = MS(cleaned.columns, intercept=False)\nall_df = all_MS.fit_transform(cleaned)\nfit_all = coxph().fit(all_df,\n                      'time',\n                      'status')\nfit_all.summary[['coef', 'se(coef)', 'p']]\n\n\n\n\n\n\n\n\ncoef\nse(coef)\np\n\n\ncovariate\n\n\n\n\n\n\n\nsex[Male]\n0.183748\n0.360358\n0.610119\n\n\ndiagnosis[LG glioma]\n-1.239530\n0.579555\n0.032455\n\n\ndiagnosis[Meningioma]\n-2.154566\n0.450524\n0.000002\n\n\ndiagnosis[Other]\n-1.268870\n0.617672\n0.039949\n\n\nloc[Supratentorial]\n0.441195\n0.703669\n0.530665\n\n\nki\n-0.054955\n0.018314\n0.002693\n\n\ngtv\n0.034293\n0.022333\n0.124661\n\n\nstereo[SRT]\n0.177778\n0.601578\n0.767597\n\n\n\n\n\n\n\nThe diagnosis variable has been coded so that the baseline corresponds to HG glioma. The results indicate that the risk associated with HG glioma is more than eight times (i.e. e^{2.15}=8.62) the risk associated with meningioma. In other words, after adjusting for the other predictors, patients with HG glioma have much worse survival compared to those with meningioma. In addition, larger values of the Karnofsky index, ki, are associated with lower risk, i.e. longer survival.\nFinally, we plot estimated survival curves for each diagnosis category, adjusting for the other predictors. To make these plots, we set the values of the other predictors equal to the mean for quantitative variables and equal to the mode for categorical. To do this, we use the apply() method across rows (i.e. axis=0) with a function representative that checks if a column is categorical or not.\n\nlevels = cleaned['diagnosis'].unique()\ndef representative(series):\n    if hasattr(series.dtype, 'categories'):\n        return pd.Series.mode(series)\n    else:\n        return series.mean()\nmodal_data = cleaned.apply(representative, axis=0)\n\nWe make four copies of the column means and assign the diagnosis column to be the four different diagnoses.\n\nmodal_df = pd.DataFrame(\n              [modal_data.iloc[0] for _ in range(len(levels))])\nmodal_df['diagnosis'] = levels\nmodal_df\n\n\n\n\n\n\n\n\nsex\ndiagnosis\nloc\nki\ngtv\nstereo\nstatus\ntime\n\n\n\n\n0\nFemale\nMeningioma\nSupratentorial\n80.91954\n8.687011\nSRT\n0.402299\n27.188621\n\n\n0\nFemale\nHG glioma\nSupratentorial\n80.91954\n8.687011\nSRT\n0.402299\n27.188621\n\n\n0\nFemale\nLG glioma\nSupratentorial\n80.91954\n8.687011\nSRT\n0.402299\n27.188621\n\n\n0\nFemale\nOther\nSupratentorial\n80.91954\n8.687011\nSRT\n0.402299\n27.188621\n\n\n\n\n\n\n\nWe then construct the model matrix based on the model specification all_MS used to fit the model, and name the rows according to the levels of diagnosis.\n\nmodal_X = all_MS.transform(modal_df)\nmodal_X.index = levels\nmodal_X\n\n\n\n\n\n\n\n\nsex[Male]\ndiagnosis[LG glioma]\ndiagnosis[Meningioma]\ndiagnosis[Other]\nloc[Supratentorial]\nki\ngtv\nstereo[SRT]\nstatus\ntime\n\n\n\n\nMeningioma\n0.0\n0.0\n1.0\n0.0\n1.0\n80.91954\n8.687011\n1.0\n0.402299\n27.188621\n\n\nHG glioma\n0.0\n0.0\n0.0\n0.0\n1.0\n80.91954\n8.687011\n1.0\n0.402299\n27.188621\n\n\nLG glioma\n0.0\n1.0\n0.0\n0.0\n1.0\n80.91954\n8.687011\n1.0\n0.402299\n27.188621\n\n\nOther\n0.0\n0.0\n0.0\n1.0\n1.0\n80.91954\n8.687011\n1.0\n0.402299\n27.188621\n\n\n\n\n\n\n\nWe can use the predict_survival_function() method to obtain the estimated survival function.\n\npredicted_survival = fit_all.predict_survival_function(modal_X)\npredicted_survival\n\n\n\n\n\n\n\n\nMeningioma\nHG glioma\nLG glioma\nOther\n\n\n\n\n0.07\n0.997947\n0.982430\n0.994881\n0.995029\n\n\n1.18\n0.997947\n0.982430\n0.994881\n0.995029\n\n\n1.41\n0.995679\n0.963342\n0.989245\n0.989555\n\n\n1.54\n0.995679\n0.963342\n0.989245\n0.989555\n\n\n2.03\n0.995679\n0.963342\n0.989245\n0.989555\n\n\n...\n...\n...\n...\n...\n\n\n65.02\n0.688772\n0.040136\n0.394181\n0.404936\n\n\n67.38\n0.688772\n0.040136\n0.394181\n0.404936\n\n\n73.74\n0.688772\n0.040136\n0.394181\n0.404936\n\n\n78.75\n0.688772\n0.040136\n0.394181\n0.404936\n\n\n82.56\n0.688772\n0.040136\n0.394181\n0.404936\n\n\n\n\n85 rows × 4 columns\n\n\n\nThis returns a data frame, whose plot methods yields the different survival curves. To avoid clutter in the plots, we do not display confidence intervals.\n\nfig, ax = subplots(figsize=(8, 8))\npredicted_survival.plot(ax=ax);\n\n\n\n\n\n\n\n\n\n\n\nThe Publication data presented in Section~ can be found in the ISLP package. We first reproduce Figure~ by plotting the Kaplan-Meier curves stratified on the posres variable, which records whether the study had a positive or negative result.\n\nfig, ax = subplots(figsize=(8,8))\nPublication = load_data('Publication')\nby_result = {}\nfor result, df in Publication.groupby('posres'):\n    by_result[result] = df\n    km_result = km.fit(df['time'], df['status'])\n    km_result.plot(label='Result=%d' % result, ax=ax)\n\n\n\n\n\n\n\n\nAs discussed previously, the p-values from fitting Cox’s proportional hazards model to the posres variable are quite large, providing no evidence of a difference in time-to-publication between studies with positive versus negative results.\n\nposres_df = MS(['posres',\n                'time',\n                'status'],\n                intercept=False).fit_transform(Publication)\nposres_fit = coxph().fit(posres_df,\n                         'time',\n                         'status')\nposres_fit.summary[['coef', 'se(coef)', 'p']]\n\n\n\n\n\n\n\n\ncoef\nse(coef)\np\n\n\ncovariate\n\n\n\n\n\n\n\nposres\n0.148076\n0.161625\n0.359579\n\n\n\n\n\n\n\nHowever, the results change dramatically when we include other predictors in the model. Here we exclude the funding mechanism variable.\n\nmodel = MS(Publication.columns.drop('mech'),\n           intercept=False)\ncoxph().fit(model.fit_transform(Publication),\n            'time',\n            'status').summary[['coef', 'se(coef)', 'p']]\n\n\n\n\n\n\n\n\ncoef\nse(coef)\np\n\n\ncovariate\n\n\n\n\n\n\n\nposres\n0.570773\n0.175960\n1.179610e-03\n\n\nmulti\n-0.040860\n0.251194\n8.707842e-01\n\n\nclinend\n0.546183\n0.262000\n3.709944e-02\n\n\nsampsize\n0.000005\n0.000015\n7.507005e-01\n\n\nbudget\n0.004386\n0.002465\n7.515984e-02\n\n\nimpact\n0.058318\n0.006676\n2.426306e-18\n\n\n\n\n\n\n\nWe see that there are a number of statistically significant variables, including whether the trial focused on a clinical endpoint, the impact of the study, and whether the study had positive or negative results.\n\n\n\nIn this section, we will simulate survival data using the relationship between cumulative hazard and the survival function explored in Exercise . Our simulated data will represent the observed wait times (in seconds) for 2,000 customers who have phoned a call center. In this context, censoring occurs if a customer hangs up before his or her call is answered.\nThere are three covariates: Operators (the number of call center operators available at the time of the call, which can range from 5 to 15), Center (either A, B, or C), and Time of day (Morning, Afternoon, or Evening). We generate data for these covariates so that all possibilities are equally likely: for instance, morning, afternoon and evening calls are equally likely, and any number of operators from 5 to 15 is equally likely.\n\nrng = np.random.default_rng(10)\nN = 2000\nOperators = rng.choice(np.arange(5, 16),\n                       N,\n                       replace=True)\nCenter = rng.choice(['A', 'B', 'C'],\n                    N,\n                    replace=True)\nTime = rng.choice(['Morn.', 'After.', 'Even.'],\n                   N,\n                   replace=True)\nD = pd.DataFrame({'Operators': Operators,\n                  'Center': pd.Categorical(Center),\n                  'Time': pd.Categorical(Time)})\n\nWe then build a model matrix (omitting the intercept)\n\nmodel = MS(['Operators',\n            'Center',\n            'Time'],\n           intercept=False)\nX = model.fit_transform(D)\n\nIt is worthwhile to take a peek at the model matrix X, so that we can be sure that we understand how the variables have been coded. By default, the levels of categorical variables are sorted and, as usual, the first column of the one-hot encoding of the variable is dropped.\n\nX[:5]\n\n\n\n\n\n\n\n\nOperators\nCenter[B]\nCenter[C]\nTime[Even.]\nTime[Morn.]\n\n\n\n\n0\n13\n0.0\n1.0\n0.0\n0.0\n\n\n1\n15\n0.0\n0.0\n1.0\n0.0\n\n\n2\n7\n1.0\n0.0\n0.0\n1.0\n\n\n3\n7\n0.0\n1.0\n0.0\n1.0\n\n\n4\n13\n0.0\n1.0\n1.0\n0.0\n\n\n\n\n\n\n\nNext, we specify the coefficients and the hazard function.\n\ntrue_beta = np.array([0.04, -0.3, 0, 0.2, -0.2])\ntrue_linpred = X.dot(true_beta)\nhazard = lambda t: 1e-5 * t\n\nHere, we have set the coefficient associated with Operators to equal 0.04; in other words, each additional operator leads to a e^{0.04}=1.041-fold increase in the “risk” that the call will be answered, given the Center and Time covariates. This makes sense: the greater the number of operators at hand, the shorter the wait time! The coefficient associated with Center == B is -0.3, and Center == A is treated as the baseline. This means that the risk of a call being answered at Center B is 0.74 times the risk that it will be answered at Center A; in other words, the wait times are a bit longer at Center B.\nRecall from Section~ the use of lambda for creating short functions on the fly. We use the function sim_time() from the ISLP.survival package. This function uses the relationship between the survival function and cumulative hazard S(t) = \\exp(-H(t)) and the specific form of the cumulative hazard function in the Cox model to simulate data based on values of the linear predictor true_linpred and the cumulative hazard. We need to provide the cumulative hazard function, which we do here.\n\ncum_hazard = lambda t: 1e-5 * t**2 / 2\n\nWe are now ready to generate data under the Cox proportional hazards model. We truncate the maximum time to 1000 seconds to keep simulated wait times reasonable. The function sim_time() takes a linear predictor, a cumulative hazard function and a random number generator.\n\nW = np.array([sim_time(l, cum_hazard, rng)\n              for l in true_linpred])\nD['Wait time'] = np.clip(W, 0, 1000)\n\nWe now simulate our censoring variable, for which we assume 90% of calls were answered (Failed==1) before the customer hung up (Failed==0).\n\nD['Failed'] = rng.choice([1, 0],\n                         N,\n                         p=[0.9, 0.1])\nD[:5]\n\n\n\n\n\n\n\n\nOperators\nCenter\nTime\nWait time\nFailed\n\n\n\n\n0\n13\nC\nAfter.\n525.064979\n1\n\n\n1\n15\nA\nEven.\n254.677835\n1\n\n\n2\n7\nB\nMorn.\n487.739224\n1\n\n\n3\n7\nC\nMorn.\n308.580292\n1\n\n\n4\n13\nC\nEven.\n154.174608\n1\n\n\n\n\n\n\n\n\nD['Failed'].mean()\n\n0.9075\n\n\nWe now plot Kaplan-Meier survival curves. First, we stratify by Center.\n\nfig, ax = subplots(figsize=(8,8))\nby_center = {}\nfor center, df in D.groupby('Center'):\n    by_center[center] = df\n    km_center = km.fit(df['Wait time'], df['Failed'])\n    km_center.plot(label='Center=%s' % center, ax=ax)\nax.set_title(\"Probability of Still Being on Hold\")\n\n/tmp/ipykernel_115886/141205229.py:3: FutureWarning: The default of observed=False is deprecated and will be changed to True in a future version of pandas. Pass observed=False to retain current behavior or observed=True to adopt the future default and silence this warning.\n  for center, df in D.groupby('Center'):\n\n\nText(0.5, 1.0, 'Probability of Still Being on Hold')\n\n\n\n\n\n\n\n\n\nNext, we stratify by Time.\n\nfig, ax = subplots(figsize=(8,8))\nby_time = {}\nfor time, df in D.groupby('Time'):\n    by_time[time] = df\n    km_time = km.fit(df['Wait time'], df['Failed'])\n    km_time.plot(label='Time=%s' % time, ax=ax)\nax.set_title(\"Probability of Still Being on Hold\")\n\n/tmp/ipykernel_115886/1980626088.py:3: FutureWarning: The default of observed=False is deprecated and will be changed to True in a future version of pandas. Pass observed=False to retain current behavior or observed=True to adopt the future default and silence this warning.\n  for time, df in D.groupby('Time'):\n\n\nText(0.5, 1.0, 'Probability of Still Being on Hold')\n\n\n\n\n\n\n\n\n\nIt seems that calls at Call Center B take longer to be answered than calls at Centers A and C. Similarly, it appears that wait times are longest in the morning and shortest in the evening hours. We can use a log-rank test to determine whether these differences are statistically significant using the function multivariate_logrank_test().\n\nmultivariate_logrank_test(D['Wait time'],\n                          D['Center'],\n                          D['Failed'])\n\n\n\n\n\n\n\nt_0\n-1\n\n\nnull_distribution\nchi squared\n\n\ndegrees_of_freedom\n2\n\n\ntest_name\nmultivariate_logrank_test\n\n\n\n\n\n\n\n\n\ntest_statistic\np\n-log2(p)\n\n\n\n\n0\n20.30\n&lt;0.005\n14.65\n\n\n\n\n\nNext, we consider the effect of Time.\n\nmultivariate_logrank_test(D['Wait time'],\n                          D['Time'],\n                          D['Failed'])\n\n\n\n\n\n\n\nt_0\n-1\n\n\nnull_distribution\nchi squared\n\n\ndegrees_of_freedom\n2\n\n\ntest_name\nmultivariate_logrank_test\n\n\n\n\n\n\n\n\n\ntest_statistic\np\n-log2(p)\n\n\n\n\n0\n49.90\n&lt;0.005\n35.99\n\n\n\n\n\nAs in the case of a categorical variable with 2 levels, these results are similar to the likelihood ratio test from the Cox proportional hazards model. First, we look at the results for Center.\n\nX = MS(['Wait time',\n        'Failed',\n        'Center'],\n        intercept=False).fit_transform(D)\nF = coxph().fit(X, 'Wait time', 'Failed')\nF.log_likelihood_ratio_test()\n\n\n\n\n\n\n\nnull_distribution\nchi squared\n\n\ndegrees_freedom\n2\n\n\ntest_name\nlog-likelihood ratio test\n\n\n\n\n\n\n\n\n\ntest_statistic\np\n-log2(p)\n\n\n\n\n0\n20.58\n&lt;0.005\n14.85\n\n\n\n\n\nNext, we look at the results for Time.\n\nX = MS(['Wait time',\n        'Failed',\n        'Time'],\n       intercept=False).fit_transform(D)\nF = coxph().fit(X, 'Wait time', 'Failed')\nF.log_likelihood_ratio_test()\n\n\n\n\n\n\n\nnull_distribution\nchi squared\n\n\ndegrees_freedom\n2\n\n\ntest_name\nlog-likelihood ratio test\n\n\n\n\n\n\n\n\n\ntest_statistic\np\n-log2(p)\n\n\n\n\n0\n48.12\n&lt;0.005\n34.71\n\n\n\n\n\nWe find that differences between centers are highly significant, as are differences between times of day.\nFinally, we fit Cox’s proportional hazards model to the data.\n\nX = MS(D.columns,\n       intercept=False).fit_transform(D)\nfit_queuing = coxph().fit(\n                  X,\n                 'Wait time',\n                 'Failed')\nfit_queuing.summary[['coef', 'se(coef)', 'p']]\n\n\n\n\n\n\n\n\ncoef\nse(coef)\np\n\n\ncovariate\n\n\n\n\n\n\n\nOperators\n0.043934\n0.007520\n5.143589e-09\n\n\nCenter[B]\n-0.236060\n0.058113\n4.864162e-05\n\n\nCenter[C]\n0.012231\n0.057518\n8.316096e-01\n\n\nTime[Even.]\n0.268845\n0.057797\n3.294956e-06\n\n\nTime[Morn.]\n-0.148217\n0.057334\n9.733557e-03\n\n\n\n\n\n\n\nThe p-values for Center B and evening time are very small. It is also clear that the hazard — that is, the instantaneous risk that a call will be answered — increases with the number of operators. Since we generated the data ourselves, we know that the true coefficients for Operators, Center = B, Center = C, Time = Even. and Time = Morn. are 0.04, -0.3, 0, 0.2, and -0.2, respectively. The coefficient estimates from the fitted Cox model are fairly accurate."
  },
  {
    "objectID": "posts/ch11-survival-analysis-and-censored-data/Ch11-surv-lab.html#brain-cancer-data",
    "href": "posts/ch11-survival-analysis-and-censored-data/Ch11-surv-lab.html#brain-cancer-data",
    "title": "Chapter 11: Survival Analysis - Lab",
    "section": "",
    "text": "We begin with the BrainCancer data set, contained in the ISLP package.\n\nBrainCancer = load_data('BrainCancer')\nBrainCancer.columns\n\nIndex(['sex', 'diagnosis', 'loc', 'ki', 'gtv', 'stereo', 'status', 'time'], dtype='object')\n\n\nThe rows index the 88 patients, while the 8 columns contain the predictors and outcome variables. We first briefly examine the data.\n\nBrainCancer['sex'].value_counts()\n\nsex\nFemale    45\nMale      43\nName: count, dtype: int64\n\n\n\nBrainCancer['diagnosis'].value_counts()\n\ndiagnosis\nMeningioma    42\nHG glioma     22\nOther         14\nLG glioma      9\nName: count, dtype: int64\n\n\n\nBrainCancer['status'].value_counts()\n\nstatus\n0    53\n1    35\nName: count, dtype: int64\n\n\nBefore beginning an analysis, it is important to know how the status variable has been coded. Most software uses the convention that a status of 1 indicates an uncensored observation (often death), and a status of 0 indicates a censored observation. But some scientists might use the opposite coding. For the BrainCancer data set 35 patients died before the end of the study, so we are using the conventional coding.\nTo begin the analysis, we re-create the Kaplan-Meier survival curve shown in Figure~. The main package we will use for survival analysis is lifelines. The variable time corresponds to y_i, the time to the ith event (either censoring or death). The first argument to km.fit is the event time, and the second argument is the censoring variable, with a 1 indicating an observed failure time. The plot() method produces a survival curve with pointwise confidence intervals. By default, these are 90% confidence intervals, but this can be changed by setting the alpha argument to one minus the desired confidence level.\n\nfig, ax = subplots(figsize=(8,8))\nkm = KaplanMeierFitter()\nkm_brain = km.fit(BrainCancer['time'], BrainCancer['status'])\nkm_brain.plot(label='Kaplan Meier estimate', ax=ax)\n\n\n\n\n\n\n\n\nNext we create Kaplan-Meier survival curves that are stratified by sex, in order to reproduce Figure~. We do this using the groupby() method of a dataframe. This method returns a generator that can be iterated over in the for loop. In this case, the items in the for loop are 2-tuples representing the groups: the first entry is the value of the grouping column sex while the second value is the dataframe consisting of all rows in the dataframe matching that value of sex. We will want to use this data below in the log-rank test, hence we store this information in the dictionary by_sex. Finally, we have also used the notion of string interpolation to automatically label the different lines in the plot. String interpolation is a powerful technique to format strings — Python has many ways to facilitate such operations.\n\nfig, ax = subplots(figsize=(8,8))\nby_sex = {}\nfor sex, df in BrainCancer.groupby('sex'):\n    by_sex[sex] = df\n    km_sex = km.fit(df['time'], df['status'])\n    km_sex.plot(label='Sex=%s' % sex, ax=ax)\n\n/tmp/ipykernel_115886/3279415391.py:3: FutureWarning: The default of observed=False is deprecated and will be changed to True in a future version of pandas. Pass observed=False to retain current behavior or observed=True to adopt the future default and silence this warning.\n  for sex, df in BrainCancer.groupby('sex'):\n\n\n\n\n\n\n\n\n\nAs discussed in Section~, we can perform a log-rank test to compare the survival of males to females. We use the logrank_test() function from the lifelines.statistics module. The first two arguments are the event times, with the second denoting the corresponding (optional) censoring indicators.\n\nlogrank_test(by_sex['Male']['time'],\n             by_sex['Female']['time'],\n             by_sex['Male']['status'],\n             by_sex['Female']['status'])\n\n\n\n\n\n\n\nt_0\n-1\n\n\nnull_distribution\nchi squared\n\n\ndegrees_of_freedom\n1\n\n\ntest_name\nlogrank_test\n\n\n\n\n\n\n\n\n\ntest_statistic\np\n-log2(p)\n\n\n\n\n0\n1.44\n0.23\n2.12\n\n\n\n\n\nThe resulting p-value is 0.23, indicating no evidence of a difference in survival between the two sexes.\nNext, we use the CoxPHFitter() estimator from lifelines to fit Cox proportional hazards models. To begin, we consider a model that uses sex as the only predictor.\n\ncoxph = CoxPHFitter # shorthand\nsex_df = BrainCancer[['time', 'status', 'sex']]\nmodel_df = MS(['time', 'status', 'sex'],\n              intercept=False).fit_transform(sex_df)\ncox_fit = coxph().fit(model_df,\n                      'time',\n                      'status')\ncox_fit.summary[['coef', 'se(coef)', 'p']]\n\n\n\n\n\n\n\n\ncoef\nse(coef)\np\n\n\ncovariate\n\n\n\n\n\n\n\nsex[Male]\n0.407668\n0.342004\n0.233262\n\n\n\n\n\n\n\nThe first argument to fit should be a data frame containing at least the event time (the second argument time in this case), as well as an optional censoring variable (the argument status in this case). Note also that the Cox model does not include an intercept, which is why we used the intercept=False argument to ModelSpec above. The summary() method delivers many columns; we chose to abbreviate its output here. It is possible to obtain the likelihood ratio test comparing this model to the one with no features as follows:\n\ncox_fit.log_likelihood_ratio_test()\n\n\n\n\n\n\n\nnull_distribution\nchi squared\n\n\ndegrees_freedom\n1\n\n\ntest_name\nlog-likelihood ratio test\n\n\n\n\n\n\n\n\n\ntest_statistic\np\n-log2(p)\n\n\n\n\n0\n1.44\n0.23\n2.12\n\n\n\n\n\nRegardless of which test we use, we see that there is no clear evidence for a difference in survival between males and females. As we learned in this chapter, the score test from the Cox model is exactly equal to the log rank test statistic!\nNow we fit a model that makes use of additional predictors. We first note that one of our diagnosis values is missing, hence we drop that observation before continuing.\n\ncleaned = BrainCancer.dropna()\nall_MS = MS(cleaned.columns, intercept=False)\nall_df = all_MS.fit_transform(cleaned)\nfit_all = coxph().fit(all_df,\n                      'time',\n                      'status')\nfit_all.summary[['coef', 'se(coef)', 'p']]\n\n\n\n\n\n\n\n\ncoef\nse(coef)\np\n\n\ncovariate\n\n\n\n\n\n\n\nsex[Male]\n0.183748\n0.360358\n0.610119\n\n\ndiagnosis[LG glioma]\n-1.239530\n0.579555\n0.032455\n\n\ndiagnosis[Meningioma]\n-2.154566\n0.450524\n0.000002\n\n\ndiagnosis[Other]\n-1.268870\n0.617672\n0.039949\n\n\nloc[Supratentorial]\n0.441195\n0.703669\n0.530665\n\n\nki\n-0.054955\n0.018314\n0.002693\n\n\ngtv\n0.034293\n0.022333\n0.124661\n\n\nstereo[SRT]\n0.177778\n0.601578\n0.767597\n\n\n\n\n\n\n\nThe diagnosis variable has been coded so that the baseline corresponds to HG glioma. The results indicate that the risk associated with HG glioma is more than eight times (i.e. e^{2.15}=8.62) the risk associated with meningioma. In other words, after adjusting for the other predictors, patients with HG glioma have much worse survival compared to those with meningioma. In addition, larger values of the Karnofsky index, ki, are associated with lower risk, i.e. longer survival.\nFinally, we plot estimated survival curves for each diagnosis category, adjusting for the other predictors. To make these plots, we set the values of the other predictors equal to the mean for quantitative variables and equal to the mode for categorical. To do this, we use the apply() method across rows (i.e. axis=0) with a function representative that checks if a column is categorical or not.\n\nlevels = cleaned['diagnosis'].unique()\ndef representative(series):\n    if hasattr(series.dtype, 'categories'):\n        return pd.Series.mode(series)\n    else:\n        return series.mean()\nmodal_data = cleaned.apply(representative, axis=0)\n\nWe make four copies of the column means and assign the diagnosis column to be the four different diagnoses.\n\nmodal_df = pd.DataFrame(\n              [modal_data.iloc[0] for _ in range(len(levels))])\nmodal_df['diagnosis'] = levels\nmodal_df\n\n\n\n\n\n\n\n\nsex\ndiagnosis\nloc\nki\ngtv\nstereo\nstatus\ntime\n\n\n\n\n0\nFemale\nMeningioma\nSupratentorial\n80.91954\n8.687011\nSRT\n0.402299\n27.188621\n\n\n0\nFemale\nHG glioma\nSupratentorial\n80.91954\n8.687011\nSRT\n0.402299\n27.188621\n\n\n0\nFemale\nLG glioma\nSupratentorial\n80.91954\n8.687011\nSRT\n0.402299\n27.188621\n\n\n0\nFemale\nOther\nSupratentorial\n80.91954\n8.687011\nSRT\n0.402299\n27.188621\n\n\n\n\n\n\n\nWe then construct the model matrix based on the model specification all_MS used to fit the model, and name the rows according to the levels of diagnosis.\n\nmodal_X = all_MS.transform(modal_df)\nmodal_X.index = levels\nmodal_X\n\n\n\n\n\n\n\n\nsex[Male]\ndiagnosis[LG glioma]\ndiagnosis[Meningioma]\ndiagnosis[Other]\nloc[Supratentorial]\nki\ngtv\nstereo[SRT]\nstatus\ntime\n\n\n\n\nMeningioma\n0.0\n0.0\n1.0\n0.0\n1.0\n80.91954\n8.687011\n1.0\n0.402299\n27.188621\n\n\nHG glioma\n0.0\n0.0\n0.0\n0.0\n1.0\n80.91954\n8.687011\n1.0\n0.402299\n27.188621\n\n\nLG glioma\n0.0\n1.0\n0.0\n0.0\n1.0\n80.91954\n8.687011\n1.0\n0.402299\n27.188621\n\n\nOther\n0.0\n0.0\n0.0\n1.0\n1.0\n80.91954\n8.687011\n1.0\n0.402299\n27.188621\n\n\n\n\n\n\n\nWe can use the predict_survival_function() method to obtain the estimated survival function.\n\npredicted_survival = fit_all.predict_survival_function(modal_X)\npredicted_survival\n\n\n\n\n\n\n\n\nMeningioma\nHG glioma\nLG glioma\nOther\n\n\n\n\n0.07\n0.997947\n0.982430\n0.994881\n0.995029\n\n\n1.18\n0.997947\n0.982430\n0.994881\n0.995029\n\n\n1.41\n0.995679\n0.963342\n0.989245\n0.989555\n\n\n1.54\n0.995679\n0.963342\n0.989245\n0.989555\n\n\n2.03\n0.995679\n0.963342\n0.989245\n0.989555\n\n\n...\n...\n...\n...\n...\n\n\n65.02\n0.688772\n0.040136\n0.394181\n0.404936\n\n\n67.38\n0.688772\n0.040136\n0.394181\n0.404936\n\n\n73.74\n0.688772\n0.040136\n0.394181\n0.404936\n\n\n78.75\n0.688772\n0.040136\n0.394181\n0.404936\n\n\n82.56\n0.688772\n0.040136\n0.394181\n0.404936\n\n\n\n\n85 rows × 4 columns\n\n\n\nThis returns a data frame, whose plot methods yields the different survival curves. To avoid clutter in the plots, we do not display confidence intervals.\n\nfig, ax = subplots(figsize=(8, 8))\npredicted_survival.plot(ax=ax);"
  },
  {
    "objectID": "posts/ch11-survival-analysis-and-censored-data/Ch11-surv-lab.html#publication-data",
    "href": "posts/ch11-survival-analysis-and-censored-data/Ch11-surv-lab.html#publication-data",
    "title": "Chapter 11: Survival Analysis - Lab",
    "section": "",
    "text": "The Publication data presented in Section~ can be found in the ISLP package. We first reproduce Figure~ by plotting the Kaplan-Meier curves stratified on the posres variable, which records whether the study had a positive or negative result.\n\nfig, ax = subplots(figsize=(8,8))\nPublication = load_data('Publication')\nby_result = {}\nfor result, df in Publication.groupby('posres'):\n    by_result[result] = df\n    km_result = km.fit(df['time'], df['status'])\n    km_result.plot(label='Result=%d' % result, ax=ax)\n\n\n\n\n\n\n\n\nAs discussed previously, the p-values from fitting Cox’s proportional hazards model to the posres variable are quite large, providing no evidence of a difference in time-to-publication between studies with positive versus negative results.\n\nposres_df = MS(['posres',\n                'time',\n                'status'],\n                intercept=False).fit_transform(Publication)\nposres_fit = coxph().fit(posres_df,\n                         'time',\n                         'status')\nposres_fit.summary[['coef', 'se(coef)', 'p']]\n\n\n\n\n\n\n\n\ncoef\nse(coef)\np\n\n\ncovariate\n\n\n\n\n\n\n\nposres\n0.148076\n0.161625\n0.359579\n\n\n\n\n\n\n\nHowever, the results change dramatically when we include other predictors in the model. Here we exclude the funding mechanism variable.\n\nmodel = MS(Publication.columns.drop('mech'),\n           intercept=False)\ncoxph().fit(model.fit_transform(Publication),\n            'time',\n            'status').summary[['coef', 'se(coef)', 'p']]\n\n\n\n\n\n\n\n\ncoef\nse(coef)\np\n\n\ncovariate\n\n\n\n\n\n\n\nposres\n0.570773\n0.175960\n1.179610e-03\n\n\nmulti\n-0.040860\n0.251194\n8.707842e-01\n\n\nclinend\n0.546183\n0.262000\n3.709944e-02\n\n\nsampsize\n0.000005\n0.000015\n7.507005e-01\n\n\nbudget\n0.004386\n0.002465\n7.515984e-02\n\n\nimpact\n0.058318\n0.006676\n2.426306e-18\n\n\n\n\n\n\n\nWe see that there are a number of statistically significant variables, including whether the trial focused on a clinical endpoint, the impact of the study, and whether the study had positive or negative results."
  },
  {
    "objectID": "posts/ch11-survival-analysis-and-censored-data/Ch11-surv-lab.html#call-center-data",
    "href": "posts/ch11-survival-analysis-and-censored-data/Ch11-surv-lab.html#call-center-data",
    "title": "Chapter 11: Survival Analysis - Lab",
    "section": "",
    "text": "In this section, we will simulate survival data using the relationship between cumulative hazard and the survival function explored in Exercise . Our simulated data will represent the observed wait times (in seconds) for 2,000 customers who have phoned a call center. In this context, censoring occurs if a customer hangs up before his or her call is answered.\nThere are three covariates: Operators (the number of call center operators available at the time of the call, which can range from 5 to 15), Center (either A, B, or C), and Time of day (Morning, Afternoon, or Evening). We generate data for these covariates so that all possibilities are equally likely: for instance, morning, afternoon and evening calls are equally likely, and any number of operators from 5 to 15 is equally likely.\n\nrng = np.random.default_rng(10)\nN = 2000\nOperators = rng.choice(np.arange(5, 16),\n                       N,\n                       replace=True)\nCenter = rng.choice(['A', 'B', 'C'],\n                    N,\n                    replace=True)\nTime = rng.choice(['Morn.', 'After.', 'Even.'],\n                   N,\n                   replace=True)\nD = pd.DataFrame({'Operators': Operators,\n                  'Center': pd.Categorical(Center),\n                  'Time': pd.Categorical(Time)})\n\nWe then build a model matrix (omitting the intercept)\n\nmodel = MS(['Operators',\n            'Center',\n            'Time'],\n           intercept=False)\nX = model.fit_transform(D)\n\nIt is worthwhile to take a peek at the model matrix X, so that we can be sure that we understand how the variables have been coded. By default, the levels of categorical variables are sorted and, as usual, the first column of the one-hot encoding of the variable is dropped.\n\nX[:5]\n\n\n\n\n\n\n\n\nOperators\nCenter[B]\nCenter[C]\nTime[Even.]\nTime[Morn.]\n\n\n\n\n0\n13\n0.0\n1.0\n0.0\n0.0\n\n\n1\n15\n0.0\n0.0\n1.0\n0.0\n\n\n2\n7\n1.0\n0.0\n0.0\n1.0\n\n\n3\n7\n0.0\n1.0\n0.0\n1.0\n\n\n4\n13\n0.0\n1.0\n1.0\n0.0\n\n\n\n\n\n\n\nNext, we specify the coefficients and the hazard function.\n\ntrue_beta = np.array([0.04, -0.3, 0, 0.2, -0.2])\ntrue_linpred = X.dot(true_beta)\nhazard = lambda t: 1e-5 * t\n\nHere, we have set the coefficient associated with Operators to equal 0.04; in other words, each additional operator leads to a e^{0.04}=1.041-fold increase in the “risk” that the call will be answered, given the Center and Time covariates. This makes sense: the greater the number of operators at hand, the shorter the wait time! The coefficient associated with Center == B is -0.3, and Center == A is treated as the baseline. This means that the risk of a call being answered at Center B is 0.74 times the risk that it will be answered at Center A; in other words, the wait times are a bit longer at Center B.\nRecall from Section~ the use of lambda for creating short functions on the fly. We use the function sim_time() from the ISLP.survival package. This function uses the relationship between the survival function and cumulative hazard S(t) = \\exp(-H(t)) and the specific form of the cumulative hazard function in the Cox model to simulate data based on values of the linear predictor true_linpred and the cumulative hazard. We need to provide the cumulative hazard function, which we do here.\n\ncum_hazard = lambda t: 1e-5 * t**2 / 2\n\nWe are now ready to generate data under the Cox proportional hazards model. We truncate the maximum time to 1000 seconds to keep simulated wait times reasonable. The function sim_time() takes a linear predictor, a cumulative hazard function and a random number generator.\n\nW = np.array([sim_time(l, cum_hazard, rng)\n              for l in true_linpred])\nD['Wait time'] = np.clip(W, 0, 1000)\n\nWe now simulate our censoring variable, for which we assume 90% of calls were answered (Failed==1) before the customer hung up (Failed==0).\n\nD['Failed'] = rng.choice([1, 0],\n                         N,\n                         p=[0.9, 0.1])\nD[:5]\n\n\n\n\n\n\n\n\nOperators\nCenter\nTime\nWait time\nFailed\n\n\n\n\n0\n13\nC\nAfter.\n525.064979\n1\n\n\n1\n15\nA\nEven.\n254.677835\n1\n\n\n2\n7\nB\nMorn.\n487.739224\n1\n\n\n3\n7\nC\nMorn.\n308.580292\n1\n\n\n4\n13\nC\nEven.\n154.174608\n1\n\n\n\n\n\n\n\n\nD['Failed'].mean()\n\n0.9075\n\n\nWe now plot Kaplan-Meier survival curves. First, we stratify by Center.\n\nfig, ax = subplots(figsize=(8,8))\nby_center = {}\nfor center, df in D.groupby('Center'):\n    by_center[center] = df\n    km_center = km.fit(df['Wait time'], df['Failed'])\n    km_center.plot(label='Center=%s' % center, ax=ax)\nax.set_title(\"Probability of Still Being on Hold\")\n\n/tmp/ipykernel_115886/141205229.py:3: FutureWarning: The default of observed=False is deprecated and will be changed to True in a future version of pandas. Pass observed=False to retain current behavior or observed=True to adopt the future default and silence this warning.\n  for center, df in D.groupby('Center'):\n\n\nText(0.5, 1.0, 'Probability of Still Being on Hold')\n\n\n\n\n\n\n\n\n\nNext, we stratify by Time.\n\nfig, ax = subplots(figsize=(8,8))\nby_time = {}\nfor time, df in D.groupby('Time'):\n    by_time[time] = df\n    km_time = km.fit(df['Wait time'], df['Failed'])\n    km_time.plot(label='Time=%s' % time, ax=ax)\nax.set_title(\"Probability of Still Being on Hold\")\n\n/tmp/ipykernel_115886/1980626088.py:3: FutureWarning: The default of observed=False is deprecated and will be changed to True in a future version of pandas. Pass observed=False to retain current behavior or observed=True to adopt the future default and silence this warning.\n  for time, df in D.groupby('Time'):\n\n\nText(0.5, 1.0, 'Probability of Still Being on Hold')\n\n\n\n\n\n\n\n\n\nIt seems that calls at Call Center B take longer to be answered than calls at Centers A and C. Similarly, it appears that wait times are longest in the morning and shortest in the evening hours. We can use a log-rank test to determine whether these differences are statistically significant using the function multivariate_logrank_test().\n\nmultivariate_logrank_test(D['Wait time'],\n                          D['Center'],\n                          D['Failed'])\n\n\n\n\n\n\n\nt_0\n-1\n\n\nnull_distribution\nchi squared\n\n\ndegrees_of_freedom\n2\n\n\ntest_name\nmultivariate_logrank_test\n\n\n\n\n\n\n\n\n\ntest_statistic\np\n-log2(p)\n\n\n\n\n0\n20.30\n&lt;0.005\n14.65\n\n\n\n\n\nNext, we consider the effect of Time.\n\nmultivariate_logrank_test(D['Wait time'],\n                          D['Time'],\n                          D['Failed'])\n\n\n\n\n\n\n\nt_0\n-1\n\n\nnull_distribution\nchi squared\n\n\ndegrees_of_freedom\n2\n\n\ntest_name\nmultivariate_logrank_test\n\n\n\n\n\n\n\n\n\ntest_statistic\np\n-log2(p)\n\n\n\n\n0\n49.90\n&lt;0.005\n35.99\n\n\n\n\n\nAs in the case of a categorical variable with 2 levels, these results are similar to the likelihood ratio test from the Cox proportional hazards model. First, we look at the results for Center.\n\nX = MS(['Wait time',\n        'Failed',\n        'Center'],\n        intercept=False).fit_transform(D)\nF = coxph().fit(X, 'Wait time', 'Failed')\nF.log_likelihood_ratio_test()\n\n\n\n\n\n\n\nnull_distribution\nchi squared\n\n\ndegrees_freedom\n2\n\n\ntest_name\nlog-likelihood ratio test\n\n\n\n\n\n\n\n\n\ntest_statistic\np\n-log2(p)\n\n\n\n\n0\n20.58\n&lt;0.005\n14.85\n\n\n\n\n\nNext, we look at the results for Time.\n\nX = MS(['Wait time',\n        'Failed',\n        'Time'],\n       intercept=False).fit_transform(D)\nF = coxph().fit(X, 'Wait time', 'Failed')\nF.log_likelihood_ratio_test()\n\n\n\n\n\n\n\nnull_distribution\nchi squared\n\n\ndegrees_freedom\n2\n\n\ntest_name\nlog-likelihood ratio test\n\n\n\n\n\n\n\n\n\ntest_statistic\np\n-log2(p)\n\n\n\n\n0\n48.12\n&lt;0.005\n34.71\n\n\n\n\n\nWe find that differences between centers are highly significant, as are differences between times of day.\nFinally, we fit Cox’s proportional hazards model to the data.\n\nX = MS(D.columns,\n       intercept=False).fit_transform(D)\nfit_queuing = coxph().fit(\n                  X,\n                 'Wait time',\n                 'Failed')\nfit_queuing.summary[['coef', 'se(coef)', 'p']]\n\n\n\n\n\n\n\n\ncoef\nse(coef)\np\n\n\ncovariate\n\n\n\n\n\n\n\nOperators\n0.043934\n0.007520\n5.143589e-09\n\n\nCenter[B]\n-0.236060\n0.058113\n4.864162e-05\n\n\nCenter[C]\n0.012231\n0.057518\n8.316096e-01\n\n\nTime[Even.]\n0.268845\n0.057797\n3.294956e-06\n\n\nTime[Morn.]\n-0.148217\n0.057334\n9.733557e-03\n\n\n\n\n\n\n\nThe p-values for Center B and evening time are very small. It is also clear that the hazard — that is, the instantaneous risk that a call will be answered — increases with the number of operators. Since we generated the data ourselves, we know that the true coefficients for Operators, Center = B, Center = C, Time = Even. and Time = Morn. are 0.04, -0.3, 0, 0.2, and -0.2, respectively. The coefficient estimates from the fitted Cox model are fairly accurate."
  },
  {
    "objectID": "posts/ch05-resampling-methods/Ch05-resample-lab.html",
    "href": "posts/ch05-resampling-methods/Ch05-resample-lab.html",
    "title": "Chapter 5: Cross-Validation and the Bootstrap Lab",
    "section": "",
    "text": "In this lab, we explore the resampling techniques covered in this chapter. Some of the commands in this lab may take a while to run on your computer.\nWe again begin by placing most of our imports at this top level.\n\nimport numpy as np\nimport statsmodels.api as sm\nfrom ISLP import load_data\nfrom ISLP.models import (ModelSpec as MS,\n                         summarize,\n                         poly)\nfrom sklearn.model_selection import train_test_split\n\nThere are several new imports needed for this lab.\n\nfrom functools import partial\nfrom sklearn.model_selection import \\\n     (cross_validate,\n      KFold,\n      ShuffleSplit)\nfrom sklearn.base import clone\nfrom ISLP.models import sklearn_sm\n\n\n\nWe explore the use of the validation set approach in order to estimate the test error rates that result from fitting various linear models on the Auto data set.\nWe use the function train_test_split() to split the data into training and validation sets. As there are 392 observations, we split into two equal sets of size 196 using the argument test_size=196. It is generally a good idea to set a random seed when performing operations like this that contain an element of randomness, so that the results obtained can be reproduced precisely at a later time. We set the random seed of the splitter with the argument random_state=0.\n\nAuto = load_data('Auto')\nAuto_train, Auto_valid = train_test_split(Auto,\n                                         test_size=196,\n                                         random_state=0)\n\nNow we can fit a linear regression using only the observations corresponding to the training set Auto_train.\n\nhp_mm = MS(['horsepower'])\nX_train = hp_mm.fit_transform(Auto_train)\ny_train = Auto_train['mpg']\nmodel = sm.OLS(y_train, X_train)\nresults = model.fit()\n\nWe now use the predict() method of results evaluated on the model matrix for this model created using the validation data set. We also calculate the validation MSE of our model.\n\nX_valid = hp_mm.transform(Auto_valid)\ny_valid = Auto_valid['mpg']\nvalid_pred = results.predict(X_valid)\nnp.mean((y_valid - valid_pred)**2)\n\n23.61661706966988\n\n\nHence our estimate for the validation MSE of the linear regression fit is 23.62.\nWe can also estimate the validation error for higher-degree polynomial regressions. We first provide a function evalMSE() that takes a model string as well as a training and test set and returns the MSE on the test set.\n\ndef evalMSE(terms,\n            response,\n            train,\n            test):\n\n   mm = MS(terms)\n   X_train = mm.fit_transform(train)\n   y_train = train[response]\n\n   X_test = mm.transform(test)\n   y_test = test[response]\n\n   results = sm.OLS(y_train, X_train).fit()\n   test_pred = results.predict(X_test)\n\n   return np.mean((y_test - test_pred)**2)\n\nLet’s use this function to estimate the validation MSE using linear, quadratic and cubic fits. We use the enumerate() function here, which gives both the values and indices of objects as one iterates over a for loop.\n\nMSE = np.zeros(3)\nfor idx, degree in enumerate(range(1, 4)):\n    MSE[idx] = evalMSE([poly('horsepower', degree)],\n                       'mpg',\n                       Auto_train,\n                       Auto_valid)\nMSE\n\narray([23.61661707, 18.76303135, 18.79694163])\n\n\nThese error rates are 23.62, 18.76, and 18.80, respectively. If we choose a different training/validation split instead, then we can expect somewhat different errors on the validation set.\n\nAuto_train, Auto_valid = train_test_split(Auto,\n                                          test_size=196,\n                                          random_state=3)\nMSE = np.zeros(3)\nfor idx, degree in enumerate(range(1, 4)):\n    MSE[idx] = evalMSE([poly('horsepower', degree)],\n                       'mpg',\n                       Auto_train,\n                       Auto_valid)\nMSE\n\narray([20.75540796, 16.94510676, 16.97437833])\n\n\nUsing this split of the observations into a training set and a validation set, we find that the validation set error rates for the models with linear, quadratic, and cubic terms are 20.76, 16.95, and 16.97, respectively.\nThese results are consistent with our previous findings: a model that predicts mpg using a quadratic function of horsepower performs better than a model that involves only a linear function of horsepower, and there is no evidence of an improvement in using a cubic function of horsepower.\n\n\n\nIn theory, the cross-validation estimate can be computed for any generalized linear model. {} In practice, however, the simplest way to cross-validate in Python is to use sklearn, which has a different interface or API than statsmodels, the code we have been using to fit GLMs.\nThis is a problem which often confronts data scientists: “I have a function to do task A, and need to feed it into something that performs task B, so that I can compute B(A(D)), where D is my data.” When A and B don’t naturally speak to each other, this requires the use of a wrapper. In the ISLP package, we provide a wrapper, sklearn_sm(), that enables us to easily use the cross-validation tools of sklearn with models fit by statsmodels.\nThe class sklearn_sm() has as its first argument a model from statsmodels. It can take two additional optional arguments: model_str which can be used to specify a formula, and model_args which should be a dictionary of additional arguments used when fitting the model. For example, to fit a logistic regression model we have to specify a family argument. This is passed as model_args={'family':sm.families.Binomial()}.\nHere is our wrapper in action:\n\nhp_model = sklearn_sm(sm.OLS,\n                      MS(['horsepower']))\nX, Y = Auto.drop(columns=['mpg']), Auto['mpg']\ncv_results = cross_validate(hp_model,\n                            X,\n                            Y,\n                            cv=Auto.shape[0])\ncv_err = np.mean(cv_results['test_score'])\ncv_err\n\n24.23151351792922\n\n\nThe arguments to cross_validate() are as follows: an object with the appropriate fit(), predict(), and score() methods, an array of features X and a response Y. We also included an additional argument cv to cross_validate(); specifying an integer K results in K-fold cross-validation. We have provided a value corresponding to the total number of observations, which results in leave-one-out cross-validation (LOOCV). The cross_validate() function produces a dictionary with several components; we simply want the cross-validated test score here (MSE), which is estimated to be 24.23.\nWe can repeat this procedure for increasingly complex polynomial fits. To automate the process, we again use a for loop which iteratively fits polynomial regressions of degree 1 to 5, computes the associated cross-validation error, and stores it in the ith element of the vector cv_error. The variable d in the for loop corresponds to the degree of the polynomial. We begin by initializing the vector. This command may take a couple of seconds to run.\n\ncv_error = np.zeros(5)\nH = np.array(Auto['horsepower'])\nM = sklearn_sm(sm.OLS)\nfor i, d in enumerate(range(1,6)):\n    X = np.power.outer(H, np.arange(d+1))\n    M_CV = cross_validate(M,\n                          X,\n                          Y,\n                          cv=Auto.shape[0])\n    cv_error[i] = np.mean(M_CV['test_score'])\ncv_error\n\narray([24.23151352, 19.24821312, 19.33498406, 19.42443031, 19.03321178])\n\n\nAs in Figure~, we see a sharp drop in the estimated test MSE between the linear and quadratic fits, but then no clear improvement from using higher-degree polynomials.\nAbove we introduced the outer() method of the np.power() function. The outer() method is applied to an operation that has two arguments, such as add(), min(), or power(). It has two arrays as arguments, and then forms a larger array where the operation is applied to each pair of elements of the two arrays.\n\nA = np.array([3, 5, 9])\nB = np.array([2, 4])\nnp.add.outer(A, B)\n\narray([[ 5,  7],\n       [ 7,  9],\n       [11, 13]])\n\n\nIn the CV example above, we used K=n, but of course we can also use K&lt;n. The code is very similar to the above (and is significantly faster). Here we use KFold() to partition the data into K=10 random groups. We use random_state to set a random seed and initialize a vector cv_error in which we will store the CV errors corresponding to the polynomial fits of degrees one to five.\n\ncv_error = np.zeros(5)\ncv = KFold(n_splits=10,\n           shuffle=True,\n           random_state=0) # use same splits for each degree\nfor i, d in enumerate(range(1,6)):\n    X = np.power.outer(H, np.arange(d+1))\n    M_CV = cross_validate(M,\n                          X,\n                          Y,\n                          cv=cv)\n    cv_error[i] = np.mean(M_CV['test_score'])\ncv_error\n\narray([24.20766449, 19.18533142, 19.27626666, 19.47848402, 19.13720959])\n\n\nNotice that the computation time is much shorter than that of LOOCV. (In principle, the computation time for LOOCV for a least squares linear model should be faster than for K-fold CV, due to the availability of the formula~() for LOOCV; however, the generic cross_validate() function does not make use of this formula.) We still see little evidence that using cubic or higher-degree polynomial terms leads to a lower test error than simply using a quadratic fit.\nThe cross_validate() function is flexible and can take different splitting mechanisms as an argument. For instance, one can use the ShuffleSplit() funtion to implement the validation set approach just as easily as K-fold cross-validation.\n\nvalidation = ShuffleSplit(n_splits=1,\n                          test_size=196,\n                          random_state=0)\nresults = cross_validate(hp_model,\n                         Auto.drop(['mpg'], axis=1),\n                         Auto['mpg'],\n                         cv=validation);\nresults['test_score']\n\narray([23.61661707])\n\n\nOne can estimate the variability in the test error by running the following:\n\nvalidation = ShuffleSplit(n_splits=10,\n                          test_size=196,\n                          random_state=0)\nresults = cross_validate(hp_model,\n                         Auto.drop(['mpg'], axis=1),\n                         Auto['mpg'],\n                         cv=validation)\nresults['test_score'].mean(), results['test_score'].std()\n\n(23.802232661034168, 1.4218450941091842)\n\n\nNote that this standard deviation is not a valid estimate of the sampling variability of the mean test score or the individual scores, since the randomly-selected training samples overlap and hence introduce correlations. But it does give an idea of the Monte Carlo variation incurred by picking different random folds.\n\n\n\nWe illustrate the use of the bootstrap in the simple example {of Section~,} as well as on an example involving estimating the accuracy of the linear regression model on the Auto data set. ### Estimating the Accuracy of a Statistic of Interest One of the great advantages of the bootstrap approach is that it can be applied in almost all situations. No complicated mathematical calculations are required. While there are several implementations of the bootstrap in Python, its use for estimating standard error is simple enough that we write our own function below for the case when our data is stored in a dataframe.\nTo illustrate the bootstrap, we start with a simple example. The Portfolio data set in the ISLP package is described in Section~. The goal is to estimate the sampling variance of the parameter \\alpha given in formula~(). We will create a function alpha_func(), which takes as input a dataframe D assumed to have columns X and Y, as well as a vector idx indicating which observations should be used to estimate \\alpha. The function then outputs the estimate for \\alpha based on the selected observations.\n\nPortfolio = load_data('Portfolio')\ndef alpha_func(D, idx):\n   cov_ = np.cov(D[['X','Y']].loc[idx], rowvar=False)\n   return ((cov_[1,1] - cov_[0,1]) /\n           (cov_[0,0]+cov_[1,1]-2*cov_[0,1]))\n\nThis function returns an estimate for \\alpha based on applying the minimum variance formula () to the observations indexed by the argument idx. For instance, the following command estimates \\alpha using all 100 observations.\n\nalpha_func(Portfolio, range(100))\n\n0.57583207459283\n\n\nNext we randomly select 100 observations from range(100), with replacement. This is equivalent to constructing a new bootstrap data set and recomputing \\hat{\\alpha} based on the new data set.\n\nrng = np.random.default_rng(0)\nalpha_func(Portfolio,\n           rng.choice(100,\n                      100,\n                      replace=True))\n\n0.6074452469619004\n\n\nThis process can be generalized to create a simple function boot_SE() for computing the bootstrap standard error for arbitrary functions that take only a data frame as an argument.\n\ndef boot_SE(func,\n            D,\n            n=None,\n            B=1000,\n            seed=0):\n    rng = np.random.default_rng(seed)\n    first_, second_ = 0, 0\n    n = n or D.shape[0]\n    for _ in range(B):\n        idx = rng.choice(D.index,\n                         n,\n                         replace=True)\n        value = func(D, idx)\n        first_ += value\n        second_ += value**2\n    return np.sqrt(second_ / B - (first_ / B)**2)\n\nNotice the use of _ as a loop variable in for _ in range(B). This is often used if the value of the counter is unimportant and simply makes sure the loop is executed B times.\nLet’s use our function to evaluate the accuracy of our estimate of \\alpha using B=1{,}000 bootstrap replications.\n\nalpha_SE = boot_SE(alpha_func,\n                   Portfolio,\n                   B=1000,\n                   seed=0)\nalpha_SE\n\n0.09118176521277699\n\n\nThe final output shows that the bootstrap estimate for {\\rm SE}(\\hat{\\alpha}) is 0.0912.\n\n\nThe bootstrap approach can be used to assess the variability of the coefficient estimates and predictions from a statistical learning method. Here we use the bootstrap approach in order to assess the variability of the estimates for \\beta_0 and \\beta_1, the intercept and slope terms for the linear regression model that uses horsepower to predict mpg in the Auto data set. We will compare the estimates obtained using the bootstrap to those obtained using the formulas for {\\rm SE}(\\hat{\\beta}_0) and {\\rm SE}(\\hat{\\beta}_1) described in Section~.\nTo use our boot_SE() function, we must write a function (its first argument) that takes a data frame D and indices idx as its only arguments. But here we want to bootstrap a specific regression model, specified by a model formula and data. We show how to do this in a few simple steps.\nWe start by writing a generic function boot_OLS() for bootstrapping a regression model that takes a formula to define the corresponding regression. We use the clone() function to make a copy of the formula that can be refit to the new dataframe. This means that any derived features such as those defined by poly() (which we will see shortly), will be re-fit on the resampled data frame.\n\ndef boot_OLS(model_matrix, response, D, idx):\n    D_ = D.loc[idx]\n    Y_ = D_[response]\n    X_ = clone(model_matrix).fit_transform(D_)\n    return sm.OLS(Y_, X_).fit().params\n\nThis is not quite what is needed as the first argument to boot_SE(). The first two arguments which specify the model will not change in the bootstrap process, and we would like to freeze them. The function partial() from the functools module does precisely this: it takes a function as an argument, and freezes some of its arguments, starting from the left. We use it to freeze the first two model-formula arguments of boot_OLS().\n\nhp_func = partial(boot_OLS, MS(['horsepower']), 'mpg')\n\nTyping hp_func? will show that it has two arguments D and idx — it is a version of boot_OLS() with the first two arguments frozen — and hence is ideal as the first argument for boot_SE().\nThe hp_func() function can now be used in order to create bootstrap estimates for the intercept and slope terms by randomly sampling from among the observations with replacement. We first demonstrate its utility on 10 bootstrap samples.\n\nrng = np.random.default_rng(0)\nnp.array([hp_func(Auto,\n          rng.choice(Auto.index,\n                     392,\n                     replace=True)) for _ in range(10)])\n\narray([[39.12226577, -0.1555926 ],\n       [37.18648613, -0.13915813],\n       [37.46989244, -0.14112749],\n       [38.56723252, -0.14830116],\n       [38.95495707, -0.15315141],\n       [39.12563927, -0.15261044],\n       [38.45763251, -0.14767251],\n       [38.43372587, -0.15019447],\n       [37.87581142, -0.1409544 ],\n       [37.95949036, -0.1451333 ]])\n\n\nNext, we use the boot_SE() {} function to compute the standard errors of 1,000 bootstrap estimates for the intercept and slope terms.\n\nhp_se = boot_SE(hp_func,\n                Auto,\n                B=1000,\n                seed=10)\nhp_se\n\nintercept     0.731176\nhorsepower    0.006092\ndtype: float64\n\n\nThis indicates that the bootstrap estimate for {\\rm SE}(\\hat{\\beta}_0) is 0.85, and that the bootstrap estimate for {\\rm SE}(\\hat{\\beta}_1) is 0.0074. As discussed in Section~, standard formulas can be used to compute the standard errors for the regression coefficients in a linear model. These can be obtained using the summarize() function from ISLP.sm.\n\nhp_model.fit(Auto, Auto['mpg'])\nmodel_se = summarize(hp_model.results_)['std err']\nmodel_se\n\nintercept     0.717\nhorsepower    0.006\nName: std err, dtype: float64\n\n\nThe standard error estimates for \\hat{\\beta}_0 and \\hat{\\beta}_1 obtained using the formulas from Section~ are 0.717 for the intercept and 0.006 for the slope. Interestingly, these are somewhat different from the estimates obtained using the bootstrap. Does this indicate a problem with the bootstrap? In fact, it suggests the opposite. Recall that the standard formulas given in {Equation~ on page~} rely on certain assumptions. For example, they depend on the unknown parameter \\sigma^2, the noise variance. We then estimate \\sigma^2 using the RSS. Now although the formula for the standard errors do not rely on the linear model being correct, the estimate for \\sigma^2 does. We see {in Figure~ on page~} that there is a non-linear relationship in the data, and so the residuals from a linear fit will be inflated, and so will \\hat{\\sigma}^2. Secondly, the standard formulas assume (somewhat unrealistically) that the x_i are fixed, and all the variability comes from the variation in the errors \\epsilon_i. The bootstrap approach does not rely on any of these assumptions, and so it is likely giving a more accurate estimate of the standard errors of \\hat{\\beta}_0 and \\hat{\\beta}_1 than the results from sm.OLS.\nBelow we compute the bootstrap standard error estimates and the standard linear regression estimates that result from fitting the quadratic model to the data. Since this model provides a good fit to the data (Figure~), there is now a better correspondence between the bootstrap estimates and the standard estimates of {\\rm SE}(\\hat{\\beta}_0), {\\rm SE}(\\hat{\\beta}_1) and {\\rm SE}(\\hat{\\beta}_2).\n\nquad_model = MS([poly('horsepower', 2, raw=True)])\nquad_func = partial(boot_OLS,\n                    quad_model,\n                    'mpg')\nboot_SE(quad_func, Auto, B=1000)\n\nintercept                                  1.538641\npoly(horsepower, degree=2, raw=True)[0]    0.024696\npoly(horsepower, degree=2, raw=True)[1]    0.000090\ndtype: float64\n\n\nWe compare the results to the standard errors computed using sm.OLS().\n\nM = sm.OLS(Auto['mpg'],\n           quad_model.fit_transform(Auto))\nsummarize(M.fit())['std err']\n\nintercept                                  1.800\npoly(horsepower, degree=2, raw=True)[0]    0.031\npoly(horsepower, degree=2, raw=True)[1]    0.000\nName: std err, dtype: float64"
  },
  {
    "objectID": "posts/ch05-resampling-methods/Ch05-resample-lab.html#the-validation-set-approach",
    "href": "posts/ch05-resampling-methods/Ch05-resample-lab.html#the-validation-set-approach",
    "title": "Chapter 5: Cross-Validation and the Bootstrap Lab",
    "section": "",
    "text": "We explore the use of the validation set approach in order to estimate the test error rates that result from fitting various linear models on the Auto data set.\nWe use the function train_test_split() to split the data into training and validation sets. As there are 392 observations, we split into two equal sets of size 196 using the argument test_size=196. It is generally a good idea to set a random seed when performing operations like this that contain an element of randomness, so that the results obtained can be reproduced precisely at a later time. We set the random seed of the splitter with the argument random_state=0.\n\nAuto = load_data('Auto')\nAuto_train, Auto_valid = train_test_split(Auto,\n                                         test_size=196,\n                                         random_state=0)\n\nNow we can fit a linear regression using only the observations corresponding to the training set Auto_train.\n\nhp_mm = MS(['horsepower'])\nX_train = hp_mm.fit_transform(Auto_train)\ny_train = Auto_train['mpg']\nmodel = sm.OLS(y_train, X_train)\nresults = model.fit()\n\nWe now use the predict() method of results evaluated on the model matrix for this model created using the validation data set. We also calculate the validation MSE of our model.\n\nX_valid = hp_mm.transform(Auto_valid)\ny_valid = Auto_valid['mpg']\nvalid_pred = results.predict(X_valid)\nnp.mean((y_valid - valid_pred)**2)\n\n23.61661706966988\n\n\nHence our estimate for the validation MSE of the linear regression fit is 23.62.\nWe can also estimate the validation error for higher-degree polynomial regressions. We first provide a function evalMSE() that takes a model string as well as a training and test set and returns the MSE on the test set.\n\ndef evalMSE(terms,\n            response,\n            train,\n            test):\n\n   mm = MS(terms)\n   X_train = mm.fit_transform(train)\n   y_train = train[response]\n\n   X_test = mm.transform(test)\n   y_test = test[response]\n\n   results = sm.OLS(y_train, X_train).fit()\n   test_pred = results.predict(X_test)\n\n   return np.mean((y_test - test_pred)**2)\n\nLet’s use this function to estimate the validation MSE using linear, quadratic and cubic fits. We use the enumerate() function here, which gives both the values and indices of objects as one iterates over a for loop.\n\nMSE = np.zeros(3)\nfor idx, degree in enumerate(range(1, 4)):\n    MSE[idx] = evalMSE([poly('horsepower', degree)],\n                       'mpg',\n                       Auto_train,\n                       Auto_valid)\nMSE\n\narray([23.61661707, 18.76303135, 18.79694163])\n\n\nThese error rates are 23.62, 18.76, and 18.80, respectively. If we choose a different training/validation split instead, then we can expect somewhat different errors on the validation set.\n\nAuto_train, Auto_valid = train_test_split(Auto,\n                                          test_size=196,\n                                          random_state=3)\nMSE = np.zeros(3)\nfor idx, degree in enumerate(range(1, 4)):\n    MSE[idx] = evalMSE([poly('horsepower', degree)],\n                       'mpg',\n                       Auto_train,\n                       Auto_valid)\nMSE\n\narray([20.75540796, 16.94510676, 16.97437833])\n\n\nUsing this split of the observations into a training set and a validation set, we find that the validation set error rates for the models with linear, quadratic, and cubic terms are 20.76, 16.95, and 16.97, respectively.\nThese results are consistent with our previous findings: a model that predicts mpg using a quadratic function of horsepower performs better than a model that involves only a linear function of horsepower, and there is no evidence of an improvement in using a cubic function of horsepower."
  },
  {
    "objectID": "posts/ch05-resampling-methods/Ch05-resample-lab.html#cross-validation",
    "href": "posts/ch05-resampling-methods/Ch05-resample-lab.html#cross-validation",
    "title": "Chapter 5: Cross-Validation and the Bootstrap Lab",
    "section": "",
    "text": "In theory, the cross-validation estimate can be computed for any generalized linear model. {} In practice, however, the simplest way to cross-validate in Python is to use sklearn, which has a different interface or API than statsmodels, the code we have been using to fit GLMs.\nThis is a problem which often confronts data scientists: “I have a function to do task A, and need to feed it into something that performs task B, so that I can compute B(A(D)), where D is my data.” When A and B don’t naturally speak to each other, this requires the use of a wrapper. In the ISLP package, we provide a wrapper, sklearn_sm(), that enables us to easily use the cross-validation tools of sklearn with models fit by statsmodels.\nThe class sklearn_sm() has as its first argument a model from statsmodels. It can take two additional optional arguments: model_str which can be used to specify a formula, and model_args which should be a dictionary of additional arguments used when fitting the model. For example, to fit a logistic regression model we have to specify a family argument. This is passed as model_args={'family':sm.families.Binomial()}.\nHere is our wrapper in action:\n\nhp_model = sklearn_sm(sm.OLS,\n                      MS(['horsepower']))\nX, Y = Auto.drop(columns=['mpg']), Auto['mpg']\ncv_results = cross_validate(hp_model,\n                            X,\n                            Y,\n                            cv=Auto.shape[0])\ncv_err = np.mean(cv_results['test_score'])\ncv_err\n\n24.23151351792922\n\n\nThe arguments to cross_validate() are as follows: an object with the appropriate fit(), predict(), and score() methods, an array of features X and a response Y. We also included an additional argument cv to cross_validate(); specifying an integer K results in K-fold cross-validation. We have provided a value corresponding to the total number of observations, which results in leave-one-out cross-validation (LOOCV). The cross_validate() function produces a dictionary with several components; we simply want the cross-validated test score here (MSE), which is estimated to be 24.23.\nWe can repeat this procedure for increasingly complex polynomial fits. To automate the process, we again use a for loop which iteratively fits polynomial regressions of degree 1 to 5, computes the associated cross-validation error, and stores it in the ith element of the vector cv_error. The variable d in the for loop corresponds to the degree of the polynomial. We begin by initializing the vector. This command may take a couple of seconds to run.\n\ncv_error = np.zeros(5)\nH = np.array(Auto['horsepower'])\nM = sklearn_sm(sm.OLS)\nfor i, d in enumerate(range(1,6)):\n    X = np.power.outer(H, np.arange(d+1))\n    M_CV = cross_validate(M,\n                          X,\n                          Y,\n                          cv=Auto.shape[0])\n    cv_error[i] = np.mean(M_CV['test_score'])\ncv_error\n\narray([24.23151352, 19.24821312, 19.33498406, 19.42443031, 19.03321178])\n\n\nAs in Figure~, we see a sharp drop in the estimated test MSE between the linear and quadratic fits, but then no clear improvement from using higher-degree polynomials.\nAbove we introduced the outer() method of the np.power() function. The outer() method is applied to an operation that has two arguments, such as add(), min(), or power(). It has two arrays as arguments, and then forms a larger array where the operation is applied to each pair of elements of the two arrays.\n\nA = np.array([3, 5, 9])\nB = np.array([2, 4])\nnp.add.outer(A, B)\n\narray([[ 5,  7],\n       [ 7,  9],\n       [11, 13]])\n\n\nIn the CV example above, we used K=n, but of course we can also use K&lt;n. The code is very similar to the above (and is significantly faster). Here we use KFold() to partition the data into K=10 random groups. We use random_state to set a random seed and initialize a vector cv_error in which we will store the CV errors corresponding to the polynomial fits of degrees one to five.\n\ncv_error = np.zeros(5)\ncv = KFold(n_splits=10,\n           shuffle=True,\n           random_state=0) # use same splits for each degree\nfor i, d in enumerate(range(1,6)):\n    X = np.power.outer(H, np.arange(d+1))\n    M_CV = cross_validate(M,\n                          X,\n                          Y,\n                          cv=cv)\n    cv_error[i] = np.mean(M_CV['test_score'])\ncv_error\n\narray([24.20766449, 19.18533142, 19.27626666, 19.47848402, 19.13720959])\n\n\nNotice that the computation time is much shorter than that of LOOCV. (In principle, the computation time for LOOCV for a least squares linear model should be faster than for K-fold CV, due to the availability of the formula~() for LOOCV; however, the generic cross_validate() function does not make use of this formula.) We still see little evidence that using cubic or higher-degree polynomial terms leads to a lower test error than simply using a quadratic fit.\nThe cross_validate() function is flexible and can take different splitting mechanisms as an argument. For instance, one can use the ShuffleSplit() funtion to implement the validation set approach just as easily as K-fold cross-validation.\n\nvalidation = ShuffleSplit(n_splits=1,\n                          test_size=196,\n                          random_state=0)\nresults = cross_validate(hp_model,\n                         Auto.drop(['mpg'], axis=1),\n                         Auto['mpg'],\n                         cv=validation);\nresults['test_score']\n\narray([23.61661707])\n\n\nOne can estimate the variability in the test error by running the following:\n\nvalidation = ShuffleSplit(n_splits=10,\n                          test_size=196,\n                          random_state=0)\nresults = cross_validate(hp_model,\n                         Auto.drop(['mpg'], axis=1),\n                         Auto['mpg'],\n                         cv=validation)\nresults['test_score'].mean(), results['test_score'].std()\n\n(23.802232661034168, 1.4218450941091842)\n\n\nNote that this standard deviation is not a valid estimate of the sampling variability of the mean test score or the individual scores, since the randomly-selected training samples overlap and hence introduce correlations. But it does give an idea of the Monte Carlo variation incurred by picking different random folds."
  },
  {
    "objectID": "posts/ch05-resampling-methods/Ch05-resample-lab.html#the-bootstrap",
    "href": "posts/ch05-resampling-methods/Ch05-resample-lab.html#the-bootstrap",
    "title": "Chapter 5: Cross-Validation and the Bootstrap Lab",
    "section": "",
    "text": "We illustrate the use of the bootstrap in the simple example {of Section~,} as well as on an example involving estimating the accuracy of the linear regression model on the Auto data set. ### Estimating the Accuracy of a Statistic of Interest One of the great advantages of the bootstrap approach is that it can be applied in almost all situations. No complicated mathematical calculations are required. While there are several implementations of the bootstrap in Python, its use for estimating standard error is simple enough that we write our own function below for the case when our data is stored in a dataframe.\nTo illustrate the bootstrap, we start with a simple example. The Portfolio data set in the ISLP package is described in Section~. The goal is to estimate the sampling variance of the parameter \\alpha given in formula~(). We will create a function alpha_func(), which takes as input a dataframe D assumed to have columns X and Y, as well as a vector idx indicating which observations should be used to estimate \\alpha. The function then outputs the estimate for \\alpha based on the selected observations.\n\nPortfolio = load_data('Portfolio')\ndef alpha_func(D, idx):\n   cov_ = np.cov(D[['X','Y']].loc[idx], rowvar=False)\n   return ((cov_[1,1] - cov_[0,1]) /\n           (cov_[0,0]+cov_[1,1]-2*cov_[0,1]))\n\nThis function returns an estimate for \\alpha based on applying the minimum variance formula () to the observations indexed by the argument idx. For instance, the following command estimates \\alpha using all 100 observations.\n\nalpha_func(Portfolio, range(100))\n\n0.57583207459283\n\n\nNext we randomly select 100 observations from range(100), with replacement. This is equivalent to constructing a new bootstrap data set and recomputing \\hat{\\alpha} based on the new data set.\n\nrng = np.random.default_rng(0)\nalpha_func(Portfolio,\n           rng.choice(100,\n                      100,\n                      replace=True))\n\n0.6074452469619004\n\n\nThis process can be generalized to create a simple function boot_SE() for computing the bootstrap standard error for arbitrary functions that take only a data frame as an argument.\n\ndef boot_SE(func,\n            D,\n            n=None,\n            B=1000,\n            seed=0):\n    rng = np.random.default_rng(seed)\n    first_, second_ = 0, 0\n    n = n or D.shape[0]\n    for _ in range(B):\n        idx = rng.choice(D.index,\n                         n,\n                         replace=True)\n        value = func(D, idx)\n        first_ += value\n        second_ += value**2\n    return np.sqrt(second_ / B - (first_ / B)**2)\n\nNotice the use of _ as a loop variable in for _ in range(B). This is often used if the value of the counter is unimportant and simply makes sure the loop is executed B times.\nLet’s use our function to evaluate the accuracy of our estimate of \\alpha using B=1{,}000 bootstrap replications.\n\nalpha_SE = boot_SE(alpha_func,\n                   Portfolio,\n                   B=1000,\n                   seed=0)\nalpha_SE\n\n0.09118176521277699\n\n\nThe final output shows that the bootstrap estimate for {\\rm SE}(\\hat{\\alpha}) is 0.0912.\n\n\nThe bootstrap approach can be used to assess the variability of the coefficient estimates and predictions from a statistical learning method. Here we use the bootstrap approach in order to assess the variability of the estimates for \\beta_0 and \\beta_1, the intercept and slope terms for the linear regression model that uses horsepower to predict mpg in the Auto data set. We will compare the estimates obtained using the bootstrap to those obtained using the formulas for {\\rm SE}(\\hat{\\beta}_0) and {\\rm SE}(\\hat{\\beta}_1) described in Section~.\nTo use our boot_SE() function, we must write a function (its first argument) that takes a data frame D and indices idx as its only arguments. But here we want to bootstrap a specific regression model, specified by a model formula and data. We show how to do this in a few simple steps.\nWe start by writing a generic function boot_OLS() for bootstrapping a regression model that takes a formula to define the corresponding regression. We use the clone() function to make a copy of the formula that can be refit to the new dataframe. This means that any derived features such as those defined by poly() (which we will see shortly), will be re-fit on the resampled data frame.\n\ndef boot_OLS(model_matrix, response, D, idx):\n    D_ = D.loc[idx]\n    Y_ = D_[response]\n    X_ = clone(model_matrix).fit_transform(D_)\n    return sm.OLS(Y_, X_).fit().params\n\nThis is not quite what is needed as the first argument to boot_SE(). The first two arguments which specify the model will not change in the bootstrap process, and we would like to freeze them. The function partial() from the functools module does precisely this: it takes a function as an argument, and freezes some of its arguments, starting from the left. We use it to freeze the first two model-formula arguments of boot_OLS().\n\nhp_func = partial(boot_OLS, MS(['horsepower']), 'mpg')\n\nTyping hp_func? will show that it has two arguments D and idx — it is a version of boot_OLS() with the first two arguments frozen — and hence is ideal as the first argument for boot_SE().\nThe hp_func() function can now be used in order to create bootstrap estimates for the intercept and slope terms by randomly sampling from among the observations with replacement. We first demonstrate its utility on 10 bootstrap samples.\n\nrng = np.random.default_rng(0)\nnp.array([hp_func(Auto,\n          rng.choice(Auto.index,\n                     392,\n                     replace=True)) for _ in range(10)])\n\narray([[39.12226577, -0.1555926 ],\n       [37.18648613, -0.13915813],\n       [37.46989244, -0.14112749],\n       [38.56723252, -0.14830116],\n       [38.95495707, -0.15315141],\n       [39.12563927, -0.15261044],\n       [38.45763251, -0.14767251],\n       [38.43372587, -0.15019447],\n       [37.87581142, -0.1409544 ],\n       [37.95949036, -0.1451333 ]])\n\n\nNext, we use the boot_SE() {} function to compute the standard errors of 1,000 bootstrap estimates for the intercept and slope terms.\n\nhp_se = boot_SE(hp_func,\n                Auto,\n                B=1000,\n                seed=10)\nhp_se\n\nintercept     0.731176\nhorsepower    0.006092\ndtype: float64\n\n\nThis indicates that the bootstrap estimate for {\\rm SE}(\\hat{\\beta}_0) is 0.85, and that the bootstrap estimate for {\\rm SE}(\\hat{\\beta}_1) is 0.0074. As discussed in Section~, standard formulas can be used to compute the standard errors for the regression coefficients in a linear model. These can be obtained using the summarize() function from ISLP.sm.\n\nhp_model.fit(Auto, Auto['mpg'])\nmodel_se = summarize(hp_model.results_)['std err']\nmodel_se\n\nintercept     0.717\nhorsepower    0.006\nName: std err, dtype: float64\n\n\nThe standard error estimates for \\hat{\\beta}_0 and \\hat{\\beta}_1 obtained using the formulas from Section~ are 0.717 for the intercept and 0.006 for the slope. Interestingly, these are somewhat different from the estimates obtained using the bootstrap. Does this indicate a problem with the bootstrap? In fact, it suggests the opposite. Recall that the standard formulas given in {Equation~ on page~} rely on certain assumptions. For example, they depend on the unknown parameter \\sigma^2, the noise variance. We then estimate \\sigma^2 using the RSS. Now although the formula for the standard errors do not rely on the linear model being correct, the estimate for \\sigma^2 does. We see {in Figure~ on page~} that there is a non-linear relationship in the data, and so the residuals from a linear fit will be inflated, and so will \\hat{\\sigma}^2. Secondly, the standard formulas assume (somewhat unrealistically) that the x_i are fixed, and all the variability comes from the variation in the errors \\epsilon_i. The bootstrap approach does not rely on any of these assumptions, and so it is likely giving a more accurate estimate of the standard errors of \\hat{\\beta}_0 and \\hat{\\beta}_1 than the results from sm.OLS.\nBelow we compute the bootstrap standard error estimates and the standard linear regression estimates that result from fitting the quadratic model to the data. Since this model provides a good fit to the data (Figure~), there is now a better correspondence between the bootstrap estimates and the standard estimates of {\\rm SE}(\\hat{\\beta}_0), {\\rm SE}(\\hat{\\beta}_1) and {\\rm SE}(\\hat{\\beta}_2).\n\nquad_model = MS([poly('horsepower', 2, raw=True)])\nquad_func = partial(boot_OLS,\n                    quad_model,\n                    'mpg')\nboot_SE(quad_func, Auto, B=1000)\n\nintercept                                  1.538641\npoly(horsepower, degree=2, raw=True)[0]    0.024696\npoly(horsepower, degree=2, raw=True)[1]    0.000090\ndtype: float64\n\n\nWe compare the results to the standard errors computed using sm.OLS().\n\nM = sm.OLS(Auto['mpg'],\n           quad_model.fit_transform(Auto))\nsummarize(M.fit())['std err']\n\nintercept                                  1.800\npoly(horsepower, degree=2, raw=True)[0]    0.031\npoly(horsepower, degree=2, raw=True)[1]    0.000\nName: std err, dtype: float64"
  }
]